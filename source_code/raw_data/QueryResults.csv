Id,PostTypeId,ParentId,Body,Tags
"13454","1","","<p>I wrote a piece of code to convert PHP's striplashes into valid Python [backslash] escapes:</p>

<pre><code>cleaned = stringwithslashes
cleaned = cleaned.replace('\\n', '\n')
cleaned = cleaned.replace('\\r', '\n')
cleaned = cleaned.replace('\\', '')
</code></pre>

<p>How can I condense it? </p>
","<python><string><escaping>"
"13456","2","13454","<p>You can obviously concatenate everything together:</p>

<pre><code>cleaned = stringwithslashes.replace(""\\n"",""\n"").replace(""\\r"",""\n"").replace(""\\"","""")
</code></pre>

<p>Is that what you were after? Or were you hoping for something more terse?</p>
",""
"13579","2","13454","<p>Python has a built-in escape() function analogous to PHP's addslashes, but no unescape() function (stripslashes), which in my mind is kind of ridiculous.</p>

<p>Regular expressions to the rescue (code not tested):</p>

<pre><code>p = re.compile( '\\(\\\S)')
p.sub('\1',escapedstring)
</code></pre>

<p>In theory that takes anything of the form \\(not whitespace) and returns \(same char)</p>

<p>edit: Upon further inspection, Python regular expressions are broken as all hell;</p>

<pre><code>&gt;&gt;&gt; escapedstring
'This is a \\n\\n\\n test'
&gt;&gt;&gt; p = re.compile( r'\\(\S)' )
&gt;&gt;&gt; p.sub(r""\1"",escapedstring)
'This is a nnn test'
&gt;&gt;&gt; p.sub(r""\\1"",escapedstring)
'This is a \\1\\1\\1 test'
&gt;&gt;&gt; p.sub(r""\\\1"",escapedstring)
'This is a \\n\\n\\n test'
&gt;&gt;&gt; p.sub(r""\(\1)"",escapedstring)
'This is a \\(n)\\(n)\\(n) test'
</code></pre>

<p>In conclusion, what the hell, Python.</p>
",""
"13598","2","13454","<p>Not totally sure this is what you want, but..</p>

<pre><code>cleaned = stringwithslashes.decode('string_escape')
</code></pre>
",""
"13608","2","13454","<p>It sounds like what you want could be reasonably efficiently handled through regular expressions:</p>

<pre><code>import re
def stripslashes(s):
    r = re.sub(r""\\(n|r)"", ""\n"", s)
    r = re.sub(r""\\"", """", r)
    return r
cleaned = stripslashes(stringwithslashes)
</code></pre>
",""
"13791","1","","<p>I am trying to implement string unescaping with Python regex and backreferences, and it doesn't seem to want to work very well. I'm sure it's something I'm doing wrong but I can't figure out what...</p>

<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; mystring = r""This is \n a test \r""
&gt;&gt;&gt; p = re.compile( ""\\\\(\\S)"" )
&gt;&gt;&gt; p.sub( ""\\1"", mystring )
'This is n a test r'
&gt;&gt;&gt; p.sub( ""\\\\\\1"", mystring )
'This is \\n a test \\r'
&gt;&gt;&gt; p.sub( ""\\\\1"", mystring )
'This is \\1 a test \\1'
</code></pre>

<p>I'd like to replace \\[char] with \[char], but backreferences in Python don't appear to follow the same rules they do in every other implementation I've ever used. Could someone shed some light?</p>
","<python><regex><backreference>"
"13844","2","13791","<p>Well, I think you might have missed the r or miscounted the backslashes...</p>

<pre><code>""\\n"" == r""\n""

&gt;&gt;&gt; import re
&gt;&gt;&gt; mystring = r""This is \\n a test \\r""
&gt;&gt;&gt; p = re.compile( r""[\\][\\](.)"" )
&gt;&gt;&gt; print p.sub( r""\\\1"", mystring )
This is \n a test \r
&gt;&gt;&gt;
</code></pre>

<p>Which, if I understood is what was requested.</p>

<p>I suspect the more common request is this:</p>

<pre><code>&gt;&gt;&gt; d = {'n':'\n', 'r':'\r', 'f':'\f'}
&gt;&gt;&gt; p = re.compile(r""[\\]([nrfv])"")
&gt;&gt;&gt; print p.sub(lambda mo: d[mo.group(1)], mystring)
This is \
 a test \
&gt;&gt;&gt;
</code></pre>

<p>The interested student should also read Ken Thompson's <a href=""http://cm.bell-labs.com/who/ken/trust.html"" rel=""nofollow noreferrer"">Reflections on Trusting Trust""</a>, wherein our hero uses a similar example to explain the perils of trusting compilers you haven't bootstrapped from machine code yourself.</p>
",""
"13857","1","","<p>I've been reading a lot about closures and I think I understand them, but without clouding the picture for myself and others, I am hoping someone can explain closures as succinctly and clearly as possible.  I'm looking for a simple explanation that might help me understand where and why I would want to use them.</p>
","<python><functional-programming><closures>"
"13869","2","13791","<p>You are being tricked by Python's representation of the result string. The Python expression:</p>

<pre><code>'This is \\n a test \\r'
</code></pre>

<p>represents the string</p>

<pre><code>This is \n a test \r
</code></pre>

<p>which is I think what you wanted. Try adding 'print' in front of each of your p.sub() calls to print the actual string returned instead of a Python representation of the string.</p>

<pre><code>&gt;&gt;&gt; mystring = r""This is \n a test \r""
&gt;&gt;&gt; mystring
'This is \\n a test \\r'
&gt;&gt;&gt; print mystring
This is \n a test \r
</code></pre>
",""
"13875","2","13857","<p>It's simple: A function that references variables from a containing scope, potentially after flow-of-control has left that scope. That last bit is very useful:</p>

<pre><code>&gt;&gt;&gt; def makeConstantAdder(x):
...     constant = x
...     def adder(y):
...         return y + constant
...     return adder
... 
&gt;&gt;&gt; f = makeConstantAdder(12)
&gt;&gt;&gt; f(3)
15
&gt;&gt;&gt; g = makeConstantAdder(4)
&gt;&gt;&gt; g(3)
7
</code></pre>

<p>Note that 12 and 4 have ""disappeared"" inside f and g, respectively, this feature is what make f and g proper closures.</p>
",""
"13882","2","13791","<p>The idea is that I'll read in an escaped string, and unescape it (a feature notably lacking from Python, which you shouldn't need to resort to regular expressions for in the first place). Unfortunately I'm not being tricked by the backslashes...</p>

<p>Another illustrative example:</p>

<pre><code>&gt;&gt;&gt; mystring = r""This is \n ridiculous""
&gt;&gt;&gt; print mystring
This is \n ridiculous
&gt;&gt;&gt; p = re.compile( r""\\(\S)"" )
&gt;&gt;&gt; print p.sub( 'bloody', mystring )
This is bloody ridiculous
&gt;&gt;&gt; print p.sub( r'\1', mystring )
This is n ridiculous
&gt;&gt;&gt; print p.sub( r'\\1', mystring )
This is \1 ridiculous
&gt;&gt;&gt; print p.sub( r'\\\1', mystring )
This is \n ridiculous
</code></pre>

<p>What I'd like it to print is</p>

<pre><code>This is 
ridiculous
</code></pre>
",""
"13902","2","13857","<p>I've never heard of transactions being used in the same context as explaining what a closure is and there really aren't any transaction semantics here.</p>

<p>It's called a closure because it ""closes over"" the outside variable (constant)--i.e., it's not just a function but an enclosure of the environment where the function was created. </p>

<p>In the following example, calling the closure g after changing x will also change the value of x within g, since g closes over x:</p>

<pre><code>x = 0

def f():
    def g(): 
        return x * 2
    return g


closure = f()
print(closure()) # 0
x = 2
print(closure()) # 4
</code></pre>
",""
"13906","2","13857","<p>I like <a href=""http://effbot.org/zone/closure.htm"" rel=""noreferrer"">this rough, succinct definition</a>:</p>

<blockquote>
  <p>A function that can refer to environments that are no longer active.</p>
</blockquote>

<p>I'd add</p>

<blockquote>
  <p>A closure allows you to bind variables into a function <em>without passing them as parameters</em>.</p>
</blockquote>

<p>Decorators which accept parameters are a common use for closures.  Closures are a common implementation mechanism for that sort of ""function factory"".  I frequently choose to use closures in the <a href=""http://c2.com/cgi/wiki?StrategyPattern"" rel=""noreferrer"">Strategy Pattern</a> when the strategy is modified by data at run-time.</p>

<p>In a language that allows anonymous block definition -- e.g., Ruby, C# -- closures can be used to implement (what amount to) novel new control structures.  The lack of anonymous blocks is among <a href=""http://ivan.truemesh.com/archives/000411.html"" rel=""noreferrer"">the limitations of closures in Python</a>.</p>
",""
"13941","1","","<p>I'd like to have a python program alert me when it has completed its task by making a beep noise.  Currently,  I use <code>import os</code> and then use a command line speech program to say ""Process complete.""  I much rather it be a simple ""bell.""</p>

<p>I know that there's a function that can be used in Cocoa apps, NSBeep, but I don't think that has much anything to do with this.</p>

<p>I've also tried <code>print(\a)</code> but that didn't work.</p>

<p>I'm using a Mac, if you couldn't tell by my Cocoa comment, so that may help.</p>

<p>Thanks!</p>
","<python><osx><audio><terminal>"
"13943","2","13791","<p>Isn't that what Anders' second example does?</p>

<p>In 2.5 there's also a <code>string-escape</code> encoding you can apply:</p>

<pre><code>&gt;&gt;&gt; mystring = r""This is \n a test \r""
&gt;&gt;&gt; mystring.decode('string-escape')
'This is \n a test \r'
&gt;&gt;&gt; print mystring.decode('string-escape')
This is 
 a test 
&gt;&gt;&gt; 
</code></pre>
",""
"13949","2","13941","<p>Have you tried :</p>

<pre><code>import sys
sys.stdout.write('\a')
sys.stdout.flush()
</code></pre>

<p>That works for me here on Mac OS 10.5</p>

<p>Actually, I think your original attempt works also with a little modification:</p>

<pre><code>print('\a')
</code></pre>

<p>(You just need the single quotes around the character sequence).</p>
",""
"13958","2","13791","<p>Mark; his second example requires every escaped character thrown into an array initially, which generates a KeyError if the escape sequence happens not to be in the array. It will die on anything but the three characters provided (give \v a try), and enumerating every possible escape sequence every time you want to unescape a string (or keeping a global array) is a really bad solution. Analogous to PHP, that's using <code>preg_replace_callback()</code> with a lambda instead of <code>preg_replace()</code>, which is utterly unnecessary in this situation.</p>

<p>I'm sorry if I'm coming off as a dick about it, I'm just utterly frustrated with Python. This is supported by every other regular expression engine I've ever used, and I can't understand why this wouldn't work.</p>

<p>Thank you for responding; the <code>string.decode('string-escape')</code> function is precisely what i was looking for initially. If someone has a general solution to the regex backreference problem, feel free to post it and I'll accept that as an answer as well.</p>
",""
"13959","2","13941","<p>I had to turn off the ""Silence terminal bell"" option in my active Terminal Profile in iTerm for <code>print('\a')</code> to work. It seemed to work fine by default in Terminal.</p>

<p>You can also use the Mac module <code>Carbon.Snd</code> to play the system beep:</p>

<pre><code>&gt;&gt;&gt; import Carbon.Snd
&gt;&gt;&gt; Carbon.Snd.SysBeep(1)
&gt;&gt;&gt; 
</code></pre>

<p>The Carbon modules don't have any documentation, so I had to use <code>help(Carbon.Snd)</code> to see what functions were available. It seems to be a direct interface onto Carbon, so the docs on Apple Developer Connection probably help.</p>
",""
"14281","1","","<p>I have over a million text files compressed into 40 zip files. I also have a list of about 500 model names of phones. I want to find out the number of times a particular model was mentioned in the text files. </p>

<p>Is there any python module which can do a regex match on the files without unzipping it. Is there a simple way to solve this problem without unzipping?</p>
","<python><regex><zip><text-processing>"
"14304","2","14281","<p>You could loop through the zip files, reading individual files using the zipfile module and running your regex on those, eliminating to unzip all the files at once. </p>

<p>I'm fairly certain that you can't run a regex over the zipped data, at least not meaningfully.</p>
",""
"14314","2","14281","<p>To access the contents of a zip file you have to unzip it, although the zipfile package makes this fairly easy, as you can unzip each file within an archive individually.</p>

<p><a href=""http://docs.python.org/lib/module-zipfile.html"" rel=""nofollow noreferrer"">Python zipfile module</a></p>
",""
"14320","2","14281","<p>There's nothing that will automatically do what you want.</p>

<p>However, there is a python zipfile module that will make this easy to do.  Here's how to iterate over the lines in the file.</p>

<pre><code>#!/usr/bin/python

import zipfile
f = zipfile.ZipFile('myfile.zip')

for subfile in f.namelist():
    print subfile
    data = f.read(subfile)
    for line in data.split('\n'):
        print line
</code></pre>
",""
"14389","1","","<p>I have a script that parses the filenames of TV episodes (show.name.s01e02.avi for example), grabs the episode name (from the www.thetvdb.com API) and automatically renames them into something nicer (Show Name - [01x02].avi)</p>

<p>The script works fine, that is until you try and use it on files that have Unicode show-names (something I never really thought about, since all the files I have are English, so mostly pretty-much all fall within <code>[a-zA-Z0-9'\-]</code>)</p>

<p>How can I allow the regular expressions to match accented characters and the likes? Currently the regex's config section looks like..</p>

<pre><code>config['valid_filename_chars'] = """"""0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!@£$%^&amp;*()_+=-[]{}""'.,&lt;&gt;`~? """"""
config['valid_filename_chars_regex'] = re.escape(config['valid_filename_chars'])

config['name_parse'] = [
    # foo_[s01]_[e01]
    re.compile('''^([%s]+?)[ \._\-]\[[Ss]([0-9]+?)\]_\[[Ee]([0-9]+?)\]?[^\\/]*$'''% (config['valid_filename_chars_regex'])),
    # foo.1x09*
    re.compile('''^([%s]+?)[ \._\-]\[?([0-9]+)x([0-9]+)[^\\/]*$''' % (config['valid_filename_chars_regex'])),
    # foo.s01.e01, foo.s01_e01
    re.compile('''^([%s]+?)[ \._\-][Ss]([0-9]+)[\.\- ]?[Ee]([0-9]+)[^\\/]*$''' % (config['valid_filename_chars_regex'])),
    # foo.103*
    re.compile('''^([%s]+)[ \._\-]([0-9]{1})([0-9]{2})[\._ -][^\\/]*$''' % (config['valid_filename_chars_regex'])),
    # foo.0103*
    re.compile('''^([%s]+)[ \._\-]([0-9]{2})([0-9]{2,3})[\._ -][^\\/]*$''' % (config['valid_filename_chars_regex'])),
]
</code></pre>
","<python><regex><unicode><character-properties>"
"14391","2","14389","<p>Use a subrange of [\u0000-\uFFFF] for what you want.</p>

<p>You can also use the re.UNICODE compile flag. <a href=""http://docs.python.org/lib/re-syntax.html"" rel=""noreferrer"">The docs</a> say that if UNICODE is set, \w will match the characters [0-9_] plus whatever is classified as alphanumeric in the Unicode character properties database. </p>

<p>See also <a href=""http://coding.derkeiler.com/Archive/Python/comp.lang.python/2004-05/2560.html"" rel=""noreferrer"">http://coding.derkeiler.com/Archive/Python/comp.lang.python/2004-05/2560.html</a>.</p>
",""
"14399","2","14389","<p>\X seems to be available as a generic word-character in some languages, it allows you to match a single character disregarding of how many bytes it takes up. Might be useful.</p>
",""
"14420","2","14389","<p>In Mastering Regular Expressions from Jeffrey Friedl (great book) it is mentioned that you could use \p{Letter} which will match unicode stuff that is considered a letter.</p>
",""
"14422","1","","<p>For example, <a href=""http://developer.apple.com/cocoa/pyobjc.html"" rel=""nofollow noreferrer"">http://developer.apple.com/cocoa/pyobjc.html</a> is still for OS X 10.4 Tiger, not 10.5 Leopard.. And that's the official Apple documentation for it..</p>

<p>The official PyObjC page is equally bad, <a href=""http://pyobjc.sourceforge.net/"" rel=""nofollow noreferrer"">http://pyobjc.sourceforge.net/</a></p>

<p>It's so bad it's baffling.. I'm considering learning Ruby primarily because the RubyCocoa stuff is so much better documented, and there's lots of decent tutorials (<a href=""http://www.rubycocoa.com/"" rel=""nofollow noreferrer"">http://www.rubycocoa.com/</a> for example), and because of the Shoes GUI toolkit..</p>

<p>Even <a href=""http://66.163.168.225/babelfish/translate_url_content?lp=ja_en&amp;url=http%3A%2F%2Fblog.monospace.jp%2F2007%2F11%2F05%2Fxcode3_cocoa_python%2F&amp;fr=avbbf-us&amp;.intl=us"" rel=""nofollow noreferrer"">this badly-auto-translated Japanese tutorial</a> is more useful than the rest of the documentation I could find..</p>

<p>All I want to do is create fairly simple Python applications with Cocoa GUI's..<br>
Can anyone shed light on the horrible documentation, or point me at some tutorials that don't just give you huge blocks of code and assume you know what <code>NSThread.detachNewThreadSelector_toTarget_withObject_(""queryController"", self, None)</code> does..?</p>
","<python><osx><cocoa><pyobjc>"
"14426","2","14422","<p>This answer isn't going to be very helpful but, as a developer I hate doing documentation. This being a opensource project, it's hard to find people to do documentation.</p>
",""
"14436","2","14422","<p>Tom says it all really.  Lots of open source projects have dedicated developers and few who are interested in documenting.  It isn't helped by the fact that goalposts can shift on a daily basis which means documentation not only has to be created, but maintained.</p>
",""
"14479","2","14422","<p>Tom's and Martin's response are definitely true (in just about any open source project, you'll find that most contributors are particularly interested in, well, <em>developing</em>; not so much in semi-related matters such as documentation), but I don't think your particular question at the end would fit well inside PyObjC documentation.</p>

<pre><code>NSThread.detachNewThreadSelector_toTarget_withObject_(""queryController"", self, None)
</code></pre>

<p><code>NSThread</code> is part of the Cocoa API, and as such <a href=""http://developer.apple.com/documentation/Cocoa/Reference/Foundation/Classes/NSThread_Class/Reference/Reference.html"" rel=""nofollow noreferrer"">documented over at Apple</a>, including the particular method <code>+ detachNewThreadSelector:toTarget:withObject:</code> (I'd link there, but apparently stackoverflow has bugs with parsing it). The CocoaDev wiki <a href=""http://cocoadev.com/index.pl?NSThread"" rel=""nofollow noreferrer"">also has an article</a>.</p>

<p>I don't think it would be a good idea for PyObjC to attempt to document Cocoa, other than a few basic examples of how to use it from within Python. Explaining selectors is also likely outside the scope of PyObjC, as those, too, are a feature of Objective-C, not PyObjC specifically.</p>
",""
"14507","2","14422","<p>I agree that that tutorial is flawed, throwing random, unexplained code right in front of your eyes. It introduces concepts such as the autorelease pool and user defaults without explaining why you would want them (""Autorelease pool for memory management"" is hardly an explanation).</p>

<p>That said…</p>

<blockquote>
  <p>basically all I want to do is write Cocoa applications without having to learn ObjC.</p>
</blockquote>

<p>I'm afraid that for the time being, you <em>will</em> need a basic grasp of ObjC in order to benefit from any language that uses Cocoa. PyObjC, RubyCocoa, Nu and others are niches at best, and all of them were developed by people intimately familiar with the ins and outs of ObjC <em>and</em> Cocoa.</p>

<p>For now, you will benefit the most if you realistically see those bridges as useful where scripting languages truly shine, rather than trying to build a whole application with them. While this <em>has</em> been done (with LimeChat, I'm using a RubyCocoa-written app right now), it is rare and likely will be for a while.</p>
",""
"24061","2","13857","<p>To be honest, I understand closures perfectly well except I've never been clear about what exactly is the thing which is the ""closure"" and what's so ""closure"" about it. I recommend you give up looking for any logic behind the choice of term.</p>

<p>Anyway, here's my explanation:</p>

<pre><code>def foo():
   x = 3
   def bar():
      print x
   x = 5
   return bar

bar = foo()
bar()   # print 5
</code></pre>

<p>A key idea here is that the function object returned from foo retains a hook to the local var 'x' even though 'x' has gone out of scope and should be defunct. This hook is to the var itself, not just the value that var had at the time, so when bar is called, it prints 5, not 3.</p>

<p>Also be clear that Python 2.x has limited closure: there's no way I can modify 'x' inside 'bar' because writing 'x = bla' would declare a local 'x' in bar, not assign to 'x' of foo. This is a side-effect of Python's assignment=declaration. To get around this, Python 3.0 introduces the nonlocal keyword:</p>

<pre><code>def foo():
   x = 3
   def bar():
      print x
   def ack():
      nonlocal x
      x = 7
   x = 5
   return (bar, ack)

bar, ack = foo()
ack()   # modify x of the call to foo
bar()   # print 7
</code></pre>
",""
"29910","2","14422","<p>I stumbled across a good tutorial on PyObjC/Cocoa:</p>

<p><a href=""http://lethain.com/entry/2008/aug/22/an-epic-introduction-to-pyobjc-and-cocoa/"" rel=""noreferrer"">http://lethain.com/entry/2008/aug/22/an-epic-introduction-to-pyobjc-and-cocoa/</a></p>
",""
"34439","1","","<p>Given a Python object of any kind, is there an easy way to get the list of all methods that this object has?</p>

<p>Or,</p>

<p>if this is not possible, is there at least an easy way to check if it has a particular method other than simply checking if an error occurs when the method is called?</p>
","<python><introspection>"
"34452","2","34439","<p>It appears you can use this code, replacing 'object' with the object you're interested in:-</p>

<pre><code>[method_name for method_name in dir(object)
 if callable(getattr(object, method_name))]
</code></pre>

<p>I discovered it at <a href=""http://www.diveintopython.net/power_of_introspection/index.html"" rel=""nofollow noreferrer"">this site</a>, hopefully that should provide some further detail!</p>
",""
"34467","2","34439","<p>You can use the built in <code>dir()</code> function to get a list of all the attributes a module has.  Try this at the command line to see how it works.</p>

<pre><code>&gt;&gt;&gt; import moduleName
&gt;&gt;&gt; dir(moduleName)
</code></pre>

<p>Also, you can use the <code>hasattr(module_name, ""attr_name"")</code> function to find out if a module has a specific attribute.</p>

<p>See the <a href=""http://www.ibm.com/developerworks/library/l-pyint.html"" rel=""noreferrer"">Guide to Python introspection</a> for more information.</p>
",""
"34472","2","34439","<p>To check if it has a particular method:</p>

<pre><code>hasattr(object,""method"")
</code></pre>
",""
"34481","2","34439","<p>On top of the more direct answers, I'd be remiss if I didn't mention <a href=""http://ipython.scipy.org/"" rel=""noreferrer"">iPython</a>.
Hit 'tab' to see the available methods, with autocompletion.</p>

<p>And once you've found a method, try:</p>

<pre><code>help(object.method) 
</code></pre>

<p>to see the pydocs, method signature, etc.</p>

<p>Ahh... <a href=""http://en.wikipedia.org/wiki/REPL"" rel=""noreferrer"">REPL</a>.</p>
",""
"34482","2","13941","<p>If you have PyObjC (the Python - Objective-C bridge) installed or are running on OS X 10.5's system python (which ships with PyObjC), you can do</p>

<pre><code>from AppKit import NSBeep
NSBeep()
</code></pre>

<p>to play the system alert.</p>
",""
"34570","1","","<p>I am taking a class that requires Python. We will review the language in class next week, and I am a quick study on new languages, but I was wondering if there are any really great Python books I can grab while I am struggling through the basics of setting up my IDE, server environment and all those other ""gotchas"" that come with a new programming language. Suggestions?</p>
","<python>"
"34584","2","34570","<p>I expect that <a href=""http://oreilly.com/catalog/9780596513986/"" rel=""nofollow noreferrer"">Learning Python</a> is useful, and quick to read.</p>
",""
"34596","2","34570","<p>I found <a href=""http://rads.stackoverflow.com/amzn/click/0596513984"" rel=""nofollow noreferrer"">Learning Python</a> really good. It's pretty long (>700 pages) but <em>extremely</em> readable and you can rip through it very quickly given you're a quick study :-)</p>
",""
"34608","2","34570","<p>I loved <a href=""http://www.diveintopython.net/toc/index.html"" rel=""nofollow noreferrer"">Dive Into Python</a>, especially if you're a quick study.  The beginning basics are all covered (and may move slowly for you), but the latter few chapters are great learning tools.</p>

<p>Plus, Pilgrim is a pretty good writer.</p>
",""
"34610","2","34570","<p>Since you're already familiar with other languages and a quick study, I'd recommend <a href=""http://books.google.com/books?id=6TEcaEzA8N0C"" rel=""nofollow noreferrer"">Python in a Nutshell</a> by Alex Martelli, very concise and also useful later on for reference.</p>
",""
"34613","2","34570","<p>Two good online-books, that also describes the basics of the environment is <a href=""http://www.diveintopython.net/toc/index.html"" rel=""nofollow noreferrer"">diveintopython.net</a> and  <a href=""http://docs.python.org/tut/"" rel=""nofollow noreferrer"">the ""official"" tutorial</a>.</p>
",""
"34627","2","34570","<p><a href=""http://diveintopython.net/"" rel=""nofollow noreferrer"">Dive Into Python</a> is an excellent book geared toward programmers wanting to pick up Python.  The best part is that it's freely available online.  I started learning a little Python a few months ago and I've worked through about half of the book.  It's a very comprehensive tool that's good for learning the language and also for a reference down the road.</p>

<p>Edit: Kamens is a faster typer than I am.</p>
",""
"34835","2","34570","<p><a href=""http://rads.stackoverflow.com/amzn/click/0596513984"" rel=""nofollow noreferrer"">Learning Python</a> is how I learned the language.  It's a quick read, and very well organized around fundamental concepts.  </p>
",""
"34843","2","34570","<p><a href=""http://rads.stackoverflow.com/amzn/click/0596009402"" rel=""nofollow noreferrer"">Python Pocket Reference</a>.</p>

<p>I have both Learning Python &amp; Programming Python and I almost always go to the Pocket Reference first.</p>
",""
"34916","1","","<p>Is there anything similar to rails' scaffolding fo pylons? I've been poking around google, but fofund only this thing caled dbsprockets, which is fine, although probably way to much for my needs. What i really need is a basic CRUD thas is based on the SQLAlchemy model.</p>
","<python><pylons>"
"35014","2","34570","<p>Many people have suggested Dive Into Python, which is probably the best Python book out there for someone who's already a good programmer.  However, if you're new to programming, the best book is probably ""How to Think Like a Computer Scientist: Learning With Python"" (<a href=""http://openbookproject.net/thinkCSpy/index.xhtml"" rel=""nofollow noreferrer"">http://openbookproject.net/thinkCSpy/index.xhtml</a>)</p>
",""
"35110","2","34916","<p>I hear you, I've followed the Pylons mailing list for a while looking for something similar. There have been some attempts in the past (see <a href=""http://adminpylon.devjavu.com/"" rel=""nofollow noreferrer"">AdminPylon</a> and <a href=""http://code.google.com/p/restin/"" rel=""nofollow noreferrer"">Restin</a>) but none have really kept up with SQLAlchemy's rapidly developing orm api.</p>

<p>Since DBSprockets is likely to be incorporated into TurboGears it will likely be maintained. I'd bite the bullet and go with that.</p>
",""
"35316","2","34570","<p>I'll second Daniel's recommendation of Python in a Nutshell. If you're quick to pick up new languages, it's probably exactly what you're looking for. There's a nice overview of how the language works, and then a discussion of most of the standard library. It's concise and clear, and doesn't assume that you don't know basic programming things already.</p>
",""
"35422","2","34570","<p>I think that <a href=""http://www.greenteapress.com/thinkpython/"" rel=""nofollow noreferrer"">Think Python</a> is very good for first-time programmers. Pleasant writing style too..</p>
",""
"35426","2","34570","<p>I learned most of my initial pythonese from this super-handy quick reference:</p>

<p><a href=""http://rgruet.free.fr/PQR2.3.html"" rel=""nofollow noreferrer"">http://rgruet.free.fr/PQR2.3.html</a></p>
",""
"35427","2","34570","<p>I tried learning from Programming Python and I didn't like it. I'm going to give Python in a Nutshell a try as per suggestions below. </p>
",""
"35538","1","","<p>What's the best way to go about validating that a document follows some version of HTML (prefereably that I can specify)? I'd like to be able to know where the failures occur, as in a web-based validator, except in a native Python app.</p>
","<python><html><validation><xhtml>"
"35543","2","35538","<p>XHTML is easy, use <a href=""http://lxml.de/validation.html"" rel=""nofollow noreferrer"">lxml</a>.</p>

<p>HTML is harder, since there's traditionally not been as much interest in validation among the HTML crowd (run StackOverflow itself through a validator, yikes). The easiest solution would be to execute external applications such as <a href=""http://www.jclark.com/sp/"" rel=""nofollow noreferrer"">nsgmls</a> or <a href=""http://openjade.sourceforge.net/"" rel=""nofollow noreferrer"">OpenJade</a>, and then parse their output.</p>
",""
"35562","2","35538","<p>I think that <a href=""http://tidy.sourceforge.net/"" rel=""nofollow noreferrer"">HTML tidy</a> will do what you want. There is a Python binding for it.</p>
",""
"35569","1","","<p>It seems like if you want to get the keys of a mapping, you ask for them; otherwise, give me the <em>whole</em> mapping (constituted by a set of key-value pairs). Is there a historical reason for this?</p>
","<python><mapping><iteration>"
"35572","2","35538","<p>Try tidylib. You can get some really basic bindings as part of the elementtidy module (builds elementtrees from HTML documents). <a href=""http://effbot.org/downloads/#elementtidy"" rel=""noreferrer"">http://effbot.org/downloads/#elementtidy</a></p>

<pre><code>&gt;&gt;&gt; import _elementtidy
&gt;&gt;&gt; xhtml, log = _elementtidy.fixup(""&lt;html&gt;&lt;/html&gt;"")
&gt;&gt;&gt; print log
line 1 column 1 - Warning: missing &lt;!DOCTYPE&gt; declaration
line 1 column 7 - Warning: discarding unexpected &lt;/html&gt;
line 1 column 14 - Warning: inserting missing 'title' element
</code></pre>

<p>Parsing the log should give you pretty much everything you need.</p>
",""
"35582","2","35569","<p>Check out <a href=""http://mail.python.org/pipermail/python-3000/2007-September/010209.html"" rel=""nofollow noreferrer"">this thread</a> for a discussion on the reasons behind this behavior (including that Guido likes it, and it's <a href=""http://mail.python.org/pipermail/python-3000/2007-September/010222.html"" rel=""nofollow noreferrer"">not likely to change</a>).</p>
",""
"35634","1","","<p>Is there a Ruby equivalent for Python's ""is""? It tests whether two objects are identical (i.e. have the same memory location).</p>
","<python><ruby>"
"35635","2","35634","<p>Use <code>a.equal? b</code></p>

<p><a href=""http://www.ruby-doc.org/core/classes/Object.html"" rel=""noreferrer"">http://www.ruby-doc.org/core/classes/Object.html</a></p>

<blockquote>
  <p>Unlike ==, the equal? method should never be overridden by subclasses: it is used to determine object identity (that is, a.equal?(b) iff a is the same object as b). </p>
</blockquote>
",""
"35753","1","","<p>Right now I'm developing mostly in C/C++, but I wrote some small utilities in Python to automatize some tasks and I really love it as language (especially the productivity). </p>

<p>Except for the performances (a problem that could be sometimes solved thanks to the ease of interfacing Python with C modules), do you think it is proper for production use in the development of stand-alone complex applications (think for example to a word processor or a graphic tool)?</p>

<p>What IDE would you suggest? The IDLE provided with Python is not enough even for small projects in my opinion.</p>
","<python><ide>"
"35757","2","35753","<p>In my opinion python is more than ready for developing complex applications. I see pythons strength more on the server side than writing graphical clients. But have a look at <a href=""http://www.resolversystems.com/"" rel=""nofollow noreferrer"">http://www.resolversystems.com/</a>. They develop a whole spreadsheet in python using the .net ironpython port.</p>

<p>If you are familiar with eclipse have a look at <a href=""http://pydev.sourceforge.net/"" rel=""nofollow noreferrer"">pydev</a> which provides auto-completion and debugging support for python with all the other eclipse goodies like svn support. The guy developing it has just been bought by <a href=""http://aptana.com/blog/pcolton/pydev_news"" rel=""nofollow noreferrer"">aptana</a>, so this will be solid choice for the future.</p>

<p>@Marcin</p>

<blockquote>
  <p>Cons: as a dynamic language, has way
  worse IDE support (proper syntax
  completion requires static typing,
  whether explicit in Java or inferred
  in SML),</p>
</blockquote>

<p>You are right, that static analysis may not provide full syntax completion for dynamic languages, but I thing pydev gets the job done very well. Further more I have a different development style when programming python. I have always an ipython session open and with one F5 I do not only get the perfect completion from ipython, but object introspection and manipulation as well.</p>

<blockquote>
  <p>But if you want to write second Google
  or Yahoo, you will be much better with
  C# or Java.</p>
</blockquote>

<p><a href=""http://www.jaiku.com/blog/2008/08/18/from-the-dev-corner-an-under-the-hood-preview-of-our-new-engine/"" rel=""nofollow noreferrer"">Google just rewrote jaiku</a> to work on top of App Engine, all in python. And as far as I know they use a lot of python inside google too.</p>
",""
"35759","2","35753","<p>I really like python, it's usually my language of choice these days for small (non-gui) stuff that I do on my own.</p>

<p>However, for some larger Python projects I've tackled, I'm finding that it's not quite the same as programming in say, C++. I was working on a language parser, and needed to represent an AST in Python. This is certainly within the scope of what Python can do, but I had a bit of trouble with some refactoring. I was changing the representation of my AST and changing methods and classes around a lot, and I found I missed the strong typing that would be available to me in a C++ solution. Python's duck typing was almost <em>too</em> flexible and I found myself adding a lot of <code>assert</code> code to try to check my types as the program ran. And then I couldn't really be sure that everything was properly typed unless I had 100% code coverage testing (which I didn't at the time).</p>

<p>Actually, that's another thing that I miss sometimes. It's possible to write syntactically correct code in Python that simply won't run. The compiler is incapable of telling you about it until it actually executes the code, so in infrequently-used code paths such as error handlers you can easily have unseen bugs lurking around. Even code that's as simple as printing an error message with a % format string can fail at runtime because of mismatched types.</p>

<p>I haven't used Python for any GUI stuff so I can't comment on that aspect.</p>
",""
"35776","2","35753","<p>Python is considered (among Python programmers :) to be a great language for rapid prototyping. There's not a lot of extraneous syntax getting in the way of your thought processes, so most of the work you do tends to go into the code. (There's far less idioms required to be involved in writing good Python code than in writing good C++.)</p>

<p>Given this, most Python (CPython) programmers ascribe to the ""premature optimization is the root of all evil"" philosophy. By writing high-level (and significantly slower) Python code, one can optimize the bottlenecks out using C/C++ bindings when your application is nearing completion. At this point it becomes more clear what your processor-intensive algorithms are through proper profiling. This way, you write most of the code in a very readable and maintainable manner while allowing for speedups down the road. You'll see several Python library modules written in C for this very reason.</p>

<p>Most graphics libraries in Python (i.e. wxPython) are just Python wrappers around C++ libraries anyway, so you're pretty much writing to a C++ backend.</p>

<p>To address your IDE question, <a href=""http://pythonide.blogspot.com/"" rel=""noreferrer"">SPE</a> (Stani's Python Editor) is a good IDE that I've used and <a href=""http://www.eclipse.org/"" rel=""noreferrer"">Eclipse</a> with <a href=""http://pydev.sourceforge.net/"" rel=""noreferrer"">PyDev</a> gets the job done as well. Both are OSS, so they're free to try!</p>

<p>[Edit] @Marcin: Have you had experience writing > 30k LOC in Python? It's also funny that you should mention Google's scalability concerns, since they're Python's biggest supporters! Also a small organization called NASA also uses Python frequently ;) see <a href=""http://www.python.org/about/success/usa/"" rel=""noreferrer"">""One coder and 17,000 Lines of Code Later""</a>.</p>
",""
"35777","2","35753","<p>You'll find mostly two answers to that &ndash; the religous one (Yes! Of course! It's the best language ever!) and the other religious one (you gotta be kidding me! Python? No... it's not mature enough). I will maybe skip the last religion (Python?! Use Ruby!). The truth, as always, is far from obvious. </p>

<p><strong>Pros</strong>: it's easy, readable, batteries included, has lots of good libraries for pretty much everything. It's expressive and dynamic typing makes it more concise in many cases.</p>

<p><strong>Cons</strong>: as a dynamic language, has way worse IDE support (proper syntax completion <strong>requires</strong> static typing, whether explicit in Java or inferred in SML), its object system is far from perfect (interfaces, anyone?) and it is easy to end up with messy code that has methods returning either int or boolean or object or some sort under unknown circumstances.</p>

<p>My take &ndash; I love Python for scripting, automation, tiny webapps and other simple well defined tasks. In my opinion it is by far <strong>the best</strong> dynamic language on the planet. That said, I would <strong>never</strong> use it <strong>any</strong> dynamically typed language to develop an application of substantial size.</p>

<p>Say &ndash; it would be fine to use it for Stack Overflow, which has three developers and I guess no more than 30k lines of code. For bigger things &ndash; first your development would be super fast, and then once team and codebase grow things are slowing down more than they would with Java or C#. You need to offset lack of compilation time checks by writing more unittests, refactorings get harder cause you never know what your refacoring broke until you run all tests or even the whole big app, etc.</p>

<p>Now &ndash; decide on how big your team is going to be and how big the app is supposed to be once it is done. If you have 5 or less people and the target size is roughly Stack Overflow, go ahead, write in Python. You will finish in no time and be happy with good codebase. But if you want to write second Google or Yahoo, you will be much better with C# or Java.</p>

<p>Side-note on C/C++ you have mentioned: if you are not writing performance critical software (say massive parallel raytracer that will run for three months rendering a film) or a very mission critical system (say Mars lander that will fly three years straight and has only one chance to land right or you lose $400mln) do not use it. For web apps, most desktop apps, most apps in general it is not a good choice. You will die debugging pointers and memory allocation in complex business logic.</p>
",""
"35805","1","","<p>If I create a class <code>A</code> as follows:</p>

<pre><code>class A:
    def __init__(self):
        self.name = 'A'
</code></pre>

<p>Inspecting the <code>__dict__</code> member looks like <code>{'name': 'A'}</code></p>

<p>If however I create a class <code>B</code>:</p>

<pre><code>class B:
    name = 'B'
</code></pre>

<p><code>__dict__</code> is empty.</p>

<p>What is the difference between the two, and why doesn't <code>name</code> show up in <code>B</code>'s <code>__dict__</code>?</p>
","<python>"
"35817","1","","<p>When using os.system() it's often necessary to escape filenames and other arguments passed as parameters to commands.  How can I do this?  Preferably something that would work on multiple operating systems/shells but in particular for bash.</p>

<p>I'm currently doing the following, but am sure there must be a library function for this, or at least a more elegant/robust/efficient option:</p>

<pre><code>def sh_escape(s):
   return s.replace(""("",""\\("").replace("")"",""\\)"").replace("" "",""\\ "")

os.system(""cat %s | grep something | sort &gt; %s"" 
          % (sh_escape(in_filename), 
             sh_escape(out_filename)))
</code></pre>

<p><em>Edit:</em> I've accepted the simple answer of using quotes, don't know why I didn't think of that; I guess because I came from Windows where ' and "" behave a little differently.</p>

<p>Regarding security, I understand the concern, but, in this case, I'm interested in a quick and easy solution which os.system() provides, and the source of the strings is either not user-generated or at least entered by a trusted user (me).</p>
","<python><shell><escaping>"
"35823","2","35805","<p><code>B.name</code> is a class attribute, not an instance attribute.  It shows up in <code>B.__dict__</code>, but not in <code>b = B(); b.__dict__</code>.</p>

<p>The distinction is obscured somewhat because when you access an attribute on an instance, the class dict is a fallback.  So in the above example, <code>b.name</code> will give you the value of <code>B.name</code>.</p>
",""
"35831","2","35817","<p>I believe that os.system just invokes whatever command shell is configured for the user, so I don't think you can do it in a platform independent way.  My command shell could be anything from bash, emacs, ruby, or even quake3.  Some of these programs aren't expecting the kind of arguments you are passing to them and even if they did there is no guarantee they do their escaping the same way.</p>
",""
"35838","2","35753","<p>I know I'm probably stating the obvious, but don't forget that the quality of the development team and their familiarity with the technology will have a major impact on your ability to deliver. </p>

<p>If you have a strong team, then it's probably not an issue if they're familiar. But if you have people who are more 9 to 5'rs who aren't familiar with the technology, they will need more support and you'd need to make a call if the productivity gains are worth whatever the cost of that support is.</p>
",""
"35841","2","35753","<p>Refactoring is inevitable on larger codebases and the lack of static typing makes this much harder in python than in statically typed languages.</p>
",""
"35857","2","35817","<p>This is what I use:</p>

<pre><code>def shellquote(s):
    return ""'"" + s.replace(""'"", ""'\\''"") + ""'""
</code></pre>

<p>The shell will always accept a quoted filename and remove the surrounding quotes before passing it to the program in question. Notably, this avoids problems with filenames that contain spaces or any other kind of nasty shell metacharacter.</p>

<p><strong>Update</strong>: If you are using Python 3.3 or later, use <a href=""http://docs.python.org/dev/library/shlex.html#shlex.quote"" rel=""noreferrer"">shlex.quote</a> instead of rolling your own.</p>
",""
"35858","2","35817","<p>Perhaps you have a specific reason for using <code>os.system()</code>. But if not you should probably be using the <a href=""https://docs.python.org/library/subprocess.html"" rel=""nofollow noreferrer""><code>subprocess</code> module</a>. You can specify the pipes directly and avoid using the shell.</p>

<p>The following is from <a href=""http://www.python.org/dev/peps/pep-0324/"" rel=""nofollow noreferrer"">PEP324</a>:</p>

<blockquote>
<pre><code>Replacing shell pipe line
-------------------------

output=`dmesg | grep hda`
==&gt;
p1 = Popen([""dmesg""], stdout=PIPE)
p2 = Popen([""grep"", ""hda""], stdin=p1.stdout, stdout=PIPE)
output = p2.communicate()[0]
</code></pre>
</blockquote>
",""
"35900","2","35817","<p>If you do use the system command, I would try and whitelist what goes into the os.system() call.. For example..</p>

<pre><code>clean_user_input re.sub(""[^a-zA-Z]"", """", user_input)
os.system(""ls %s"" % (clean_user_input))
</code></pre>

<p>The subprocess module is a better option, and I would recommend trying to avoid using anything like os.system/subprocess wherever possible.</p>
",""
"35922","1","","<p>I've played around with GTK, TK, wxPython, Cocoa, curses and others. They are are fairly horrible to use.. GTK/TK/wx/curses all seem to basically be direct-ports of the appropriate C libraries, and Cocoa basically mandates using both PyObjC and Interface Builder, both of which I dislike..</p>

<p>The Shoes GUI library for Ruby is great.. It's very sensibly designed, and very ""rubyish"", and borrows some nice-to-use things from web development (like using hex colours codes, or <code>:color =&gt; rgb(128,0,0)</code>)</p>

<p>As the title says: are there any nice, ""Pythonic"" GUI toolkits?</p>
","<python><user-interface>"
"35926","2","35922","<p>I've used <a href=""http://glade.gnome.org/"" rel=""nofollow noreferrer"">Glade</a> with some success, though I didn't manage to wrap my head around creating anything really complex.  It has a nice GUI builder and stores the forms as xml files that are loaded dynamically.  Kind of like XAML afiak.</p>
",""
"35935","2","35922","<p>Have you looked at <a href=""http://qt.io"" rel=""nofollow noreferrer"">Qt</a>/<a href=""http://www.riverbankcomputing.co.uk/software/pyqt/intro"" rel=""nofollow noreferrer"">PyQt</a>? Although PyQt <em>is</em> a direct port from the C++ library, I find it much more pythonic and nice to program with compared to the others you listed. It also has very good documentation.</p>

<p><a href=""http://dabodev.com/"" rel=""nofollow noreferrer"">Dabo</a> has a nice ui library implemented on top of wxPython. It's a framework intended mostly for database-centric applications, but the ui library can be used separately. </p>

<p>There are/were several other attempts to create a very pythonic gui as a layer on top of PyGtk or wxPython, such as <a href=""http://wiki.wxpython.org/Wax"" rel=""nofollow noreferrer"">wax</a> and <a href=""http://www.cosc.canterbury.ac.nz/greg.ewing/python_gui/"" rel=""nofollow noreferrer"">PyGui</a>, which seem to be ""stuck"" at various degrees of being complete.</p>

<p>Also, an exhaustive list of Python GUI toolkits can be found <a href=""http://wiki.python.org/moin/GuiProgramming"" rel=""nofollow noreferrer"">here</a>.</p>
",""
"35938","2","35922","<p>Seconding <a href=""http://www.riverbankcomputing.co.uk/software/pyqt/intro"" rel=""nofollow noreferrer"">PyQt</a>. Coupled with the book <a href=""http://www.qtrac.eu/pyqtbook.html"" rel=""nofollow noreferrer"">Rapid GUI Programming with Python and Qt</a>, it's really easy to learn.</p>
",""
"35948","1","","<p>I'm using Google App Engine and Django templates.<br>
I have a table that I want to display the objects look something like:<br></p>

<pre><code>Object Result:
    Items = [item1,item2]
    Users = [{name='username',item1=3,item2=4},..]
</code></pre>

<p>The Django template is:</p>

<pre><code>&lt;table&gt;
&lt;tr align=""center""&gt;
    &lt;th&gt;user&lt;/th&gt;
    {% for item in result.items %}
        &lt;th&gt;{{item}}&lt;/th&gt;
    {% endfor %}
&lt;/tr&gt;

{% for user in result.users %}
    &lt;tr align=""center""&gt; 
        &lt;td&gt;{{user.name}}&lt;/td&gt;
        {% for item in result.items %}
            &lt;td&gt;{{ user.item }}&lt;/td&gt;
        {% endfor %}
    &lt;/tr&gt;
{% endfor %}
&lt;/table&gt;
</code></pre>

<p>Now the <a href=""http://www.djangoproject.com/documentation/0.96/templates/#variables"" rel=""nofollow noreferrer"">Django documention</a> states that when it sees a <strong>.</strong> in variables<br>
It tries several things to get the data, one of which is dictionary lookup which is exactly what I want but doesn't seem to happen...</p>
","<python><django><google-app-engine>"
"35978","2","35948","<p>I'm assuming that the part the doesn't work is <code>{{ user.item }}</code>.</p>

<p>Django will be trying a dictionary lookup, but using the string <code>""item""</code> and not the value of the <code>item</code> loop variable.  Django did the same thing when it resolved <code>{{ user.name  }}</code> to the <code>name</code> attribute of the <code>user</code> object, rather than looking for a variable called <code>name</code>.</p>

<p>I think you will need to do some preprocessing of the data in your view before you render it in your template.</p>
",""
"35988","1","","<p>Is there a way to conveniently define a C-like structure in Python? I'm tired of writing stuff like:</p>

<pre><code>class MyStruct():
    def __init__(self, field1, field2, field3):
        self.field1 = field1
        self.field2 = field2
        self.field3 = field3
</code></pre>
","<python><struct>"
"35990","2","35988","<p>How about a dictionary?</p>

<p>Something like this:</p>

<pre><code>myStruct = {'field1': 'some val', 'field2': 'some val'}
</code></pre>

<p>Then you can use this to manipulate values:</p>

<pre><code>print myStruct['field1']
myStruct['field2'] = 'some other values'
</code></pre>

<p>And the values don't have to be strings.  They can be pretty much any other object.</p>
",""
"35993","2","35988","<p>You can use a tuple for a lot of things where you would use a struct in C (something like x,y coordinates or RGB colors for example).</p>

<p>For everything else you can use dictionary, or a utility class like <a href=""http://code.activestate.com/recipes/52308/"" rel=""noreferrer"">this one</a>:</p>

<pre><code>&gt;&gt;&gt; class Bunch:
...     def __init__(self, **kwds):
...         self.__dict__.update(kwds)
...
&gt;&gt;&gt; mystruct = Bunch(field1=value1, field2=value2)
</code></pre>

<p>I think the ""definitive"" discussion is <a href=""http://books.google.com/books?id=Q0s6Vgb98CQC&amp;lpg=PT212&amp;dq=Python%20Cookbook%20%22Collecting%20a%20Bunch%20of%20Named%20Items%22&amp;hl=en&amp;pg=PT213#v=onepage&amp;q&amp;f=false"" rel=""noreferrer"">here</a>, in the published version of the Python Cookbook.</p>
",""
"36033","2","35988","<p>Use a <a href=""https://docs.python.org/2/library/collections.html#collections.namedtuple"" rel=""noreferrer"">named tuple</a>, which was added to the <a href=""http://docs.python.org/library/collections.html"" rel=""noreferrer"">collections module</a> in the standard library in Python 2.6. It's also possible to use Raymond Hettinger's <a href=""http://code.activestate.com/recipes/500261/"" rel=""noreferrer"">named tuple</a> recipe if you need to support Python 2.4.</p>

<p>It's nice for your basic example, but also covers a bunch of edge cases you might run into later as well. Your fragment above would be written as:</p>

<pre><code>from collections import namedtuple
MyStruct = namedtuple(""MyStruct"", ""field1 field2 field3"")
</code></pre>

<p>The newly created type can be used like this:</p>

<pre><code>m = MyStruct(""foo"", ""bar"", ""baz"")
</code></pre>

<p>You can also use named arguments:</p>

<pre><code>m = MyStruct(field1=""foo"", field2=""bar"", field3=""baz"")
</code></pre>
",""
"36034","2","35988","<blockquote>
  <p>dF: that's pretty cool... I didn't
  know that I could access the fields in
  a class using dict.</p>
  
  <p>Mark: the situations that I wish I had
  this are precisely when I want a tuple
  but nothing as ""heavy"" as a
  dictionary.</p>
</blockquote>

<p>You can access the fields of a class using a dictionary because the fields of a class, its methods and all its properties are stored internally using dicts (at least in CPython).</p>

<p>...Which leads us to your second comment. Believing that Python dicts are ""heavy"" is an extremely non-pythonistic concept. And reading such comments kills my Python Zen. That's not good.</p>

<p>You see, when you declare a class you are actually creating a pretty complex wrapper around a dictionary - so, if anything, you are adding more overhead than by using a simple dictionary. An overhead which, by the way, is meaningless in any case. If you are working on performance critical applications, use C or something.</p>
",""
"36061","2","35988","<p>You can also pass the init parameters to the instance variables by position</p>

<pre><code># Abstract struct class       
class Struct:
    def __init__ (self, *argv, **argd):
        if len(argd):
            # Update by dictionary
            self.__dict__.update (argd)
        else:
            # Update by position
            attrs = filter (lambda x: x[0:2] != ""__"", dir(self))
            for n in range(len(argv)):
                setattr(self, attrs[n], argv[n])

# Specific class
class Point3dStruct (Struct):
    x = 0
    y = 0
    z = 0

pt1 = Point3dStruct()
pt1.x = 10

print pt1.x
print ""-""*10

pt2 = Point3dStruct(5, 6)

print pt2.x, pt2.y
print ""-""*10

pt3 = Point3dStruct (x=1, y=2, z=3)
print pt3.x, pt3.y, pt3.z
print ""-""*10
</code></pre>
",""
"36139","1","","<p>What is the best way of creating an alphabetically sorted list in Python?</p>
","<python><string><sorting>"
"36143","2","36139","<pre><code>list.sort()
</code></pre>

<p>It really is that simple :)</p>
",""
"36156","2","36139","<p>Basic answer:</p>

<pre><code>mylist = [""b"", ""C"", ""A""]
mylist.sort()
</code></pre>

<p>This modifies your original list (i.e. sorts in-place). To get a sorted copy of the list, without changing the original, use the <a href=""http://docs.python.org/library/functions.html#sorted"" rel=""noreferrer""><code>sorted()</code></a> function:</p>

<pre><code>for x in sorted(mylist):
    print x
</code></pre>

<p>However, the examples above are a bit naive, because they don't take locale into account, and perform a case-sensitive sorting. You can take advantage of the optional parameter <code>key</code> to specify custom sorting order (the alternative, using <code>cmp</code>, is a deprecated solution, as it has to be evaluated multiple times - <code>key</code> is only computed once per element).</p>

<p>So, to sort according to the current locale, taking language-specific rules into account (<a href=""http://docs.python.org/library/functools.html#functools.cmp_to_key"" rel=""noreferrer""><code>cmp_to_key</code></a> is a helper function from functools):</p>

<pre><code>sorted(mylist, key=cmp_to_key(locale.strcoll))
</code></pre>

<p>And finally, if you need, you can specify a <a href=""http://docs.python.org/library/locale.html"" rel=""noreferrer"">custom locale</a> for sorting:</p>

<pre><code>import locale
locale.setlocale(locale.LC_ALL, 'en_US.UTF-8') # vary depending on your lang/locale
assert sorted((u'Ab', u'ad', u'aa'),
  key=cmp_to_key(locale.strcoll)) == [u'aa', u'Ab', u'ad']
</code></pre>

<p>Last note: you will see examples of case-insensitive sorting which use the <code>lower()</code> method - those are incorrect, because they work only for the ASCII subset of characters. Those two are wrong for any non-English data:</p>

<pre><code># this is incorrect!
mylist.sort(key=lambda x: x.lower())
# alternative notation, a bit faster, but still wrong
mylist.sort(key=str.lower)
</code></pre>
",""
"36220","2","36139","<blockquote>
  <p>But how does this handle language specific sorting rules? Does it take locale into account?</p>
</blockquote>

<p>No, <code>list.sort()</code> is a generic sorting function. If you want to sort according to the Unicode rules, you'll have to define a custom sort key function. You can try using the <a href=""http://jtauber.com/blog/2006/01/27/python_unicode_collation_algorithm/"" rel=""noreferrer"">pyuca</a> module, but I don't know how complete it is.</p>
",""
"36238","2","35753","<p>One way to judge what python is used for is to look at what products use python at the moment.  This <a href=""http://en.wikipedia.org/wiki/Python_software"" rel=""nofollow noreferrer"">wikipedia page</a> has a long list including various web frameworks, content management systems, version control systems, desktop apps and IDEs.</p>

<p>As it says <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29#Usage"" rel=""nofollow noreferrer"">here</a> - ""Some of the largest projects that use Python are the Zope application server, YouTube, and the original BitTorrent client. Large organizations that make use of Python include Google, Yahoo!, CERN and NASA. ITA uses Python for some of its components.""</p>

<p>So in short, yes, it is ""proper for production use in the development of stand-alone complex applications"".  So are many other languages, with various pros and cons.  Which is the best language for your particular use case is too subjective to answer, so I won't try, but often the answer will be ""the one your developers know best"".</p>
",""
"36324","1","","<p>I'm trying to use svnmerge.py to merge some files.  Under the hood it uses python, and when I use it I get an error - ""The system cannot find the file specified"".  Colleagues at work are running the same version of svnmerge.py, and of python (2.5.2, specifically r252:60911) without an issue.</p>

<p>I found <a href=""http://www.nabble.com/problem-under-some-windows-desktop-td15868057.html"" rel=""nofollow noreferrer"">this link</a>, which describes my problem.  Trying what was outlined there, I confirmed Python could find svn (it's in my path):</p>

<pre>
P:\>python 
Python 2.5.2 (r252:60911, Feb 21 2008, 13:11:45) [MSC v.1310 32 bit (Intel)] on win32 
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. 
>>> import os 
>>> i,k = os.popen4(""svn --version"") 
>>> i.close() 
>>> k.readline() 
'svn, version 1.4.2 (r22196)\n' 
</pre>

<p>Looking at the svnmerge.py code, though, I noticed for python versions 2.4 and higher it was following a different execution path.  Rather than invoking
os.popen4() it uses subprocess.Popen().  Trying that reproduces the error:</p>

<pre>
C:\>python
Python 2.5.2 (r252:60911, Feb 21 2008, 13:11:45) [MSC v.1310 32 bit (Intel)] on win32 Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
>>> import subprocess
>>> p = subprocess.Popen(""svn --version"", stdout=subprocess.PIPE, 
>>> close_fds=False, stderr=subprocess.PIPE)
Traceback (most recent call last):
  File """", line 1, in 
  File ""C:\Python25\lib\subprocess.py"", line 594, in __init__
    errread, errwrite)
  File ""C:\Python25\lib\subprocess.py"", line 816, in _execute_child
    startupinfo)
WindowsError: [Error 2] The system cannot find the file specified
>>>
</pre>

<p>For now, I've commented out the 2.4-and-higher specific code, but I'd like to find a proper solution.</p>

<p>If it's not obvious, I'm a complete python newbie, but google hasn't helped.  Any pointers?</p>
","<python><svn-merge>"
"36327","2","36324","<p>It's a bug, see the <a href=""http://docs.python.org/lib/node528.html"" rel=""noreferrer"">documentation of <code>subprocess.Popen</code></a>. There either needs to be a <code>""shell=True</code>"" option, or the first argument needs to be a sequence <code>['svn', '--version']</code>. As it is now, <code>Popen</code> is looking for an executable named, literally, ""svn --version"" which it doesn't find.</p>

<p>I don't know why it would work for your colleagues though, if they are running the same OS and version of Python... FWIW it gives me the same error message on a mac, and either of the two ways I gave fixes it.</p>
",""
"36395","2","36139","<p>It is also worth noting the <code>sorted()</code> function:</p>

<pre><code>for x in sorted(list):
    print x
</code></pre>

<p>This returns a new, sorted version of a list without changing the original list.</p>
",""
"36647","1","","<p>Does Python have a unit testing framework compatible with the standard xUnit style of test framework? If so, what is it, where is it, and is it any good?</p>
","<python><unit-testing>"
"36648","2","36647","<p>Python has several testing frameworks, including <code>unittest</code>, <code>doctest</code>, and <code>nose</code>. The most xUnit-like is <code>unittest</code>, which is documented on Python.org.</p>

<ul>
<li><a href=""https://docs.python.org/3/library/unittest.html"" rel=""nofollow noreferrer""><code>unittest</code> documentation</a></li>
<li><a href=""https://docs.python.org/3/library/doctest.html"" rel=""nofollow noreferrer""><code>doctest</code> documentation</a></li>
</ul>
",""
"36651","2","36647","<p>There's <a href=""http://testoob.sourceforge.net/"" rel=""nofollow noreferrer"">testoob</a> which is pretty complete suite of test.Also xUnit-ie, and has a nice reporting option</p>
",""
"36653","2","36647","<p>There is also <a href=""http://pyunit.sourceforge.net/"" rel=""nofollow noreferrer"">PyUnit</a> which might be what you're looking for.</p>
",""
"36654","2","36647","<p>@Greg: PyUnit is included in the standard library as <code>unittest</code></p>
",""
"36761","2","35922","<p>I use pyGtk. I think wxPython is nice but it's too limited, and PyQt is, well, Qt. =)</p>
",""
"36800","2","36647","<p>Consider <a href=""http://codespeak.net/py/dist/test.html"" rel=""nofollow noreferrer"">py.test</a>. Not exactly analogous to NUnit, but very good, with nice features including test auto-discovery and a ""Watch the tests and code - when something changes rerun the tests that failed last time. As soon as all the tests pass, switch to running all the tests whenever somethings changes."" option.</p>
",""
"36806","1","","<p>I have been sold on mod_wsgi and apache rather than mod_python.
I have all the parts installed (django, apache, mod_wsgi) but have run into a problem deploying.</p>

<p>I am on osx 10.5 with apache 2.2 and django 1.0b2, mod_wsgi-2.3</p>

<p>My application is called tred.</p>

<p>Here are the relevant files:
httpd-vhosts (included in httpd-conf)</p>

<pre>
NameVirtualHost tred:80



  ServerName tred

  Alias /admin_media /usr/lib/python2.5/site-packages/django/contrib/admin/media

  
    Order allow,deny
    Allow from all
  

  Alias /media /Users/dmg/Sites/tred/media

  
    Order allow,deny
    Allow from all
  

  Alias / /Users/dmg/Sites/tred/

  
        Order allow,deny
        Allow from all
    

  WSGIScriptAlias / /Users/dmg/Sites/tred/mod_wsgi-handler.wsgi

  WSGIDaemonProcess tred user=dmg group=staff processes=1 threads=10
  WSGIProcessGroup tred


</pre>

<p>mod_wsgi-handle.wsgi</p>

<pre>
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)) + '/..')
os.environ['DJANGO_SETTINGS_MODULE'] = 'tred.settings'

import django.core.handlers.wsgi

application = django.core.handlers.wsgi.WSGIHandler()
</pre>

<p>When I go to <a href=""http://tred"" rel=""noreferrer"">http://tred</a> I get a directory listing rather than the rendered website. I think I have followed the tutorials correctly but it is obviously not right. What can I do to make this work?</p>
","<python><django><apache><mod-wsgi>"
"36812","1","","<p>Currently, I am writing up a bit of a product-based CMS as my first project.</p>

<p>Here is my question. How can I add additional data (products) to my Product model?</p>

<p>I have added '/admin/products/add' to my urls.py, but I don't really know where to go from there. How would i build both my view and my template? Please keep in mind that I don't really know all that much Python, and i am very new to Django</p>

<p>How can I do this all without using this existing django admin interface.</p>
","<python><django>"
"36818","2","36812","<p>Follow the Django tutorial for setting up the ""admin"" part of an application. This will allow you to modify your database.</p>

<p><a href=""https://docs.djangoproject.com/en/dev/intro/tutorial02/"" rel=""nofollow noreferrer"">Django Admin Setup</a></p>

<p>Alternatively, you can just connect directly to the database using the standard tools for whatever database type you are using.</p>
",""
"36827","2","36812","<p>This topic is covered in <a href=""https://code.djangoproject.com/wiki/Tutorials"" rel=""nofollow noreferrer"">Django tutorials</a>.</p>
",""
"36835","2","36647","<p>Never used xUnit, so I can't tell you if the frameworks are good/bad comparativly, but <a href=""http://github.com/dbr/tvdb_api/tree/master/tvdb_api.py#L518-575"" rel=""nofollow noreferrer"">here</a> is a script I wrote which uses the unittest framework (to check the API works as it should), and the doctest (to check the examples I've given work)</p>

<p>My only problem is checking something raises an exception is slightly convoluted (you have to pass it a function/lambda that raises the exception, rather than just the command itself, like the rest of the framework).. Other than that, it does what it should, reliably, and it has been included in the default python distribution for quite some time.</p>
",""
"36901","1","","<p>In the following method definitions, what does the <code>*</code> and <code>**</code> do for <code>param2</code>?</p>

<pre><code>def foo(param1, *param2):
def bar(param1, **param2):
</code></pre>
","<python><syntax><parameter-passing><identifier><kwargs>"
"36902","2","36901","<p>From the Python documentation:</p>

<blockquote>
  <p>If there are more positional arguments than there are formal parameter slots, a TypeError exception is raised, unless a formal parameter using the syntax ""*identifier"" is present; in this case, that formal parameter receives a tuple containing the excess positional arguments (or an empty tuple if there were no excess positional arguments). </p>
  
  <p>If any keyword argument does not correspond to a formal parameter name, a TypeError exception is raised, unless a formal parameter using the syntax ""**identifier"" is present; in this case, that formal parameter receives a dictionary containing the excess keyword arguments (using the keywords as keys and the argument values as corresponding values), or a (new) empty dictionary if there were no excess keyword arguments. </p>
</blockquote>
",""
"36908","2","36901","<p>The <code>*args</code> and <code>**kwargs</code> is a common idiom to allow arbitrary number of arguments to functions as described in the section <a href=""http://docs.python.org/dev/tutorial/controlflow.html#more-on-defining-functions"" rel=""noreferrer"">more on defining functions</a> in the Python documentation.</p>

<p>The <code>*args</code> will give you all function parameters <a href=""https://docs.python.org/dev/tutorial/controlflow.html#arbitrary-argument-lists"" rel=""noreferrer"">as a tuple</a>:</p>

<pre><code>In [1]: def foo(*args):
   ...:     for a in args:
   ...:         print a
   ...:         
   ...:         

In [2]: foo(1)
1


In [4]: foo(1,2,3)
1
2
3
</code></pre>

<p>The <code>**kwargs</code> will give you all 
<strong>keyword arguments</strong> except for those corresponding to a formal parameter as a dictionary.</p>

<pre><code>In [5]: def bar(**kwargs):
   ...:     for a in kwargs:
   ...:         print a, kwargs[a]
   ...:         
   ...:         

In [6]: bar(name='one', age=27)
age 27
name one
</code></pre>

<p>Both idioms can be mixed with normal arguments to allow a set of fixed and some variable arguments:</p>

<pre><code>def foo(kind, *args, **kwargs):
   pass
</code></pre>

<p>Another usage of the <code>*l</code> idiom is to <strong>unpack argument lists</strong> when calling a function.</p>

<pre><code>In [9]: def foo(bar, lee):
   ...:     print bar, lee
   ...:     
   ...:     

In [10]: l = [1,2]

In [11]: foo(*l)
1 2
</code></pre>

<p>In Python 3 it is possible to use <code>*l</code> on the left side of an assignment (<a href=""http://www.python.org/dev/peps/pep-3132/"" rel=""noreferrer"">Extended Iterable Unpacking</a>), though it gives a list instead of a tuple in this context:</p>

<pre><code>first, *rest = [1,2,3,4]
first, *l, last = [1,2,3,4]
</code></pre>

<p>Also Python 3 adds new semantic (refer <a href=""https://www.python.org/dev/peps/pep-3102/"" rel=""noreferrer"">PEP 3102</a>):</p>

<pre><code>def func(arg1, arg2, arg3, *, kwarg1, kwarg2):
    pass
</code></pre>

<p>Such function accepts only 3 positional arguments, and everything after <code>*</code> can only be passed as keyword arguments.</p>
",""
"36911","2","36901","<p>The single * means that there can be any number of extra positional arguments. <code>foo()</code> can be invoked like <code>foo(1,2,3,4,5)</code>. In the body of foo() param2 is a sequence containing 2-5.</p>

<p>The double ** means there can be any number of extra named parameters. <code>bar()</code> can be invoked like <code>bar(1, a=2, b=3)</code>. In the body of bar() param2 is a dictionary containing {'a':2, 'b':3 }</p>

<p>With the following code:</p>

<pre><code>def foo(param1, *param2):
    print param1
    print param2

def bar(param1, **param2):
    print param1
    print param2

foo(1,2,3,4,5)
bar(1,a=2,b=3)
</code></pre>

<p>the output is</p>

<pre><code>1
(2, 3, 4, 5)
1
{'a': 2, 'b': 3}
</code></pre>
",""
"36926","2","36901","<p>It's also worth noting that you can use <code>*</code> and <code>**</code> when calling functions as well. This is a shortcut that allows you to pass multiple arguments to a function directly using either a list/tuple or a dictionary. For example, if you have the following function:</p>

<pre><code>def foo(x,y,z):
    print(""x="" + str(x))
    print(""y="" + str(y))
    print(""z="" + str(z))
</code></pre>

<p>You can do things like:</p>

<pre><code>&gt;&gt;&gt; mylist = [1,2,3]
&gt;&gt;&gt; foo(*mylist)
x=1
y=2
z=3

&gt;&gt;&gt; mydict = {'x':1,'y':2,'z':3}
&gt;&gt;&gt; foo(**mydict)
x=1
y=2
z=3

&gt;&gt;&gt; mytuple = (1, 2, 3)
&gt;&gt;&gt; foo(*mytuple)
x=1
y=2
z=3
</code></pre>

<p>Note: The keys in <code>mydict</code> have to be named exactly like the parameters of function <code>foo</code>. Otherwise it will throw a <code>TypeError</code>.</p>
",""
"36932","1","","<p>I'm mainly a C# developer, but I'm currently working on a project in Python.</p>

<p>How can I represent the equivalent of an Enum in Python?  </p>
","<python><python-3.x><enums>"
"36935","2","36812","<p>You will want to wire your URL to the Django <a href=""https://docs.djangoproject.com/en/1.4/ref/generic-views/#django-views-generic-create-update-create-object"" rel=""nofollow noreferrer"">create_object generic view</a>, and pass it either ""model"" (the model you want to create) or ""form_class"" (a customized <a href=""https://docs.djangoproject.com/en/1.1/topics/forms/modelforms/#topics-forms-modelforms"" rel=""nofollow noreferrer"">ModelForm</a> class).  There are a number of <a href=""https://docs.djangoproject.com/en/1.4/ref/generic-views/#django-views-generic-create-update-create-object"" rel=""nofollow noreferrer"">other arguments</a> you can also pass to override default behaviors.</p>

<p>Sample URLconf for the simplest case:</p>

<pre><code>from django.conf.urls.defaults import *
from django.views.generic.create_update import create_object

from my_products_app.models import Product

urlpatterns = patterns('',
    url(r'^admin/products/add/$', create_object, {'model': Product}))
</code></pre>

<p>Your template will get the context variable ""form"", which you just need to wrap in a &lt;form> tag and add a submit button.  The simplest working template (by default should go in ""my_products_app/product_form.html""):</p>

<pre><code>&lt;form action=""."" method=""POST""&gt;
  {{ form }}
  &lt;input type=""submit"" name=""submit"" value=""add""&gt;
&lt;/form&gt;
</code></pre>

<p>Note that your Product model must have a get_absolute_url method, or else you must pass in the post_save_redirect parameter to the view.  Otherwise it won't know where to redirect to after save.</p>
",""
"36937","2","36932","<p>Before PEP 435, Python didn't have an equivalent but you could implement your own.</p>

<p>Myself, I like keeping it simple (I've seen some horribly complex examples on the net), something like this ...</p>

<pre><code>class Animal:
    DOG = 1
    CAT = 2

x = Animal.DOG
</code></pre>

<hr>

<p>In Python 3.4 (<a href=""http://www.python.org/dev/peps/pep-0435/"" rel=""noreferrer"">PEP 435</a>), you can make Enum the base class.  This gets you a little bit of extra functionality, described in the PEP.  For example, enum values are distinct from integers.</p>

<pre><code>class Animal(Enum):
    DOG = 1
    CAT = 2

print(Animal.DOG)
&lt;Animal.DOG: 1&gt;
</code></pre>

<hr>

<p>If you don't want to type the values, use the following shortcut:</p>

<pre><code>class Animal(Enum):
    DOG, CAT = range(2)
</code></pre>
",""
"36940","2","36932","<p>Hmmm... I suppose the closest thing to an enum would be a dictionary, defined either like this:</p>

<pre><code>months = {
    'January': 1,
    'February': 2,
    ...
}
</code></pre>

<p>or</p>

<pre><code>months = dict(
    January=1,
    February=2,
    ...
)
</code></pre>

<p>Then, you can use the symbolic name for the constants like this:</p>

<pre><code>mymonth = months['January']
</code></pre>

<p>There are other options, like a list of tuples, or a tuple of tuples, but the dictionary is the only one that provides you with a ""symbolic"" (constant string) way to access the 
value.</p>

<p>Edit: I like Alexandru's answer too!</p>
",""
"36953","1","","<p>Can people point me to resources on lexing, parsing and tokenising with Python?</p>

<p>I'm doing a little hacking on an open source project (<a href=""http://www.hotwire-shell.org/"" rel=""noreferrer"">hotwire</a>) and wanted to do a few changes to the code that <a href=""http://code.google.com/p/hotwire-shell/source/browse/trunk/hotwire/externals/shlex.py"" rel=""noreferrer"">lexes</a>, <a href=""http://code.google.com/p/hotwire-shell/source/browse/trunk/hotwire/command.py"" rel=""noreferrer"">parses and tokenises</a> the commands entered into it.  As it is real working code it is fairly complex and a bit hard to work out.</p>

<p>I haven't worked on code to lex/parse/tokenise before, so I was thinking one approach would be to work through a tutorial or two on this aspect.  I would hope to learn enough to navigate around the code I actually want to alter.  Is there anything suitable out there?  (Ideally it could be done in an afternoon without having to buy and read the dragon book first ...)</p>

<p><strong>Edit:</strong> (7 Oct 2008) None of the below answers quite give what I want.  With them I could generate parsers from scratch, but I want to learn how to write my own basic parser from scratch, not using lex and yacc or similar tools.  Having done that I can then understand the existing code better.  </p>

<p>So could someone point me to a tutorial where I can build a basic parser from scratch, using just python?</p>
","<python><parsing><resources><lex>"
"36978","2","36953","<p>Have a look at the standard module <a href=""http://docs.python.org/lib/module-shlex.html"" rel=""nofollow noreferrer"">shlex</a> and modify one copy of it to match the syntax you use for your shell, it is a good starting point</p>

<p>If you want all the power of a complete solution for lexing/parsing, <a href=""http://www.antlr.org/wiki/display/ANTLR3/Antlr3PythonTarget"" rel=""nofollow noreferrer"">ANTLR</a> can generate python too.</p>
",""
"37000","2","36932","<p>Python doesn't have a built-in equivalent to <code>enum</code>, and other answers have ideas for implementing your own (you may also be interested in the <a href=""http://code.activestate.com/recipes/67107/"" rel=""noreferrer"">over the top version</a> in the Python cookbook).</p>

<p>However, in situations where an <code>enum</code> would be called for in C, I usually end up <strong><em>just using simple strings</em></strong>: because of the way objects/attributes are implemented, (C)Python is optimized to work very fast with short strings anyway, so there wouldn't really be any performance benefit to using integers. To guard against typos / invalid values you can insert checks in selected places.</p>

<pre><code>ANIMALS = ['cat', 'dog', 'python']

def take_for_a_walk(animal):
    assert animal in ANIMALS
    ...
</code></pre>

<p>(One disadvantage compared to using a class is that you lose the benefit of autocomplete)</p>
",""
"37009","2","36806","<p>What happens if you remove the <code>Alias /</code> directive?</p>
",""
"37081","2","36932","<p>If you need the numeric values, here's the quickest way:</p>

<pre><code>dog, cat, rabbit = range(3)
</code></pre>

<p>In Python 3.x you can also add a starred placeholder at the end, which will soak up all the remaining values of the range in case you don't mind wasting memory and cannot count:</p>

<pre><code>dog, cat, rabbit, horse, *_ = range(100)
</code></pre>
",""
"37142","1","","<p>Even though <a href=""http://twistedmatrix.com/pipermail/twisted-python/2004-May/007896.html"" rel=""noreferrer"">Python</a> and <a href=""http://www.reddit.com/comments/6wmum/thread_safe_ruby_on_rails_in_22_release/"" rel=""noreferrer"">Ruby</a> have one kernel thread per interpreter thread, they have a global interpreter lock (GIL) that is used to protect potentially shared data structures, so this inhibits multi-processor execution. Even though the portions in those languajes that are written in C or C++ can be free-threaded, that's not possible with pure interpreted code unless you use multiple processes. What's the best way to achieve this? <a href=""http://blogs.codehaus.org/people/tirsen/archives/001041_ruby_on_rails_and_fastcgi_scaling_using_processes_instead_of_threads.html"" rel=""noreferrer"">Using FastCGI</a>? Creating a <a href=""http://blog.innerewut.de/files/images/stage_2.png"" rel=""noreferrer"">cluster or a farm</a> of virtualized servers? Using their Java equivalents, JRuby and Jython?</p>
","<python><ruby><multithreading><multicore>"
"37146","2","37142","<p>Use an interface that runs each response in a separate interpreter, such as <code>mod_wsgi</code> for Python. This lets multi-threading be used without encountering the GIL.</p>

<p>EDIT: Apparently, <code>mod_wsgi</code> no longer supports multiple interpreters per process because idiots couldn't figure out how to properly implement extension modules. It still supports running requests in separate processes FastCGI-style, though, so that's apparently the current accepted solution.</p>
",""
"37153","2","37142","<p>I'm not totally sure which problem you want so solve, but if you deploy your python/django application via an apache prefork MPM using mod_python apache will start several worker processes for handling different requests.</p>

<p>If one request needs so much resources, that you want to use multiple cores have a look at <a href=""http://pyprocessing.berlios.de/"" rel=""nofollow noreferrer"">pyprocessing</a>. But I don't think that would be wise.</p>
",""
"37190","2","35948","<p>shouldn't this:</p>

<pre><code>{{ user.item }}
</code></pre>

<p>be this?</p>

<pre><code>{{ item }}
</code></pre>

<p>there is no user object in the context within that loop....?</p>
",""
"37203","2","37142","<p>The 'standard' way to do this with rails is to run a ""pack"" of Mongrel instances (ie: 4 copies of the rails application) and then use apache or nginx or some other piece of software to sit in front of them and act as a load balancer. </p>

<p>This is probably how it's done with other ruby frameworks such as merb etc, but I haven't used those personally.</p>

<p>The OS will take care of running each mongrel on it's own CPU.</p>

<p>If you install <a href=""http://www.modrails.com/"" rel=""nofollow noreferrer"">mod_rails aka phusion passenger</a> it will start and stop multiple copies of the rails process for you as well, so it will end up spreading the load across multiple CPUs/cores in a similar way.</p>
",""
"37218","2","36806","<blockquote>
  <p>It works. I have no idea why, but it does.</p>
</blockquote>

<p>For future reference:</p>

<p>It works because Apache processes alias directives in order, and uses the first match. It was always hitting <code>Alias /</code>, which will match anything, before <code>WSGIScriptAlias</code>.</p>

<p>From the <a href=""http://httpd.apache.org/docs/2.2/mod/mod_alias.html"" rel=""nofollow noreferrer""><code>mod_alias</code> documentation</a>:</p>

<blockquote>
  <p>First, all Redirects are processed before Aliases are processed, and therefore a request that matches a <code>Redirect</code> or <code>RedirectMatch</code> will never have Aliases applied. Second, the Aliases and Redirects are processed in the order they appear in the configuration files, with the first match taking precedence.</p>
</blockquote>
",""
"37245","2","36953","<p>I suggest <a href=""http://www.canonware.com/Parsing/"" rel=""nofollow noreferrer"">http://www.canonware.com/Parsing/</a>, since it is pure python and you don't need to learn a grammar, but it isn't widely used, and has comparatively little documentation. The heavyweight is ANTLR and PyParsing. ANTLR can generate java and C++ parsers too, and AST walkers but you will have to learn what amounts to a new language.</p>
",""
"37479","1","","<p>Below I have a very simple example of what I'm trying to do.  I want to be able to use HTMLDecorator with any other class.  Ignore the fact it's called decorator, it's just a name.</p>

<pre><code>import cgi

class ClassX(object):
  pass # ... with own __repr__

class ClassY(object):
  pass # ... with own __repr__

inst_x=ClassX()

inst_y=ClassY()

inst_z=[ i*i for i in range(25) ]

inst_b=True

class HTMLDecorator(object):
   def html(self): # an ""enhanced"" version of __repr__
       return cgi.escape(self.__repr__()).join((""&lt;H1&gt;"",""&lt;/H1&gt;""))

print HTMLDecorator(inst_x).html()
print HTMLDecorator(inst_y).html()
wrapped_z = HTMLDecorator(inst_z)
inst_z[0] += 70
wrapped_z[0] += 71
print wrapped_z.html()
print HTMLDecorator(inst_b).html()
</code></pre>

<p>Output:</p>

<pre>Traceback (most recent call last):
  File ""html.py"", line 21, in 
    print HTMLDecorator(inst_x).html()
TypeError: default __new__ takes no parameters</pre>

<p>Is what I'm trying to do possible?  If so, what am I doing wrong?</p>
","<python><oop><inheritance><object>"
"37486","1","","<p>Because regular expressions scare me, I'm trying to find a way to remove all HTML tags and resolve HTML entities from a string in Python.</p>
","<python><html>"
"37488","2","37479","<blockquote>
  <p>Is what I'm trying to do possible? If so, what am I doing wrong?</p>
</blockquote>

<p>It's certainly possible. What's wrong is that <code>HTMLDecorator.__init__()</code> doesn't accept parameters.</p>

<p>Here's a simple example:</p>

<pre><code>def decorator (func):
    def new_func ():
        return ""new_func %s"" % func ()
    return new_func

@decorator
def a ():
    return ""a""

def b ():
    return ""b""

print a() # new_func a
print decorator (b)() # new_func b
</code></pre>
",""
"37496","2","37486","<p>How about parsing the HTML data and extracting the data with the help of the parser ?</p>

<p>I'd try something like the author described in <a href=""http://diveintopython.net/html_processing/extracting_data.html"" rel=""nofollow noreferrer"">chapter 8.3 in the Dive Into Python book</a> </p>
",""
"37502","2","37486","<p>While I agree with Lucas that regular expressions are not all that scary, I still think that you should go with a specialized HTML parser. This is because the HTML standard is hairy enough (especially if you want to parse arbitrarily ""HTML"" pages taken off the Internet) that you would need to write a lot of code to handle the corner cases. It seems that <a href=""http://docs.python.org/lib/module-htmllib.html"" rel=""nofollow noreferrer"">python includes one out of the box</a>. </p>

<p>You should also check out the <a href=""http://utidylib.berlios.de/"" rel=""nofollow noreferrer"">python bindings for TidyLib</a> which can clean up broken HTML, making the success rate of any HTML parsing much higher.</p>
",""
"37504","2","37486","<p>You might need something more complicated than a regular expression. Web pages often have angle brackets that aren't part of a tag, like this:</p>

<pre><code> &lt;div&gt;5 &lt; 7&lt;/div&gt;
</code></pre>

<p>Stripping the tags with regex will return the string ""5 "" and treat</p>

<pre><code> &lt; 7&lt;/div&gt;
</code></pre>

<p>as a single tag and strip it out.</p>

<p>I suggest looking for already-written code that does this for you. I did a search and found this: <a href=""http://zesty.ca/python/scrape.html"" rel=""nofollow noreferrer"">http://zesty.ca/python/scrape.html</a> It also can resolve HTML entities.</p>
",""
"37506","2","37486","<p>Use <a href=""http://www.crummy.com/software/BeautifulSoup/"" rel=""noreferrer"">BeautifulSoup</a>! It's perfect for this, where you have incoming markup of dubious virtue and need to get something reasonable out of it. Just pass in the original text, extract all the string tags, and join them.</p>
",""
"37512","2","37486","<p>Use <a href=""http://lxml.de/"" rel=""nofollow noreferrer"">lxml</a> which is the best xml/html library for python.</p>

<pre><code>import lxml.html
t = lxml.html.fromstring(""..."")
t.text_content()
</code></pre>

<p>And if you just want to sanitize the html look at the lxml.html.clean <a href=""http://lxml.de/lxmlhtml.html#cleaning-up-html"" rel=""nofollow noreferrer"">module</a></p>
",""
"37513","2","37479","<p>@John (37448):</p>

<p>Sorry, I might have misled you with the name (bad choice).  I'm not really looking for a decorator function, or anything to do with decorators at all.  What I'm after is for the html(self) def to use ClassX or ClassY's <code>__repr__</code>.  I want this to work without modifying ClassX or ClassY.</p>
",""
"37526","2","37479","<p>Ah, in that case, perhaps code like this will be useful? It doesn't really have anything to do with decorators, but demonstrates how to pass arguments to a class's initialization function and to retrieve those arguments for later.</p>

<pre><code>import cgi

class ClassX(object):
    def __repr__ (self):
        return ""&lt;class X&gt;""

class HTMLDecorator(object):
    def __init__ (self, wrapped):
        self.__wrapped = wrapped

    def html (self):
        sep = cgi.escape (repr (self.__wrapped))
        return sep.join ((""&lt;H1&gt;"", ""&lt;/H1&gt;""))

inst_x=ClassX()
inst_b=True

print HTMLDecorator(inst_x).html()
print HTMLDecorator(inst_b).html()
</code></pre>
",""
"37535","1","","<p>I've got a bunch of FoxPro (VFP9) DBF files on my Ubuntu system, is there a library to open these in Python?  I only need to read them, and would preferably have access to the memo fields too.</p>

<p><strong>Update</strong>: Thanks @cnu, I used Yusdi Santoso's <a href=""http://www.physics.ox.ac.uk/users/santoso/dbf.py.src"" rel=""noreferrer""><code>dbf.py</code></a> and it works nicely.  One gotcha: The memo file name extension must be lower case, i.e. <code>.fpt</code>, not <code>.FPT</code> which was how the filename came over from Windows.</p>
","<python><foxpro><dbf><visual-foxpro>"
"37544","2","37479","<p>@John (37479):</p>

<p>Very close, but then I lose everything from ClassX.  Below is something a collegue gave me that does do the trick, but it's hideous.  There has to be a better way.</p>

<pre><code>import cgi
from math import sqrt

class ClassX(object): 
  def __repr__(self): 
    return ""Best Guess""

class ClassY(object):
  pass # ... with own __repr__

inst_x=ClassX()

inst_y=ClassY()

inst_z=[ i*i for i in range(25) ]

inst_b=True

avoid=""__class__ __init__ __dict__ __weakref__""

class HTMLDecorator(object):
    def __init__(self,master):
        self.master = master
        for attr in dir(self.master):
            if ( not attr.startswith(""__"") or 
                attr not in avoid.split() and ""attr"" not in attr):
                self.__setattr__(attr, self.master.__getattribute__(attr))

    def html(self): # an ""enhanced"" version of __repr__
        return cgi.escape(self.__repr__()).join((""&lt;H1&gt;"",""&lt;/H1&gt;""))

    def length(self):
        return sqrt(sum(self.__iter__()))

print HTMLDecorator(inst_x).html()
print HTMLDecorator(inst_y).html()
wrapped_z = HTMLDecorator(inst_z)
print wrapped_z.length()
inst_z[0] += 70
#wrapped_z[0] += 71
wrapped_z.__setitem__(0,wrapped_z.__getitem__(0)+ 71)
print wrapped_z.html()
print HTMLDecorator(inst_b).html()
</code></pre>

<p>Output:</p>

<pre>&lt;H1&gt;Best Guess&lt;/H1&gt;
&lt;H1&gt;&lt;__main__.ClassY object at 0x891df0c&gt;&lt;/H1&gt;
70.0
&lt;H1&gt;[141, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400, 441, 484, 529, 576]&lt;/H1&gt;
&lt;H1&gt;True&lt;/H1&gt;</pre>
",""
"37553","2","37535","<p>You can try this <a href=""http://code.activestate.com/recipes/362715/"" rel=""nofollow noreferrer"">recipe on Active State</a>. </p>

<p>There is also a <a href=""http://code.google.com/p/lino/source/browse/lino/utils/dbfreader.py"" rel=""nofollow noreferrer"">DBFReader module</a> which you can try.</p>

<p>For support for <a href=""http://www.physics.ox.ac.uk/users/santoso/dbf.py.src"" rel=""nofollow noreferrer"">memo fields</a>.</p>
",""
"37571","2","37479","<blockquote>
  <p>Very close, but then I lose everything from ClassX. Below is something a collegue gave me that does do the trick, but it's hideous. There has to be a better way.</p>
</blockquote>

<p>Looks like you're trying to set up some sort of proxy object scheme. That's doable, and there are better solutions than your colleague's, but first consider whether it would be easier to just patch in some extra methods. This won't work for built-in classes like <code>bool</code>, but it will for your user-defined classes:</p>

<pre><code>def HTMLDecorator (obj):
    def html ():
        sep = cgi.escape (repr (obj))
        return sep.join ((""&lt;H1&gt;"", ""&lt;/H1&gt;""))
    obj.html = html
    return obj
</code></pre>

<p>And here is the proxy version:</p>

<pre><code>class HTMLDecorator(object):
    def __init__ (self, wrapped):
        self.__wrapped = wrapped

    def html (self):
        sep = cgi.escape (repr (self.__wrapped))
        return sep.join ((""&lt;H1&gt;"", ""&lt;/H1&gt;""))

    def __getattr__ (self, name):
        return getattr (self.__wrapped, name)

    def __setattr__ (self, name, value):
        if not name.startswith ('_HTMLDecorator__'):
            setattr (self.__wrapped, name, value)
            return
        super (HTMLDecorator, self).__setattr__ (name, value)

    def __delattr__ (self, name):
        delattr (self.__wraped, name)
</code></pre>
",""
"37604","2","37486","<p>Regular expressions are not scary, but writing your own regexes to strip HTML is a sure path to madness (and it won't work, either).  Follow the path of wisdom, and use one of the many good HTML-parsing libraries.</p>

<p>Lucas' example is also broken because ""sub"" is not a method of a Python string.  You'd have to ""import re"", then call re.sub(pattern, repl, string).  But that's neither here nor there, as the correct answer to your question does not involve writing any regexes.</p>
",""
"37619","2","37479","<p>Both of John's solutions would work.  Another option that allows HTMLDecorator to remain very simple and clean is to monkey-patch it in as a base class.  This also works only for user-defined classes, not builtin types:</p>

<pre><code>import cgi

class ClassX(object):
    pass # ... with own __repr__

class ClassY(object):
    pass # ... with own __repr__

inst_x=ClassX()
inst_y=ClassY()

class HTMLDecorator:
    def html(self): # an ""enhanced"" version of __repr__
        return cgi.escape(self.__repr__()).join((""&lt;H1&gt;"",""&lt;/H1&gt;""))

ClassX.__bases__ += (HTMLDecorator,)
ClassY.__bases__ += (HTMLDecorator,)

print inst_x.html()
print inst_y.html()
</code></pre>

<p>Be warned, though -- monkey-patching like this comes with a high price in readability and maintainability of your code.  When you go back to this code a year later, it can become very difficult to figure out how your ClassX got that html() method, especially if ClassX is defined in some other library.</p>
",""
"37620","2","36647","<p>I recommend <a href=""https://nose.readthedocs.org/en/latest/"" rel=""nofollow noreferrer"">nose</a>.</p>

<p>It is the most Pythonic of the unit test frameworks. The test runner runs both doctests and unittests, so you are free to use whatever style of test you like.</p>
",""
"37917","2","37535","<p>I prefer <a href=""http://sourceforge.net/projects/dbfpy/"" rel=""noreferrer"">dbfpy</a>. It supports both reading and writing of <code>.DBF</code> files and can cope with most variations of the format. It's the only implementation I have found that could both read and write the legacy DBF files of some older systems I have worked with.</p>
",""
"38056","1","","<p>The only <em>nice</em> way I've found is:</p>

<pre><code>import sys
import os

try:
        os.kill(int(sys.argv[1]), 0)
        print ""Running""
except:
        print ""Not running""
</code></pre>

<p>(<a href=""http://www.unix.com/unix-advanced-expert-users/79267-trick-bash-scripters-check-if-process-running.html"" rel=""noreferrer"">Source</a>)<br>
But is this reliable? Does it work with every process and every distribution?</p>
","<python><linux><unix><process>"
"38071","2","38056","<p>on linux, you can look in the directory /proc/$PID to get information about that process.  In fact, if the directory exists, the process is running.</p>
",""
"38092","2","36932","<p>The typesafe enum pattern which was used in Java pre-JDK 5 has a
number of advantages. Much like in Alexandru's answer, you create a
class and class level fields are the enum values; however, the enum
values are instances of the class rather than small integers. This has
the advantage that your enum values don't inadvertently compare equal
to small integers, you can control how they're printed, add arbitrary
methods if that's useful and make assertions using isinstance:</p>

<pre><code>class Animal:
   def __init__(self, name):
       self.name = name

   def __str__(self):
       return self.name

   def __repr__(self):
       return ""&lt;Animal: %s&gt;"" % self

Animal.DOG = Animal(""dog"")
Animal.CAT = Animal(""cat"")

&gt;&gt;&gt; x = Animal.DOG
&gt;&gt;&gt; x
&lt;Animal: dog&gt;
&gt;&gt;&gt; x == 1
False
</code></pre>

<hr>

<p>A recent <a href=""http://mail.python.org/pipermail/python-dev/2010-November/105873.html"" rel=""noreferrer"">thread on python-dev</a> pointed out there are a couple of enum libraries in the wild, including:</p>

<ul>
<li><a href=""http://packages.python.org/flufl.enum/docs/using.html"" rel=""noreferrer"">flufl.enum</a></li>
<li><a href=""http://pypi.python.org/pypi/lazr.enum"" rel=""noreferrer"">lazr.enum</a></li>
<li>... and the imaginatively named <a href=""http://pypi.python.org/pypi/enum/"" rel=""noreferrer"">enum</a></li>
</ul>
",""
"38196","2","38056","<p>It should work on any POSIX system (although looking at the <code>/proc</code> filesystem, as others have suggested, is easier if you know it's going to be there).</p>

<p>However: <code>os.kill</code> may also fail if you don't have permission to signal the process. You would need to do something like:</p>

<pre><code>import sys
import os
import errno

try:
    os.kill(int(sys.argv[1]), 0)
except OSError, err:
    if err.errno == errno.ESRCH:
        print ""Not running""
    elif err.errno == errno.EPERM:
        print ""No permission to signal this process!""
    else:
        print ""Unknown error""
else:
    print ""Running""
</code></pre>
",""
"38197","1","","<p>The primary class in the <code>subprocess</code> module is name <code>Popen</code>, and represents a subprocess. <code>Popen</code> sounds like someone was trying to force the name to follow some function naming format, rather than chosing a name that actually represents what the object is.  Does anyone know why it was chosen over something simple like, say, <code>Subprocess</code>?</p>
","<python><subprocess>"
"38202","2","38197","<p>I suppose the name was chosen because the functionality <code>subprocess</code> is replacing was formerly in the <code>os</code> module as the <code>os.popen</code> function. There could be even ways to automate migration between the two.</p>
",""
"38206","2","38197","<p><code>subprocess.Popen</code> replaces the group of <code>os.popenX</code> POSIX functions (which have a long history). I suppose that the name <code>Popen</code> makes it more likely for people used to the old functions to find and use the new ones.</p>

<p>The <a href=""http://www.python.org/dev/peps/pep-0324/"" rel=""noreferrer"">PEP for subprocess (PEP 324)</a> has a little bit of discussion on the name of the module but not of class <code>Popen</code>. The <a href=""http://www.python.org/dev/peps/"" rel=""noreferrer"">list of PEPs</a> (Python enhancement proposals) is in general an excellent place to start if you're looking for the rationale for features of Python.</p>
",""
"38222","2","38197","<p>Now, I'm not saying that this is the greatest name in the world, but here was the idea as I understand it.</p>

<p>Originally, the popen family was in the os module and was an implementation of the venerable posix popen.  The movement to the subprocess module would have been an opportune time to rename them, but I guess that keeping Popen makes it easier to find in the docs for those who have a long history with python or even to the venerable posix functions.</p>

<p>From it's earliest posix incarnation, <code>Popen</code> has always been meant to open a Process and allow you to read and write from it's stdio like a file. Thus the mnemonic for <code>Popen</code> is that it is short for <code>ProccesOpen</code> in an attempt to kind of, sorta, look like open.</p>
",""
"38230","2","38056","<p>Mark's answer is the way to go, after all, that's why the /proc file system is there. For something a little more copy/pasteable:</p>

<pre><code> &gt;&gt;&gt; import os.path
 &gt;&gt;&gt; os.path.exists(""/proc/0"")
 False
 &gt;&gt;&gt; os.path.exists(""/proc/12"")
 True
</code></pre>
",""
"38238","1","","<p>I'm teaching myself Python and my most recent lesson was that <a href=""http://dirtsimple.org/2004/12/python-is-not-java.html"" rel=""noreferrer"">Python is not Java</a>, and so I've just spent a while turning all my Class methods into functions.</p>

<p>I now realise that I don't need to use Class methods for what I would done with <code>static</code> methods in Java, but now I'm not sure when I would use them.  All the advice I can find about Python Class methods is along the lines of newbies like me should steer clear of them, and the standard documentation is at its most opaque when discussing them.</p>

<p>Does anyone have a good example of using a Class method in Python or at least can someone tell me when Class methods can be sensibly used?</p>
","<python><class-method>"
"38254","2","38238","<p>Alternative constructors are the classic example.</p>
",""
"38276","2","38238","<p>Class methods are for when you need to have methods that aren't specific to any particular instance, but still involve the class in some way. The most interesting thing about them is that they can be overridden by subclasses, something that's simply not possible in Java's static methods or Python's module-level functions.</p>

<p>If you have a class <code>MyClass</code>, and a module-level function that operates on MyClass (factory, dependency injection stub, etc), make it a <code>classmethod</code>. Then it'll be available to subclasses.</p>
",""
"38287","2","38238","<p>Honestly?  I've never found a use for staticmethod or classmethod.  I've yet to see an operation that can't be done using a global function or an instance method.</p>

<p>It would be different if python used private and protected members more like Java does.  In Java, I need a static method to be able to access an instance's private members to do stuff.  In Python, that's rarely necessary.</p>

<p>Usually, I see people using staticmethods and classmethods when all they really need to do is use python's module-level namespaces better.</p>
",""
"38303","2","38238","<p>Factory methods (alternative constructors) are indeed a classic example of class methods.</p>

<p>Basically, class methods are suitable anytime you would like to have a method which naturally fits into the namespace of the class, but is not associated with a particular instance of the class.</p>

<p>As an example, in the excellent <a href=""http://pypi.python.org/pypi/Unipath/0.2.1"" rel=""noreferrer"">unipath</a> module:</p>

<h2>Current directory</h2>

<ul>
<li><code>Path.cwd()</code>

<ul>
<li>Return the actual current directory; e.g., <code>Path(""/tmp/my_temp_dir"")</code>. This is a class method.</li>
</ul></li>
<li><code>.chdir()</code>

<ul>
<li>Make self the current directory.</li>
</ul></li>
</ul>

<p>As the current directory is process wide, the <code>cwd</code> method has no particular instance with which it should be associated.  However, changing the <code>cwd</code> to the directory of a given <code>Path</code> instance should indeed be an instance method.</p>

<p>Hmmm... as <code>Path.cwd()</code> does indeed return a <code>Path</code> instance, I guess it could be considered to be a factory method...</p>
",""
"38646","2","37486","<p>Looking at the amount of sense people are demonstrating in other answers here, I'd say that using a regex probably isn't the best idea for your situation. Go for something tried and tested, and treat my previous answer as a demonstration that regexes need not be <em>that</em> scary.</p>
",""
"38762","2","36932","<p>davidg recommends using dicts.  I'd go one step further and use sets:</p>

<pre><code>months = set('January', 'February', ..., 'December')
</code></pre>

<p>Now you can test whether a value matches one of the values in the set like this:</p>

<pre><code>if m in months:
</code></pre>

<p>like dF, though, I usually just use string constants in place of enums.</p>
",""
"39062","2","35634","<p>You could also use <code>__id__</code>. This gives you the objects internal ID number, which is always unique. To check if to objects are the same, try</p>

<blockquote>
  <p><code>a.__id__ = b.__id__</code></p>
</blockquote>

<p>This is how Ruby's standard library does it as far as I can tell (see <code>group_by</code> and others).</p>
",""
"39755","2","35805","<pre><code>class A:
    def _ _init_ _(self):
        self.name = 'A'
a = A()
</code></pre>

<p>Creates an attribute on the object instance a of type A and it can therefore be found in: <code>a.__dict__</code></p>

<pre><code>class B:
    name = 'B'
b = B()
</code></pre>

<p>Creates an attribute on the class B and the attribute can be found in <code>B.__dict__</code> alternatively if you have an instance b of type B you can see the class level attributes in <code>b.__class__.__dict__</code></p>
",""
"41822","2","14281","<p>Isn't it (at least theoretically) possible, to read in the ZIP's Huffman coding and then translate the regexp into the Huffman code? Might this be more efficient than first de-compressing the data, then running the regexp?</p>

<p>(Note: I know it wouldn't be quite that simple: you'd also have to deal with other aspects of the ZIP coding&mdash;file layout, block structures, back-references&mdash;but one imagines this could be fairly lightweight.)</p>

<p>EDIT: Also note that it's probably much more sensible to just use the <code>zipfile</code> solution.</p>
",""
"45533","2","38056","<p>// But is this reliable? Does it work with every process and every distribution?</p>

<p>Yes, it should work on any Linux distribution. Be aware that /proc is not easily available on Unix based systems, though (FreeBSD, OSX).</p>
",""
"50425","2","35948","<p>I found a ""nicer""/""better"" solution for getting variables inside
Its not the nicest way, but it works.</p>

<p>You install a custom filter into django which gets the key of your dict as a parameter</p>

<p>To make it work in google app-engine you need to add a file to your main directory,
I called mine <em>django_hack.py</em> which contains this little piece of code</p>

<pre><code>from google.appengine.ext import webapp

register = webapp.template.create_template_register()

def hash(h,key):
    if key in h:
        return h[key]
    else:
        return None

register.filter(hash)
</code></pre>

<p>Now that we have this file, all we need to do is tell the app-engine to use it...
we do that by adding this little line to your main file</p>

<pre><code>webapp.template.register_template_library('django_hack')
</code></pre>

<p>and in your template view add this template instead of the usual code</p>

<pre><code>{{ user|hash:item }}
</code></pre>

<p>And its should work perfectly =)</p>
",""
"59648","1","","<p>I am writing a program to simulate the actual polling data companies like Gallup or Rasmussen publish daily: www.gallup.com and www.rassmussenreports.com</p>

<p>I'm using a brute force method, where the computer generates some random daily polling data and then calculates three day averages to see if the average of the random data matches pollsters numbers. (Most companies poll numbers are three day averages)</p>

<p>Currently, it works well for one iteration, but my goal is to have it produce the most common simulation that matches the average polling data. I could then change the code of anywhere from 1 to 1000 iterations. </p>

<p>And this is my problem. At the end of the test I have an array in a single variable that looks something like this:</p>

<pre><code>[40.1, 39.4, 56.7, 60.0, 20.0 ..... 19.0]
</code></pre>

<p>The program currently produces one array for each correct simulation. <em>I can store each array in a single variable, but I then have to have a program that could generate 1 to 1000 variables depending on how many iterations I requested!?</em> </p>

<p>How do I avoid this? I know there is an intelligent way of doing this that doesn't require the program to generate variables to store arrays depending on how many simulations I want.</p>

<p>Code testing for McCain:</p>

<pre><code> test = [] 

while x &lt; 5: 

   test = round(100*random.random())

   mctest.append(test) 

   x = x +1 


mctestavg = (mctest[0] + mctest[1] + mctest[2])/3 

#mcavg is real data

if mctestavg == mcavg[2]: 
  mcwork = mctest 
</code></pre>

<p>How do I repeat without creating multiple mcwork vars?</p>
","<python><arrays>"
"59662","2","59648","<p>Are you talking about doing this?</p>

<pre><code>&gt;&gt;&gt; a = [ ['a', 'b'], ['c', 'd'] ]
&gt;&gt;&gt; a[1]
['c', 'd']
&gt;&gt;&gt; a[1][1]
'd'
</code></pre>
",""
"59663","2","59648","<p>Lists in python can contain any type of object -- If I understand the question correctly, will a <code>list</code> of <code>list</code>s do the job? Something like this (assuming you have a function <code>generate_poll_data()</code> which creates your data:</p>

<pre><code>data = []

for in xrange(num_iterations):
    data.append(generate_poll_data())
</code></pre>

<p>Then, <code>data[n]</code> will be the list of data from the <code>(n-1)</code>th run.</p>
",""
"59709","2","59648","<p>since you are thinking in <em>variables</em>, you might prefer a dictionary over a list of lists:</p>

<pre><code>data = {}
data['a'] = [generate_poll_data()]
data['b'] = [generate_poll_data()]
</code></pre>

<p>etc.</p>
",""
"59762","2","59648","<p>I would strongly consider using <a href=""http://numpy.scipy.org"" rel=""nofollow noreferrer"">NumPy</a> to do this. You get efficient N-dimensional arrays that you can quickly and easily process.</p>
",""
"59778","2","59648","<p>Would something like this work?</p>

<pre><code>from random import randint    

mcworks = []

for n in xrange(NUM_ITERATIONS):
    mctest = [randint(0, 100) for i in xrange(5)]
    if sum(mctest[:3])/3 == mcavg[2]:
        mcworks.append(mctest) # mcavg is real data
</code></pre>

<p>In the end, you are left with a list of valid <code>mctest</code> lists.</p>

<p>What I changed:</p>

<ul>
<li>Used a <a href=""http://docs.python.org/tut/node7.html#SECTION007140000000000000000"" rel=""nofollow noreferrer"">list comprehension</a> to build the data instead of a for loop</li>
<li>Used <code>random.randint</code> to get random integers</li>
<li>Used <a href=""http://docs.python.org/tut/node5.html"" rel=""nofollow noreferrer"">slices</a> and <code>sum</code> to calculate the average of the first three items</li>
<li>(To answer your actual question :-) ) Put the results in a list <code>mcworks</code>, instead of creating a new variable for every iteration</li>
</ul>
",""
"59825","1","","<p>Suppose the following:</p>

<pre><code>&gt;&gt;&gt;s = set([1, 2, 3])
</code></pre>

<p>How do I get a value (any value) out of s without doing s.pop()? I want to leave the item in the set until I am sure I can remove it - something I can only be sure of after an asynchronous call to another host.</p>

<p>Quick and dirty:</p>

<pre><code>&gt;&gt;&gt;elem = s.pop()
&gt;&gt;&gt;s.add(elem)
</code></pre>

<p>But do you know of a better way? Ideally in constant time.</p>
","<python><set>"
"59841","2","59825","<p>Two options that don't require copying the whole set:</p>

<pre><code>for e in s:
    break
# e is now an element from s
</code></pre>

<p>Or...</p>

<pre><code>e = next(iter(s))
</code></pre>

<p>But in general, sets don't support indexing or slicing.</p>
",""
"59928","2","59825","<p>Another option is to use a dictionary with values you don't care about.  E.g.,</p>

<pre><code>
poor_man_set = {}
poor_man_set[1] = None
poor_man_set[2] = None
poor_man_set[3] = None
...
</code></pre>

<p>You can treat the keys as a set except that they're just an array:</p>

<pre><code>
keys = poor_man_set.keys()
print ""Some key = %s"" % keys[0]
</code></pre>

<p>A side effect of this choice is that your code will be backwards compatible with older, pre-<code>set</code> versions of Python.  It's maybe not the best answer but it's another option.</p>

<p>Edit: You can even do something like this to hide the fact that you used a dict instead of an array or set:</p>

<pre><code>
poor_man_set = {}
poor_man_set[1] = None
poor_man_set[2] = None
poor_man_set[3] = None
poor_man_set = poor_man_set.keys()
</code></pre>
",""
"60027","2","59825","<p>Since you want a random element, this will also work:</p>

<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; s = set([1,2,3])
&gt;&gt;&gt; random.sample(s, 1)
[2]
</code></pre>

<p>The documentation doesn't seem to mention performance of <code>random.sample</code>. From a really quick empirical test with a huge list and a huge set, it seems to be constant time for a list but not for the set. Also, iteration over a set isn't random; the order is undefined but predictable:</p>

<pre><code>&gt;&gt;&gt; list(set(range(10))) == range(10)
True 
</code></pre>

<p>If randomness is important and you need a bunch of elements in constant time (large sets), I'd use <code>random.sample</code> and convert to a list first:</p>

<pre><code>&gt;&gt;&gt; lst = list(s) # once, O(len(s))?
...
&gt;&gt;&gt; e = random.sample(lst, 1)[0] # constant time
</code></pre>
",""
"60152","1","","<p>Been scouring the net for something like firewatir but for python.  I'm trying to automate  firefox on linux.  Any suggestions?</p>
","<python><linux><firefox><ubuntu><automation>"
"60208","1","","<p>I want to write a function in Python that returns different fixed values based on the value of an input index.  </p>

<p>In other languages I would use a <code>switch</code> or <code>case</code> statement, but Python does not appear to have a <code>switch</code> statement.  What are the recommended Python solutions in this scenario?</p>
","<python><switch-statement>"
"60211","2","60208","<p>You could use a dictionary:</p>

<pre><code>def f(x):
    return {
        'a': 1,
        'b': 2,
    }[x]
</code></pre>
",""
"60215","2","60208","<p>I've always liked doing it this way</p>

<pre><code>result = {
  'a': lambda x: x * 5,
  'b': lambda x: x + 7,
  'c': lambda x: x - 2
}[value](x)
</code></pre>

<p><a href=""http://blog.simonwillison.net/post/57956755106/switch"" rel=""noreferrer"">From here</a></p>
",""
"60216","2","60208","<p>If you are really just returning a predetermined, fixed value, you could create a dictionary with all possible input indexes as the keys, along with their corresponding values. Also, you might not really want a function to do this - unless you're computing the return value somehow.</p>

<p>Oh, and if you feel like doing something switch-like, see <a href=""https://web.archive.org/web/20120216013404/http://www.mustap.com/pythonzone_post_224_python-switch-statement?"" rel=""nofollow noreferrer"">here</a>.</p>
",""
"60218","2","60152","<p>The languages of choice of Firefox is Javascript. Unless you have a specific requirement that requires Python, I would advice you to use that.</p>
",""
"60219","2","60152","<p>You could try <a href=""http://selenium.openqa.org/"" rel=""noreferrer"">selenium</a>.</p>
",""
"60233","2","59825","<p>Least code would be:</p>

<pre><code>&gt;&gt;&gt; s = set([1, 2, 3])
&gt;&gt;&gt; list(s)[0]
1
</code></pre>

<p>Obviously this would create a new list which contains each member of the set, so not great if your set is very large.</p>
",""
"60236","2","60208","<p>In addition to the dictionary methods (which I really like, BTW), you can also use if-elif-else to obtain the switch/case/default functionality:</p>

<pre><code>if x == 'a':
    # Do the thing
elif x == 'b':
    # Do the other thing
if x in 'bc':
    # Fall-through by not using elif, but now the default case includes case 'a'!
elif x in 'xyz':
    # Do yet another thing
else:
    # Do the default
</code></pre>

<p>This of course is not identical to switch/case - you cannot have fall-through as easily as leaving off the break; statement, but you can have a more complicated test.  Its formatting is nicer than a series of nested ifs, even though functionally that's what it is closer to.</p>
",""
"60243","2","60208","<p>There's a pattern that I learned from Twisted Python code.</p>

<pre><code>class SMTP:
    def lookupMethod(self, command):
        return getattr(self, 'do_' + command.upper(), None)
    def do_HELO(self, rest):
        return 'Howdy ' + rest
    def do_QUIT(self, rest):
        return 'Bye'

SMTP().lookupMethod('HELO')('foo.bar.com') # =&gt; 'Howdy foo.bar.com'
SMTP().lookupMethod('QUIT')('') # =&gt; 'Bye'
</code></pre>

<p>You can use it any time you need to dispatch on a token and execute extended piece of code. In a state machine you would have <code>state_</code> methods, and dispatch on <code>self.state</code>. This switch can be cleanly extended by inheriting from base class and defining your own <code>do_</code> methods. Often times you won't even have <code>do_</code> methods in the base class.</p>

<p><em>Edit: how exactly is that used</em></p>

<p>In case of SMTP you will receive <code>HELO</code> from the wire. The relevant code (from <code>twisted/mail/smtp.py</code>, modified for our case) looks like this</p>

<pre><code>class SMTP:
    # ...

    def do_UNKNOWN(self, rest):
        raise NotImplementedError, 'received unknown command'

    def state_COMMAND(self, line):
        line = line.strip()
        parts = line.split(None, 1)
        if parts:
            method = self.lookupMethod(parts[0]) or self.do_UNKNOWN
            if len(parts) == 2:
                return method(parts[1])
            else:
                return method('')
        else:
            raise SyntaxError, 'bad syntax'

SMTP().state_COMMAND('   HELO   foo.bar.com  ') # =&gt; Howdy foo.bar.com
</code></pre>

<p>You'll receive <code>'  HELO   foo.bar.com '</code> (or you might get <code>'QUIT'</code> or <code>'RCPT TO: foo'</code>). This is tokenized into <code>parts</code> as <code>['HELO', 'foo.bar.com']</code>. The actual method lookup name is taken from <code>parts[0]</code>.</p>

<p>(The original method is also called <code>state_COMMAND</code>, because it uses the same pattern to implement a state machine, i.e. <code>getattr(self, 'state_' + self.mode)</code>)</p>
",""
"60352","1","","<p>If all of my <code>__init__.py</code> files are empty, do I have to store them into version control, or is there a way to make <code>distutils</code> create empty <code>__init__.py</code> files during installation?</p>
","<python><version-control><distutils>"
"60431","2","60352","<p>In Python, <code>__init__.py</code> files actually have a meaning! They mean that the folder they are in is a Python module. As such, they have a real role in your code and should most probably be stored in Version Control.</p>

<p>You could well imagine a folder in your source tree that is NOT a Python module, for example a folder containing only resources (e.g. images) and no code. That folder would not need to have a <code>__init__.py</code> file in it. Now how do you make the difference between folders where distutils should create those files and folders where it should not ?</p>
",""
"60446","1","","<p>What is the best way to start developing Windows Mobile Professional applications in Python? Is there a reasonable SDK including an emulator? Is it even possible without doing excessive amount of underlaying Windows API calls for UI for instance?</p>
","<python><windows-mobile>"
"60448","2","60446","<p><H2>Python CE</H2>
Python port for Windows CE (Pocket PC) devices. Intended to be as close to desktop version as possible (console, current directory support, testsuite passed). </p>

<p><a href=""http://pythonce.sourceforge.net/"" rel=""nofollow noreferrer"">Python CE http://pythonce.sourceforge.net/images/python-logo.jpg</a></p>

<p><img src=""https://sourceforge.net/dbimage.php?id=76454"" alt=""alt text""></p>
",""
"60460","2","60446","<p>If the IronPython and .Net Compact Framework teams work together, Visual Studio may one day support Python for Windows Mobile development out-of-the-box. Unfortunately, <a href=""http://www.codeplex.com/IronPython/WorkItem/View.aspx?WorkItemId=9191"" rel=""nofollow noreferrer"">this feature request has been sitting on their issue tracker for ages</a>...</p>
",""
"60506","2","60352","<p>Is there a reason you want to <em>avoid</em> putting empty <code>__init__.py</code> files in version control? If you do this you won't be able to <code>import</code> your packages from the source directory wihout first running distutils.</p>

<p>If you really want to, I suppose you can create <code>__init__.py</code> in <code>setup.py</code>. It has to be <em>before</em> running <code>distutils.setup</code>, so <code>setup</code> itself is able to find your packages:</p>

<pre><code>from distutils import setup
import os

for path in [my_package_directories]:
    filename = os.path.join(pagh, '__init__.py')
    if not os.path.exists(filename):
        init = open(filename, 'w')
        init.close()

setup(
...
)
</code></pre>

<p>but... what would you gain from this, compared to having the empty <code>__init__.py</code> files there in the first place? </p>
",""
"60548","2","60152","<p>See if <a href=""http://twill.idyll.org/"" rel=""nofollow noreferrer"">twill</a> can help you. It can be used as a command line tool or as a python library.</p>
",""
"60552","2","60152","<p>Install <a href=""http://hyperstruct.net/projects/mozlab"" rel=""nofollow noreferrer"">Mozlab</a> in Firefox and enable the telnet server, then open a socket.</p>
",""
"60630","2","60152","<p>I use <a href=""http://selenium-rc.openqa.org/python.html"" rel=""nofollow noreferrer"">Selenium RC</a>. All my tests are written in Python and are run with test suite.</p>

<p>One minor thing is that You either have to start selenium manually and point Your tests to it or start selenium from test suite which requires little bit of coding. But it's doable.</p>

<p>Generally I'm very pleased with this solution.</p>
",""
"60649","1","","<p>I'm looking for suggestions on possible IPC mechanisms that are:</p>

<ul>
<li><strong>Cross platform</strong> (Win32 and Linux at least)</li>
<li>Simple to implement in <strong>C++</strong> as well as the <strong>most common scripting languages</strong> (perl, ruby, python, etc).</li>
<li>Finally, <strong>simple to use</strong> from a programming point of view!</li>
</ul>

<p>What my options are? I'm programming under Linux, but I'd like what I write to be portable to other OSes in the future. I've thought about using sockets, named pipes, or something like DBus.</p>
","<c++><python><linux><cross-platform><ipc>"
"60660","2","60649","<p>For C++, check out <a href=""http://www.boost.org/doc/libs/1_36_0/doc/html/interprocess.html"" rel=""noreferrer"">Boost IPC</a>.<br>
You can probably create or find some bindings for the scripting languages as well.  </p>

<p>Otherwise if it's really important to be able to interface with scripting languages your best bet is simply to use files, pipes or sockets or even a higher level abstraction like HTTP. </p>
",""
"60662","2","60649","<p>How about <a href=""http://incubator.apache.org/thrift/"" rel=""noreferrer"">Facebook's Thrift</a>?</p>

<blockquote>
  <p>Thrift is a software framework for scalable cross-language services development. It combines a software stack with a code generation engine to build services that work efficiently and seamlessly between C++, Java, Python, PHP, Ruby, Erlang, Perl, Haskell, C#, Cocoa, Smalltalk, and OCaml.</p>
</blockquote>
",""
"60668","2","60649","<p>It doesn't get more simple than using pipes, which are supported on every OS I know of, and can be accessed in pretty much every language.</p>

<p>Check out <a href=""http://web.archive.org/web/20080919054639/http://www.utdallas.edu/~kcooper/teaching/3375/Tutorial6a/tutorial6.htm"" rel=""nofollow noreferrer"">this</a> tutorial.</p>
",""
"60680","1","","<p>I'm writing a small web server in Python, using BaseHTTPServer and a custom subclass of BaseHTTPServer.BaseHTTPRequestHandler. Is it possible to make this listen on more than one port?</p>

<p>What I'm doing now:</p>

<pre><code>class MyRequestHandler(BaseHTTPServer.BaseHTTPRequestHandler):
  def doGET
  [...]

class ThreadingHTTPServer(ThreadingMixIn, HTTPServer): 
    pass

server = ThreadingHTTPServer(('localhost', 80), MyRequestHandler)
server.serve_forever()
</code></pre>
","<python><webserver>"
"60685","1","","<p>What follows is a regular expression I have written to match multi-line pre-processor macros in C / C++ code. I'm by no means a regular expressions guru, so I'd welcome any advice on how I can make this better.</p>

<p>Here's the regex:</p>

<pre><code>\s*#define(.*\\\n)+[\S]+(?!\\)
</code></pre>

<p>It should match all of this:</p>

<pre><code>#define foo(x) if(x) \
doSomething(x)
</code></pre>

<p>But only some of this (shouldn't match the next line of code:</p>

<pre><code>#define foo(x) if(x) \
doSomething(x)
normalCode();
</code></pre>

<p>And also shouldn't match single-line preprocessor macros.</p>

<p>I'm pretty sure that the regex above works - but as I said, there probably a better way of doing it, and I imagine that there are ways of breaking it. Can anyone suggest any?</p>
","<python><regex>"
"60692","2","60649","<p>TCP sockets to localhost FTW.</p>
",""
"60702","2","60649","<p>I think you'll want something based on sockets. </p>

<p>If you want RPC rather than just IPC I would suggest something like XML-RPC/SOAP which runs over HTTP, and can be used from any language.</p>
",""
"60723","2","60685","<p>This is a simple test program I knocked up:</p>

<pre><code>#!/usr/bin/env python

TEST1=""""""
#include ""Foo.h""
#define bar foo\\
    x
#include ""Bar.h""
""""""

TEST2=""""""
#define bar foo
#define x 1 \\
    12 \\
    2 \\\\ 3
Foobar
""""""

TEST3=""""""
#define foo(x) if(x) \\
doSomething(x)
""""""

TEST4=""""""
#define foo(x) if(x) \\
doSomething(x)
normalCode();
""""""

import re
matcher = re.compile(r""^[ \t]*#define(.*\\\n)+.*$"",re.MULTILINE)

def extractDefines(s):
    mo = matcher.search(s)
    if not mo:
        print mo
        return
    print mo.group(0)

extractDefines(TEST1)
extractDefines(TEST2)
extractDefines(TEST3)
extractDefines(TEST4)
</code></pre>

<p>The re I used:</p>

<pre><code>r""^[ \t]*#define(.*\\\n)+.*$""
</code></pre>

<p>Is very similar to the one use used, the changes:</p>

<ol>
<li>[ \t] To avoid newlines at the start
of the define.</li>
<li>I rely on + being
greedy, so I can use a simple .*$ at
the end to get the first line of the
define that doesn't end with \</li>
</ol>
",""
"60729","2","60685","<pre><code>start        = r""^\s*#define\s+""
continuation = r""(?:.*\\\n)+""
lastline     = r"".*$""

re_multiline_macros = re.compile(start + continuation + lastline, 
                                 re.MULTILINE)
</code></pre>
",""
"60753","2","60680","<p>Sure; just start two different servers on two different ports in two different threads that each use the same handler.  Here's a complete, working example that I just wrote and tested.  If you run this code then you'll be able to get a Hello World webpage at both <a href=""http://localhost:1111/"" rel=""noreferrer"">http://localhost:1111/</a> and <a href=""http://localhost:2222/"" rel=""noreferrer"">http://localhost:2222/</a></p>

<pre><code>from threading import Thread
from SocketServer import ThreadingMixIn
from BaseHTTPServer import HTTPServer, BaseHTTPRequestHandler

class Handler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header(""Content-type"", ""text/plain"")
        self.end_headers()
        self.wfile.write(""Hello World!"")

class ThreadingHTTPServer(ThreadingMixIn, HTTPServer):
    pass

def serve_on_port(port):
    server = ThreadingHTTPServer((""localhost"",port), Handler)
    server.serve_forever()

Thread(target=serve_on_port, args=[1111]).start()
serve_on_port(2222)
</code></pre>
",""
"60754","2","60680","<p>Not easily. You could have two ThreadingHTTPServer instances, write your own serve_forever() function (don't worry it's not a complicated function).</p>

<p>The existing function:</p>

<pre><code>def serve_forever(self, poll_interval=0.5):
    """"""Handle one request at a time until shutdown.

    Polls for shutdown every poll_interval seconds. Ignores
    self.timeout. If you need to do periodic tasks, do them in
    another thread.
    """"""
    self.__serving = True
    self.__is_shut_down.clear()
    while self.__serving:
        # XXX: Consider using another file descriptor or
        # connecting to the socket to wake this up instead of
        # polling. Polling reduces our responsiveness to a
        # shutdown request and wastes cpu at all other times.
        r, w, e = select.select([self], [], [], poll_interval)
        if r:
            self._handle_request_noblock()
    self.__is_shut_down.set()
</code></pre>

<p>So our replacement would be something like:</p>

<pre><code>def serve_forever(server1,server2):
    while True:
        r,w,e = select.select([server1,server2],[],[],0)
        if server1 in r:
            server1.handle_request()
        if server2 in r:
            server2.handle_request()
</code></pre>
",""
"60805","1","","<p>How do I select a(or some) random row(s) from a table using SQLAlchemy? </p>
","<python><sql><database><sqlalchemy>"
"60811","2","60805","<p>Theres a couple of ways through SQL, depending on which data base is being used.</p>

<p>(I think SQLAlchemy can use all these anyways)</p>

<p>mysql:</p>

<pre><code>SELECT colum FROM table
ORDER BY RAND()
LIMIT 1
</code></pre>

<p>PostgreSQL:</p>

<pre><code>SELECT column FROM table
ORDER BY RANDOM()
LIMIT 1
</code></pre>

<p>MSSQL:</p>

<pre><code>SELECT TOP 1 column FROM table
ORDER BY NEWID()
</code></pre>

<p>IBM DB2:</p>

<pre><code>SELECT column, RAND() as IDX
FROM table
ORDER BY IDX FETCH FIRST 1 ROWS ONLY
</code></pre>

<p>Oracle:</p>

<pre><code>SELECT column FROM
(SELECT column FROM table
ORDER BY dbms_random.value)
WHERE rownum = 1
</code></pre>

<p>However I don't know of any standard way</p>
",""
"60815","2","60805","<p>This is very much a database-specific issue.</p>

<p>I know that PostgreSQL and MySQL have the ability to order by a random function, so you can use this in SQLAlchemy:</p>

<pre><code>from  sqlalchemy.sql.expression import func, select

select.order_by(func.random()) # for PostgreSQL, SQLite

select.order_by(func.rand()) # for MySQL

select.order_by('dbms_random.value') # For Oracle
</code></pre>

<p>Next, you need to limit the query by the number of records you need (for example using <code>.limit()</code>).</p>

<p>Bear in mind that at least in PostgreSQL, selecting random record has severe perfomance issues; <a href=""http://www.depesz.com/index.php/2007/09/16/my-thoughts-on-getting-random-row/"" rel=""noreferrer"">here</a> is good article about it.</p>
",""
"60848","1","","<p>Is it possible to retrieve items from a Python dictionary in the order that they were inserted?</p>
","<python><dictionary>"
"60852","2","60848","<p>You can't do this with the base dict class -- it's ordered by hash.  You could build your own dictionary that is really a list of key,value pairs or somesuch, which would be ordered.</p>
",""
"60862","2","60848","<p>The standard python <code>dict</code> isn't able to do this.</p>

<p>There is a proposal (<a href=""http://www.python.org/dev/peps/pep-0372/"" rel=""noreferrer"">PEP 372</a>) to add an ""ordered dictionary"" (that keeps track of the order of insertion) to the <code>collections</code> module in the standard library. It includes links to <a href=""http://babel.edgewall.org/browser/trunk/babel/util.py?rev=374#L178"" rel=""noreferrer"">various</a>  <a href=""http://www.xs4all.nl/~anthon/Python/ordereddict/"" rel=""noreferrer"">implementations</a> <a href=""http://code.djangoproject.com/browser/django/trunk/django/utils/datastructures.py?rev=7140#L53"" rel=""noreferrer"">of</a> <a href=""http://pypi.python.org/pypi/StableDict/0.2"" rel=""noreferrer"">ordered</a> <a href=""http://codespeak.net/svn/user/arigo/hack/pyfuse/OrderedDict.py"" rel=""noreferrer"">dictionaries</a> (see also these <a href=""http://code.activestate.com/recipes/107747/"" rel=""noreferrer"">two</a> <a href=""http://code.activestate.com/recipes/496761/"" rel=""noreferrer"">recipes</a> in the Python Cookbook).</p>

<p>You might want to stick with the reference implementation in the PEP if you want your code to be compatible with the ""official"" version (if the proposal is eventually accepted).</p>

<p>EDIT: The PEP was accepted and added in python 2.7 and 3.1. See <a href=""http://docs.python.org/library/collections.html#ordereddict-objects"" rel=""noreferrer"">the docs</a>.</p>
",""
"60945","2","60446","<p>(I used to write customer apps for Windows Mobile.)</p>

<p>Forget about python. Even if it's technically possible:</p>

<ul>
<li>your app will be big (you'll have to bundle the whole python runtime with your app)</li>
<li>your app will use lots of memory (python is a memory hog, relative to C/C++)</li>
<li>your app will be slow</li>
<li>you wont find any documentation or discussion groups to help you when you (inevitably) encounter problems</li>
</ul>

<p>Go with C/C++ (or C#). Visual Studio 2005/2008 have decent tools for those (SDK for winmo built-in, debugging on the emulator or device connected through USB), the best documentation is for those technologies plus there are active forums/discussion groups/mailing lists where you can ask for help.</p>
",""
"61031","2","60848","<p>The other answers are correct; it's not possible, but you could write this yourself.  However, in case you're unsure how to actually implement something like this, here's a complete and working implementation that subclasses dict which I've just written and tested. (Note that the order of values passed to the constructor is undefined but will come before values passed later, and you could always just not allow ordered dicts to be initialized with values.)</p>

<pre><code>class ordered_dict(dict):
    def __init__(self, *args, **kwargs):
        dict.__init__(self, *args, **kwargs)
        self._order = self.keys()

    def __setitem__(self, key, value):
        dict.__setitem__(self, key, value)
        if key in self._order:
            self._order.remove(key)
        self._order.append(key)

    def __delitem__(self, key):
        dict.__delitem__(self, key)
        self._order.remove(key)

    def order(self):
        return self._order[:]

    def ordered_items(self):
        return [(key,self[key]) for key in self._order]


od = ordered_dict()
od[""hello""] = ""world""
od[""goodbye""] = ""cruel world""
print od.order()            # prints ['hello', 'goodbye']

del od[""hello""]
od[""monty""] = ""python""
print od.order()            # prints ['goodbye', 'monty']

od[""hello""] = ""kitty""
print od.order()            # prints ['goodbye', 'monty', 'hello']

print od.ordered_items()
# prints [('goodbye','cruel world'), ('monty','python'), ('hello','kitty')]
</code></pre>
",""
"61140","2","59825","<p>I use a utility function I wrote.  Its name is somewhat misleading because it kind of implies it might be a random item or something like that.</p>

<pre><code>def anyitem(iterable):
    try:
        return iter(iterable).next()
    except StopIteration:
        return None
</code></pre>
",""
"61151","1","","<p>If you're writing a library, or an app, where do the unit test files go?  </p>

<p>It's nice to separate the test files from the main app code, but it's awkward to put them into a ""tests"" subdirectory inside of the app root directory, because it makes it harder to import the modules that you'll be testing.  </p>

<p>Is there a best practice here?</p>
","<python><unit-testing><code-organization>"
"61168","2","61151","<p>I don't believe there is an established ""best practice"".</p>

<p>I put my tests in another directory outside of the app code. I then add the main app directory to sys.path (allowing you to import the modules from anywhere) in my test runner script (which does some other stuff as well) before running all the tests. This way I never have to remove the tests directory from the main code when I release it, saving me time and effort, if an ever so tiny amount.</p>
",""
"61169","2","61151","<p>A common practice is to put the tests directory in the same parent directory as your module/package. So if your module was called foo.py your directory layout would look like:</p>

<pre><code>parent_dir/
  foo.py
  tests/
</code></pre>

<p>Of course there is no one way of doing it. You could also make a tests subdirectory and import the module using <a href=""http://www.python.org/dev/peps/pep-0328/"" rel=""noreferrer"">absolute import</a>.</p>

<p>Wherever you put your tests, I would recommend you use <a href=""http://nose.readthedocs.org/en/latest/"" rel=""noreferrer"">nose</a> to run them. <a href=""http://nose.readthedocs.org/en/latest/"" rel=""noreferrer"">Nose</a> searches through your directories for tests. This way, you can put tests wherever they make the most sense organizationally.</p>
",""
"61322","2","60680","<p>I would say that threading for something this simple is overkill.  You're better off using some form of asynchronous programming.</p>

<p>Here is an example using <a href=""http://twistedmatrix.com/"" rel=""noreferrer"">Twisted</a>:</p>

<pre><code>from twisted.internet import reactor
from twisted.web import resource, server

class MyResource(resource.Resource):
    isLeaf = True
    def render_GET(self, request):
        return 'gotten'

site = server.Site(MyResource())

reactor.listenTCP(8000, site)
reactor.listenTCP(8001, site)
reactor.run()
</code></pre>

<p>I also thinks it looks a lot cleaner to have each port be handled in the same way, instead of having the main thread handle one port and an additional thread handle the other.  Arguably that can be fixed in the thread example, but then you're using three threads.</p>
",""
"61517","1","","<p>Do you know if there is a built-in function to build a dictionary from an arbitrary object? I'd like to do something like this:</p>

<pre><code>&gt;&gt;&gt; class Foo:
...     bar = 'hello'
...     baz = 'world'
...
&gt;&gt;&gt; f = Foo()
&gt;&gt;&gt; props(f)
{ 'bar' : 'hello', 'baz' : 'world' }
</code></pre>

<p><strong>NOTE:</strong> It should not include methods. Only fields.</p>
","<python><dictionary><attributes><object><metaprogramming>"
"61518","2","61151","<p>I've recently started to program in Python, so I've not really had chance to find out best practice yet.
But, I've written a module that goes and finds all the tests and runs them.</p>

<p>So, I have:</p>

<pre>
app/
 appfile.py
test/
 appfileTest.py
</pre>

<p>I'll have to see how it goes as I progress to larger projects.</p>
",""
"61522","2","61517","<p>The <code>dir</code> builtin will give you all the object's attributes, including special methods like <code>__str__</code>, <code>__dict__</code> and a whole bunch of others which you probably don't want. But you can do something like:</p>

<pre><code>&gt;&gt;&gt; class Foo(object):
...     bar = 'hello'
...     baz = 'world'
...
&gt;&gt;&gt; f = Foo()
&gt;&gt;&gt; [name for name in dir(f) if not name.startswith('__')]
[ 'bar', 'baz' ]
&gt;&gt;&gt; dict((name, getattr(f, name)) for name in dir(f) if not name.startswith('__')) 
{ 'bar': 'hello', 'baz': 'world' }
</code></pre>

<p>So can extend this to only return data attributes and not methods, by defining your <code>props</code> function like this:</p>

<pre><code>import inspect

def props(obj):
    pr = {}
    for name in dir(obj):
        value = getattr(obj, name)
        if not name.startswith('__') and not inspect.ismethod(value):
            pr[name] = value
    return pr
</code></pre>
",""
"61531","2","61151","<p>I use a <code>tests/</code> directory, and then import the main application modules using relative imports. So in MyApp/tests/foo.py, there might be:</p>

<pre><code>from .. import foo
</code></pre>

<p>to import the <code>MyApp.foo</code> module.</p>
",""
"61551","2","61517","<p>I've settled with a combination of both answers:</p>

<pre><code>dict((key, value) for key, value in f.__dict__.iteritems() 
    if not callable(value) and not key.startswith('__'))
</code></pre>
",""
"61605","1","","<p>In python, you can have a function return multiple values.  Here's a contrived example:</p>

<pre><code>def divide(x, y):
    quotient = x/y
    remainder = x % y
    return quotient, remainder  

(q, r) = divide(22, 7)
</code></pre>

<p>This seems very useful, but it looks like it can also be abused (""Well..function X already computes what we need as an intermediate value.  Let's have X return that value also"").</p>

<p>When should you draw the line and define a different method?  </p>
","<python><function><return-value><multiple-return-values>"
"61629","2","61605","<p>Firstly, note that Python allows for the following (no need for the parenthesis):</p>

<pre><code>q, r = divide(22, 7)
</code></pre>

<p>Regarding your question, there's no hard and fast rule either way. For simple (and usually contrived) examples, it may seem that it's always possible for a given function to have a single purpose, resulting in a single value. However, when using Python for real-world applications, you quickly run into many cases where returning multiple values is necessary, and results in cleaner code.</p>

<p>So, I'd say do whatever makes sense, and don't try to conform to an artificial convention. Python supports multiple return values, so use it when appropriate.</p>
",""
"61636","2","61605","<p>Absolutely (for the example you provided).</p>

<h3>Tuples are first class citizens in Python</h3>

<p>There is a builtin function <a href=""http://docs.python.org/lib/built-in-funcs.html"" rel=""noreferrer""><code>divmod()</code></a> that does exactly that.</p>

<pre><code>q, r = divmod(x, y) # ((x - x%y)/y, x%y) Invariant: div*y + mod == x
</code></pre>

<p>There are other examples: <code>zip</code>, <code>enumerate</code>, <code>dict.items</code>. </p>

<pre><code>for i, e in enumerate([1, 3, 3]):
    print ""index=%d, element=%s"" % (i, e)

# reverse keys and values in a dictionary
d = dict((v, k) for k, v in adict.items()) # or 
d = dict(zip(adict.values(), adict.keys()))
</code></pre>

<p>BTW, parentheses are not necessary most of the time.
Citation from <a href=""http://docs.python.org/lib/typesseq.html"" rel=""noreferrer"">Python Library Reference</a>: </p>

<blockquote>
  <p><em>Tuples are constructed by the comma
  operator</em> (not within square brackets),
  with or without enclosing parentheses,
  but an empty tuple must have the
  enclosing parentheses, such as a, b, c
  or (). A single item tuple must have a
  trailing comma, such as (d,).</p>
</blockquote>

<h3>Functions should serve single purpose</h3>

<p>Therefore they should return a single object. In your case this object is a tuple. Consider tuple as an ad-hoc compound data structure. There are languages where almost every single function returns multiple values (list in Lisp).</p>

<p>Sometimes it is sufficient to return <code>(x, y)</code> instead of <code>Point(x, y)</code>.</p>

<h3>Named tuples</h3>

<p>With the introduction of named tuples in Python 2.6 it is preferable in many cases to return named tuples instead of plain tuples.</p>

<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; Point = collections.namedtuple('Point', 'x y')
&gt;&gt;&gt; x, y = Point(0, 1)
&gt;&gt;&gt; p = Point(x, y)
&gt;&gt;&gt; x, y, p
(0, 1, Point(x=0, y=1))
&gt;&gt;&gt; p.x, p.y, p[0], p[1]
(0, 1, 0, 1)
&gt;&gt;&gt; for i in p:
...   print(i)
...
0
1
</code></pre>
",""
"61637","2","61605","<p>The example you give is actually a python builtin function, called <code>divmod</code>. So someone, at some point in time, thought that it was pythonic enough to include in the core functionality.</p>

<p>To me, if it makes the code cleaner, it is pythonic. Compare these two code blocks:</p>

<pre><code>seconds = 1234
minutes, seconds = divmod(seconds, 60)
hours, minutes = divmod(minutes, 60)

seconds = 1234
minutes = seconds / 60
seconds = seconds % 60
hours = minutes / 60
minutes = minutes % 60
</code></pre>
",""
"61781","1","","<p>How do you set up IIS so that you can call python scripts from asp pages?</p>

<p>Ok, so I found the answer to that question here: <a href=""http://support.microsoft.com/kb/276494"" rel=""nofollow noreferrer""><a href=""http://support.microsoft.com/kb/276494"" rel=""nofollow noreferrer"">http://support.microsoft.com/kb/276494</a></a></p>

<p>So on to my next question: How do you call a cgi script from within classic asp (vb) code? Particularly one which is not in the web root directory.</p>
","<python><iis><asp-classic><vbscript><cgi>"
"61820","2","61151","<p>In C#, I've generally separated the tests into a separate assembly.</p>

<p>In Python -- so far -- I've tended to either write doctests, where the test is in the docstring of a function, or put them in the <code>if __name__ == ""__main__""</code> block at the bottom of the module.</p>
",""
"61842","2","61781","<p>You could also do it <a href=""http://www.4guysfromrolla.com/webtech/082201-1.shtml"" rel=""nofollow noreferrer"">this way</a>.</p>
",""
"61894","1","","<p>So I've done the trivial ""warmup"" apps with GAE.  Now I'd like to build something with a more complex directory structure.  Something along the lines of:</p>

<pre><code>siteroot/
    models/
    controllers/
        controller1/
        controller2/
        ...
    templates/
        template1/
        template2/
        ...
</code></pre>

<p>..etc.  The controllers will be Python modules handling requests.  They would then need to locate (Django-style) templates in associated folders.  Most of the demo apps I've seen resolve template paths like this:</p>

<pre><code>path = os.path.join(os.path.dirname(__file__), 'myPage.html')
</code></pre>

<p>...the __ file __ property resolves to the currently executing script.  So, in my above example, if a Python script were running in controllers/controller1/, then the 'myPage.html' would resolve to that same directory -- controllers/controller1/myPage.html -- and I would rather cleanly separate my Python code and templates.</p>

<p>The solution I've hacked together feels... hacky:</p>

<pre><code>base_paths = os.path.split(os.path.dirname(__file__))
template_dir = os.path.join(base_paths[0], ""templates"")
</code></pre>

<p>So, I'm just snipping off the last element of the path for the currently running script and appending the template directory to the new path.  The other (non-GAE specific) solutions I've seen for resolving Python paths seem pretty heavyweight (such as splitting paths into lists and manipulating accordingly).  Django seems to have an answer for this, but I'd rather stick to the GAE API, vs. creating a full Django app and modifying it for GAE.</p>

<p>I'm assuming anything hard-coded would be non-starter, since the apps live on Google's infinite server farm.  So what's a better way?</p>
","<python><google-app-engine>"
"62064","1","","<p>I'm currently learning Django though reading <a href=""http://www.djangobook.com/"" rel=""noreferrer"">the Django Book</a>, but I'm a huge fan of webcasts/screencasts/videos and haven't found any good ones so far. Are there any and which ones would you recommend?</p>
","<python><django>"
"62079","1","","<p>I am trying to get some accurate runtime comparisons of PHP vs Python (and potentially any other language that I have to include). Timing within a script is not my problem but timing within a script does not account for everything from the moment the request is made to run the script to output.</p>

<blockquote>
  <p>1) Is it actually worth taking such things into account?</p>
  
  <p>2) Assuming it is worth taking it into account, how do I do this?</p>
</blockquote>

<p>I'm using a Mac so I've got access to Linux commands and I'm not afraid to compile/create a command to help me, I just don't know how to write such a command.</p>
","<php><python><benchmarking>"
"62094","2","62079","<p>If your idea is to compare the languages, I'd say anything outside them is not relevant for comparison purposes. </p>

<p>Nonetheless you can use the time command to measure everything and can compare it with the timing within a script.</p>

<p>Like this:</p>

<pre><code>$ time script.php
HI!

real    0m3.218s
user    0m0.080s
sys     0m0.064s
</code></pre>

<p>It will give you clock time, user time (php interpreter) and sys time (OS time)</p>

<p>If you are thinking web, then it gets a lot harder because you would be mixing webserver overhead and that is not always easy to compare if, say, you are using WSGI v/s mod_php. Then you'd have to hook probes into the webserving parts of the chain as well</p>
",""
"62097","2","62079","<ol>
<li><p>It's worth taking speed into account if you're optimizing code. You should generally know why you're optimizing code (as in: a specific task in your existing codebase is taking too long, not ""I heard PHP is slower than Python""). It's <em>not</em> worth taking speed into account if you don't actually plan on switching languages. Just because one tiny module does something slightly faster doesn't mean rewriting your app in another language is a good idea. There are many other factors to choosing a language besides speed.</p></li>
<li><p>You benchmark, of course. Run the two codebases multiple times and compare the timing. You can use the <a href=""http://unixhelp.ed.ac.uk/CGI/man-cgi?time"" rel=""nofollow noreferrer"">time</a> command if both scripts are executable from the shell, or use respective benchmarking functionality from each language; the latter case depends heavily on the actual language, naturally.</p></li>
</ol>
",""
"62099","2","62079","<p>Well, you can use the ""time"" command to help:</p>

<pre><code>you@yourmachine:~$ time echo ""hello world""
hello world

real    0m0.000s
user    0m0.000s
sys 0m0.000s
you@yourmachine:~$ 
</code></pre>

<p>And this will get around timing outside of the environment.</p>

<p>As for whether you need to actually time that extra work... that entirely depends on what you are doing.  I assume this is for some kind of web application of some sort, so it depends on how the framework you use actually works... does it cache some kind of compiled (or parsed) version of the script?  If so, then startup time will be totally irrelevant (since the first hit will be the only one that startup time exists in).</p>

<p>Also, make sure to run your tests in a loop so you can discount the first run (and include the cost on the first run in your report if you want).  I have done some tests in Java, and the first run is always slowest due to the JIT doing its job (and the same sort of hit may exist in PHP, Python and any other languages you try).</p>
",""
"62121","2","61894","<p>The <code>dirname</code> function returns an absolute path, use relative paths. See what is the current directory when your controllers are executed with <code>os.path.abspath(os.path.curdir)</code> and build a path to the templates relative to that location (without the <code>os.path.abspath</code> part of course).</p>

<p>This will only work if the current directory is somewhere inside <em>siteroot</em>, else you could do something like this:</p>

<pre><code>template_dir = os.path.join(os.path.dirname(__file__), os.path.pardir, ""templates"")
</code></pre>
",""
"62133","2","62064","<p>There are some good ones at <a href=""http://www.showmedo.com/"" rel=""nofollow noreferrer"">ShowMeDo</a></p>
",""
"62527","2","61151","<p>For a file <code>module.py</code>, the unit test should normally be called <code>test_module.py</code>, following Pythonic naming conventions.</p>

<p>There are several commonly accepted places to put <code>test_module.py</code>:</p>

<ol>
<li>In the same directory as <code>module.py</code>.</li>
<li>In <code>../tests/test_module.py</code> (at the same level as the code directory).</li>
<li>In <code>tests/test_module.py</code> (one level under the code directory).</li>
</ol>

<p>I prefer #1 for its simplicity of finding the tests and importing them. Whatever build system you're using can easily be configured to run files starting with <code>test_</code>. Actually, the <a href=""https://docs.python.org/library/unittest.html#test-discovery"" rel=""noreferrer"">default <code>unittest</code> pattern used for test discovery is <code>test*.py</code></a>.</p>
",""
"62545","2","62064","<p>Check the <a href=""http://thisweekindjango.com/screencasts/"" rel=""nofollow noreferrer"">screencasts section</a> at <a href=""http://thisweekindjango.com/"" rel=""nofollow noreferrer"">This Week In Django</a>.</p>

<p>Update: The TWID site appears to be down, a condition which is likely permanent. The list of screencasts is still <a href=""http://web.archive.org/web/20090122214849/http://thisweekindjango.com/screencasts/"" rel=""nofollow noreferrer"">available at archive.org</a>, but the bulk of the actual videos (Eric Florenzano's ""Django from the Ground Up"" series) were and are <a href=""http://showmedo.com/videotutorials/series?name=PPN7NA155"" rel=""nofollow noreferrer"">hosted at showmedo.com</a>.</p>
",""
"62567","1","","<p>What is the easiest way to compare strings in Python, ignoring case?</p>

<p>Of course one can do (str1.lower() &lt;= str2.lower()), etc., but this created two additional temporary strings (with the obvious alloc/g-c overheads).</p>

<p>I guess I'm looking for an equivalent to C's stricmp().</p>

<p>[Some more context requested, so I'll demonstrate with a trivial example:]</p>

<p>Suppose you want to sort a looong list of strings. You simply do theList.sort().
This is O(n * log(n)) string comparisons and no memory management (since all
strings and list elements are some sort of smart pointers). You are happy.</p>

<p>Now, you want to do the same, but ignore the case (let's simplify and say
all strings are ascii, so locale issues can be ignored).
You can do theList.sort(key=lambda s: s.lower()), but then you cause two new 
allocations per comparison, plus burden the garbage-collector with the duplicated
(lowered) strings. 
Each such memory-management noise is orders-of-magnitude slower than simple string comparison.</p>

<p>Now, with an in-place stricmp()-like function, you do: theList.sort(cmp=stricmp)
and it is as fast and as memory-friendly as theList.sort(). You are happy again.</p>

<p>The problem is any Python-based case-insensitive comparison involves implicit string 
duplications, so I was expecting to find a C-based comparisons (maybe in module string).</p>

<p>Could not find anything like that, hence the question here.
(Hope this clarifies the question).</p>
","<python><string><case-insensitive>"
"62592","2","62567","<p>I'm pretty sure you either have to use .lower() or use a regular expression.  I'm not aware of a built-in case-insensitive string comparison function.</p>
",""
"62647","2","62567","<p>This is how you'd do it with re:</p>

<pre><code>import re
p = re.compile('^hello$', re.I)
p.match('Hello')
p.match('hello')
p.match('HELLO')
</code></pre>
",""
"62652","2","62567","<p>You could subclass <code>str</code> and create your own case-insenstive string class but IMHO that would be extremely unwise and create far more trouble than it's worth.</p>
",""
"62680","2","61517","<p>Note that best practice in Python 2.7 is to use <i><a href=""https://www.python.org/doc/newstyle/"" rel=""nofollow noreferrer"">new-style</a></i> classes (not needed with Python 3), i.e.</p>

<pre><code>class Foo(object):
   ...
</code></pre>

<p>Also, there's a difference between an 'object' and a 'class'. To build a dictionary from an arbitrary <i>object</i>, it's sufficient to use <code>__dict__</code>. Usually, you'll declare your methods at class level and your attributes at instance level, so <code>__dict__</code> should be fine. For example:</p>

<pre><code>&gt;&gt;&gt; class A(object):
...   def __init__(self):
...     self.b = 1
...     self.c = 2
...   def do_nothing(self):
...     pass
...
&gt;&gt;&gt; a = A()
&gt;&gt;&gt; a.__dict__
{'c': 2, 'b': 1}
</code></pre>

<p>Alternatively, depending on what you want to do, it might be nice to inherit from dict. Then your class is <em>already</em> a dictionary, and if you want you can override getattr and/or setattr to call through and set the dict. For example:</p>

<pre><code>class Foo(dict):
    def __init__(self):
        pass
    def __getattr__(self, attr):
        return self[attr]

    # etc...
</code></pre>
",""
"62983","2","62567","<p>For occasional or even repeated comparisons, a few extra string objects shouldn't matter as long as this won't happen in the innermost loop of your core code or you don't have enough data to actually notice the performance impact. See if you do: doing things in a ""stupid"" way is much less stupid if you also do it less.</p>

<p>If you seriously want to keep comparing lots and lots of text case-insensitively you could somehow keep the lowercase versions of the strings at hand to avoid finalization and re-creation, or normalize the whole data set into lowercase. This of course depends on the size of the data set. If there are a relatively few needles and a large haystack, replacing the needles with compiled regexp objects is one solution. If It's hard to say without seeing a concrete example.</p>
",""
"63007","2","62567","<p>There's no built in equivalent to that function you want.</p>

<p>You can write your own function that converts to .lower() each character at a time to avoid  duplicating both strings, but I'm sure it will very cpu-intensive and extremely inefficient. </p>

<p>Unless you are working with extremely long strings (so long that can cause a memory problem if duplicated) then I would keep it simple and use </p>

<pre><code>str1.lower() == str2.lower()
</code></pre>

<p>You'll be ok</p>
",""
"63071","2","62567","<p>Are you using this compare in a very-frequently-executed path of a highly-performance-sensitive application?  Alternatively, are you running this on strings which are megabytes in size?  If not, then you shouldn't worry about the performance and just use the .lower() method.</p>

<p>The following code demonstrates that doing a case-insensitive compare by calling .lower() on two strings which are each almost a megabyte in size takes about 0.009 seconds on my 1.8GHz desktop computer:</p>

<pre><code>from timeit import Timer

s1 = ""1234567890"" * 100000 + ""a""
s2 = ""1234567890"" * 100000 + ""B""

code = ""s1.lower() &lt; s2.lower()""
time = Timer(code, ""from __main__ import s1, s2"").timeit(1000)
print time / 1000   # 0.00920499992371 on my machine
</code></pre>

<p>If indeed this is an extremely significant, performance-critical section of code, then I recommend writing a function in C and calling it from your Python code, since that will allow you to do a truly efficient case-insensitive search.  Details on writing C extension modules can be found here: <a href=""https://docs.python.org/extending/extending.html"" rel=""nofollow noreferrer"">https://docs.python.org/extending/extending.html</a></p>
",""
"63475","2","62064","<p>I found this series of <a href=""http://www.linux-magazine.com/online/features/django_reloaded_workshop_part_1"" rel=""nofollow noreferrer"">screencasts</a> to be pretty good at introducing it. </p>
",""
"63528","2","61605","<p>It's fine to return multiple values using a tuple for simple functions such as <code>divmod</code>. If it makes the code readable, it's Pythonic.</p>

<p>If the return value starts to become confusing, check whether the function is doing too much and split it if it is. If a big tuple is being used like an object, make it an object. Also, consider using <a href=""http://code.activestate.com/recipes/500261/"" rel=""nofollow noreferrer"">named tuples</a>, which will be part of the standard library in Python 2.6.</p>
",""
"63549","2","61605","<p>It's definitely pythonic. The fact that you can return multiple values from a function the boilerplate you would have in a language like C where you need to define a struct for every combination of types you return somewhere.</p>

<p>However, if you reach the point where you are returning something crazy like 10 values from a single function, you should seriously consider bundling them in a class because at that point it gets unwieldy.</p>
",""
"63635","2","61517","<blockquote>
  <p>To build a dictionary from an arbitrary <i>object</i>, it's sufficient to use <code>__dict__</code>.</p>
</blockquote>

<p>This misses attributes that the object inherits from its class. For example,</p>

<pre><code>class c(object):
    x = 3
a = c()
</code></pre>

<p>hasattr(a, 'x') is true, but 'x' does not appear in a.__dict__</p>
",""
"63645","2","61151","<p>When writing a package called ""foo"", I will put unit tests into a separate package ""foo_test"". Modules and subpackages will then have the same name as the SUT package module. E.g. tests for a module foo.x.y are found in foo_test.x.y. The __init__.py files of each testing package then contain an AllTests suite that includes all test suites of the package. setuptools provides a convenient way to specify the main testing package, so that after ""python setup.py develop"" you can just use ""python setup.py test"" or ""python setup.py test -s foo_test.x.SomeTestSuite"" to the just a specific suite.</p>
",""
"63809","2","61605","<p>Returning a tuple is cool. Also note the new namedtuple
which was added in python 2.6 which may make this more palatable for you:
<a href=""http://docs.python.org/dev/library/collections.html#collections.namedtuple"" rel=""nofollow noreferrer"">http://docs.python.org/dev/library/collections.html#collections.namedtuple</a></p>
",""
"63820","2","62567","<p>I can't find any other built-in way of doing case-insensitive comparison: The <a href=""http://code.activestate.com/recipes/170242/"" rel=""nofollow noreferrer"">python cook-book recipe</a> uses lower().</p>

<p>However you have to be careful when using lower for comparisons because of the <a href=""http://en.wikipedia.org/wiki/Turkish_dotted_and_dotless_I"" rel=""nofollow noreferrer"">Turkish I problem</a>. Unfortunately Python's handling for Turkish Is is not good. ı is converted to I, but I is not converted to ı. İ is converted to i, but i is not converted to İ. </p>
",""
"64110","2","61605","<p>Yes, returning multiple values (i.e., a tuple) is definitely pythonic.  As others have pointed out, there are plenty of examples in the Python standard library, as well as in well-respected Python projects.  Two additional comments:</p>

<ol>
<li>Returning multiple values is sometimes very, very useful.  Take, for example, a method that optionally handles an event (returning some value in doing so) and also returns success or failure.  This might arise in a chain of responsibility pattern.  In other cases, you want to return multiple, closely linked pieces of data---as in the example given.  In this setting, returning multiple values is akin to returning a single instance of an anonymous class with several member variables.</li>
<li><p>Python's handling of method arguments necessitates the ability to directly return multiple values.  In C++, for example, method arguments can be passed by reference, so you can assign output values to them, in addition to the formal return value.  In Python, arguments are passed ""by reference"" (but in the sense of Java, not C++).  You can't assign new values to method arguments and have it reflected outside method scope.  For example:</p>

<pre><code>// C++
void test(int&amp; arg)
{
    arg = 1;
}

int foo = 0;
test(foo); // foo is now 1!
</code></pre>

<p>Compare with:</p>

<pre><code># Python
def test(arg):
    arg = 1

foo = 0
test(foo) # foo is still 0
</code></pre></li>
</ol>
",""
"64266","2","60848","<p>if you don't need the dict functionality, and only need to return tuples in the order you've inserted them, wouldn't a queue work better?</p>
",""
"64756","2","60208","<p>The switch statement is just syntactical sugar which is probably why Python doesn't have it. You can use if else statements for this functionality easily.</p>

<p>Like Matthew Schinckel said, you can use if and elif and else.</p>

<p>It is also a simple matter to have ""fall-through"" capabilities like most switch statements. All you have to do is not  use elif.</p>

<pre><code>if x == 1:
    # 1
if x == 2:
    # fall-through
elif x == 3:
    # not fall-through
</code></pre>
",""
"65326","2","60848","<p>I've used StableDict before with good success.</p>

<p><a href=""http://pypi.python.org/pypi/StableDict/0.2"" rel=""nofollow noreferrer"">http://pypi.python.org/pypi/StableDict/0.2</a></p>
",""
"65834","2","62567","<p>You could translate each string to lowercase once --- lazily only when you need it, or as a prepass to the sort if you know you'll be sorting the entire collection of strings.  There are several ways to attach this comparison key to the actual data being sorted, but these techniques should be addressed in a separate issue.</p>

<p>Note that this technique can be used not only to handle upper/lower case issues, but for other types of sorting such as locale specific sorting, or ""Library-style"" title sorting that ignores leading articles and otherwise normalizes the data before sorting it.</p>
",""
"65924","2","60649","<p>In terms of speed, the best cross-platform IPC mechanism will be pipes.  That assumes, however, that you want cross-platform IPC on the same machine.  If you want to be able to talk to processes on remote machines, you'll want to look at using sockets instead.  Luckily, if you're talking about TCP at least, sockets and pipes behave pretty much the same behavior.  While the APIs for setting them up and connecting them are different, they both just act like streams of data.</p>

<p>The difficult part, however, is not the communication channel, but the messages you pass over it.  You really want to look at something that will perform verification and parsing for you.  I recommend looking at Google's <a href=""http://code.google.com/apis/protocolbuffers/docs/overview.html"" rel=""noreferrer"">Protocol Buffers</a>. You basically create a spec file that describes the object you want to pass between processes, and there is a compiler that generates code in a number of different languages for reading and writing objects that match the spec.  It's much easier (and less bug prone) than trying to come up with a messaging protocol and parser yourself.</p>
",""
"65991","2","60848","<p>Or, just make the key a tuple with time.now() as the first field in the tuple.</p>

<p>Then you can retrieve the keys with dictname.keys(), sort, and voila!</p>

<p>Gerry</p>
",""
"66069","2","60649","<p>If you're willing to try something a little different, there's the <a href=""http://zeroc.com/ice.html"" rel=""nofollow noreferrer"">ICE</a> platform from <a href=""http://zeroc.com"" rel=""nofollow noreferrer"">ZeroC</a>. It's open source, and is supported on pretty much every OS you can think of, as well as having language support for C++, C#, Java, Ruby, Python and PHP. Finally, it's very easy to drive (the language mappings are tailored to fit naturally into each language). It's also fast and efficient. There's even a cut-down version for devices.</p>
",""
"66309","2","62064","<p>There's a list of <a href=""http://code.djangoproject.com/wiki/DjangoScreencasts"" rel=""nofollow noreferrer"">Django screencasts on the Django Project web/wiki</a>. </p>

<p>Once you have a handle on Django be sure to watch <a href=""http://ericholscher.com/blog/2008/sep/12/screencast-django-command-extensions/"" rel=""nofollow noreferrer"">Eric Holscher's introduction of Django Command Extensions.</a> He notes ""it is one of my favorite third party apps, and it gets installed in every Django environment I work in.""</p>

<p>And today the <a href=""http://www.youtube.com/results?search_query=djangocon+2008&amp;search_type=&amp;aq=f"" rel=""nofollow noreferrer"">DjangoCon videos appeared on YouTube</a>...</p>
",""
"66440","2","61781","<p>I don't believe that VBScript as hosted by IIS has any way of executing an external process.  If you are using python as an AXscripting engine then you could just use the sys module.  If the script you're calling is actually meant to be a cgi script you'll have to mimic all the environment variables that the cgi uses.  The alternative is to put the script on the python path, import it and hope that it is modular enough that you can call the pieces you need and bypass the cgi handling code.</p>
",""
"66547","2","62567","<p>In response to your clarification...</p>

<p>You could use <a href=""http://docs.python.org/lib/ctypes-ctypes-tutorial.html"" rel=""nofollow noreferrer"">ctypes</a> to execute the c function ""strcasecmp"".  Ctypes is included in Python 2.5.  It provides the ability to call out to dll and shared libraries such as libc. Here is a quick example (Python on Linux; see link for Win32 help):</p>

<pre><code>from ctypes import *
libc = CDLL(""libc.so.6"")  // see link above for Win32 help
libc.strcasecmp(""THIS"", ""this"") // returns 0
libc.strcasecmp(""THIS"", ""THAT"") // returns 8
</code></pre>

<p>may also want to reference <a href=""http://linux.die.net/man/3/strcasecmp"" rel=""nofollow noreferrer"">strcasecmp documentation</a></p>

<p>Not really sure this is any faster or slower (have not tested), but it's a way to use a C function to do case insensitive string comparisons. </p>

<p>~~~~~~~~~~~~~~</p>

<p><a href=""http://code.activestate.com/recipes/194371/"" rel=""nofollow noreferrer"" title=""ActiveState Code"">ActiveState Code - Recipe 194371: Case Insensitive Strings</a>
is a recipe for creating a case insensitive string class.  It might be a bit over kill for something quick, but could provide you with a common way of handling case insensitive strings if you plan on using them often.</p>
",""
"66967","2","61605","<p>I'm fairly new to Python, but the tuple technique seems very pythonic to me.  However, I've had another idea that may enhance readability.  Using a dictionary allows access to the different values by name rather than position.  For example:</p>

<pre><code>def divide(x, y):
    return {'quotient': x/y, 'remainder':x%y }

answer = divide(22, 7)
print answer['quotient']
print answer['remainder']
</code></pre>
",""
"67388","2","62567","<p>The recommended idiom to sort lists of values using expensive-to-compute keys is to the so-called ""decorated pattern"". It consists simply in building a list of (key, value) tuples from the original list, and sort that list. Then it is trivial to eliminate the keys and get the list of sorted values:</p>

<pre><code>&gt;&gt;&gt; original_list = ['a', 'b', 'A', 'B']
&gt;&gt;&gt; decorated = [(s.lower(), s) for s in original_list]
&gt;&gt;&gt; decorated.sort()
&gt;&gt;&gt; sorted_list = [s[1] for s in decorated]
&gt;&gt;&gt; sorted_list
['A', 'a', 'B', 'b']
</code></pre>

<p>Or if you like one-liners:</p>

<pre><code>&gt;&gt;&gt; sorted_list = [s[1] for s in sorted((s.lower(), s) for s in original_list)]
&gt;&gt;&gt; sorted_list
['A', 'a', 'B', 'b']
</code></pre>

<p>If you really worry about the cost of calling lower(), you can just store tuples of (lowered string, original string) everywhere. Tuples are the cheapest kind of containers in Python, they are also hashable so they can be used as dictionary keys, set members, etc.</p>
",""
"67450","2","60208","<p>I would just use if/elif/else statements. I think that it's good enough to replace the switch statement.</p>
",""
"67532","2","60649","<p>You might want to try <a href=""http://www.msobczak.com/prog/yami/"" rel=""noreferrer"" title=""YAMI"">YAMI</a> , it's very simple yet functional, portable and comes with binding to few languages</p>
",""
"67583","2","62567","<p>Your question implies that you don't need Unicode. Try the following code snippet; if it works for you, you're done:</p>

<pre><code>Python 2.5.2 (r252:60911, Aug 22 2008, 02:34:17)
[GCC 4.3.1] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import locale
&gt;&gt;&gt; locale.setlocale(locale.LC_COLLATE, ""en_US"")
'en_US'
&gt;&gt;&gt; sorted(""ABCabc"", key=locale.strxfrm)
['a', 'A', 'b', 'B', 'c', 'C']
&gt;&gt;&gt; sorted(""ABCabc"", cmp=locale.strcoll)
['a', 'A', 'b', 'B', 'c', 'C']
</code></pre>

<p>Clarification: in case it is not obvious at first sight, locale.strcoll seems to be the function you need, avoiding the str.lower or locale.strxfrm ""duplicate"" strings.</p>
",""
"69867","2","60152","<p>The <a href=""https://developer.mozilla.org/en/PyXPCOM"" rel=""nofollow noreferrer"">PyXPCOM extension</a> is one possibility.</p>

<p>But looking at what firewatir provides, I have to 2nd the suggestion for twill. It's based on <a href=""http://wwwsearch.sourceforge.net/mechanize/"" rel=""nofollow noreferrer"">mechanize</a>, which might also be useful in this context.</p>
",""
"74590","2","60649","<p>Why not D-Bus?  It's a very simple message passing system that runs on almost all platforms and is designed for robustness.  It's supported by pretty much every scripting language at this point.</p>

<p><a href=""http://freedesktop.org/wiki/Software/dbus"" rel=""noreferrer"">http://freedesktop.org/wiki/Software/dbus</a></p>
",""
"74615","2","60649","<p>Python has a pretty good IPC library: see <a href=""https://docs.python.org/2/library/ipc.html"" rel=""nofollow noreferrer""><a href=""https://docs.python.org/2/library/ipc.html"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/ipc.html</a></a></p>
",""
"77145","2","61151","<p>If the tests are simple, simply put them in the docstring -- most of the test frameworks for Python will be able to use that:</p>

<pre><code>&gt;&gt;&gt; import module
&gt;&gt;&gt; module.method('test')
'testresult'
</code></pre>

<p>For other more involved tests, I'd put them either in <code>../tests/test_module.py</code> or in <code>tests/test_module.py</code>.</p>
",""
"83983","1","","<p>example:</p>

<pre><code>a_list = [1, 2, 3]
a_list.len() # doesn't work
len(a_list) # works
</code></pre>

<p>Python being (very) object oriented, I don't understand why the 'len' function isn't inherited by the object. 
Plus I keep trying the wrong solution since it appears as the logical one to me</p>
","<python>"
"84016","2","83983","<p>Maybe you're looking for <code>__len__</code>.  If that method exists, then len(a) calls it:</p>

<pre><code>&gt;&gt;&gt; class Spam:
...   def __len__(self): return 3
... 
&gt;&gt;&gt; s = Spam()
&gt;&gt;&gt; len(s)
3
</code></pre>
",""
"84019","2","83983","<p>It just isn't.</p>

<p>You can, however, do:</p>

<pre><code>&gt;&gt;&gt; [1,2,3].__len__()

3
</code></pre>

<p>Adding a <code>__len__()</code> method to a class is what makes the <code>len()</code> magic work.</p>
",""
"84038","2","83983","<p>Well, there actually is a length method, it is just hidden:</p>

<pre><code>&gt;&gt;&gt; a_list = [1, 2, 3]
&gt;&gt;&gt; a_list.__len__()
3
</code></pre>

<p>The len() built-in function appears to be simply a wrapper for a call to the hidden <strong>len</strong>() method of the object.</p>

<p>Not sure why they made the decision to implement things this way though.</p>
",""
"84154","2","83983","<p>Guido's explanation is <a href=""http://mail.python.org/pipermail/python-3000/2006-November/004643.html"" rel=""noreferrer"">here</a>:</p>

<blockquote>
  <p>First of all, I chose len(x) over x.len() for HCI reasons (def __len__() came much later). There are two intertwined reasons actually, both HCI:</p>
  
  <p>(a) For some operations, prefix notation just reads better than postfix — prefix (and infix!) operations have a long tradition in mathematics which likes notations where the visuals help the mathematician thinking about a problem. Compare the easy with which we rewrite a formula like x*(a+b) into x<em>a + x</em>b to the clumsiness of doing the same thing using a raw OO notation.</p>
  
  <p>(b) When I read code that says len(x) I know that it is asking for the length of something. This tells me two things: the result is an integer, and the argument is some kind of container. To the contrary, when I read x.len(), I have to already know that x is some kind of container implementing an interface or inheriting from a class that has a standard len(). Witness the confusion we occasionally have when a class that is not implementing a mapping has a get() or keys() method, or something that isn’t a file has a write() method.</p>
  
  <p>Saying the same thing in another way, I see ‘len‘ as a built-in operation. I’d hate to lose that. /…/</p>
</blockquote>
",""
"84155","2","83983","<p>The short answer: 1) backwards compatibility and 2) there's not enough of a difference for it to really matter.  For a more detailed explanation, read on.</p>

<p>The idiomatic Python approach to such operations is special methods which aren't intended to be called directly.  For example, to make <code>x + y</code> work for your own class, you write a <code>__add__</code> method.  To make sure that <code>int(spam)</code> properly converts your custom class, write a <code>__int__</code> method.  To make sure that <code>len(foo)</code> does something sensible, write a <code>__len__</code> method.</p>

<p>This is how things have always been with Python, and I think it makes a lot of sense for some things.  In particular, this seems like a sensible way to implement operator overloading.  As for the rest, different languages disagree; in Ruby you'd convert something to an integer by calling <code>spam.to_i</code> directly instead of saying <code>int(spam)</code>.</p>

<p>You're right that Python is an extremely object-oriented language and that having to call an external function on an object to get its length seems odd.  On the other hand, <code>len(silly_walks)</code> isn't any more onerous than <code>silly_walks.len()</code>, and Guido has said that he actually prefers it (<a href=""http://mail.python.org/pipermail/python-3000/2006-November/004643.html"" rel=""noreferrer"">http://mail.python.org/pipermail/python-3000/2006-November/004643.html</a>).</p>
",""
"84205","2","83983","<p>This way fits in better with the rest of the language. The convention in python is that you add <code>__foo__</code> special methods to objects to make them have certain capabilities (rather than e.g. deriving from a specific base class). For example, an object is </p>

<ul>
<li>callable if it has a <code>__call__</code> method  </li>
<li>iterable if it has an <code>__iter__</code> method, </li>
<li>supports access with [] if it has <code>__getitem__</code> and <code>__setitem__</code>. </li>
<li>...</li>
</ul>

<p>One of these special methods is <code>__len__</code> which makes it have a length accessible with <code>len()</code>.</p>
",""
"84337","2","83983","<p>there is some good info below on why certain things are functions and other are methods.  It does indeed cause some inconsistencies in the language.</p>

<p><a href=""http://mail.python.org/pipermail/python-dev/2008-January/076612.html"" rel=""nofollow noreferrer"">http://mail.python.org/pipermail/python-dev/2008-January/076612.html</a></p>
",""
"86420","2","37535","<p>If you're still checking this,  I have a GPL FoxPro-to-PostgreSQL converter at <a href=""https://github.com/kstrauser/pgdbf"" rel=""noreferrer"">https://github.com/kstrauser/pgdbf</a> .  We use it to routinely copy our tables into PostgreSQL for fast reporting.</p>
",""
"94543","2","13857","<p>The best explanation I ever saw of a closure was to explain the mechanism.  It went something like this:</p>

<p>Imagine your program stack as a degenerate tree where each node has only one child and the single leaf node is the context of your currently executing procedure.</p>

<p>Now relax the constraint that each node can have only one child.</p>

<p>If you do this, you can have a construct ('yield') that can return from a procedure without discarding the local context (i.e. it doesn't pop it off the stack when you return).  The next time the procedure is invoked, the invocation picks up the old stack (tree) frame and continues executing where it left off.</p>
",""
"99347","2","36932","<p>Alexandru's suggestion of using class constants for enums works quite well. </p>

<p>I also like to add a dictionary for each set of constants to lookup a human-readable string representation. </p>

<p>This serves two purposes: a) it provides a simple way to pretty-print your enum and b) the dictionary logically groups the constants so that you can test for membership.</p>

<pre><code>class Animal:    
  TYPE_DOG = 1
  TYPE_CAT = 2

  type2str = {
    TYPE_DOG: ""dog"",
    TYPE_CAT: ""cat""
  }

  def __init__(self, type_):
    assert type_ in self.type2str.keys()
    self._type = type_

  def __repr__(self):
    return ""&lt;%s type=%s&gt;"" % (
        self.__class__.__name__, self.type2str[self._type].upper())
</code></pre>
",""
"100803","2","62064","<p>ShowMeDo's <a href=""http://showmedo.com/videos/django"" rel=""noreferrer"">Django</a> section has a good collection.  ShowMeDo's <a href=""http://showmedo.com/videos/python"" rel=""noreferrer"">Python</a> section has a large set of Python-related stuff that might give you extra background information.</p>

<p>If you comment in ShowMeDo and tell the authors what else you'd like to see, they're quite responsive and might make new tutorials based on your suggestions.</p>
",""
"102572","2","61894","<p>You can't use relative paths, as Toni suggests, because you have no guarantee that the path from your working directory to your app's directory will remain the same.</p>

<p>The correct solution is to either use os.path.split, as you are, or to use something like:</p>

<pre><code>path = os.path.join(os.path.dirname(__file__), '..', 'templates', 'myPage.html')
</code></pre>

<p>My usual approach is to generate a path to the template directory using the above method, and store it as a member of my controller object, and provide a ""getTemplatePath"" method that takes the provided filename and joins it with the basename.</p>
",""
"102990","2","60208","<p>expanding on the ""dict as switch"" idea. if you want to use a default value for your switch:</p>

<pre><code>def f(x):
    try:
        return {
            'a': 1,
            'b': 2,
        }[x]
    except KeyError:
        return 'default'
</code></pre>
",""
"103081","2","60208","<p>If you'd like defaults you could use the dictionary <a href=""https://docs.python.org/2/library/stdtypes.html#dict.get"" rel=""noreferrer""><code>get(key[, default])</code></a> method:</p>

<pre><code>def f(x):
    return {
        'a': 1,
        'b': 2
    }.get(x, 9)    # 9 is default if x not found
</code></pre>
",""
"103211","2","60848","<p>It's not possible unless you store the keys in a separate list for referencing later.</p>
",""
"103610","2","61151","<p>I also tend to put my unit tests in the file itself, as Jeremy Cantrell above notes, although I tend to not put the test function in the main body, but rather put everything in an</p>

<pre><code>if __name__ == '__main__':
   do tests...
</code></pre>

<p>block.  This ends up adding documentation to the file as 'example code' for how to use the python file you are testing.</p>

<p>I should add, I tend to write very tight modules/classes.  If your modules require very large numbers of tests, you can put them in another, but even then, I'd still add:</p>

<pre><code>if __name__ == '__main__':
   import tests.thisModule
   tests.thisModule.runtests
</code></pre>

<p>This lets anybody reading your source code know where to look for the test code.</p>
",""
"106696","2","35922","<p>Please check out Dabo, our framework for desktop applications. <a href=""http://dabodev.com"" rel=""noreferrer"">http://dabodev.com</a></p>

<p>We have wrapped the wxPython toolkit for the UI classes, and replaced their ugly C++ style functions with simple properties. You mentioned assigning color: in Dabo, you would do it very simply, using your choice of:</p>

<pre><code>obj.BackColor = ""red""
obj.BackColor = (255, 0, 0)
obj.BackColor = ""FF0000""
obj.BackColor = ""#FF0000""
</code></pre>

<p>Dabo understands all of these, and handles the differences for you automatically.</p>

<p>I am one of the authors of Dabo, and would be happy to answer any other questions that you may have.</p>

<p>--- Ed Leafe</p>
",""
"107187","2","36953","<p>I'm a happy user of <a href=""http://www.dabeaz.com/ply/"" rel=""noreferrer"">PLY</a>. It is a pure-Python implementation of Lex &amp; Yacc, with lots of small niceties that make it quite Pythonic and easy to use. Since Lex &amp; Yacc are the most popular lexing &amp; parsing tools and are used for the most projects, PLY has the advantage of standing on giants' shoulders. A lot of knowledge exists online on Lex &amp; Yacc, and you can freely apply it to PLY.</p>

<p>PLY also has a good <a href=""http://www.dabeaz.com/ply/ply.html"" rel=""noreferrer"">documentation page</a> with some simple examples to get you started. </p>

<p>For a listing of lots of Python parsing tools, see <a href=""http://nedbatchelder.com/text/python-parsers.html"" rel=""noreferrer"">this</a>.</p>
",""
"107207","2","36953","<p><a href=""http://pygments.org/"" rel=""nofollow noreferrer"">pygments</a> is a source code syntax highlighter written in python.  It has lexers and formatters, and may be interesting to peek at the source.</p>
",""
"107973","2","36932","<pre><code>def M_add_class_attribs(attribs):
    def foo(name, bases, dict_):
        for v, k in attribs:
            dict_[k] = v
        return type(name, bases, dict_)
    return foo

def enum(*names):
    class Foo(object):
        __metaclass__ = M_add_class_attribs(enumerate(names))
        def __setattr__(self, name, value):  # this makes it read-only
            raise NotImplementedError
    return Foo()
</code></pre>

<p>Use it like this:  </p>

<pre><code>Animal = enum('DOG', 'CAT')
Animal.DOG # returns 0
Animal.CAT # returns 1
Animal.DOG = 2 # raises NotImplementedError
</code></pre>

<p>if you just want unique symbols and don't care about the values, replace this line:  </p>

<pre><code>__metaclass__ = M_add_class_attribs(enumerate(names))
</code></pre>

<p>with this:</p>

<pre><code>__metaclass__ = M_add_class_attribs((object(), name) for name in names)
</code></pre>
",""
"111934","1","","<p>I want to create some text in a canvas:</p>

<pre><code>myText = self.canvas.create_text(5, 5, anchor=NW, text=""TEST"")
</code></pre>

<p>Now how do I find the width and height of myText?</p>
","<python><tkinter><tkinter-canvas>"
"111945","1","","<p>I need to upload some data to a server using HTTP <code>PUT</code> in python. From my brief reading of the urllib2 docs, it only does HTTP <code>POST</code>. Is there any way to do an HTTP <code>PUT</code> in python?</p>
","<python><http><put>"
"111952","2","111945","<p>Have you taken a look at <a href=""http://inamidst.com/proj/put/put.py"" rel=""nofollow noreferrer"">put.py</a>? I've used it in the past. You can also just hack up your own request with urllib.</p>
",""
"111954","1","","<p>You can use ftplib for full FTP support in Python. However the preferred way of getting a directory listing is:</p>

<pre><code># File: ftplib-example-1.py

import ftplib

ftp = ftplib.FTP(""www.python.org"")
ftp.login(""anonymous"", ""ftplib-example-1"")

data = []

ftp.dir(data.append)

ftp.quit()

for line in data:
    print ""-"", line
</code></pre>

<p>Which yields:</p>

<pre><code>$ python ftplib-example-1.py
- total 34
- drwxrwxr-x  11 root     4127         512 Sep 14 14:18 .
- drwxrwxr-x  11 root     4127         512 Sep 14 14:18 ..
- drwxrwxr-x   2 root     4127         512 Sep 13 15:18 RCS
- lrwxrwxrwx   1 root     bin           11 Jun 29 14:34 README -&gt; welcome.msg
- drwxr-xr-x   3 root     wheel        512 May 19  1998 bin
- drwxr-sr-x   3 root     1400         512 Jun  9  1997 dev
- drwxrwxr--   2 root     4127         512 Feb  8  1998 dup
- drwxr-xr-x   3 root     wheel        512 May 19  1998 etc
...
</code></pre>

<p>I guess the idea is to parse the results to get the directory listing. However this listing is directly dependent on the FTP server's way of formatting the list. It would be very messy to write code for this having to anticipate all the different ways FTP servers might format this list.</p>

<p>Is there a portable way to get an array filled with the directory listing?</p>

<p>(The array should only have the folder names.)</p>
","<python><ftp><portability>"
"111966","2","111954","<p>Try to use <a href=""https://docs.python.org/3/library/ftplib.html#ftplib.FTP.nlst"" rel=""nofollow noreferrer""><code>ftp.nlst(dir)</code></a>.</p>

<p>However, note that if the folder is empty, it might throw an error:</p>

<pre><code>files = []

try:
    files = ftp.nlst()
except ftplib.error_perm, resp:
    if str(resp) == ""550 No files found"":
        print ""No files in this directory""
    else:
        raise

for f in files:
    print f
</code></pre>
",""
"111968","2","111945","<p>You can of course roll your own with the existing standard libraries at any level from sockets up to tweaking urllib.</p>

<p><a href=""http://pycurl.sourceforge.net/"" rel=""nofollow noreferrer"">http://pycurl.sourceforge.net/</a></p>

<p>""PyCurl is a Python interface to libcurl.""</p>

<p>""libcurl is a free and easy-to-use client-side URL transfer library, ... supports ... HTTP PUT""</p>

<p>""The main drawback with PycURL is that it is a relative thin layer over libcurl without any of those nice Pythonic class hierarchies. This means it has a somewhat steep learning curve unless you are already familiar with libcurl's C API. ""</p>
",""
"111973","2","111945","<p>You should have a look at the <a href=""http://docs.python.org/lib/module-httplib.html"" rel=""noreferrer"">httplib module</a>.  It should let you make whatever sort of HTTP request you want.</p>
",""
"111974","2","111934","<pre><code>bounds = self.canvas.bbox(myText)  # returns a tuple like (x1, y1, x2, y2)
width = bounds[2] - bounds[0]
height = bounds[3] - bounds[1]
</code></pre>

<p>See the <a href=""http://infohost.nmt.edu/tcc/help/pubs/tkinter/canvas-methods.html"" rel=""noreferrer"">TkInter reference</a>.</p>
",""
"111978","2","111954","<p>There's no standard for the layout of the <code>LIST</code> response. You'd have to write code to handle the most popular layouts. I'd start with Linux <code>ls</code> and Windows Server <code>DIR</code> formats. There's a lot of variety out there, though. </p>

<p>Fall back to the <code>nlst</code> method (returning the result of the <code>NLST</code> command) if you can't parse the longer list. For bonus points, cheat: perhaps the longest number in the line containing a known file name is its length. </p>
",""
"111983","1","","<p>If you are creating a 1d array in Python is there any benefit to using the NumPy package?</p>
","<python><numpy>"
"111988","2","111945","<pre><code>import urllib2
opener = urllib2.build_opener(urllib2.HTTPHandler)
request = urllib2.Request('http://example.org', data='your_put_data')
request.add_header('Content-Type', 'your/contenttype')
request.get_method = lambda: 'PUT'
url = opener.open(request)
</code></pre>
",""
"112025","2","111983","<p>It all depends on what you plan to do with the array. If all you're doing is creating arrays of simple data types and doing I/O, the <a href=""http://docs.python.org/lib/module-array.html"" rel=""noreferrer"">array</a> module will do just fine.</p>

<p>If, on the other hand, you want to do any kind of numerical calculations, the array module doesn't provide any help with that. <a href=""http://numpy.scipy.org/array_interface.shtml"" rel=""noreferrer"">NumPy</a> (and <a href=""http://scipy.org"" rel=""noreferrer"">SciPy</a>) give you a wide variety of operations between arrays and special functions that are useful not only for scientific work but for things like advanced image manipulation or in general anything where you need to perform efficient calculations with large amounts of data.</p>

<p>Numpy is also much more flexible, e.g. it supports arrays of any type of Python objects, and is also able to interact ""natively"" with your own objects if they conform to the <a href=""http://numpy.scipy.org/"" rel=""noreferrer"">array interface</a>.</p>
",""
"114648","2","111945","<p>I needed to solve this problem too a while back so that I could act as a client for a RESTful API.  I settled on httplib2 because it allowed me to send PUT and DELETE in addition to GET and POST.  Httplib2 is not part of the standard library but you can easily get it from the cheese shop.</p>
",""
"116122","2","111945","<p>I also recommend <a href=""http://code.google.com/p/httplib2/"" rel=""nofollow noreferrer"">httplib2</a> by Joe Gregario.  I use this regularly instead of httplib in the standard lib.</p>
",""
"121316","2","14422","<blockquote>
  <p>All I want to do is create fairly simple Python applications with Cocoa GUI's.. Can anyone shed light on the horrible documentation, or point me at some tutorials that don't just give you huge blocks of code and assume you know what NSThread.detachNewThreadSelector_toTarget_withObject_(""queryController"", self, None) does..? </p>
  
  <p>[...]</p>
  
  <p>basically all I want to do is write Cocoa applications without having to learn ObjC.</p>
</blockquote>

<p>Although I basically agree with Soeren's response, I'd take it even further:</p>

<p>It will be a long time, if ever, before you can use Cocoa without some understanding of Objective C.  Cocoa isn't an abstraction built independently from Objective C, it is explicitly tied to it.  You can see this in the example line of code you quoted above:</p>

<pre><code>NSThread.detachNewThreadSelector_toTarget_withObject_(""queryController"", self, None) 
</code></pre>

<p>This is the Python way of writing the Objective C line:</p>

<pre><code>[NSThread detachNewThreadSelector:@selector(queryController:) toTarget:self withObject:nil];
</code></pre>

<p>Now, it's important to notice here that this line can be seen in two ways:  (1) as a line of Objective C, or (2) as an invocation of the Cocoa frameworks.  We see it as (1) by the syntax.  We see it as (2) by recognizing that NSThread is a Cocoa framework which provides a set of handy features.  In this case, this particular Cocoa framework is making it easy for us to have an object start doing something on a new thread.</p>

<p>But the kicker is this:  The Cocoa framework here (NSThread) is providing us this handy service in a way that is explicitly tied to the language the framework has been written in.  Namely, NSThread gave us a feature that explicitly refers to ""selectors"".  Selectors are, in point of fact, the name for something fundamental about how Objective C works.</p>

<p>So there's the rub.  Cocoa is fundamentally an Objective-C creation, and its creators have built it with Objective C in mind.  I'm not claiming that it's impossible to translate the interface to the Cocoa features into a form more natural for other languages.  It's just that as soon as you change the Cocoa framework to stop referring to ""selectors"", it's not really the Cocoa framework any more.  It's a translated version.  And once you start going down that road, I'm guessing things get really messy.  You're trying to keep up with Apple as they update Cocoa, maybe you hit some parts of Cocoa that just don't translate well into the new language, whatever.  So instead, things like PyObjC opt to expose Cocoa directly, in a way that has a very clear and simple correlation.  As they say in the documentation:</p>

<blockquote>
  <p>In order to have a lossless and unambiguous translation between Objective-C messages and Python methods, the Python method name equivalent is simply the selector with colons replaced by underscores.</p>
</blockquote>

<p>Sure, it's a bit ugly, and it does mean you need to know something about Objective-C, but that's because the alternative, if one truly exists, is not necessarily better.</p>
",""
"121364","2","62567","<p>Here is a benchmark showing that using <a href=""http://docs.python.org/2/library/string.html?highlight=lower#string.lower"" rel=""noreferrer""><code>str.lower</code></a> is faster than the accepted answer's proposed method (<code>libc.strcasecmp</code>):</p>

<pre><code>#/usr/bin/env python2.5
import random
import timeit

from ctypes import *
libc = CDLL(""libc.dylib"") # change to ""libc.so.6"" on linux

words = [word.rstrip() for word in
          open('/usr/share/dict/words', 'r').readlines()]
random.shuffle(words)
print '%i words in list' % len(words)

setup = 'from __main__ import words, libc; gc.enable()'
stmts = [
    (""simple sort"", ""sorted(words)""),
    (""sort with key=str.lower"", ""sorted(words, key=str.lower)""),
    (""sort with cmp=libc.strcasecmp"", ""sorted(words, cmp=libc.strcasecmp)""),
]

for (comment, stmt) in stmts:
    t = timeit.Timer(stmt=stmt, setup=setup)
    print ""%s: %.2f msec/pass"" % (comment, (1000*t.timeit(10)/10))
</code></pre>

<p>typical times on my machine:</p>

<pre><code>235886 words in list
simple sort: 483.59 msec/pass
sort with key=str.lower: 1064.70 msec/pass
sort with cmp=libc.strcasecmp: 5487.86 msec/pass
</code></pre>

<p>So, the version with <code>str.lower</code> is not only the fastest by far, but also the most portable and pythonic of all the proposed solutions here.
I have not profiled memory usage, but the original poster has still not given a compelling reason to worry about it. Also, who says that a call into the libc module doesn't duplicate any strings?</p>

<p>NB: The <code>lower()</code> string method also has the advantage of being locale-dependent. Something you will probably not be getting right when writing your own ""optimised"" solution. Even so, due to bugs and missing features in Python, this kind of comparison may give you wrong results in a unicode context.</p>
",""
"128616","2","61151","<p>We use </p>

<p>app/src/code.py</p>

<p>app/testing/code_test.py </p>

<p>app/docs/..</p>

<p>In each test file we insert ""../src/"" in sys.path. It's not the nicest solution but works. I think it would be great if someone came up w/ something like maven in java that gives you standard conventions that just work, no matter what project you work on.</p>
",""
"129914","2","62064","<p>First, <strong>don't read the Django book</strong>.  It's very outdated.  Instead, read the <a href=""http://docs.djangoproject.com/en/dev/"" rel=""nofollow noreferrer"">official Django docs</a>.</p>

<p>Also, here's another link to the <a href=""http://www.youtube.com/view_play_list?p=D415FAF806EC47A1"" rel=""nofollow noreferrer"">Django Con videos</a> on YouTube (as listed by the guys at TWID).</p>
",""
"137207","2","36953","<p>For medium-complex grammars, <a href=""http://pyparsing.wikispaces.com/"" rel=""noreferrer"">PyParsing</a> is brilliant. You can define grammars directly within Python code, no need for code generation:</p>

<pre><code>&gt;&gt;&gt; from pyparsing import Word, alphas
&gt;&gt;&gt; greet = Word( alphas ) + "","" + Word( alphas ) + ""!"" # &lt;-- grammar defined here
&gt;&gt;&gt; hello = ""Hello, World!""
&gt;&gt;&gt;&gt; print hello, ""-&gt;"", greet.parseString( hello )
Hello, World! -&gt; ['Hello', ',', 'World', '!']
</code></pre>

<p>(Example taken from the PyParsing home page).</p>

<p>With parse actions (functions that are invoked when a certain grammar rule is triggered), you can convert parses directly into abstract syntax trees, or any other representation.</p>

<p>There are many helper functions that encapsulate recurring patterns, like operator hierarchies, quoted strings, nesting or C-style comments.</p>
",""
"141426","2","13857","<p><a href=""http://mrevelle.blogspot.com/2006/10/closure-on-closures.html"" rel=""noreferrer"">Closure on closures</a></p>

<blockquote>
  <p>Objects are data with methods
  attached, closures are functions with
  data attached.</p>
</blockquote>

<pre><code>def make_counter():
    i = 0
    def counter(): # counter() is a closure
        nonlocal i
        i += 1
        return i
    return counter

c1 = make_counter()
c2 = make_counter()

print (c1(), c1(), c2(), c2())
# -&gt; 1 2 1 2
</code></pre>
",""
"153358","2","62064","<p>I've started from <em><a href=""http://showmedo.com/videos/series?name=v7kABKL6R"" rel=""nofollow noreferrer"">Learn Django: Create a Wiki in 20 minutes</a></em>. It is pretty good.</p>
",""
"190394","2","37142","<p>In Python and Ruby it is only possible to use multiple cores, is to spawn new (heavyweight) processes.
The Java counterparts inherit the possibilities of the Java platform. You could imply use Java threads. That is for example a reason why sometimes (often) Java Application Server like Glassfish are used for Ruby on Rails applications.</p>
",""
"191257","2","37142","<p>For Python, the <a href=""http://pyprocessing.berlios.de/"" rel=""nofollow noreferrer"">PyProcessing</a> project allows you to program with processes much like you would use threads. It is included in the standard library of the recently released 2.6 version as <a href=""http://docs.python.org/library/multiprocessing.html"" rel=""nofollow noreferrer""><code>multiprocessing</code></a>. The module has many features for establishing and controlling access to shared data structures (queues, pipes, etc.) and support for common idioms (i.e. managers and worker pools).</p>
",""
"193863","2","62567","<p>Just use the <code>str().lower()</code> method, unless high-performance is important - in which case write that sorting method as a C extension.</p>

<p><a href=""http://starship.python.net/crew/arcege/extwriting/pyext.html"" rel=""nofollow noreferrer"">""How to write a Python Extension""</a> seems like a decent intro..</p>

<p>More interestingly, <a href=""http://www.dalkescientific.com/writings/NBN/c_extensions.html"" rel=""nofollow noreferrer"">This guide</a> compares using the ctypes library vs writing an external C module (the ctype is quite-substantially slower than the C extension).</p>
",""
"220537","2","36932","<p>It's funny, I just had a need for this the other day and I couldnt find an implementation worth using... so I wrote my own:</p>

<pre><code>import functools

class EnumValue(object):
    def __init__(self,name,value,type):
        self.__value=value
        self.__name=name
        self.Type=type
    def __str__(self):
        return self.__name
    def __repr__(self):#2.6 only... so change to what ever you need...
        return '{cls}({0!r},{1!r},{2})'.format(self.__name,self.__value,self.Type.__name__,cls=type(self).__name__)

    def __hash__(self):
        return hash(self.__value)
    def __nonzero__(self):
        return bool(self.__value)
    def __cmp__(self,other):
        if isinstance(other,EnumValue):
            return cmp(self.__value,other.__value)
        else:
            return cmp(self.__value,other)#hopefully their the same type... but who cares?
    def __or__(self,other):
        if other is None:
            return self
        elif type(self) is not type(other):
            raise TypeError()
        return EnumValue('{0.Name} | {1.Name}'.format(self,other),self.Value|other.Value,self.Type)
    def __and__(self,other):
        if other is None:
            return self
        elif type(self) is not type(other):
            raise TypeError()
        return EnumValue('{0.Name} &amp; {1.Name}'.format(self,other),self.Value&amp;other.Value,self.Type)
    def __contains__(self,other):
        if self.Value==other.Value:
            return True
        return bool(self&amp;other)
    def __invert__(self):
        enumerables=self.Type.__enumerables__
        return functools.reduce(EnumValue.__or__,(enum for enum in enumerables.itervalues() if enum not in self))

    @property
    def Name(self):
        return self.__name

    @property
    def Value(self):
        return self.__value

class EnumMeta(type):
    @staticmethod
    def __addToReverseLookup(rev,value,newKeys,nextIter,force=True):
        if value in rev:
            forced,items=rev.get(value,(force,()) )
            if forced and force: #value was forced, so just append
                rev[value]=(True,items+newKeys)
            elif not forced:#move it to a new spot
                next=nextIter.next()
                EnumMeta.__addToReverseLookup(rev,next,items,nextIter,False)
                rev[value]=(force,newKeys)
            else: #not forcing this value
                next = nextIter.next()
                EnumMeta.__addToReverseLookup(rev,next,newKeys,nextIter,False)
                rev[value]=(force,newKeys)
        else:#set it and forget it
            rev[value]=(force,newKeys)
        return value

    def __init__(cls,name,bases,atts):
        classVars=vars(cls)
        enums = classVars.get('__enumerables__',None)
        nextIter = getattr(cls,'__nextitr__',itertools.count)()
        reverseLookup={}
        values={}

        if enums is not None:
            #build reverse lookup
            for item in enums:
                if isinstance(item,(tuple,list)):
                    items=list(item)
                    value=items.pop()
                    EnumMeta.__addToReverseLookup(reverseLookup,value,tuple(map(str,items)),nextIter)
                else:
                    value=nextIter.next()
                    value=EnumMeta.__addToReverseLookup(reverseLookup,value,(str(item),),nextIter,False)#add it to the reverse lookup, but don't force it to that value

            #build values and clean up reverse lookup
            for value,fkeys in reverseLookup.iteritems():
                f,keys=fkeys
                for key in keys:
                    enum=EnumValue(key,value,cls)
                    setattr(cls,key,enum)
                    values[key]=enum
                reverseLookup[value]=tuple(val for val in values.itervalues() if val.Value == value)
        setattr(cls,'__reverseLookup__',reverseLookup)
        setattr(cls,'__enumerables__',values)
        setattr(cls,'_Max',max([key for key in reverseLookup] or [0]))
        return super(EnumMeta,cls).__init__(name,bases,atts)

    def __iter__(cls):
        for enum in cls.__enumerables__.itervalues():
            yield enum
    def GetEnumByName(cls,name):
        return cls.__enumerables__.get(name,None)
    def GetEnumByValue(cls,value):
        return cls.__reverseLookup__.get(value,(None,))[0]

class Enum(object):
    __metaclass__=EnumMeta
    __enumerables__=None

class FlagEnum(Enum):
    @staticmethod
    def __nextitr__():
        yield 0
        for val in itertools.count():
            yield 2**val

def enum(name,*args):
    return EnumMeta(name,(Enum,),dict(__enumerables__=args))
</code></pre>

<p>Take it or leave it, it did what I needed it to do :)</p>

<p>Use it like:</p>

<pre><code>class Air(FlagEnum):
    __enumerables__=('None','Oxygen','Nitrogen','Hydrogen')

class Mammals(Enum):
    __enumerables__=('Bat','Whale',('Dog','Puppy',1),'Cat')
Bool = enum('Bool','Yes',('No',0))
</code></pre>
",""
"237009","2","14422","<p>To be blunt:</p>

<p>If you want to be an effective Cocoa programmer, you must learn Objective-C.  End of story.</p>

<p>Neither Python or Ruby are a substitute for Objective-C via their respective bridges.  You still have to understand the Objective-C APIs, the behaviors inherent to NSObject derived classes, and many other details of Cocoa.</p>

<p>PyObjC and RubyCocoa are a great way to access Python or Ruby functionality from a Cocoa application, including building a Cocoa application mostly -- if not entirely -- in Python or Ruby.   But success therein is founded upon a thorough understanding of Cocoa and the Objective-C APIs it is composed of.</p>
",""
"245792","1","","<p>This is rather the inverse of <a href=""https://stackoverflow.com/questions/102535/what-can-you-use-python-generator-functions-for"">What can you use Python generator functions for?</a>: python generators, generator expressions, and the <code>itertools</code> module are some of my favorite features of python these days. They're especially useful when setting up chains of operations to perform on a big pile of data--I often use them when processing DSV files.</p>

<p><strong>So when is it <em>not</em> a good time to use a generator, or a generator expression, or an <code>itertools</code> function?</strong></p>

<ul>
<li>When should I prefer <code>zip()</code> over <code>itertools.izip()</code>, or</li>
<li><code>range()</code> over <code>xrange()</code>, or</li>
<li><code>[x for x in foo]</code> over <code>(x for x in foo)</code>?</li>
</ul>

<p>Obviously, we eventually need to ""resolve"" a generator into actual data, usually by creating a list or iterating over it with a non-generator loop. Sometimes we just need to know the length. This isn't what I'm asking.</p>

<p>We use generators so that we're not assigning new lists into memory for interim data. This especially makes sense for large datasets. Does it make sense for small datasets too? Is there a noticeable memory/cpu trade-off?</p>

<p>I'm especially interested if anyone has done some profiling on this, in light of the eye-opening discussion of <a href=""http://www.gossamer-threads.com/lists/python/python/76267"" rel=""nofollow noreferrer"">list comprehension performance vs. map() and filter()</a>. (<a href=""https://mail.python.org/pipermail//python-list/2001-December/096256.html"" rel=""nofollow noreferrer"">alt link</a>)</p>
","<python><optimization><iterator><generator>"
"245797","2","245792","<p>You should never favor <a href=""http://docs.python.org/2/library/functions.html#zip"" rel=""nofollow noreferrer""><code>zip</code></a> over <a href=""http://docs.python.org/2/library/itertools.html#itertools.izip"" rel=""nofollow noreferrer""><code>izip</code></a>, <code>range</code> over <code>xrange</code>, or list comprehensions over generator comprehensions. In Python 3.0 <code>range</code> has <code>xrange</code>-like semantics and <code>zip</code> has <code>izip</code>-like semantics.</p>

<p>List comprehensions are actually clearer like <code>list(frob(x) for x in foo)</code> for those times you need an actual list.</p>
",""
"245816","2","245792","<p>In general, don't use a generator when you need list operations, like len(), reversed(), and so on.</p>

<p>There may also be times when you don't want lazy evaluation (e.g. to do all the calculation up front so you can release a resource). In that case, a list expression might be better.</p>
",""
"246155","2","245792","<p>As you mention, ""This especially makes sense for large datasets"", I think this answers your question.</p>

<p>If your not hitting any walls, performance-wise, I would stick to lists and standard functions.  Then when you run into problems with performance make the switch.</p>
",""
"246481","2","245792","<p>Profile, Profile, Profile.</p>

<p>Profiling your code is the only way to know if what you're doing has any effect at all.</p>

<p>Most usages of xrange, generators, etc are over static size, small datasets. It's only when you get to large datasets that it really makes a difference. range() vs. xrange() is mostly just a matter of making the code look a tiny little bit more ugly, and not losing anything, and maybe gaining something.</p>

<p>Profile, Profile, Profile.</p>
",""
"246494","2","245792","<p>As far as performance is concerned, I can't think of any times that you would want to use a list over a generator.</p>
",""
"247527","2","245792","<p>I've never found a situation where generators would hinder what you're trying to do. There are, however, plenty of instances where using generators would not help you any more than not using them.</p>

<p>For example:</p>

<pre><code>sorted(xrange(5))
</code></pre>

<p>Does not offer any improvement over:</p>

<pre><code>sorted(range(5))
</code></pre>
",""
"255570","2","245792","<p>Regarding performance: if using psyco, lists can be quite a bit faster than generators. In the example below, lists are almost 50% faster when using psyco.full()</p>

<pre><code>import psyco
import time
import cStringIO

def time_func(func):
    """"""The amount of time it requires func to run""""""
    start = time.clock()
    func()
    return time.clock() - start

def fizzbuzz(num):
    """"""That algorithm we all know and love""""""
    if not num % 3 and not num % 5:
        return ""%d fizz buzz"" % num
    elif not num % 3:
        return ""%d fizz"" % num
    elif not num % 5:
        return ""%d buzz"" % num
    return None

def with_list(num):
    """"""Try getting fizzbuzz with a list comprehension and range""""""
    out = cStringIO.StringIO()
    for fibby in [fizzbuzz(x) for x in range(1, num) if fizzbuzz(x)]:
        print &gt;&gt; out, fibby
    return out.getvalue()

def with_genx(num):
    """"""Try getting fizzbuzz with generator expression and xrange""""""
    out = cStringIO.StringIO()
    for fibby in (fizzbuzz(x) for x in xrange(1, num) if fizzbuzz(x)):
        print &gt;&gt; out, fibby
    return out.getvalue()

def main():
    """"""
    Test speed of generator expressions versus list comprehensions,
    with and without psyco.
    """"""

    #our variables
    nums = [10000, 100000]
    funcs = [with_list, with_genx]

    #  try without psyco 1st
    print ""without psyco""
    for num in nums:
        print ""  number:"", num
        for func in funcs:
            print func.__name__, time_func(lambda : func(num)), ""seconds""
        print

    #  now with psyco
    print ""with psyco""
    psyco.full()
    for num in nums:
        print ""  number:"", num
        for func in funcs:
            print func.__name__, time_func(lambda : func(num)), ""seconds""
        print

if __name__ == ""__main__"":
    main()
</code></pre>

<p>Results:</p>

<pre><code>without psyco
  number: 10000
with_list 0.0519102208309 seconds
with_genx 0.0535933367509 seconds

  number: 100000
with_list 0.542204280744 seconds
with_genx 0.557837353115 seconds

with psyco
  number: 10000
with_list 0.0286369007033 seconds
with_genx 0.0513424889137 seconds

  number: 100000
with_list 0.335414877839 seconds
with_genx 0.580363490491 seconds
</code></pre>
",""
"256272","2","245792","<p>You should prefer list comprehensions if you need to keep the values around for something else later and the size of your set is not too large.</p>

<p>For example:
 you are creating a list that you will loop over several times later in your program. </p>

<p>To some extent you can think of generators as a replacement for iteration (loops) vs. list comprehensions as a type of data structure initialization. If you want to keep the data structure then use list comprehensions.</p>
",""
"259591","2","35753","<p>We've used IronPython to build our flagship spreadsheet application (40kloc production code - and it's Python, which IMO means loc per feature is low) at <a href=""http://www.resolversystems.com/"" rel=""noreferrer"">Resolver Systems</a>, so I'd definitely say it's ready for production use of complex apps.</p>

<p>There are two ways in which this might not be a useful answer to you :-)</p>

<ol>
<li>We're using IronPython, not the more usual CPython.  This gives us the huge advantage of being able to use .NET class libraries.  I may be setting myself up for flaming here, but I would say that I've never really seen a CPython application that looked ""professional"" - so having access to the WinForms widget set was a huge win for us.  IronPython also gives us the advantage of being able to easily drop into C# if we need a performance boost.  (Though to be honest we have <em>never</em> needed to do that.  All of our performance problems to date have been because we chose dumb algorithms rather than because the language was slow.)  Using C# from IP is much easier than writing a C Extension for CPython.  </li>
<li>We're an Extreme Programming shop, so we write tests before we write code.  I would not write production code in a dynamic language without writing the tests first; the lack of a compile step needs to be covered by something, and as other people have pointed out, refactoring without it can be tough.  (Greg Hewgill's answer suggests he's had the same problem.  On the other hand, I don't think I would write - or especially refactor - production code in <em>any</em> language these days without writing the tests first - but YMMV.)</li>
</ol>

<p>Re: the IDE - we've been pretty much fine with each person using their favourite text editor; if you prefer something a bit more heavyweight then <a href=""http://www.wingware.com/products"" rel=""noreferrer"">WingIDE</a> is pretty well-regarded.</p>
",""
"263761","2","35753","<p>Nothing to add to the other answers, <em>besides</em> that if you choose python you <strong>must</strong> use something like <a href=""http://pypi.python.org/pypi/pylint"" rel=""noreferrer"">pylint</a> which nobody mentioned so far.</p>
",""
"277490","2","35753","<p>I had only one python experience, my trash-cli project.</p>

<p>I know that probably some or all problems depends of my inexperience with python.</p>

<p>I found frustrating these things: </p>

<ol>
<li>the difficult of finding a good IDE for free</li>
<li>the limited support to automatic refactoring</li>
</ol>

<p>Moreover:</p>

<ol start=""3"">
<li>the need of introduce two level of grouping packages and modules confuses me.</li>
<li>it seems to me that there is not a widely adopted code naming convention</li>
<li>it seems to me that there are some standard library APIs docs that are incomplete</li>
<li>the fact that some standard libraries are not fully object oriented annoys me</li>
</ol>

<p>Although some python coders tell me that they does not have these problems, or they say these are not problems.</p>
",""
"279733","2","36953","<p>Here's a few things to get you started (roughly from simplest-to-most-complex, least-to-most-powerful):</p>

<p><a href=""http://en.wikipedia.org/wiki/Recursive_descent_parser"" rel=""nofollow noreferrer""><a href=""http://en.wikipedia.org/wiki/Recursive_descent_parser"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/Recursive_descent_parser</a></a></p>

<p><a href=""http://en.wikipedia.org/wiki/Top-down_parsing"" rel=""nofollow noreferrer""><a href=""http://en.wikipedia.org/wiki/Top-down_parsing"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/Top-down_parsing</a></a></p>

<p><a href=""http://en.wikipedia.org/wiki/LL_parser"" rel=""nofollow noreferrer""><a href=""http://en.wikipedia.org/wiki/LL_parser"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/LL_parser</a></a></p>

<p><a href=""http://effbot.org/zone/simple-top-down-parsing.htm"" rel=""nofollow noreferrer""><a href=""http://effbot.org/zone/simple-top-down-parsing.htm"" rel=""nofollow noreferrer"">http://effbot.org/zone/simple-top-down-parsing.htm</a></a></p>

<p><a href=""http://en.wikipedia.org/wiki/Bottom-up_parsing"" rel=""nofollow noreferrer""><a href=""http://en.wikipedia.org/wiki/Bottom-up_parsing"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/Bottom-up_parsing</a></a></p>

<p><a href=""http://en.wikipedia.org/wiki/LR_parser"" rel=""nofollow noreferrer""><a href=""http://en.wikipedia.org/wiki/LR_parser"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/LR_parser</a></a></p>

<p><a href=""http://en.wikipedia.org/wiki/GLR_parser"" rel=""nofollow noreferrer""><a href=""http://en.wikipedia.org/wiki/GLR_parser"" rel=""nofollow noreferrer"">http://en.wikipedia.org/wiki/GLR_parser</a></a></p>

<p>When I learned this stuff, it was in a semester-long 400-level university course.  We did a number of assignments where we did parsing by hand; if you want to really understand what's going on under the hood, I'd recommend the same approach.</p>

<p>This isn't the book I used, but it's pretty good: <a href=""http://rads.stackoverflow.com/amzn/click/0201000229"" rel=""nofollow noreferrer"">Principles of Compiler Design</a>.</p>

<p>Hopefully that's enough to get you started :)</p>
",""
"286449","2","35753","<blockquote>
  <p>And as far as I know they use a lot of python inside google too.</p>
</blockquote>

<p>Well i'd hope so, the maker of python still works at google if i'm not mistaken? </p>

<p>As for the use of Python, i think it's a great language for stand-alone apps. It's heavily used in a lot of Linux programs, and there are a few nice widget sets out there to aid in the development of GUI's. </p>
",""
"286491","2","35753","<p>Python is a delight to use. I use it routinely and also write a lot of code for work in C#. There are two drawbacks to writing UI code in Python. one is that there is not a single ui framework that is accepted by the majority of the community. when you write in c# the .NET runtime and class libraries are all meant to work together. With Python every UI library has at's own semantics which are often at odds with the pythonic mindset in which you are trying to write your program. I am not blaming the library writers. I've tried several libraries (wxwidgets, PythonWin[Wrapper around MFC], Tkinter), When doing so I often felt that I was writing code in a language other than Python (despite the fact that it was python) because the libraries aren't exactly pythonic they are a port from another language be it c, c++, tk.</p>

<p>So  for me I will write UI code in .NET (for me C#) because of the IDE &amp; the consistency of the libraries. But when I can I will write business logic in python because it is more clear and more fun.</p>
",""
"322922","2","60208","<pre><code>def f(x):    
  return {'a': 1,'b': 2,}.get(x) or ""Default""
</code></pre>
",""
"351256","2","60649","<p>Distributed computing is usually complex and you are well advised to use existing libraries or frameworks instead of reinventing the wheel. Previous poster have already enumerated a couple of these libraries and frameworks. Depending on your needs you can pick either a very low level (like sockets) or high level framework (like CORBA). There can not be a generic ""use this"" answer. You need to educate yourself about distributed programming and then will find it much easier to pick the right library or framework for the job.</p>

<p>There exists a wildly used C++ framework for distributed computing called ACE and the CORBA ORB TAO (which is buildt upon ACE). There exist very good books about ACE <a href=""http://www.cs.wustl.edu/~schmidt/ACE/"" rel=""nofollow noreferrer"">http://www.cs.wustl.edu/~schmidt/ACE/</a> so you might take a look. Take care!</p>
",""
"382596","2","61151","<p>I prefer toplevel tests directory. This does mean imports become a little more difficult. For that I have two solutions:</p>

<ol>
<li>Use setuptools. Then you can pass <code>test_suite='tests.runalltests.suite'</code> into <code>setup()</code>, and can run the tests simply: <code>python setup.py test</code></li>
<li>Set PYTHONPATH when running the tests: <code>PYTHONPATH=. python tests/runalltests.py</code></li>
</ol>

<p>Here's how that stuff is supported by code in M2Crypto:</p>

<ul>
<li><a href=""http://svn.osafoundation.org/m2crypto/trunk/setup.py"" rel=""nofollow noreferrer"">http://svn.osafoundation.org/m2crypto/trunk/setup.py</a></li>
<li><a href=""http://svn.osafoundation.org/m2crypto/trunk/tests/alltests.py"" rel=""nofollow noreferrer"">http://svn.osafoundation.org/m2crypto/trunk/tests/alltests.py</a></li>
</ul>

<p>If you prefer to run tests with nosetests you might need do something a little different.</p>
",""
"390676","2","60805","<p>If you are using the orm and the table is not big (or you have its amount of rows cached) and you want it to be database independent the really simple approach is.</p>

<pre><code>import random
rand = random.randrange(0, session.query(Table).count()) 
row = session.query(Table)[rand]
</code></pre>

<p>This is cheating slightly but thats why you use an orm.</p>
",""
"396823","2","14422","<p>I didn't know anything at all about Objective C or Cocoa (but plenty about Python), but I am now writing a rather complex application in PyObjc. How did I learn? I picked up <a href=""http://rads.stackoverflow.com/amzn/click/0321503619"" rel=""nofollow noreferrer"">Cocoa Programming for OSX</a> and went through the whole book (a pretty quick process) using PyObjC. Just ignore anything about memory management and you'll pretty much be fine. The only caveat is that very occasionally you have to use a decorator like endSheetMethod (actually I think that's the only one I've hit):</p>

<pre><code>@PyObjcTools.AppHelper.endSheetMethod
def alertEnded_code_context_(self, alert, choice, context):
    pass
</code></pre>
",""
"436394","1","","<p>Lets say we have this string: <code>[18] email@email.com:pwd:</code></p>

<p><code>email@email.com</code> is the email and <code>pwd</code> is the password.</p>

<p>Also, lets say we have this variable with a value</p>

<pre><code>f = ""[18] email@email.com:pwd:""
</code></pre>

<p>I would like to know if there is a way to make two other variables named <code>var1</code> and <code>var2</code>, where the <code>var1</code> variable will take the exact email info from variable <code>f</code> and <code>var2</code> the exact password info from <code>var2</code>.</p>

<p>The result after running the app should be like:</p>

<pre><code>var1 = ""email@email.com""
</code></pre>

<p>and</p>

<pre><code>var2 = ""pwd""
</code></pre>
","<python><parsing><split>"
"436412","2","436394","<pre><code>&gt;&gt;&gt; var1, var2, _ = ""[18] email@email.com:pwd:""[5:].split("":"")
&gt;&gt;&gt; var1, var2
('email@email.com', 'pwd')
</code></pre>

<p>Or if the ""[18]"" is not a fixed prefix:</p>

<pre><code>&gt;&gt;&gt; var1, var2, _ = ""[18] email@email.com:pwd:"".split(""] "")[1].split("":"")
&gt;&gt;&gt; var1, var2
('email@email.com', 'pwd')
</code></pre>
",""
"436415","2","436394","<pre><code>import re
var1, var2 = re.findall(r'\s(.*?):(.*):', f)[0]
</code></pre>

<p>If findall()[0] feels like two steps forward and one back:</p>

<pre><code>var1, var2 = re.search(r'\s(.*?):(.*):', f).groups()
</code></pre>
",""
"436450","2","436394","<pre><code>var1, var2 = re.split(r'[ :]', f)[1:3]
</code></pre>
",""
"442940","2","436394","<p>To split on the first colon "":"", you can do:</p>

<pre><code># keep all after last space
f1= f.rpartition("" "")[2]
var1, _, var2= f1.partition("":"")
</code></pre>
",""
"473491","2","13857","<p>Here's a typical use case for closures - callbacks for GUI elements (this would be an alternative to subclassing the button class). For example, you can construct a function that will be called in response to a button press, and ""close"" over the relevant variables in the parent scope that are necessary for processing the click. This way you can wire up pretty complicated interfaces from the same initialization function, building all the dependencies into the closure.</p>
",""
"505457","2","36932","<p>What I use:</p>

<pre><code>class Enum(object):
    def __init__(self, names, separator=None):
        self.names = names.split(separator)
        for value, name in enumerate(self.names):
            setattr(self, name.upper(), value)
    def tuples(self):
        return tuple(enumerate(self.names))
</code></pre>

<p>How to use:</p>

<pre><code>&gt;&gt;&gt; state = Enum('draft published retracted')
&gt;&gt;&gt; state.DRAFT
0
&gt;&gt;&gt; state.RETRACTED
2
&gt;&gt;&gt; state.FOO
Traceback (most recent call last):
   File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
AttributeError: 'Enum' object has no attribute 'FOO'
&gt;&gt;&gt; state.tuples()
((0, 'draft'), (1, 'published'), (2, 'retracted'))
</code></pre>

<p>So this gives you integer constants like state.PUBLISHED and the two-tuples to use as choices in Django models.</p>
",""
"558750","2","34570","<p>I'm a big fan of <a href=""http://corepython.com/"" rel=""nofollow noreferrer"">Core Python</a></p>
",""
"558960","2","34570","<p>I quite enjoyed reading <a href=""http://www.deitel.com/Books/InternetWebScripting/PythonHowtoProgram1e/tabid/1830/Default.aspx"" rel=""nofollow noreferrer"">H.Deitel - Python - How to Program</a>. It's very long but basics of Python are covered in first 300-400 pages. It's a nice book for beginners.</p>
",""
"559702","2","34570","<p>Dive Into Python is a good choice, but I also recommend <a href=""http://rads.stackoverflow.com/amzn/click/0321585445"" rel=""nofollow noreferrer"">Python Visual Quickstart Guide</a>
For someone that knows how to program and wants to get the 80% of the basics of the language, it's a good deal. And it retails at $20. It's certainly not the last thing I'd read on python, but it's a good first one.</p>
",""
"559723","2","34570","<p>I learned more from the <a href=""http://rads.stackoverflow.com/amzn/click/0596007973"" rel=""nofollow noreferrer"">python cookbook</a> than any other python book.</p>
",""
"559893","2","34570","<p>I have to second (third? fourth?) <a href=""http://www.diveintopython.net/toc/index.html"" rel=""nofollow noreferrer"">Dive Into Python</a>. It's just great for quick reference and reading. As an added suggestion, read some code! That always helps.</p>
",""
"578444","2","37535","<p>Check out <a href=""http://groups.google.com/group/python-dbase"" rel=""noreferrer"">http://groups.google.com/group/python-dbase</a></p>

<p>It currently supports dBase III and Visual Foxpro 6.0 db files... not sure if the file layout change in VFP 9 or not...</p>
",""
"640632","2","61605","<p>OT: RSRE's Algol68 has the curious ""/:="" operator. eg.</p>

<pre><code>INT quotient:=355, remainder;
remainder := (quotient /:= 113);
</code></pre>

<p>Giving a quotient of 3, and a remainder of 16. </p>

<p>Note: typically the value of ""(x/:=y)"" is discarded as quotient ""x"" is assigned by reference, but in RSRE's case the returned value is the remainder.</p>

<p>c.f. <a href=""http://rosettacode.org/wiki/Basic_integer_arithmetic#ALGOL_68"" rel=""nofollow noreferrer"">Integer Arithmetic - Algol68</a></p>
",""
"646877","2","35538","<p>You can decide to install the HTML validator locally and create a client to request the validation. </p>

<p>Here I had made a program to validate a list of urls in a txt file. I was just checking the HEAD to get the validation status, but if you do a GET you would get the full results. Look at the API of the validator, there are plenty of options for it.</p>

<pre><code>import httplib2
import time

h = httplib2.Http("".cache"")

f = open(""urllistfile.txt"", ""r"")
urllist = f.readlines()
f.close()

for url in urllist:
   # wait 10 seconds before the next request - be nice with the validator
   time.sleep(10)
   resp= {}
   url = url.strip()
   urlrequest = ""http://qa-dev.w3.org/wmvs/HEAD/check?doctype=HTML5&amp;uri=""+url
   try:
      resp, content = h.request(urlrequest, ""HEAD"")
      if resp['x-w3c-validator-status'] == ""Abort"":
         print url, ""FAIL""
      else:
         print url, resp['x-w3c-validator-status'], resp['x-w3c-validator-errors'], resp['x-w3c-validator-warnings']
   except:
      pass
</code></pre>
",""
"659817","2","60848","<p>Or use any of the implementations for the <a href=""http://www.python.org/dev/peps/pep-0372/"" rel=""nofollow noreferrer"">PEP-372</a> described <a href=""http://www.python.org/dev/peps/pep-0372/#reference-implementation"" rel=""nofollow noreferrer"">here</a>, like the <a href=""http://www.voidspace.org.uk/python/odict.html"" rel=""nofollow noreferrer"">odict module</a> from the <a href=""http://www.voidspace.org.uk/python/pythonutils.html"" rel=""nofollow noreferrer"">pythonutils</a>.</p>

<p>I successfully used the pocoo.org implementation, it is as easy as replacing your</p>

<pre><code>my_dict={}
my_dict[""foo""]=""bar""
</code></pre>

<p>with</p>

<pre><code>my_dict=odict.odict()
my_dict[""foo""]=""bar""
</code></pre>

<p>and require just <a href=""http://dev.pocoo.org/hg/sandbox/raw-file/tip/odict.py"" rel=""nofollow noreferrer"">this file</a></p>
",""
"713882","2","34570","<p>Dive into Python for a fast jump start, Learning Python (O'Reilly) is better for the long complete journey.</p>

<p>Just my $0.02.</p>
",""
"782514","2","60805","<p>An enhanced version of Lukasz's example, in the case you need to select multiple rows at random:</p>

<pre><code>import random

# you must first select all the values of the primary key field for the table.
# in some particular cases you can use xrange(session.query(Table).count()) instead
ids = session.query(Table.primary_key_field).all() 
ids_sample = random.sample(ids, 100)

rows = session.query(Table).filter(Table.primary_key_field.in_(ids_sample))
</code></pre>

<p>So, this post is just to point out that you can use .in_ to select multiple fields at the same time.</p>
",""
"815212","2","61151","<p>We had the very same question when writing Pythoscope (<a href=""http://pythoscope.org"" rel=""noreferrer"">http://pythoscope.org</a>), which generates unit tests for Python programs.  We polled people on the testing in python list before we chose a directory, there were many different opinions.  In the end we chose to put a ""tests"" directory in the same directory as the source code. In that directory we generate a test file for each module in the parent directory.  </p>
",""
"847800","2","35817","<p><a href=""https://docs.python.org/3/library/shlex.html#shlex.quote"" rel=""noreferrer""><code>shlex.quote()</code></a> does what you want since python 3.</p>

<p>(Use <a href=""https://docs.python.org/2/library/pipes.html#pipes.quote"" rel=""noreferrer""><code>pipes.quote</code></a> to support both python 2 and python 3)</p>
",""
"903314","2","14422","<p>The main reason for the lack of documentation for PyObjC is that there is one developer (me), and as most developers I don't particularly like writing documentation. Because PyObjC is a side project for me I tend to focus on working on features and bugfixes, because that's more interesting for me.</p>

<p>The best way to improve the documentation is to volunteer to help on the pyobjc-dev mailing list. </p>

<p>As an aside: the pythonmac-sig mailinglist (see google) is an excelent resource for getting help on Python on MacOSX (not just PyObjC).</p>
",""
"944203","2","34570","<p>There are quite a few good <strong>books online</strong>. These have a broad scope, similar to O'Reilly's ""Learning Python"":</p>

<ul>
<li><a href=""http://www.diveintopython.net/toc/index.html"" rel=""nofollow noreferrer"">Dive into Python</a> by Mark Pilgrim</li>
<li><a href=""http://openbookproject.net/thinkCSpy/"" rel=""nofollow noreferrer"">How to think like a computer scientist: Learning with Python</a> by Jeffrey Elkner, Allen B. Downey, and Chris Meyers</li>
<li><a href=""http://en.wikibooks.org/wiki/Python_Programming"" rel=""nofollow noreferrer"">Python Programming</a> (WikiBook)</li>
<li><a href=""http://docs.python.org/tutorial/"" rel=""nofollow noreferrer"">The Python Tutorial</a> is the ""official"" introduction to the language</li>
</ul>

<p><a href=""http://python.org/"" rel=""nofollow noreferrer"">Python.org</a> maintains <strong>two lists</strong> of for learning python, depending on your level of programming expertise:</p>

<ul>
<li><a href=""http://wiki.python.org/moin/BeginnersGuide/NonProgrammers"" rel=""nofollow noreferrer"">Python for Non-programmers</a></li>
<li><a href=""http://wiki.python.org/moin/BeginnersGuide/Programmers"" rel=""nofollow noreferrer"">Python for Programmers</a></li>
</ul>

<p><strong>I highly recommend ""Python Essential Reference""</strong> by David Beazley. You might find this sufficient <strong>if you're an experienced programmer</strong> and want a <strong>concise and comprehensive overview</strong> of the language. If you're a novice programmer this probably won't provide enough hand-holding. While I learned Python from other books, this is—by far—the most useful python book I own. Some notes:</p>

<ul>
<li>This is a reference book not a tutorial</li>
<li>The first <strong>125 pages</strong> are a <strong>complete overview</strong> of the language. It's not a tutorial, but it covers the language from top to bottom</li>
<li>If you're an experienced programmer, this should be enough to learn the language</li>
<li>If you're a novice programmer, start with a different tutorial</li>
<li>The rest of the book is a comprehensive and extremely useful reference</li>
<li>The <a href=""http://rads.stackoverflow.com/amzn/click/0672328623"" rel=""nofollow noreferrer"">3<sup>rd</sup> edition</a> covers up to python 2.4, but not beyond.</li>
<li>The <a href=""http://rads.stackoverflow.com/amzn/click/0672329786"" rel=""nofollow noreferrer"">4<sup>th</sup> edition</a> is due for release in July 2009</li>
</ul>

<p><strong>Note</strong>: I originally posted the same/similar answer to:  <a href=""https://stackoverflow.com/questions/934937/concise-python-book-recommendation/935081#935081"">https://stackoverflow.com/questions/934937/concise-python-book-recommendation/935081#935081</a></p>

<p>I was asked to put a copy of my answer here.</p>
",""
"946053","2","34570","<p>This is good, it's a very easy read and the excercises can be completed with only a crayon.<br>
(I think this is what Jeff was talking about when he wanted rich media content in the IDE)</p>

<p><a href=""http://ecx.images-amazon.com/images/I/61NA2175H0L._SL500_AA240_.jpg"" rel=""nofollow noreferrer"">alt text http://ecx.images-amazon.com/images/I/61NA2175H0L._SL500_AA240_.jpg</a></p>
",""
"946067","2","34570","<p>It may not be as applicable, but I just cracked open Programming in Python 3 by Mark Summerfield and so far it seems pretty good, although it is focused on Python 3, so if you're planning on learning something like Django, which hasn't made the jump to Python 3 and likely won't for some time, this book might not be the best. Additionally, even though Python 3.0 has been out for a little while now, I can almost guarantee your course is using Python 2.x. Academia has a tendency to trail behind. I had a C++ recitation professor who I swear wasn't aware that C++ has been updated since 1985.</p>
",""
"956115","2","60208","<p>I have made a (relatively) flexible and re-usable solution for this. It can be found at GitHub as <a href=""http://gist.github.com/raw/23036/fd1fb6f05d4c654ff136a9f2545b9f83e9273fcc/switch.py"" rel=""nofollow noreferrer"">this gist</a>. If the result of the switch function is callable, it is automatically called.</p>
",""
"1031689","2","62064","<p>I can recommend Eric Florenzano's ""Django From the Ground
Up"". It is a series of 13 videos showing the building of a
particular site from scratch, <a href=""http://startthedark.com/"" rel=""noreferrer"">http://startthedark.com/</a>. 
(However the live site appears not to be functional, though. The confirmation E-mail for registration never arrives.)</p>

<p>The start URL is
<a href=""http://showmedo.com/videos/video?name=3360000&amp;fromSeriesID=336"" rel=""noreferrer"">http://showmedo.com/videos/video?name=3360000&amp;fromSeriesID=336</a></p>

<p>The direct download URLs for the Flash videos are (approximately 25&nbsp;MB each):</p>

<blockquote>
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360000.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360000.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360010.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360010.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360020.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360020.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360030.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360030.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360040.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360040.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360050.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360050.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360060.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360060.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360070.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360070.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360080.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360080.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360090.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360090.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360100.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360100.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360110.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360110.flv</a></p>
  
  <p><a href=""http://videos1.showmedo.com/ShowMeDos/3360120.flv"" rel=""noreferrer"">http://videos1.showmedo.com/ShowMeDos/3360120.flv</a></p>
</blockquote>
",""
"1038110","2","36806","<p>Note that Alias and WSGIScriptAlias directives do not have the same precedence. Thus, they will not be processed in file order as written. Instead, all Alias directives get precedence over WSGIScriptAlias directives. Thus, it wouldn't have mattered if the Alias for '/' appeared after WSGIScriptAlias, it would still have taken precedence.</p>
",""
"1056092","2","34916","<p>The question is super old, but hell: <a href=""http://code.google.com/p/formalchemy/"" rel=""nofollow noreferrer"">http://code.google.com/p/formalchemy/</a></p>

<p>Gives you basic crud out of the box, customizable to do even relatively complex things easily, and gives you a drop-in Pylons admin app too (written and customizable with the same api, no magic).</p>
",""
"1278623","2","35948","<p>@Dave Webb (i haven't been rated high enough to comment yet)</p>

<p>The dot lookups can be summarized like this: when the template system encounters a dot in a variable name, it tries the following lookups, in this order:</p>

<pre><code>* Dictionary lookup (e.e., foo[""bar""])
* Attribute lookup (e.g., foo.bar)
* Method call (e.g., foo.bar())
* List-index lookup (e.g., foo[bar])
</code></pre>

<p>The system uses the first lookup type that works. It’s short-circuit logic.</p>
",""
"1279293","2","35538","<p><a href=""http://countergram.com/open-source/pytidylib/"" rel=""nofollow noreferrer"">PyTidyLib</a> is a nice python binding for HTML Tidy. Their example:</p>

<pre><code>from tidylib import tidy_document
document, errors = tidy_document('''&lt;p&gt;f&amp;otilde;o &lt;img src=""bar.jpg""&gt;''',
    options={'numeric-entities':1})
print document
print errors
</code></pre>

<p>Moreover it's compatible with both <a href=""http://tidy.sourceforge.net/"" rel=""nofollow noreferrer"">legacy HTML Tidy</a> and the <a href=""http://www.html-tidy.org/"" rel=""nofollow noreferrer"">new tidy-html5</a>.</p>
",""
"1310119","2","36647","<p>I recommend Nose. </p>

<p>After the reasonable simple installation, you just have to run ""nosetests"" in your project folder and Nose will find all your tests and run them. I also like the collection of plugins (coverage, GAE, etc.) and the abilty to call Nose directly from within my Python scripts. </p>
",""
"1519440","2","60446","<p>Just found this: <a href=""http://ejr44.blogspot.com/2008/05/python-for-windows-mobile-cab.html"" rel=""nofollow noreferrer"">http://ejr44.blogspot.com/2008/05/python-for-windows-mobile-cab.html</a></p>

<p>Looks like a complete set of .CAB files to provide Python on Windows Mobile.</p>
",""
"1529241","2","36932","<p>The best solution for you would depend on what you require from your <em>fake</em> <strong><code>enum</code></strong>.</p>

<p><strong>Simple enum:</strong></p>

<p>If you need the <strong><code>enum</code></strong> as only a list of <em>names</em> identifying different <em>items</em>, the solution by <strong>Mark Harrison</strong> (above) is great:</p>

<pre><code>Pen, Pencil, Eraser = range(0, 3)
</code></pre>

<p>Using a <strong><code>range</code></strong> also allows you to set any <em>starting value</em>:</p>

<pre><code>Pen, Pencil, Eraser = range(9, 12)
</code></pre>

<p>In addition to the above, if you also require that the items belong to a <em>container</em> of some sort, then embed them in a class:</p>

<pre><code>class Stationery:
    Pen, Pencil, Eraser = range(0, 3)
</code></pre>

<p>To use the enum item, you would now need to use the container name and the item name:</p>

<pre><code>stype = Stationery.Pen
</code></pre>

<p><strong>Complex enum:</strong></p>

<p>For long lists of enum or more complicated uses of enum, these solutions will not suffice. You could look to the recipe by Will Ware for <em>Simulating Enumerations in Python</em> published in the <em>Python Cookbook</em>. An online version of that is available <a href=""http://code.activestate.com/recipes/67107/"" rel=""noreferrer"">here</a>.</p>

<p><strong>More info:</strong></p>

<p><a href=""http://www.python.org/dev/peps/pep-0354/"" rel=""noreferrer""><em>PEP 354: Enumerations in Python</em></a> has the interesting details of a proposal for enum in Python and why it was rejected.</p>
",""
"1587932","2","36932","<p>Use the following.</p>

<pre><code>TYPE = {'EAN13':   u'EAN-13',
        'CODE39':  u'Code 39',
        'CODE128': u'Code 128',
        'i25':     u'Interleaved 2 of 5',}

&gt;&gt;&gt; TYPE.items()
[('EAN13', u'EAN-13'), ('i25', u'Interleaved 2 of 5'), ('CODE39', u'Code 39'), ('CODE128', u'Code 128')]
&gt;&gt;&gt; TYPE.keys()
['EAN13', 'i25', 'CODE39', 'CODE128']
&gt;&gt;&gt; TYPE.values()
[u'EAN-13', u'Interleaved 2 of 5', u'Code 39', u'Code 128']
</code></pre>

<p>I used that for <a href=""http://en.wikipedia.org/wiki/Django_%28web_framework%29"" rel=""nofollow noreferrer"">Django</a> model choices, and it looks very pythonic. It is not really an Enum, but it does the job.</p>
",""
"1612654","2","59825","<p>To provide some timing figures behind the different approaches, consider the following code.
<em>The get() is my custom addition to Python's setobject.c, being just a pop() without removing the element.</em></p>

<pre><code>from timeit import *

stats = [""for i in xrange(1000): iter(s).next()   "",
         ""for i in xrange(1000): \n\tfor x in s: \n\t\tbreak"",
         ""for i in xrange(1000): s.add(s.pop())   "",
         ""for i in xrange(1000): s.get()          ""]

for stat in stats:
    t = Timer(stat, setup=""s=set(range(100))"")
    try:
        print ""Time for %s:\t %f""%(stat, t.timeit(number=1000))
    except:
        t.print_exc()
</code></pre>

<p>The output is:</p>

<pre><code>$ ./test_get.py
Time for for i in xrange(1000): iter(s).next()   :       0.433080
Time for for i in xrange(1000):
        for x in s:
                break:   0.148695
Time for for i in xrange(1000): s.add(s.pop())   :       0.317418
Time for for i in xrange(1000): s.get()          :       0.146673
</code></pre>

<p>This means that the <strong><em>for/break</em></strong> solution is the fastest (sometimes faster than the custom get() solution).</p>
",""
"1640634","2","36139","<p>The proper way to sort strings is:</p>

<pre><code>import locale
locale.setlocale(locale.LC_ALL, 'en_US.UTF-8') # vary depending on your lang/locale
assert sorted((u'Ab', u'ad', u'aa'), cmp=locale.strcoll) == [u'aa', u'Ab', u'ad']

# Without using locale.strcoll you get:
assert sorted((u'Ab', u'ad', u'aa')) == [u'Ab', u'aa', u'ad']
</code></pre>

<p>The previous example of <code>mylist.sort(key=lambda x: x.lower())</code> will work fine for ASCII-only contexts.</p>
",""
"1695250","2","36932","<p>Enums have been added to Python 3.4 as described in <a href=""http://www.python.org/dev/peps/pep-0435/"" rel=""noreferrer"">PEP 435</a>.  It has also been <a href=""https://pypi.python.org/pypi/enum34"" rel=""noreferrer"">backported to 3.3, 3.2, 3.1, 2.7, 2.6, 2.5, and 2.4</a> on pypi.  </p>

<p>For more advanced Enum techniques try the <a href=""https://pypi.python.org/pypi/aenum"" rel=""noreferrer"">aenum library</a> (2.7, 3.3+, same author as <code>enum34</code>. Code is not perfectly compatible between py2 and py3, e.g. you'll need <a href=""https://stackoverflow.com/a/25982264/57461""><code>__order__</code> in python 2</a>).</p>

<ul>
<li>To use <code>enum34</code>, do <code>$ pip install enum34</code></li>
<li>To use <code>aenum</code>, do <code>$ pip install aenum</code></li>
</ul>

<p>Installing <code>enum</code> (no numbers) will install a completely different and incompatible version.</p>

<hr>

<pre><code>from enum import Enum     # for enum34, or the stdlib version
# from aenum import Enum  # for the aenum version
Animal = Enum('Animal', 'ant bee cat dog')

Animal.ant  # returns &lt;Animal.ant: 1&gt;
Animal['ant']  # returns &lt;Animal.ant: 1&gt; (string lookup)
Animal.ant.name  # returns 'ant' (inverse lookup)
</code></pre>

<p>or equivalently:</p>

<pre><code>class Animal(Enum):
    ant = 1
    bee = 2
    cat = 3
    dog = 4
</code></pre>

<hr>

<p>In earlier versions, one way of accomplishing enums is:</p>

<pre><code>def enum(**enums):
    return type('Enum', (), enums)
</code></pre>

<p>which is used like so:</p>

<pre><code>&gt;&gt;&gt; Numbers = enum(ONE=1, TWO=2, THREE='three')
&gt;&gt;&gt; Numbers.ONE
1
&gt;&gt;&gt; Numbers.TWO
2
&gt;&gt;&gt; Numbers.THREE
'three'
</code></pre>

<p>You can also easily support automatic enumeration with something like this:</p>

<pre><code>def enum(*sequential, **named):
    enums = dict(zip(sequential, range(len(sequential))), **named)
    return type('Enum', (), enums)
</code></pre>

<p>and used like so:</p>

<pre><code>&gt;&gt;&gt; Numbers = enum('ZERO', 'ONE', 'TWO')
&gt;&gt;&gt; Numbers.ZERO
0
&gt;&gt;&gt; Numbers.ONE
1
</code></pre>

<p>Support for converting the values back to names can be added this way:</p>

<pre><code>def enum(*sequential, **named):
    enums = dict(zip(sequential, range(len(sequential))), **named)
    reverse = dict((value, key) for key, value in enums.iteritems())
    enums['reverse_mapping'] = reverse
    return type('Enum', (), enums)
</code></pre>

<p>This overwrites anything with that name, but it is useful for rendering your enums in output.  It will throw KeyError if the reverse mapping doesn't exist.  With the first example:</p>

<pre><code>&gt;&gt;&gt; Numbers.reverse_mapping['three']
'THREE'
</code></pre>
",""
"1751697","2","36932","<p>I had need of some symbolic constants in pyparsing to represent left and right associativity of binary operators.  I used class constants like this:</p>

<pre><code># an internal class, not intended to be seen by client code
class _Constants(object):
    pass


# an enumeration of constants for operator associativity
opAssoc = _Constants()
opAssoc.LEFT = object()
opAssoc.RIGHT = object()
</code></pre>

<p>Now when client code wants to use these constants, they can import the entire enum using:</p>

<pre><code>import opAssoc from pyparsing
</code></pre>

<p>The enumerations are unique, they can be tested with 'is' instead of '==', they don't take up a big footprint in my code for a minor concept, and they are easily imported into the client code.  They don't support any fancy str() behavior, but so far that is in the <a href=""http://c2.com/xp/YouArentGonnaNeedIt.html"" rel=""nofollow noreferrer"">YAGNI</a> category.</p>
",""
"1753340","2","36932","<p>This is the best one I have seen: ""First Class Enums in Python""</p>

<p><a href=""http://code.activestate.com/recipes/413486/"" rel=""noreferrer""><a href=""http://code.activestate.com/recipes/413486/"" rel=""noreferrer"">http://code.activestate.com/recipes/413486/</a></a></p>

<p>It gives you a class, and the class contains all the enums. The enums can be compared to each other, but don't have any particular value; you can't use them as an integer value. (I resisted this at first because I am used to C enums, which are integer values. But if you can't use it as an integer, you can't use it as an integer by mistake so overall I think it is a win.) Each enum is a unique value. You can print enums, you can iterate over them, you can test that an enum value is ""in"" the enum. It's pretty complete and slick.</p>

<p>Edit (cfi): The above link is not Python 3 compatible. Here's my port of enum.py to Python 3:</p>

<pre><code>def cmp(a,b):
   if a &lt; b: return -1
   if b &lt; a: return 1
   return 0


def Enum(*names):
   ##assert names, ""Empty enums are not supported"" # &lt;- Don't like empty enums? Uncomment!

   class EnumClass(object):
      __slots__ = names
      def __iter__(self):        return iter(constants)
      def __len__(self):         return len(constants)
      def __getitem__(self, i):  return constants[i]
      def __repr__(self):        return 'Enum' + str(names)
      def __str__(self):         return 'enum ' + str(constants)

   class EnumValue(object):
      __slots__ = ('__value')
      def __init__(self, value): self.__value = value
      Value = property(lambda self: self.__value)
      EnumType = property(lambda self: EnumType)
      def __hash__(self):        return hash(self.__value)
      def __cmp__(self, other):
         # C fans might want to remove the following assertion
         # to make all enums comparable by ordinal value {;))
         assert self.EnumType is other.EnumType, ""Only values from the same enum are comparable""
         return cmp(self.__value, other.__value)
      def __lt__(self, other):   return self.__cmp__(other) &lt; 0
      def __eq__(self, other):   return self.__cmp__(other) == 0
      def __invert__(self):      return constants[maximum - self.__value]
      def __nonzero__(self):     return bool(self.__value)
      def __repr__(self):        return str(names[self.__value])

   maximum = len(names) - 1
   constants = [None] * len(names)
   for i, each in enumerate(names):
      val = EnumValue(i)
      setattr(EnumClass, each, val)
      constants[i] = val
   constants = tuple(constants)
   EnumType = EnumClass()
   return EnumType


if __name__ == '__main__':
   print( '\n*** Enum Demo ***')
   print( '--- Days of week ---')
   Days = Enum('Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su')
   print( Days)
   print( Days.Mo)
   print( Days.Fr)
   print( Days.Mo &lt; Days.Fr)
   print( list(Days))
   for each in Days:
      print( 'Day:', each)
   print( '--- Yes/No ---')
   Confirmation = Enum('No', 'Yes')
   answer = Confirmation.No
   print( 'Your answer is not', ~answer)
</code></pre>
",""
"1855425","2","34570","<p>I have also been using <a href=""http://rads.stackoverflow.com/amzn/click/B001OFK2DK"" rel=""nofollow noreferrer"">Programming in Python 3</a> by Mark Summerfield and find it very good. </p>
",""
"1869967","2","34916","<p>Just updating an old question. DBSprockets has been replaced by <a href=""http://sprox.org/"" rel=""nofollow noreferrer"">sprox</a> which learns a lot of lessons from it and is pretty cool.</p>

<p>It isn't quite the throwaway 'scaffolding' that Rails provides, it is more like an agile form generation tool that is highly extensible.</p>
",""
"1884718","2","35817","<p>Note that pipes.quote is actually broken in Python 2.5 and Python 3.1 and not safe to use--It doesn't handle zero-length arguments.</p>

<pre><code>&gt;&gt;&gt; from pipes import quote
&gt;&gt;&gt; args = ['arg1', '', 'arg3']
&gt;&gt;&gt; print 'mycommand %s' % (' '.join(quote(arg) for arg in args))
mycommand arg1  arg3
</code></pre>

<p>See <a href=""http://bugs.python.org/issue7476"" rel=""nofollow noreferrer"">Python issue 7476</a>; it has been fixed in Python 2.6 and 3.2 and newer.</p>
",""
"2136606","2","60649","<p><a href=""http://www.msobczak.com/prog/yami/"" rel=""nofollow noreferrer"">YAMI - Yet Another Messaging Infrastructure</a> is a lightweight messaging and networking framework.</p>
",""
"2182437","2","36932","<p>Here is one implementation:</p>

<pre><code>class Enum(set):
    def __getattr__(self, name):
        if name in self:
            return name
        raise AttributeError
</code></pre>

<p>Here is its usage:</p>

<pre><code>Animals = Enum([""DOG"", ""CAT"", ""HORSE""])

print(Animals.DOG)
</code></pre>
",""
"2182591","1","","<pre><code>def rollback_savepoint(self):
    try:
        self.db.execute(""rollback to savepoint pt;"")
    except:
        print ""roll back to save point failed""
    else:
        print ""Roll back to save point. Done""
</code></pre>

<p>In above code snippet , It says ""roll back to save point failed"".
What went wrong?</p>

<p>EDIT:
I changed the code as shown below and getting error messages </p>

<pre><code>self.db.execute(""savepoint pt;"")
print ""Save point created""

self.cursor.execute(""insert into STK values(33)"")
self.db.execute(""rollback to savepoint pt;"")
</code></pre>

<p>error </p>

<pre><code>Save point created
Traceback (most recent call last):
  File ""open_db.py"", line 77, in &lt;module&gt;
    obj1.save_point()
  File ""open_db.py"", line 63, in save_point
    self.db.execute(""rollback to savepoint pt;"")
sqlite3.OperationalError: no such savepoint: pt
</code></pre>
","<python><sqlite3>"
"2182763","2","2182591","<p>Don't ever catch exceptions you aren't handling. Let it raise, so you can have useful error messages and tracebacks.</p>

<p>Example:</p>

<pre><code>&gt;&gt;&gt; c.execute('rollback to savepoint pt;')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
sqlite3.OperationalError: no such savepoint: pt
</code></pre>

<p>From the traceback I can know the error is that there's no <code>pt</code> savepoint. I can't know what's wrong with yours because you're hiding the very information that can help you most. Catching all errors and printing some ""Failed"" message is dumb - the traceback is much more useful and explains the problem better.</p>

<hr>

<p><strong>EDIT:</strong>
Your code wasn't exactly a easy-to-run testcase, but by reading it I was able to write some code myself to reproduce the issue. I can't explain exactly what is going on yet, but I found a way to make it work - related to <a href=""http://docs.python.org/library/sqlite3#sqlite3-controlling-transactions"" rel=""nofollow noreferrer"">how sqlite3 module deals with transactions</a>.</p>

<p>Here's my full, runnable example:</p>

<pre><code>import sqlite3
from tempfile import NamedTemporaryFile as NF
import os

f = NF(suffix='.db', delete=False).name

db = sqlite3.connect(f)

try:
    db.execute('CREATE TABLE foo (id INTEGER PRIMARY KEY, data VARCHAR)')
    db.isolation_level = None

    db.execute('INSERT INTO foo (data) values (?)', ('hello',))
    db.execute('INSERT INTO foo (data) values (?)', ('world',))

    db.execute(""savepoint pt;"")
    db.execute('INSERT INTO foo (data) values (?)', ('bah',))
    db.execute('INSERT INTO foo (data) values (?)', ('goodbye world',))
    db.execute(""rollback to savepoint pt;"")

    db.execute('INSERT INTO foo (data) values (?)', ('peace',))

    assert list(db.execute('select * from foo')) == [(1, 'hello'),
                                                     (2, 'world'),
                                                     (3, 'peace')]
finally:
    db.close()
    os.remove(f)
</code></pre>

<p>The line that makes it work is <code>db.isolation_level = None</code>. If you comment it out, it breaks just like your error. I've tried using all the documented values “DEFERRED”, “IMMEDIATE” and “EXCLUSIVE”, all ended in error.</p>
",""
"2194729","2","36647","<p>nose seems to be the best combination of flexibility and convenience.  It runs unittests, doctests, coverage (with an extension) and py.test-like tests from one framework and does so admirably.  It has enough popularity that it has had some IDE integration done as well for Komodo Edit and I wouldn't be surprised to see it elsewhere as well.</p>

<p>I like it for one strong reason: I almost always doctest before writing more extensive tests in another framework.  This is because, for basic tests, doctests kill two birds with one stone.  You get executable tests (although they are a bit clumsy to write well sometimes) as well as API documentation and interactive documentation at the same time.  nose will run these with the bundled doctest extension when you use a command-line option (--with-doctest).</p>

<p>I say this having come from py.test as my former favorite.  While it is great, nose tests are similar enough to me that I don't miss it, and I like the integration of the various test methodologies under one roof, so to speak.  YMMV, but I recommend taking a good look at nose before choosing another.  If you aren't familiar with py.test tests, you should look at them as well.  I find them terrific because they are usually written in such a way that they can be easily debugged <em>without</em> the testing framework, which makes one less tricky system involved in the debugging session.  I find that alone invaluable, while they are also easier to write than unittest tests in my opinion.</p>
",""
"2223726","2","60152","<p>Many command line tools don't have a javascript interpreter so do not support web 2.0 functionality.  <a href=""http://code.google.com/p/juicedpyshell"" rel=""nofollow noreferrer"">juicedpyshell</a> is based on PyXPCOMext's PyShell example.  It gives you a python shell window ""inside"" the browser, and simplifies access to both the DOM of what you are browsing to and also the shell window itself (so you can add GUI elements as part of your automation script).  But its a new project so probably not as full featured as some of the above.</p>
",""
"2311096","2","38238","<p>I used to work with PHP and recently I was asking myself, whats going on with this classmethod? Python manual is very technical and very short in words so it wont help with understanding that feature. I was googling and googling and I found answer -> <a href=""http://code.anjanesh.net/2007/12/python-classmethods.html"" rel=""noreferrer"">http://code.anjanesh.net/2007/12/python-classmethods.html</a>.</p>

<p>If you are lazy to click it. My explanation is shorter and below. :)</p>

<p>in PHP (maybe not all of you know PHP, but this language is so straight forward that everybody should understand what I'm talking about) we have static variables like this:</p>

<pre><code>
class A
{

    static protected $inner_var = null;

    static public function echoInnerVar()
    {
        echo self::$inner_var.""\n"";
    }

    static public function setInnerVar($v)
    {
        self::$inner_var = $v;
    }

}

class B extends A
{
}

A::setInnerVar(10);
B::setInnerVar(20);

A::echoInnerVar();
B::echoInnerVar();
</code></pre>

<p>The output will be in both cases 20.</p>

<p>However in python we can add @classmethod decorator and thus it is possible to have output 10 and 20 respectively. Example:</p>

<pre><code>
class A(object):
    inner_var = 0

    @classmethod
    def setInnerVar(cls, value):
        cls.inner_var = value

    @classmethod
    def echoInnerVar(cls):
        print cls.inner_var


class B(A):
    pass


A.setInnerVar(10)
B.setInnerVar(20)

A.echoInnerVar()
B.echoInnerVar()
</code></pre>

<p>Smart, ain't?</p>
",""
"2363162","2","61151","<p>How I do it...</p>

<p>Folder structure:</p>

<pre><code>project/
    src/
        code.py
    tests/
    setup.py
</code></pre>

<p>Setup.py points to src/ as the location containing my projects modules, then i run:</p>

<pre><code>setup.py develop
</code></pre>

<p>Which adds my project into site-packages, pointing to my working copy. To run my tests i use:</p>

<pre><code>setup.py tests
</code></pre>

<p>Using whichever test runner I've configured.</p>
",""
"2389722","2","36932","<p>Following the Java like enum implementation proposed by Aaron Maenpaa, I came out with the following. The idea was to make it generic and parseable.</p>

<pre><code>class Enum:
    #'''
    #Java like implementation for enums.
    #
    #Usage:
    #class Tool(Enum): name = 'Tool'
    #Tool.DRILL = Tool.register('drill')
    #Tool.HAMMER = Tool.register('hammer')
    #Tool.WRENCH = Tool.register('wrench')
    #'''

    name = 'Enum'    # Enum name
    _reg = dict([])   # Enum registered values

    @classmethod
    def register(cls, value):
        #'''
        #Registers a new value in this enum.
        #
        #@param value: New enum value.
        #
        #@return: New value wrapper instance.
        #'''
        inst = cls(value)
        cls._reg[value] = inst
        return inst

    @classmethod
    def parse(cls, value):
        #'''
        #Parses a value, returning the enum instance.
        #
        #@param value: Enum value.
        #
        #@return: Value corresp instance.        
        #'''
        return cls._reg.get(value)    

    def __init__(self, value):
        #'''
        #Constructor (only for internal use).
        #'''
        self.value = value

    def __str__(self):
        #'''
        #str() overload.
        #'''
        return self.value

    def __repr__(self):
        #'''
        #repr() overload.
        #'''
        return ""&lt;"" + self.name + "": "" + self.value + ""&gt;""
</code></pre>
",""
"2458660","2","36932","<p>The enum package from <a href=""http://en.wikipedia.org/wiki/Python_Package_Index"" rel=""nofollow noreferrer"">PyPI</a> provides a robust implementation of enums. An earlier answer mentioned PEP 354; this was rejected but the proposal was implemented 
<a href=""http://pypi.python.org/pypi/enum"" rel=""nofollow noreferrer"">http://pypi.python.org/pypi/enum</a>.</p>

<p>Usage is easy and elegant:</p>

<pre><code>&gt;&gt;&gt; from enum import Enum
&gt;&gt;&gt; Colors = Enum('red', 'blue', 'green')
&gt;&gt;&gt; shirt_color = Colors.green
&gt;&gt;&gt; shirt_color = Colors[2]
&gt;&gt;&gt; shirt_color &gt; Colors.red
True
&gt;&gt;&gt; shirt_color.index
2
&gt;&gt;&gt; str(shirt_color)
'green'
</code></pre>
",""
"2711031","2","62567","<p>When something isn't supported well in the standard library, I always look for a PyPI package. With virtualization and the ubiquity of modern Linux distributions, I no longer avoid Python extensions. PyICU seems to fit the bill: <a href=""https://stackoverflow.com/a/1098160/3461"">https://stackoverflow.com/a/1098160/3461</a></p>

<p>There now is also an option that is pure python. It's well tested: <a href=""https://github.com/jtauber/pyuca"" rel=""nofollow noreferrer"">https://github.com/jtauber/pyuca</a></p>

<hr>

<p><strong>Old answer:</strong></p>

<p>I like the regular expression solution. Here's a function you can copy and paste into any function, thanks to python's block structure support.</p>

<pre><code>def equals_ignore_case(str1, str2):
    import re
    return re.match(re.escape(str1) + r'\Z', str2, re.I) is not None
</code></pre>

<p>Since I used match instead of search, I didn't need to add a caret (^) to the regular expression.</p>

<p><strong>Note:</strong> This only checks equality, which is sometimes what is needed. I also wouldn't go so far as to say that I like it.</p>
",""
"2785738","2","36932","<p>Why must enumerations be ints? Unfortunately, I can't think of any good looking construct to produce this without changing the Python language, so I'll use strings:</p>

<pre><code>class Enumerator(object):
    def __init__(self, name):
        self.name = name

    def __eq__(self, other):
        if self.name == other:
            return True
        return self is other

    def __ne__(self, other):
        if self.name != other:
            return False
        return self is other

    def __repr__(self):
        return 'Enumerator({0})'.format(self.name)

    def __str__(self):
        return self.name

class Enum(object):
    def __init__(self, *enumerators):
        for e in enumerators:
            setattr(self, e, Enumerator(e))
    def __getitem__(self, key):
        return getattr(self, key)
</code></pre>

<p>Then again maybe it's even better now that we can naturally test against strings, for the sake of configuration files or other remote input.</p>

<p>Example:</p>

<pre><code>class Cow(object):
    State = Enum(
        'standing',
        'walking',
        'eating',
        'mooing',
        'sleeping',
        'dead',
        'dying'
    )
    state = State.standing

In [1]: from enum import Enum

In [2]: c = Cow()

In [3]: c2 = Cow()

In [4]: c.state, c2.state
Out[4]: (Enumerator(standing), Enumerator(standing))

In [5]: c.state == c2.state
Out[5]: True

In [6]: c.State.mooing
Out[6]: Enumerator(mooing)

In [7]: c.State['mooing']
Out[7]: Enumerator(mooing)

In [8]: c.state = Cow.State.dead

In [9]: c.state == c2.state
Out[9]: False

In [10]: c.state == Cow.State.dead
Out[10]: True

In [11]: c.state == 'dead'
Out[11]: True

In [12]: c.state == Cow.State['dead']
Out[11]: True
</code></pre>
",""
"2807576","2","38238","<p>I recently wanted a very light-weight logging class that would output varying amounts of output depending on the logging level that could be programmatically set.  But I didn't want to instantiate the class every time I wanted to output a debugging message or error or warning.  But I also wanted to encapsulate the functioning of this logging facility and make it reusable without the declaration of any globals.</p>

<p>So I used class variables and the <code>@classmethod</code> decorator to achieve this.</p>

<p>With my simple Logging class, I could do the following:</p>

<pre><code>Logger._level = Logger.DEBUG
</code></pre>

<p>Then, in my code, if I wanted to spit out a bunch of debugging information, I simply had to code</p>

<pre><code>Logger.debug( ""this is some annoying message I only want to see while debugging"" )
</code></pre>

<p>Errors could be out put with </p>

<pre><code>Logger.error( ""Wow, something really awful happened."" )
</code></pre>

<p>In the ""production"" environment, I can specify </p>

<pre><code>Logger._level = Logger.ERROR
</code></pre>

<p>and now, only the error message will be output.  The debug message will not be printed.</p>

<p>Here's my class:</p>

<pre><code>class Logger :
    ''' Handles logging of debugging and error messages. '''

    DEBUG = 5
    INFO  = 4
    WARN  = 3
    ERROR = 2
    FATAL = 1
    _level = DEBUG

    def __init__( self ) :
        Logger._level = Logger.DEBUG

    @classmethod
    def isLevel( cls, level ) :
        return cls._level &gt;= level

    @classmethod
    def debug( cls, message ) :
        if cls.isLevel( Logger.DEBUG ) :
            print ""DEBUG:  "" + message

    @classmethod
    def info( cls, message ) :
        if cls.isLevel( Logger.INFO ) :
            print ""INFO :  "" + message

    @classmethod
    def warn( cls, message ) :
        if cls.isLevel( Logger.WARN ) :
            print ""WARN :  "" + message

    @classmethod
    def error( cls, message ) :
        if cls.isLevel( Logger.ERROR ) :
            print ""ERROR:  "" + message

    @classmethod
    def fatal( cls, message ) :
        if cls.isLevel( Logger.FATAL ) :
            print ""FATAL:  "" + message
</code></pre>

<p>And some code that tests it just a bit:</p>

<pre><code>def logAll() :
    Logger.debug( ""This is a Debug message."" )
    Logger.info ( ""This is a Info  message."" )
    Logger.warn ( ""This is a Warn  message."" )
    Logger.error( ""This is a Error message."" )
    Logger.fatal( ""This is a Fatal message."" )

if __name__ == '__main__' :

    print ""Should see all DEBUG and higher""
    Logger._level = Logger.DEBUG
    logAll()

    print ""Should see all ERROR and higher""
    Logger._level = Logger.ERROR
    logAll()
</code></pre>
",""
"2913233","2","36932","<pre><code>def enum( *names ):

    '''
    Makes enum.
    Usage:
        E = enum( 'YOUR', 'KEYS', 'HERE' )
        print( E.HERE )
    '''

    class Enum():
        pass
    for index, name in enumerate( names ):
        setattr( Enum, name, index )
    return Enum
</code></pre>
",""
"2976036","2","36932","<p>I like the <a href=""http://en.wikipedia.org/wiki/Java_%28programming_language%29"" rel=""nofollow noreferrer"">Java</a> enum, that's how I do it in Python:</p>

<pre><code>def enum(clsdef):
    class Enum(object):
        __slots__=tuple([var for var in clsdef.__dict__ if isinstance((getattr(clsdef, var)), tuple) and not var.startswith('__')])

        def __new__(cls, *args, **kwargs):
            if not '_the_instance' in cls.__dict__:
                cls._the_instance = object.__new__(cls, *args, **kwargs)
            return cls._the_instance

        def __init__(self):
            clsdef.values=lambda cls, e=Enum: e.values()
            clsdef.valueOf=lambda cls, n, e=self: e.valueOf(n)
            for ordinal, key in enumerate(self.__class__.__slots__):
                args=getattr(clsdef, key)
                instance=clsdef(*args)
                instance._name=key
                instance._ordinal=ordinal
                setattr(self, key, instance)

        @classmethod
        def values(cls):
            if not hasattr(cls, '_values'):
                cls._values=[getattr(cls, name) for name in cls.__slots__]
            return cls._values

        def valueOf(self, name):
            return getattr(self, name)

        def __repr__(self):
            return ''.join(['&lt;class Enum (', clsdef.__name__, ') at ', str(hex(id(self))), '&gt;'])

    return Enum()
</code></pre>

<p>Sample use:</p>

<pre><code>i=2
@enum
class Test(object):
    A=(""a"",1)
    B=(""b"",)
    C=(""c"",2)
    D=tuple()
    E=(""e"",3)

    while True:
        try:
            F, G, H, I, J, K, L, M, N, O=[tuple() for _ in range(i)]
            break;
        except ValueError:
            i+=1

    def __init__(self, name=""default"", aparam=0):
        self.name=name
        self.avalue=aparam
</code></pre>

<p>All class variables are defined as a tuple, just like the constructor. So far, you can't use named arguments.</p>
",""
"3125956","2","35948","<p>As a replacement for k,v in user.items on Google App Engine using django templates where user = {'a':1, 'b', 2, 'c', 3}</p>

<pre><code>{% for pair in user.items %}
   {% for keyval in pair %} {{ keyval }}{% endfor %}&lt;br&gt;
{% endfor %}
</code></pre>

<p>a 1<br>
b 2<br>
c 3<br></p>

<p>pair = (key, value) for each dictionary item.</p>
",""
"3129619","2","60208","<p>The solutions I use: </p>

<p>A combination of 2 of the solutions posted here, which is relatively easy to read and supports defaults.</p>

<pre><code>result = {
  'a': lambda x: x * 5,
  'b': lambda x: x + 7,
  'c': lambda x: x - 2
}.get(whatToUse, lambda x: x - 22)(value)
</code></pre>

<p>where</p>

<pre><code>.get('c', lambda x: x - 22)(23)
</code></pre>

<p>looks up <code>""lambda x: x - 2""</code> in the dict and uses it with <code>x=23</code> </p>

<pre><code>.get('xxx', lambda x: x - 22)(44)
</code></pre>

<p>doesn't find it in the dict and uses the default <code>""lambda x: x - 22""</code> with <code>x=44</code>.</p>
",""
"3445481","2","35753","<p>Try Django or Pylons, write a simple app with both of them and then decide which one suits you best. There are others (like Turbogears or Werkzeug) but those are the most used.</p>
",""
"3466349","2","35948","<p>Or you can use the default django system which is used to resolve attributes in tempaltes like this : </p>

<pre><code>from django.template import Variable, VariableDoesNotExist
@register.filter
def hash(object, attr):
    pseudo_context = { 'object' : object }
    try:
        value = Variable('object.%s' % attr).resolve(pseudo_context)
    except VariableDoesNotExist:
        value = None
return value
</code></pre>

<p>That just works</p>

<p>in your template :</p>

<pre><code>{{ user|hash:item }}
</code></pre>
",""
"3504391","2","38238","<p>Class methods provide a ""semantic sugar"" (don't know if this term is widely used) - or ""semantic convenience"".</p>

<p>Example: you got a set of classes representing objects. You might want to have the class method <code>all()</code> or <code>find()</code> to write <code>User.all()</code> or <code>User.find(firstname='Guido')</code>. That could be done using module level functions of course...</p>
",""
"3521920","2","38238","<p>Think about it this way: normal methods are useful to hide the details of dispatch: you can type <code>myobj.foo()</code> without worrying about whether the <code>foo()</code> method is implemented by the <code>myobj</code> object's class or one of its parent classes. Class methods are exactly analogous to this, but with the class object instead: they let you call <code>MyClass.foo()</code> without having to worry about whether <code>foo()</code> is implemented specially by <code>MyClass</code> because it needed its own specialized version, or whether it is letting its parent class handle the call.</p>

<p>Class methods are essential when you are doing set-up or computation that <em>precedes</em> the creation of an actual instance, because until the instance exists you obviously cannot use the instance as the dispatch point for your method calls. A good example can be viewed in the SQLAlchemy source code; take a look at the <code>dbapi()</code> class method at the following link:</p>

<p><a href=""https://github.com/zzzeek/sqlalchemy/blob/ab6946769742602e40fb9ed9dde5f642885d1906/lib/sqlalchemy/dialects/mssql/pymssql.py#L47"" rel=""noreferrer"">https://github.com/zzzeek/sqlalchemy/blob/ab6946769742602e40fb9ed9dde5f642885d1906/lib/sqlalchemy/dialects/mssql/pymssql.py#L47</a></p>

<p>You can see that the <code>dbapi()</code> method, which a database backend uses to import the vendor-specific database library it needs on-demand, is a class method because it needs to run <em>before</em> instances of a particular database connection start getting created — but that it cannot be a simple function or static function, because they want it to be able to call other, supporting methods that might similarly need to be written more specifically in subclasses than in their parent class. And if you dispatch to a function or static class, then you ""forget"" and lose the knowledge about which class is doing the initializing.</p>
",""
"3761729","2","35988","<p>Perhaps you are looking for Structs without constructors:</p>

<pre><code>class Sample:
  name = ''
  average = 0.0
  values = None # list cannot be initialized here!


s1 = Sample()
s1.name = ""sample 1""
s1.values = []
s1.values.append(1)
s1.values.append(2)
s1.values.append(3)

s2 = Sample()
s2.name = ""sample 2""
s2.values = []
s2.values.append(4)

for v in s1.values:   # prints 1,2,3 --&gt; OK.
  print v
print ""***""
for v in s2.values:   # prints 4 --&gt; OK.
  print v
</code></pre>
",""
"3828986","2","60208","<p>Let's say you don't want to just return a value, but want to use methods that change something on an object. Using the approach stated here would be:</p>

<pre><code>result = {
  'a': obj.increment(x),
  'b': obj.decrement(x)
}.get(value, obj.default(x))
</code></pre>

<p>What happens here is that python evaluates all methods in the dictionary.
So even if your value is 'a', the object will get incremented <strong>and</strong> decremented by x.</p>

<p>Solution:</p>

<pre><code>func, args = {
  'a' : (obj.increment, (x,)),
  'b' : (obj.decrement, (x,)),
}.get(value, (obj.default, (x,)))

result = func(*args)
</code></pre>

<p>So you get a list containing a function and its arguments. This way, only the function pointer and the argument list get returned, <em>not</em> evaluated. 'result' then evaluates the returned function call.</p>
",""
"3851646","2","35817","<p>The function I use is:</p>

<pre><code>def quote_argument(argument):
    return '""%s""' % (
        argument
        .replace('\\', '\\\\')
        .replace('""', '\\""')
        .replace('$', '\\$')
        .replace('`', '\\`')
    )
</code></pre>

<p>that is: I always enclose the argument in double quotes, and then backslash-quote the only characters special inside double quotes.</p>
",""
"3919484","2","111945","<p>Httplib seems like a cleaner choice.</p>

<pre><code>import httplib
connection =  httplib.HTTPConnection('1.2.3.4:1234')
body_content = 'BODY CONTENT GOES HERE'
connection.request('PUT', '/url/path/to/put/to', body_content)
result = connection.getresponse()
# Now result.status and result.reason contains interesting stuff
</code></pre>
",""
"4092436","2","36932","<p>So, I agree. Let's not enforce type safety in Python, but I would like to protect myself from silly mistakes. So what do we think about this?</p>

<pre><code>class Animal(object):
    values = ['Horse','Dog','Cat']

    class __metaclass__(type):
        def __getattr__(self, name):
            return self.values.index(name)
</code></pre>

<p>It keeps me from value-collision in defining my enums.</p>

<pre><code>&gt;&gt;&gt; Animal.Cat
2
</code></pre>

<p>There's another handy advantage: really fast reverse lookups:</p>

<pre><code>def name_of(self, i):
    return self.values[i]
</code></pre>
",""
"4139017","2","38056","<p>Here's the solution that solved it for me:</p>

<pre><code>import os
import subprocess
import re

def findThisProcess( process_name ):
  ps     = subprocess.Popen(""ps -eaf | grep ""+process_name, shell=True, stdout=subprocess.PIPE)
  output = ps.stdout.read()
  ps.stdout.close()
  ps.wait()

  return output

# This is the function you can use  
def isThisRunning( process_name ):
  output = findThisProcess( process_name )

  if re.search('path/of/process'+process_name, output) is None:
    return False
  else:
    return True

# Example of how to use
if isThisRunning('some_process') == False:
  print(""Not running"")
else:
  print(""Running!"")
</code></pre>

<p>I'm a Python + Linux newbie, so this might not be optimal. It solved my problem, and hopefully will help other people as well.</p>
",""
"4300343","2","36932","<p>I prefer to define enums in Python like so:</p>

<pre><code>class Animal:
  class Dog: pass
  class Cat: pass

x = Animal.Dog
</code></pre>

<p>It's more bug-proof than using integers since you don't have to worry about ensuring that the integers are unique (e.g. if you said Dog = 1 and Cat = 1 you'd be screwed).</p>

<p>It's more bug-proof than using strings since you don't have to worry about typos (e.g.
x == ""catt"" fails silently, but x == Animal.Catt is a runtime exception).</p>
",""
"4367749","2","60208","<p>If you're searching extra-statement, as ""switch"", I built a python module that extends Python. It's called <a href=""http://elp.chronocv.fr/?lng=en"" rel=""noreferrer"">ESPY</a> as ""Enhanced Structure for Python"" and it's available for both Python 2.x and Python 3.x.</p>

<p>For example, in this case, a switch statement could be performed by the following code:</p>

<pre><code>macro switch(arg1):
    while True:
        cont=False
        val=%arg1%
        socket case(arg2):
            if val==%arg2% or cont:
                cont=True
                socket
        socket else:
            socket
        break
</code></pre>

<p>that can be used like this:</p>

<pre><code>a=3
switch(a):
    case(0):
        print(""Zero"")
    case(1):
        print(""Smaller than 2""):
        break
    else:
        print (""greater than 1"")
</code></pre>

<p>so espy translate it in Python as:</p>

<pre><code>a=3
while True:
    cont=False
    if a==0 or cont:
        cont=True
        print (""Zero"")
    if a==1 or cont:
        cont=True
        print (""Smaller than 2"")
        break
    print (""greater than 1"")
    break
</code></pre>
",""
"5112021","2","38056","<p>Seems to me a PID-based solution is too vulnerable. If the process you're trying to check the status of has been terminated, its PID can be reused by a new process. So, IMO ShaChris23 the Python + Linux newbie gave the best solution to the problem. Even it only works if the process in question is uniquely identifiable by its command string, or you are sure there would be only one running at a time.</p>
",""
"5144206","2","37486","<p>if you use django you might also use 
<a href=""http://docs.djangoproject.com/en/dev/ref/templates/builtins/#striptags"" rel=""nofollow"">http://docs.djangoproject.com/en/dev/ref/templates/builtins/#striptags</a>
;)</p>
",""
"5288635","2","34570","<p>I'm currently reading <a href=""http://www.headfirstlabs.com/books/hfpython/"" rel=""nofollow"">Head First Python</a> which came out in November, 2010. I didn't read <a href=""http://www.diveintopython.net/toc/index.html"" rel=""nofollow"">Dive Into Python</a> but I read <a href=""http://diveintohtml5.net/"" rel=""nofollow"">Dive Into HTML5</a> by the same writer and It was well written.</p>
",""
"5375042","2","60649","<p>You might want to check out <a href=""http://www.angryredplanet.com/~hackbod/openbinder/docs/html/"" rel=""nofollow"">openbinder</a>.</p>
",""
"5519872","2","14389","<p>Python's re module doesn't support \p{Letter} or \X. However, the <a href=""http://pypi.python.org/pypi/regex"" rel=""nofollow"">new regex implementation on PyPI</a> does.</p>
",""
"6001200","2","38238","<p>I think the most clear answer is <strong>AmanKow's</strong> one. It boils down to how u want to organize your code. You can write everything as module level functions which are wrapped in the namespace of the module i.e</p>

<pre><code>module.py (file 1)
---------
def f1() : pass
def f2() : pass
def f3() : pass


usage.py (file 2)
--------
from module import *
f1()
f2()
f3()
def f4():pass 
def f5():pass

usage1.py (file 3)
-------------------
from usage import f4,f5
f4()
f5()
</code></pre>

<p>The above procedural code is not well organized, as you can see after only 3 modules it gets confusing, what is each method do ? You can use long descriptive names for functions(like in java) but still  your code gets unmanageable very quick.</p>

<p>The object oriented way is to break down your code into manageable blocks i.e Classes &amp; objects and functions can be associated with objects instances or with classes. </p>

<p>With class functions you gain another level of division in your code compared with module level functions.
So you can group related functions within a class to make them more specific to a task  that you assigned to that class. For example you can create a file utility class :</p>

<pre><code>class FileUtil ():
  def copy(source,dest):pass
  def move(source,dest):pass
  def copyDir(source,dest):pass
  def moveDir(source,dest):pass

//usage
FileUtil.copy(""1.txt"",""2.txt"")
FileUtil.moveDir(""dir1"",""dir2"")
</code></pre>

<p>This way is more flexible and more maintainable, you group functions together and its more obvious to what each function do. Also you prevent name conflicts, for example the function copy may exist in another imported module(for example network copy) that you use in your code, so when you use the full name FileUtil.copy() you remove the problem and both copy functions can be used side by side.</p>
",""
"6110229","2","13941","<p>I tried the mixer from the pygame module, and it works fine. First install the module:</p>

<pre><code>$ sudo apt-get install python-pygame
</code></pre>

<p>Then in the program, write this:</p>

<pre><code>from pygame import mixer
mixer.init() #you must initialize the mixer
alert=mixer.Sound('bell.wav')
alert.play()
</code></pre>

<p>With pygame you have a lot of customization options, which you may additionally experiment with.</p>
",""
"6347576","2","36932","<p>Here is a variant on <a href=""https://stackoverflow.com/questions/36932/whats-the-best-way-to-implement-an-enum-in-python/1695250#1695250"">Alec Thomas's solution</a>:</p>

<pre><code>def enum(*args, **kwargs):
    return type('Enum', (), dict((y, x) for x, y in enumerate(args), **kwargs)) 

x = enum('POOH', 'TIGGER', 'EEYORE', 'ROO', 'PIGLET', 'RABBIT', 'OWL')
assert x.POOH == 0
assert x.TIGGER == 1
</code></pre>
",""
"6395603","2","34570","<p>I recommended this ebook <a href=""http://www.swaroopch.com/notes/Python"" rel=""nofollow"">A Byte of Python</a></p>
",""
"6606504","2","60208","<pre><code>class switch(object):
    value = None
    def __new__(class_, value):
        class_.value = value
        return True

def case(*args):
    return any((arg == switch.value for arg in args))
</code></pre>

<p>Usage:</p>

<pre><code>while switch(n):
    if case(0):
        print ""You typed zero.""
        break
    if case(1, 4, 9):
        print ""n is a perfect square.""
        break
    if case(2):
        print ""n is an even number.""
    if case(2, 3, 5, 7):
        print ""n is a prime number.""
        break
    if case(6, 8):
        print ""n is an even number.""
        break
    print ""Only single-digit numbers are allowed.""
    break
</code></pre>

<p>Tests:</p>

<pre><code>n = 2
#Result:
#n is an even number.
#n is a prime number.
n = 11
#Result:
#Only single-digit numbers are allowed.
</code></pre>
",""
"6606540","2","60208","<p>My favorite one is a really nice <a href=""http://code.activestate.com/recipes/410692/"" rel=""noreferrer"">recipe</a>. You'll really like it. It's the closest one I've seen to actual switch case statements, especially in features.</p>

<p>Here's an example:</p>

<pre><code># The following example is pretty much the exact use-case of a dictionary,
# but is included for its simplicity. Note that you can include statements
# in each suite.
v = 'ten'
for case in switch(v):
    if case('one'):
        print 1
        break
    if case('two'):
        print 2
        break
    if case('ten'):
        print 10
        break
    if case('eleven'):
        print 11
        break
    if case(): # default, could also just omit condition or 'if True'
        print ""something else!""
        # No need to break here, it'll stop anyway

# break is used here to look as much like the real thing as possible, but
# elif is generally just as good and more concise.

# Empty suites are considered syntax errors, so intentional fall-throughs
# should contain 'pass'
c = 'z'
for case in switch(c):
    if case('a'): pass # only necessary if the rest of the suite is empty
    if case('b'): pass
    # ...
    if case('y'): pass
    if case('z'):
        print ""c is lowercase!""
        break
    if case('A'): pass
    # ...
    if case('Z'):
        print ""c is uppercase!""
        break
    if case(): # default
        print ""I dunno what c was!""

# As suggested by Pierre Quentel, you can even expand upon the
# functionality of the classic 'case' statement by matching multiple
# cases in a single shot. This greatly benefits operations such as the
# uppercase/lowercase example above:
import string
c = 'A'
for case in switch(c):
    if case(*string.lowercase): # note the * for unpacking as arguments
        print ""c is lowercase!""
        break
    if case(*string.uppercase):
        print ""c is uppercase!""
        break
    if case('!', '?', '.'): # normal argument passing style also applies
        print ""c is a sentence terminator!""
        break
    if case(): # default
        print ""I dunno what c was!""
</code></pre>
",""
"6971002","2","36932","<p>Another, very simple, implementation of an enum in Python, using <code>namedtuple</code>:</p>

<pre><code>from collections import namedtuple

def enum(*keys):
    return namedtuple('Enum', keys)(*keys)

MyEnum = enum('FOO', 'BAR', 'BAZ')
</code></pre>

<p>or, alternatively,</p>

<pre><code># With sequential number values
def enum(*keys):
    return namedtuple('Enum', keys)(*range(len(keys)))

# From a dict / keyword args
def enum(**kwargs):
    return namedtuple('Enum', kwargs.keys())(*kwargs.values())
</code></pre>

<p>Like the method above that subclasses <code>set</code>, this allows:</p>

<pre><code>'FOO' in MyEnum
other = MyEnum.FOO
assert other == MyEnum.FOO
</code></pre>

<p>But has more flexibility as it can have different keys and values. This allows</p>

<pre><code>MyEnum.FOO &lt; MyEnum.BAR
</code></pre>

<p>to act as is expected if you use the version that fills in sequential number values.</p>
",""
"7008599","2","38056","<p>Sligtly modified version of ShaChris23 script. Checks if proc_name value is found within process args string (for example Python script executed with python ):</p>

<pre><code>def process_exists(proc_name):
    ps = subprocess.Popen(""ps ax -o pid= -o args= "", shell=True, stdout=subprocess.PIPE)
    ps_pid = ps.pid
    output = ps.stdout.read()
    ps.stdout.close()
    ps.wait()

    for line in output.split(""\n""):
        res = re.findall(""(\d+) (.*)"", line)
        if res:
            pid = int(res[0][0])
            if proc_name in res[0][1] and pid != os.getpid() and pid != ps_pid:
                return True
    return False
</code></pre>
",""
"7239139","2","62567","<p>This question is asking 2 very different things:</p>

<ol>
<li>What is the easiest way to compare strings in Python, ignoring case?</li>
<li>I guess I'm looking for an equivalent to C's stricmp().</li>
</ol>

<p>Since #1 has been answered very well already (ie: str1.lower() &lt; str2.lower())  I will answer #2.</p>

<pre><code>def strincmp(str1, str2, numchars=None):
    result = 0
    len1 = len(str1)
    len2 = len(str2)
    if numchars is not None:
        minlen = min(len1,len2,numchars)
    else:
        minlen = min(len1,len2)
    #end if
    orda = ord('a')
    ordz = ord('z')

    i = 0
    while i &lt; minlen and 0 == result:
        ord1 = ord(str1[i])
        ord2 = ord(str2[i])
        if ord1 &gt;= orda and ord1 &lt;= ordz:
            ord1 = ord1-32
        #end if
        if ord2 &gt;= orda and ord2 &lt;= ordz:
            ord2 = ord2-32
        #end if
        result = cmp(ord1, ord2)
        i += 1
    #end while

    if 0 == result and minlen != numchars:
        if len1 &lt; len2:
            result = -1
        elif len2 &lt; len1:
            result = 1
        #end if
    #end if

    return result
#end def
</code></pre>

<p>Only use this function when it makes sense to as in many instances the lowercase technique will be superior.</p>

<p>I only work with ascii strings, I'm not sure how this will behave with unicode.</p>
",""
"7458935","2","36932","<p>This solution is a simple way of getting a class for the enumeration defined as a list (no more annoying integer assignments):</p>

<p>enumeration.py:</p>

<pre><code>import new

def create(class_name, names):
    return new.classobj(
        class_name, (object,), dict((y, x) for x, y in enumerate(names))
    )
</code></pre>

<p>example.py:</p>

<pre><code>import enumeration

Colors = enumeration.create('Colors', (
    'red',
    'orange',
    'yellow',
    'green',
    'blue',
    'violet',
))
</code></pre>
",""
"7610441","2","60152","<p>I would suggest you to use Selenium instead of Mechanize/Twill because Mechanize would fail while handling Javascript.</p>
",""
"7769062","1","","<p>I started a project with the Python web framwork 'Pyramid', using the template engine 'chameleon'.</p>

<p>I'm a beginner of this frameworks, but I have to use it for a customer.</p>

<p>I follow the steps in order to install the framework, then I started coding, just for training purpose!</p>

<p>My first application was a stupid, simple CRUD application. </p>

<p>What I'm doing is:</p>

<p>in my <code>__init__.py</code> I have, for each view, the following code:</p>

<p>config.add_view('myenglishdictionary.views.modify',route_name='modify_route',renderer='templates/base.pt')</p>

<p>base.pt is the main template with header and footer and a div with the following code:</p>

<pre><code>&lt;div&gt;${body}&lt;/div&gt;
</code></pre>

<p>in my file view.py each view has 2 lines like the following:</p>

<pre><code>body = render('templates/list.pt',{'list':list ,'project':'myProject'}, request=request)
return {'body':body}
</code></pre>

<p>and in my list.pt there is the content which will be embedded in base.pt</p>

<p>All seemed to work good. But after an update of the libraries, now I can't see my template correctly.</p>

<p>Instead the actual html code there are html entities:</p>

<pre><code> &amp;lt;div class=""clear""&amp;gt;&amp;lt;/div&amp;gt;
</code></pre>

<p>so, obviously the page doesn't look well.</p>

<p>The problems seems to be in the render method, since the html of base.pt template is displayed correctly.</p>
","<python><pyramid><chameleon><template-tal>"
"7769144","1","","<p>We parse logs created by automated scripts.  A typical thing that we'd care about is the string: <code>'1.10.07-SNAPSHOT (1.10.07-20110303.024749-7)'</code> from the following line:</p>

<pre><code>15:28:02.115 - INFO   - TestLib: Successfully retrieved build version: '1.11.11-SNAPSHOT (1.11.11-20110303.024749-7)'
</code></pre>

<p>The trouble is, some logs are manually created, with users entering this information themselves.  To remind themselves of the format they have added a dialog with the template:</p>

<pre><code>02:24:50.655 - INFO   - gui: Step Dialog: For test results management purposes, specify the build in which the test is executed in the following format, build version: 'specify version here'
02:25:04.905 - INFO   - gui:     Response: OK
02:25:04.905 - INFO   - gui:     Comments: 'build version: '1.11.11''
</code></pre>

<p>My regex for this currently is <code>.*[Bb]uild [Vv]ersion:*\s*(?!.*&lt;)'?([^']*)'</code>.  The <code>'(?!.*&lt;)'</code> was my first attempt to avoid this problem, because some users would write ''.  That doesn't catch the above case though.  I think the correct thing to do is going to be a negative lookbehind that does not match if <code>'Step Dialog'</code> is present on the line, but my attempts to write that seem to be failing me, according to <a href=""http://gskinner.com/RegExr/"" rel=""nofollow"">regexr</a> (for some reason it's not letting me share the link to my saved form).  I thought negative lookbehind would look like this: <code>(?&lt;!Step Dialog)</code> and result in this:</p>

<pre><code>`(?&lt;!Step Dialog).*[Bb]uild [Vv]ersion:*\s*(?!.*&lt;)'?([^']*)'`
</code></pre>

<p>but that's matching both the first and third line of the above for some reason.</p>

<p><strong>Edit:</strong><br>
'[Bb]', and ':<em>\s</em>' are for users who entered information in not precisely the right format by using multiple colons and spaces, capitalized 'Build'.  Suggestions for cleaning this up in general are appreciated, I'm relatively new to regexs.</p>
","<python><regex>"
"7769200","2","7769062","<p>Using the <code>${}</code> syntax escapes the included text by default (to help defend against XSS injection attacks).</p>

<p>Instead, use the <code>structure:</code> prefix to tell the rendering engine to not escape your text:</p>

<pre><code>&lt;div&gt;${structure: body}&lt;/div&gt;
</code></pre>
",""
"7769322","1","","<p>Beautiful Soup doesn't seem to work properly(for me) in case HTML contains unicodes whose ascii exceeds 128. What suitable decoding-encoding should be used for this ?</p>

<p><code>raw = open('index.html').read()<br>
BeautifulSoup.BeautifulSoup(raw)</code></p>

<p>Error </p>

<p><code>...stacktrace...<br>
UnicodeEncodeError: 'ascii' codec can't encode character u'\xe9' in position 8094: ordinal not in range(128)</code></p>
","<python><regex><html-parsing><beautifulsoup>"
"7769415","1","","<p>Trying to use python GeoModel class and the bulkloader.   I'm calling the following <code>post_import_function</code> which works fine and the entity is updated with the location field set properly.</p>

<pre><code>def post_process_obj(input_dict, entity_instance, bulkload_state):
    entity_instance['location'] = db.GeoPt(entity_instance['latitude'], entity_instance['longitude'])
    return entity_instance
</code></pre>

<p>But what I need to do is call <code>entity_instance.update_location()</code> on the entity before it saves to the data store.  The <code>entity_instance</code> though is an Entity, not a subclass of GeoModel so I'm not clear how to do this.  There was a post a while back that said inline the code or call a function and pass the entity to it but I don't know what that was supposed to mean.</p>

<p>Thanks for any help/sample code.</p>
","<python><google-app-engine><bulkloader>"
"7769419","1","","<p>Starting with this from Corey Goldberg:</p>

<pre><code>#!/usr/bin/env python

import json
import pprint
import urllib2


def get_stock_quote(ticker_symbol):   
    url = 'http://finance.google.com/finance/info?q=%s' % ticker_symbol
    lines = urllib2.urlopen(url).read().splitlines()
    return json.loads(''.join([x for x in lines if x not in ('// [', ']')]))


if __name__ == '__main__':
    quote = get_stock_quote('IBM')
    print 'ticker: %s' % quote['t']
    print 'current price: %s' % quote['l_cur']
    print 'last trade: %s' % quote['lt']
    print 'full quote:'
    pprint.pprint(quote)
</code></pre>

<p>Using this:</p>

<pre><code>import urllib2, json

def get_stock_quote(ticker_symbol):   
    url = 'http://finance.google.com/finance/info?q=%s' % ticker_symbol
    lines = urllib2.urlopen(url).read().splitlines()
    #print lines
    return json.loads(''.join([x for x in lines if x not in ('// [', ']')]))



if __name__ == '__main__':
    symbols = ('Goog',) 
    symbols2 = ('Goog','MSFT')
    quote = get_stock_quote(symbols)
    print 'ticker: %s' % quote['t'],  'current price: %s' % quote['l_cur'], 'last trade: %s' % quote['ltt']
    print quote['t'],  quote['l'], quote['ltt']
</code></pre>

<p>Usings symbols works, symbols2 does not work. The error message is</p>

<p><strong>TypeError: not all arguments converted during string formatting</strong></p>

<p>How do I convert all arguments to string in string formatting. In browser, the code that works is: Goog,MSFT.   </p>

<p>EDIT: the output I am looking for is a list with goog, msft info. </p>
","<python><string><urllib2>"
"7769453","2","7769419","<p>You got this error because formatting require only one string, while you put tuple with 2 strings. If you want to get <a href=""http://finance.google.com/finance/info?q=Goog,MSFT"" rel=""nofollow"">http://finance.google.com/finance/info?q=Goog,MSFT</a> you should do </p>

<pre><code>quote = get_stock_quote("","".join(['Goog','MSFT']))
</code></pre>

<p>Or do this in cycle:</p>

<pre><code>for symbol in ('Goog', 'MSFT'):
    quote = get_stock_quote(symbol)
</code></pre>
",""
"7769462","2","7769419","<p>The problem is here:</p>

<pre><code>url = 'http://finance.google.com/finance/info?q=%s' % ticker_symbol
</code></pre>

<p>With <code>symbols2</code>, you're supplying a 2-tuple whereas the formatting operator expects a scalar or a 1-tuple.</p>

<p>The following will fix the immediate error:</p>

<pre><code>url = 'http://finance.google.com/finance/info?q=%s' % "","".join(ticker_symbol)
</code></pre>

<p>This only fixes half of the problem: the code that parses the results will also need to change. I leave this as an exercise for the reader.</p>
",""
"7769466","2","7769144","<p>You are close, but it is still matching because it can find a string that satisfies <code>.*</code> without being preceded by <code>Step Dialog</code>. Positive and negative assertions only affect the pattern immediately surrounding them. Thus, you have to force it to check every character you don't want matching <code>Step Dialog</code>.</p>

<p>Try this:</p>

<pre><code>`^(?:(?!Step Dialog).)*[Bb]uild [Vv]ersion:*\s*(?!.*&lt;)'?([^']*)'`
</code></pre>

<p>Now, it ensures that every character between <code>^</code> (the beginning of the line) and <code>[Bb]uild [Vv]ersion</code> is <strong>not</strong> the string <code>Step Dialog</code>.</p>

<p>You'll notice I also changed it to a positive lookahead, because it's easier to understand what's going on.</p>
",""
"7769470","2","7769419","<p>Your problem is that %s can't handle a tuple with 2 elements, see that example below:</p>

<pre><code>&gt;&gt;&gt; ""=%s"" % ('Goog',)
'=Goog'
&gt;&gt;&gt; ""=%s"" % ('Goog','MSFT')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: not all arguments converted during string formatting
</code></pre>

<p>Anyway, use <code>format()</code> instead of <code>%</code>.</p>
",""
"7769474","1","","<p>I'm trying to read in data from and create a nested dictionary of dictionaries. There is a similar question <a href=""https://stackoverflow.com/questions/635483/what-is-the-best-way-to-implement-nested-dictionaries-in-python"">here</a>, but I can't seem to figure out how to adapt a solution to my particular problem. I would be very grateful if someone could explain a solution to me for my problem.</p>

<p>Basically, I have a file that looks like this:</p>

<pre><code>A    'abc'    12    0.001
B    'tex'    34    0.002  
B    'tex'    78    0.005
E    'yet'    88    0.090
A    'abc'    22    0.120
</code></pre>

<p>I need to create a complex dictionary that looks like this:</p>

<pre><code>complete_dict = {A:{'abc':[[12, 0.001], [22, 0.120]]}, 
                 B:{'tex':[[34, 0.002], [78, 0.005]]}, 
                 E:{'yet':[[88, 0.090]]}}
</code></pre>

<p>I can create the inner dictionary, but I can't figure out how to create the outer dictionary. Here is my code for the inner dictionary:</p>

<pre><code>with open('data.txt', mode=""r"") as data_file:
    fieldnames = ('character', 'string', 'value1', 'value2')
    reader = csv.DictReader(data_file, fieldnames=fieldnames, delimiter=""\t"")
    inner_dict = {}
    for row in reader:
        values = [int(row['value1']), float(row['value2'])] 
        string = row['string'] 
        if string in inner_dict:
            inner_dict[string].append(values)
        else:
            inner_dict[string] = values
</code></pre>

<p>Could someone explain how to create the outer dictionary? The only idea I have is to read the file and create the inner dictionary, then reread the file to create the outer dictionary. Surely there must be an easier way? Thanks in advance for the help!</p>
","<python><dictionary><nested>"
"7769496","2","7769419","<p>In this case you can make:</p>

<pre><code>import urllib2, json

def get_stock_quote(ticker_symbol):
    if isinstance(ticker_symbol, (list, tuple)):
        ticker_symbol = ','.join(ticker_symbol)
    url = 'http://finance.google.com/finance/info?q=%s' % ticker_symbol
    lines = urllib2.urlopen(url).read().splitlines()
    #print lines
    return json.loads('[%s]' % ''.join([x for x in lines if x not in ('// [', ']')]))

if __name__ == '__main__':
    symbols = ('Goog',) 
    symbols2 = ('Goog','MSFT')
    quotes = get_stock_quote(symbols2)
    for quote in quotes:
        print 'ticker: %s' % quote['t'],  'current price: %s' % quote['l_cur'], 'last trade: %s' % quote['ltt']
        print quote['t'],  quote['l'], quote['ltt']
</code></pre>
",""
"7769525","1","","<p>Numpy allows matrices of different sizes to be added/multiplied/divided provided certain <a href=""http://docs.scipy.org/doc/numpy/user/basics.broadcasting.html"" rel=""nofollow"">broadcasting rules</a> are followed.  Also, creation of <a href=""http://code.google.com/p/numexpr/"" rel=""nofollow"">temporary arrays</a> is a major speed impediment to numpy.  </p>

<p>The following timit results surprise me...what is going on?</p>

<pre><code>In [41]: def f_no_dot(mat,arr):
   ....:     return mat/arr

In [42]: def f_dot(mat,arr):
   ....:     denominator = scipy.dot(arr, scipy.ones((1,2)))
   ....:     return mat/denominator

In [43]: mat = scipy.rand(360000,2)

In [44]: arr = scipy.rand(360000,1)

In [45]: timeit temp = f_no_dot(mat,arr)
10 loops, best of 3: 44.7 ms per loop

In [46]: timeit temp = f_dot(mat,arr)
100 loops, best of 3: 10.1 ms per loop
</code></pre>

<p>I thought that f_dot would be slower since it had to create the temporary array denominator, and I assumed that this step was skipped by f_no_dot.  I should note that these times scale linearly (with array size, up to length 1 billion) for f_no_dot, and slightly worse than linear for f_dot.</p>
","<python><performance><numpy>"
"7769594","2","7769474","<p>Is this what you're looking to accomplish?</p>

<pre><code>with open('data.txt', mode=""r"") as data_file:
    fieldnames = ('character', 'string', 'value1', 'value2')
    reader = csv.DictReader(data_file, fieldnames=fieldnames, delimiter=""\t"")

    complete_dict = {}
    for row in reader:
        char_dict = complete_dict.setdefault(row['character'], {})
        values_list = char_dict.setdefault(row['string'], [])
        values = [int(row['value1']), float(row['value2'])] 
        values_list.append(values)

pprint.pprint(complete_dict)
</code></pre>

<p>Note that in your example you have 'value2' where you want 'value1'.  Also, this appears to include the single quotes around the strings as part of the string, so you may need to clean that up.</p>
",""
"7769598","2","7769144","<p>Couple ways you can do this, but you're pretty close.</p>

<pre><code>`.*(?&lt;!Step Dialog.*)[Bb]uild [Vv]ersion:*\s*(?!.*&lt;)'?([^']*)'`
`^(?!.*Step Dialog).*[Bb]uild [Vv]ersion:*\s*(?!.*&lt;)'?([^']*)'`
</code></pre>

<p>Chriszuma's pattern should work, too. Use whichever you like best. If performance is a consideration, you could benchmark the three patterns and see which is faster. My feeling is that it'll be the one starting with ``.(?)`, but I can't say for sure.</p>

<p>Edit: As ekhumoro points out, <a href=""https://stackoverflow.com/questions/2613237/python-regex-look-behind-requires-fixed-width-pattern"">the Python regex engine requires fixed-length lookbehinds</a>, so the first one won't work in Python. The second one should be fine, though.</p>
",""
"7769691","2","7769474","<p>If you read the file in a variable called <code>s</code> for brevity, the following might work:</p>

<pre><code>d = {}
for l in s.split('\n'):
    character, string, val1, val2 = l.split('\t')
    if not d.has_key(character):
        d[character] = { string: [] }
    d[character][string].append([val1, val2])
</code></pre>

<p>Assuming <code>string</code> is always the same for every <code>character</code>, but that wasn't explicitly specified in your question.</p>
",""
"7769745","1","","<p>I need to insert a series of names (like 'Alam\xc3\xa9') into a list, and than I have to save them into a SQLite database.</p>

<p>I know that I can render these names correctly by tiping:</p>

<pre><code>print eval(repr(NAME)).decode(""utf-8"")
</code></pre>

<p>But I have to insert them into a list, so I can't use the <strong>print</strong></p>

<p>Other way for doing this without the print?</p>
","<python><unicode><utf-8>"
"7769830","2","7769745","<p>Are you looking for something like this?</p>

<pre><code>[n.decode(""utf-8"") for n in ['Alam\xc3\xa9', 'Alam\xc3\xa9', 'Alam\xc3\xa9']]
</code></pre>
",""
"7769860","2","7769322","<p>The problem is not with parsing the file. Using the link you gave in your comment to Marco, doing <code>soup = BeautifulSoup(urllib.urlopen(your_link))</code> works absolutely fine.</p>

<p>It's just when you try and print that parsed data to the console that you get a problem, because it's now been converted to Unicode, and Python will try and output that as ASCII unless you tell it otherwise. So doing <code>print soup</code> rather than just <code>soup</code> in your console will work.</p>
",""
"7769870","1","","<p>I'm running a Python script on Windows, and I've noticed that even though the Python process takes ~8% CPU, the associated <code>conhost.exe</code> process takes ~14%.</p>

<p>Why is this so? How come such a large part of the CPU consumption is in the conhost and not in the Python process?<br>
Is there a way to reduce this CPU consumption? (besides optimizing the code of course)</p>

<p><strong>UPDATE 1:</strong> Win7 64bit, Python 2.6.6</p>

<p><strong>UPDATE 2:</strong> The Python program uses a C++ package via <a href=""http://www.swig.org/"" rel=""nofollow"">SWIG</a> Python bindings. The C++ package (<a href=""http://www.quickfixengine.org/"" rel=""nofollow"">quickfix</a>) does I/O with the network quite a bit (1), it also prints to the console (2). The Python code prints to several files (3). Which if these three should be suspect?</p>
","<python><windows><cpu-usage><windows-console>"
"7769879","2","7769474","<p>Here's how I would do it.  Not much shorter than yours.  This way only keeps one copy of all the data in memory, only reading in one line at a time from the file.</p>

<pre><code>f = open('data.txt', 'r')
rows = imap(lambda line: line.split('\t'), f)
result = {}
for key1, key2, val1, val2 in rows:
  key2 = eval(key2)  # safe only if you know the value is a quoted string
  if key1 not in result:
    result[key1] = {}
  if key2 not in result[key1]:
    result[key1][key2] = []
  result[key1][key2].append([int(val1), float(val2)])
f.close()  # prevent lingering open file
</code></pre>
",""
"7769981","1","","<p>so I asked everything in the title:</p>

<p>I have a wave file (written by PyAudio from an input audio) and I want to convert it in float data corresponding of the sound level (amplitude) to do some fourier transformation etc...</p>

<p>Anyone have an idea to convert WAVE data to float?</p>
","<python><audio><wave><pyaudio>"
"7770034","1","","<p>There is os.getuid() which ""Returns the <strong>current</strong> process’s user id."". But how do I find out any given user's id?</p>
","<python><linux>"
"7770042","2","7769981","<p>The Microsoft WAVE format is fairly well documented. See <a href=""https://ccrma.stanford.edu/courses/422/projects/WaveFormat/"" rel=""nofollow"">https://ccrma.stanford.edu/courses/422/projects/WaveFormat/</a> for example. It wouldn't take much to write a file parser to open and interpret the data to get the information you require... That said, it's almost certainly been done before, so I'm sure someone will give an ""easier"" answer ;)</p>
",""
"7770063","2","7770034","<p>You could use <a href=""http://docs.python.org/library/pwd.html#pwd.getpwnam""><code>pwd.getpwnam()</code></a>:</p>

<pre><code>In [5]: pwd.getpwnam('aix').pw_uid
Out[5]: 1004
</code></pre>
",""
"7770065","2","7770034","<p>You could just parse <code>/etc/passwd</code>, it's stored there.</p>
",""
"7770110","2","7769474","<p>Given:</p>

<pre><code>$ cat data.txt
A   'abc'   12  0.001
B   'tex'   34  0.002
B   'tex'   78  0.005
E   'yet'   88  0.090
A   'abc'   22  0.120
</code></pre>

<p>This:</p>

<pre><code>import csv

d={}
with open('data.txt', mode=""r"") as data_file:
    fieldnames = ('character', 'string', 'value1', 'value2')
    reader = csv.DictReader(data_file, fieldnames=fieldnames, delimiter=""\t"")
    for row in reader:
        c=row['character']
        values = [int(row['value1']), float(row['value2'])] 
        s = row['string']
        if c not in d: d[c]={}
        if s not in d[c]: d[c][s] = []
        d[c][s].append(values)

print d        
</code></pre>

<p>Produces:</p>

<pre><code>{'A': {""'abc'"": [[12, 0.001], [22, 0.12]]}, 
 'B': {""'tex'"": [[34, 0.002], [78, 0.005]]}, 
 'E': {""'yet'"": [[88, 0.09]]}}
</code></pre>
",""
"7770148","2","7770034","<p><a href=""http://docs.python.org/library/pwd.html""><code>pwd</code></a>:</p>

<pre><code>import pwd
for p in pwd.getpwall():
    print p

pwd.struct_passwd(pw_name='_calendar', pw_passwd='*', pw_uid=93, pw_gid=93, pw_gecos='Calendar', pw_dir='/var/empty', pw_shell='/usr/bin/false')
pwd.struct_passwd(pw_name='_teamsserver', pw_passwd='*', pw_uid=94, pw_gid=94, pw_gecos='TeamsServer', pw_dir='/var/teamsserver', pw_shell='/usr/bin/false')
pwd.struct_passwd(pw_name='_update_sharing', pw_passwd='*', pw_uid=95, pw_gid=-2, pw_gecos='Update Sharing', pw_dir='/var/empty', pw_shell='/usr/bin/false')
pwd.struct_passwd(pw_name='_installer', pw_passwd='*', pw_uid=96, pw_gid=-2, pw_gecos='Installer', pw_dir='/var/empty', pw_shell='/usr/bin/false')
pwd.struct_passwd(pw_name='_atsserver', pw_passwd='*', pw_uid=97, pw_gid=97, pw_gecos='ATS Server', pw_dir='/var/empty', pw_shell='/usr/bin/false')
pwd.struct_passwd(pw_name='_ftp', pw_passwd='*', pw_uid=98, pw_gid=-2, pw_gecos='FTP Daemon', pw_dir='/var/empty', pw_shell='/usr/bin/false')
</code></pre>
",""
"7770191","2","7769474","<p>Use a <a href=""http://docs.python.org/library/collections.html#collections.defaultdict"" rel=""nofollow"">defaultdict</a>.</p>

<pre><code>from collections import defaultdict
complete_dict = defaultdict(lambda: defaultdict(list))

with open('data.txt', mode=""rb"") as data_file:
    reader = csv.reader(data_file, delimiter=""\t"")
    for c, s, v1, v in reader:
        complete_dict[c][s].append([v1, v2])
</code></pre>
",""
"7770350","2","7770034","<p>Assuming what you want is the username string associated with the userid for your program, try:</p>

<pre><code>import os
import pwd
pwd.getpwuid( os.getuid() ).pw_name
</code></pre>

<p>Use os.geteuid() to get the effective uid instead, if that difference matters to you.</p>

<p>Use pw_gecos instead of pw_name to get the ""real name"" if that's populated on your system.</p>
",""
"7771342","2","7769525","<blockquote>
  <p>I thought that f_dot would be slower since it had to create the temporary array denominator, and I assumed that this step was skipped by f_no_dot.</p>
</blockquote>

<p>For what it's worth, creating the temporary array <em>is</em> skipped, which is why <code>f_no_dot</code> is slower (but uses less memory).</p>

<p>Element-wise operations on arrays of the same size are faster, because numpy doesn't have to worry about the striding (dimensions, size, etc) of the arrays.</p>

<p>Operations that use broadcasting will generally be a bit slower than operations that don't have to.</p>

<p>If you have the memory to spare, creating a temporary copy can give you a speedup, but will use more memory.</p>

<p>For example, comparing these three functions:</p>

<pre><code>import numpy as np
import timeit

def f_no_dot(x, y):
    return x / y

def f_dot(x, y):
    denom = np.dot(y, np.ones((1,2)))
    return x / denom

def f_in_place(x, y):
    x /= y
    return x

num = 3600000
x = np.ones((num, 2))
y = np.ones((num, 1))


for func in ['f_dot', 'f_no_dot', 'f_in_place']:
    t = timeit.timeit('%s(x,y)' % func, number=100,
            setup='from __main__ import x,y,f_dot, f_no_dot, f_in_place')
    print func, 'time...'
    print t / 100.0
</code></pre>

<p>This yields similar timings to your results:</p>

<pre><code>f_dot time...
0.184361531734
f_no_dot time...
0.619203259945
f_in_place time...
0.585789341927
</code></pre>

<p>However, if we compare the memory usage, things become a bit clearer...</p>

<p>The combined size of our <code>x</code> and <code>y</code> arrays is about 27.5 + 55 MB, or 82 MB (for 64-bit ints).  There's an additional ~11 MB of overhead in import numpy, etc.</p>

<p>Returning <code>x / y</code> as a new array (i.e. not doing <code>x /= y</code>) will require another 55 MB array.</p>

<p><strong>100 runs of <code>f_dot</code>:</strong>
We're creating a temporary array here, so we'd expect to see 11 + 82 + 55 + 55 MB or ~203 MB of memory usage.  And, that's what we see...
<img src=""https://i.stack.imgur.com/imUja.png"" alt=""enter image description here""></p>

<p><strong>100 runs of <code>f_no_dot</code>:</strong>
If no temporary array is created, we'd expect a peak memory usage of 11 + 82 + 55 MB, or 148 MB...<br>
<img src=""https://i.stack.imgur.com/Y3ibZ.png"" alt=""enter image description here"">
...which is exactly what we see. </p>

<p>So, <code>x / y</code> is <em>not</em> creating an additional <code>num x 2</code> temporary array to do the division.</p>

<p>Thus, the division takes a quite a bit longer than it would if it were operating on two arrays of the same size.</p>

<p><strong>100 runs of <code>f_in_place</code>:</strong>
If we can modify <code>x</code> in-place, we can save even more memory, if that's the main concern.
<img src=""https://i.stack.imgur.com/mddjt.png"" alt=""enter image description here""></p>

<p>Basically, numpy tries to conserve memory at the expense of speed, in some cases.</p>
",""
"7771440","2","7769981","<p>Most wave files are in PCM 16-bit integer format.  </p>

<p>What you will want to:</p>

<ul>
<li>Parse the header to known which format it is (check the link from Xophmeister)</li>
<li>Read the data, take the integer values and convert them to float</li>
</ul>

<p>Integer values range from -32768 to 32767, and you need to convert to values from -1.0 to 1.0 in floating points.</p>

<p>I don't have the code in python, however in C++, here is a code excerpt if the PCM data is 16-bit integer, and convert it to float (32-bit):</p>

<pre><code>short* pBuffer = (short*)pReadBuffer;

const float ONEOVERSHORTMAX = 3.0517578125e-5f; // 1/32768 
unsigned int uFrameRead = dwRead / m_fmt.Format.nBlockAlign;

for ( unsigned int i = 0; i &lt; uFrameCount * m_fmt.Format.nChannels; ++i )
{
    short i16In = pBuffer[i];
    out_pBuffer[i] = (float)i16In * ONEOVERSHORTMAX;
}
</code></pre>

<p>Be careful with stereo files, as the stereo PCM data in wave files is interleaved, meaning the data looks like LRLRLRLRLRLRLRLR (instead of LLLLLLLLRRRRRRRR).  You may or may not need to de-interleave depending what you do with the data.</p>
",""
"7772843","2","7769745","<p>Lots and lots of misconceptions here.</p>

<p>The string you quote is <em>not</em> Unicode. It is a byte string, encoded in UTF-8.</p>

<p>You can convert it to Unicode by <em>decoding</em> it:</p>

<pre><code>unicode_name = name.decode('utf-8')
</code></pre>

<p>When you print the value of <code>unicode_name</code> to the console, you will see one of two things:</p>

<pre><code>&gt;&gt;&gt; unicode_name
u'Alam\xe9'
&gt;&gt;&gt; print unicode_name
Alamé
</code></pre>

<p>Here, you can see that just typing the name and pressing enter shows a representation of the Unicode code points. This is the same as typing <code>print repr(unicode_name)</code>. However, doing <code>print unicode_name</code> prints the actual characters - ie behind the scenes, it encodes it to the correct encoding for your terminal, and prints the result.</p>

<p>But this is all irrelevant, because Unicode strings can only be represented internally. As soon as you want to store it in a database, or a file, or anywhere, you need to encode it. And the most likely encoding to choose is UTF-8 - which is what it was in originally.</p>

<pre><code>&gt;&gt;&gt; name
'Alam\xc3\xa9'
&gt;&gt;&gt; print name
Alamé
</code></pre>

<p>As you can see, using the original non-decoded version of the name, <code>repr</code> and <code>print</code> once again show the codes and the characters. So it's not that converting it to Unicode actually makes it any more ""really"" the correct character.</p>

<p>So, what to do if you want to store it in a database? Nothing. Nothing at all. Sqlite accepts UTF-8 input, and stores its data in UTF-8 format on the disk. So there is absolutely no conversion needed to store the original value of <code>name</code> in the database.</p>
",""
"7773962","2","7769525","<p>What you are seeing is most likely iteration overhead over the small <code>(2,)</code> dimension. Numpy (versions &lt; 1.6) dealt efficiently only with operations involving <em>contiguous</em> arrays (of the same shape). The effect goes away as the size of the last dimension increases.</p>

<p>To see the effect of contiguity:
<code><pre>
In [1]: import numpy
In [2]: numpy.__version__
Out[2]: '1.5.1'
In [3]: arr_cont1 = numpy.random.rand(360000, 2)
In [4]: arr_cont2 = numpy.random.rand(360000, 2)
In [5]: arr_noncont = numpy.random.rand(360000, 4)[:,::2]
In [6]: arr_bcast = numpy.random.rand(360000, 1)
In [7]: %timeit arr_cont1 / arr_cont2
100 loops, best of 3: 5.75 ms per loop
In [8]: %timeit arr_noncont / arr_cont2
10 loops, best of 3: 54.4 ms per loop
In [9]: %timeit arr_bcast / arr_cont2
10 loops, best of 3: 55.2 ms per loop
</pre></code>
The situation is however much improved in Numpy >= 1.6.0:
<code><pre>
In [1]: import numpy
In [2]: numpy.__version__
Out[2]: '1.6.1'
In [3]: arr_cont1 = numpy.random.rand(360000, 2)
In [4]: arr_cont2 = numpy.random.rand(360000, 2)
In [5]: arr_noncont = numpy.random.rand(360000, 4)[:,::2]
In [6]: arr_bcast = numpy.random.rand(360000, 1)
In [7]: %timeit arr_cont1 / arr_cont2
100 loops, best of 3: 5.37 ms per loop
In [8]: %timeit arr_noncont / arr_cont2
100 loops, best of 3: 6.12 ms per loop
In [9]: %timeit arr_bcast / arr_cont2
100 loops, best of 3: 7.81 ms per loop
</pre></code>
(All the timings above are probably only accurate to 1 ms.)</p>

<p>Note also that temporaries are not <em>that</em> expensive:
<pre><code>In [82]: %timeit arr_cont1.copy()
1000 loops, best of 3: 778 us per loop
</pre></code></p>

<p><strong>EDIT</strong>: Note above that also <code>arr_noncont</code> is sort of contiguous with stride of <code>2*itemsize</code>, so that the inner loop can be unraveled --- Numpy can make it about as fast as the contiguous array. With broadcasting (or with a really noncontiguous array such as <code>numpy.random.rand(360000*2, 2)[::2,:]</code>, the inner loop cannot be unraveled, and these cases are slightly slower. Improving that would still be possible if Numpy emitted tailored machine code on the fly for each loop, but it doesn't do that (at least yet :)</p>
",""
"7778103","2","7769870","<p>Since we don't know what your program is doing we have to guess a little. So long as there is no I/O I'd expect <code>conhost</code> to consume 0% CPU. So I hypothesise that you are printing a lot of text to the console.  For example, the following program has the same symptoms as you report:</p>

<pre><code>while True:
    print ""Hello world!""
</code></pre>
",""
"7780998","1","","<p>In C, one can do</p>

<pre><code>while( (i=a) != b ) { }
</code></pre>

<p>but in Python, it appears, one cannot.</p>

<pre><code>while (i = sys.stdin.read(1)) != ""\n"":
</code></pre>

<p>generates</p>

<pre><code>    while (i = sys.stdin.read(1)) != ""\n"":
         ^
SyntaxError: invalid syntax
</code></pre>

<p>(the  <code>^</code> should be on the <code>=</code>)</p>

<p>Is there a workaround?</p>
","<python><loops><while-loop><condition>"
"7781000","1","","<p>I found a work around when calling a python script from a shell script from automator (version 2.1.1 in mac os x 10.6.8) (python 2.6.1).  My issue is that os.system(""mkdir foo"") works in a (very specific) case where subprocess.call(""mkdir foo"") <strong>also makes the directory</strong> but then makes automator throw an error. </p>

<p>The purpose of my automator app is to accept an image that is dragged-and-dropped onto it.
The automator app has just one action: 'run shell script' with the following code:</p>

<pre><code>for f in ""$@""
do
    python dphoto_pythons/uploader.py $f &gt; dphoto_pythons/auto_output.txt
done
</code></pre>

<p>$f is the name of the dragged image. ('Run shell script' is set to pass input as arguments.)
Here is the strange part:</p>

<p>in the 'uploader.py' script, I was calling this:</p>

<pre><code>retcode=call(""mkdir "" + dir_full, shell=True) # THIS CAUSES A ERROR IN AUTOMATOR
print ""***DOESN'T GET HERE WHEN RUN IN AUTOMATOR****""
</code></pre>

<p>It makes the directory. but doesn't get to the next statement. And automator would throw up an error dialog (which just says that I should go check my script).  </p>

<p>By contrast, if I called uploader.py 'manually' from the terminal:</p>

<pre><code>""python uploader.py someimage.jpg""
</code></pre>

<p>it worked without a hitch.
After puzzling over this for a bit, I tried replacing call with os.system:</p>

<pre><code>os.system(""mkdir "" + stu_dir_full)
####retcode=call(""mkdir "" + stu_dir_full, shell=True) #  BUG
</code></pre>

<p>This works from automator and from terminal.
I have a feeling that I'm over-looking something obvious because this is such a bizarre problem.  But thought I'd put this out there in any case.  Any thoughts?</p>

<p>-Mel</p>
","<python><shell><automator><os.system><subprocess>"
"7781008","2","7780998","<p>Use break:</p>

<pre><code>while True:
    i = sys.stdin.read(1)
    if i == ""\n"":
       break
    # etc...
</code></pre>
",""
"7781026","2","7780998","<p>Personally I like imm's and Marks answers using <code>break</code>, but you could also do:</p>

<pre><code>a = None
def set_a(x):
    global a
    a = x
    return a

while set_a(sys.stdin.read(1)) != '\n':
    print('yo')
</code></pre>

<p>though I wouldn't recommend it.</p>
",""
"7781076","1","","<p>I an setting up tinymce, filebrowser, zinnia, and Grappelli for the first time. I think I have everything setup properly, but it seems that I am missing some files and I am not sure where I can find them. I am getting 400 errors on the following.</p>

<pre><code>""GET /static/tiny_mce/themes/advanced/skins/grappelli/content.css HTTP/1.1"" 404 
""GET /static/tiny_mce/themes/advanced/skins/grappelli/ui.css HTTP/1.1"" 404 1832
""GET /static/tiny_mce/plugins/grappelli/editor_plugin.js HTTP/1.1"" 404 1820
""GET /static/tiny_mce/plugins/grappelli_contextmenu/editor_plugin.js HTTP/1.1"" 404 1856
</code></pre>

<p>For some reason the pip installed version of tiny_mce did not include these file.</p>

<p>UPDATE:</p>

<p>I now have the theme working, it was missing from my downloaded version for whatever reason. I am still getting 404's on </p>

<pre><code>""GET /static/tiny_mce/plugins/grappelli/editor_plugin.js HTTP/1.1"" 404 1820
""GET /static/tiny_mce/plugins/grappelli_contextmenu/editor_plugin.js HTTP/1.1"" 404 1856
</code></pre>

<p>I don't seem to have any folder in the tinymce plugin folder called grappeli. I have ran the ./manage.py collectstatic and know all my files are in the proper location.</p>

<p>Thanks,
CG</p>
","<python><django><tinymce>"
"7781204","1","","<p>I am making a search form in django, and I am struggling with processing the form in my view.</p>

<p>My code: </p>

<pre><code>class SearchForm(forms.Form):
    name = forms.CharField(label=""Name"", max_length=64, required=False)
    ...
    &lt;a few other fields&gt;


def search(request):
    if request.method == 'POST':
        form = SearchForm(request.POST)
        if form.is_valid():
            name = form.cleaned_data['name']
            qdict = { 'name': name}
            q_objs = [Q(**{qdict[k]: form.cleaned_data[k]}) for k in qdict.keys() if form.cleaned_data.get(k, None)]
            search_results = Group.objects.select_related().filter(*q_objs)
            response = {'success' : search_results}
            return HttpResponse(simplejson.dumps(response, ensure_ascii=False), mimetype='application/javascript')
    else:
        form = SearchForm()
    return render_to_response(""main/search.html"", {'form': form},
      context_instance=RequestContext(request))
</code></pre>

<p>I get this error:
Cannot resolve keyword u'NAME' into field. Choices are: date_submitted, id, name, parameters. </p>

<p>I realized that this field is in unicode and tried converting it with str(...) or with encode('ascii',...), but it still gives me the same error. I am new to django, so any help would be appreciated.</p>

<p>Thanks</p>
","<python><django><forms><django-forms><django-views>"
"7781233","1","","<p>So im trying to get oauth2 to work with python. So i downloaded it from github, and ran the setup.py file but that didn't exactly work. I googled some more and found a question here and the answer said to put the folder in python27/Lib/site-packages with a .pth file in the /site-packages folder. The .pth folder has the name of the module folder (oauth2). So that worked... until i went to run it and it said oauth wouldn't run because i didn't have httplib2. So i downlaoded that, did the same exact thing, but ti doesn't work for httplib2? what in hell is going on here? Im way over my gead,a ll i want is the Yahoo Fantasy API to work with python so i can do one simple thing.</p>

<p>Heres where i got the .pth deal: <a href=""https://stackoverflow.com/questions/5531850/installing-the-swampy-python-module-on-windows"">Installing the Swampy Python module on Windows</a></p>
","<python>"
"7781242","1","","<p>How could I align the text so that it cuts the first 140 characters of a string, and fills the rest with whitespace?</p>

<p>e.g. <code>""%140s""%some_text</code> but the space on the other side.</p>

<p>Thoughts?</p>
","<python><string><text><alignment><character>"
"7781243","2","7781076","<p>The grappelli skings for tinymce <a href=""https://github.com/sehmaschine/django-grappelli/tree/master/grappelli/static/grappelli/tinymce/jscripts/tiny_mce/themes/advanced/skins"" rel=""nofollow"">come with grappelli</a>. You also should load the js files for tinymce coming with grappelli, so tinymce will find the theme files relatively to the tinymce js.</p>

<p>You can achieve this by pointing <code>TINYMCE_JS_URL</code> in your <code>settings.py</code> file to the right url, eg. <code>TINYMCE_JS_URL = STATIC_URL +'grappelli/tinymce/jscripts/tiny_mce/tiny_mce.js'</code>. Make sure to run <code>collectstatic</code> and that your static files settings are correct!</p>
",""
"7781255","2","7781242","<p>Simple: <code>""%-140.140s"" % some_text</code></p>
",""
"7781260","1","","<p>How can I represent an infinite number in python? No matter which number you enter in the program, no number should be greater than this representation of infinity.</p>
","<python><infinite>"
"7781271","2","7781260","<p>I don't know exactly what you are doing, but <code>float(""inf"")</code> gives you a float Infinity, which is greater than any other number.</p>
",""
"7781273","2","7781260","<p>In Python, you can do:</p>

<pre><code>test = float(""inf"")
</code></pre>

<p>In Python 3.5, you can do:</p>

<pre><code>import math
test = math.inf
</code></pre>

<p>And then:</p>

<pre><code>test &gt; 1
test &gt; 10000
test &gt; x
</code></pre>

<p>Will always be true. Unless of course, as pointed out, x is also infinity or ""nan"" (""not a number"").</p>

<p>Additionally (Python 2.x ONLY), in a comparison to <code>Ellipsis</code>, <code>float(inf)</code> is lesser, e.g:</p>

<pre><code>float('inf') &lt; Ellipsis
</code></pre>

<p>would return true.</p>
",""
"7781285","2","7781233","<p>I think that you need to go back to square one. </p>

<p>Did you try <code>easy_install oauth2</code>?</p>

<p>Did you try <code>pip install oauth2</code>?</p>

<p>If neither of those work, then you need to install it manually. Having read through the readme on github you know that oauth2 depends on httplib2 so start by installing and testing httplib2. Don't go any further until you know that httplib2 is installed and functioning correctly.</p>

<p>Next step is to manually install oauth2. Lots of Python modules have a <code>setup.py</code> script so you can just change to their directory and run <code>python setup.py install</code> to get the module properly installed. In fact, oauth2 does have such a module so you should try that first.</p>

<p>Then if it still doesn't work it is a matter of making sure that the oauth2 directory is on your search path. Most people would put it in their site-packages directory, but it is OK to just add the oath2 directory (the one containing <code>__init__.py</code>, to the Python path. That is what .pth files do.</p>

<p>If you don't have easy_install or pip, the easiest way to solve this problem is to download <a href=""http://python-distribute.org/distribute_setup.py"">http://python-distribute.org/distribute_setup.py</a> and execute it on your system. This will install both pip and easy_install for you.</p>
",""
"7781309","2","7781242","<p>You can also use rjust and ljust for strings. In combination with slicing you get this:</p>

<pre><code>&gt;&gt;&gt; ""blabla""[:10].ljust(10)
'blabla    '
&gt;&gt;&gt; ""blabla12345678901234567890""[:10].ljust(10)
'blabla1234'
&gt;&gt;&gt; 
&gt;&gt;&gt; ""blabla""[:10].rjust(10)
'    blabla'
&gt;&gt;&gt; ""blabla12345678901234567890""[:10].rjust(10)
'blabla1234'
&gt;&gt;&gt; 
</code></pre>

<p>This is quickly understood by someone reading the code, but the string formatting variant is much more concise.</p>
",""
"7781414","1","","<p>I'm trying to change a string that contains substrings such as </p>

<pre><code>the&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=font7&gt;currency
</code></pre>

<p>to</p>

<pre><code>the currency
</code></pre>

<p>At the line break is CRLF</p>

<p>The words before and after the code change. I only want to replace if the second word starts with a lower case letter. The only thing that changes in the code is the digit after 'font'</p>

<p>I tried:</p>

<pre><code>p = re.compile('&lt;/span&gt;&lt;/p&gt;\r\n&lt;p&gt;&lt;span class=font\d&gt;([a-z])')
res = p.sub(' \1', data)
</code></pre>

<p>but this isn't working</p>

<p>How should I fix this?</p>
","<python><regex>"
"7781420","1","","<p>I'm now making a web crawler.</p>

<p>getting a link from HTML is easy part but acquiring a link from the result of javascript is not easy for me.</p>

<p>Can I get the result of javascript so as to know where a link is referred to?</p>

<p>for example.</p>

<p>How can I retrieve the link to google.com from javascript code in Python?</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
    &lt;head&gt;&lt;/head&gt;
    &lt;body&gt;
        &lt;a href=""#"" id=""goog""&gt;to google&lt;/a&gt;
    &lt;/body&gt;
    &lt;script&gt;
        document.getElementById('goog').onclick = function() {
            window.location = ""http://google.com"";
        };

    &lt;/script&gt;
&lt;/html&gt;
</code></pre>
","<javascript><python><django><urllib><pyjamas>"
"7781431","1","","<p>I am writing a Mako extension that assist in rendering forms. I was making excellent progress until I ran into one big stumbling block regarding css classes. I want to write code that looks like this:</p>

<pre><code>&lt;%fp:form method=""post"" action="""" class=""css-class""%&gt;
...content
&lt;/%fp:form&gt;
</code></pre>

<p>The function that fp:form refers to looks simply like:</p>

<pre><code>@supports_caller
def form(context, **kwargs):
     #...
</code></pre>

<p>When I run this code, I get the following exception:</p>

<pre><code>SyntaxException: (SyntaxError) invalid syntax (&lt;unknown&gt;, line 1) (u""fp.form(method=u'post',action=u'',class=u'css-class')"") at line: 1 char: 52
</code></pre>

<p>This only happens when the ""class"" attribute is specified, presumably because Mako is converting the attributes directly to keyword arguments rather than dictionary unpacking. I tried passing a special ""attrs"" argument to my function, but there seems to be no good way to pass a dict to Mako:</p>

<pre><code>&lt;%fp:form method=""post"" action="""" attrs=""${{'class':'css-class'}}""%&gt;
#SyntaxError: invalid syntax
&lt;%fp:form method=""post"" action="""" attrs=""${dict(class='css-class')}""%&gt;
#Won't work - can't pass 'class' directly as a keyword argument!
</code></pre>

<p>So how do I get around this? I know I can specify a special attribute, like ""css_class"" and convert that into class, but that's a bit of a hack and further prevents the library from every producing a form with an attribute with css_class.</p>
","<python><mako>"
"7781448","1","","<p><strong>I have used the line of code below to input a variable for ""BAI_var1"" in a multiple choice command line software.</strong>   </p>

<pre><code>BAI_var1 = input (""Please enter 0 for not at all, 1 for somewhat, 2 for moderatly or 3 for a lot:"")
</code></pre>

<p><strong>Here is my Graphic User Interface:</strong></p>

<pre><code>from Tkinter import *
import time

    class App:
        def __init__(self, master):
            w = Label(master, text=""1. Anxiety, nervousness, worry or fear"")
            w.pack()

            v = IntVar()
            Radiobutton(master, text=""0 for not at all"", variable=v, value=1).pack(side=TOP, anchor=""w"")
            Radiobutton(master, text=""1 for somewhat"", variable=v, value=2).pack(side=TOP, anchor=""w"")
            Radiobutton(master, text=""2 for moderatly"", variable=v, value=3).pack(side=TOP, anchor=""w"")
            Radiobutton(master, text=""3 for a lot"", variable=v, value=4).pack(side=TOP, anchor=""w"")

            self.button = Button(master, text=""BACK"", fg=""red"", command=self.button6)
            self.button.pack(side=BOTTOM)
            self.button = Button(master, text=""NEXT"", fg=""red"", command=self.button5)
            self.button.pack(side=BOTTOM)


        def button6(self):
            print ""Sam is awesome!GAJONGA"" 

        def button5(self):
            print ""PYTHON FOR THE WIN! GIAN SAYS PYTHON = FILTHY"" 

    master = Tk()
    app = App(master)
    master.mainloop()
</code></pre>

<p><strong>My problem is that I don't know how to use a <em>Radiobutton</em> to input a set integer to a variable.</strong></p>
","<python><string><input><radio-button><tkinter>"
"7781488","2","7781414","<p>Use a lookahead assertion.</p>

<pre><code>p = re.compile('&lt;/span&gt;&lt;/p&gt;\r\n&lt;p&gt;&lt;span class=font\d&gt;(?=[a-z])')
res = p.sub(' ', data)
</code></pre>
",""
"7781496","2","7781414","<p>This : </p>

<pre><code>result = re.sub(""(?si)(.*?)&lt;/?[A-Z][A-Z0-9]*[^&gt;]*&gt;.*&lt;/?[A-Z][A-Z0-9]*[^&gt;]*&gt;(.*)"", r""\1 \2"", subject)
</code></pre>

<p>Applied to : </p>

<pre><code>the&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=font7&gt;currency
</code></pre>

<p>Produces : </p>

<pre><code>the currency
</code></pre>

<p>Although I would strongly suggest against using regex with xml/html/xhtml. THis generic regex will remove all elements and capture any text before / after to groups 1,2.</p>
",""
"7781497","2","7781414","<p>I think you should use the flag re.DOTALL, which means it will ""see"" nonprintable characters, such as linebreaks, as if they were regular characters.</p>

<p>So, first line of your code would become :</p>

<pre><code>p = re.compile('&lt;/span&gt;&lt;/p&gt;..&lt;p&gt;&lt;span class=font\d&gt;([a-z])', re.DOTALL)
</code></pre>

<p>(not the two unescaped dots instead of the linebreak).</p>

<p>Actually, there is also re.MULTILINE, everytime I have a problem like this one of those end up solving the problem.</p>

<p>Hope it helps.</p>
",""
"7781524","2","7781420","<p>Python doesn't offer a way to execute the Javascript, which would be a large task, and may not even be what you want, because you won't know how to execute all of the appropriate Javascript.</p>

<p>For the code you showed, you could simply regex the entire thing to get URL-like strings from it, but that could be very ad-hoc and error-prone.</p>
",""
"7781545","1","","<p>i'm using this code to get all files in a given folder. Is there a way to get only the folders ?</p>

<pre><code>a = os.listdir('Tools')
</code></pre>
","<python>"
"7781555","2","7781545","<pre><code>import os.path
dirs = [d for d in os.listdir('Tools') if os.path.isdir(os.path.join('Tools', d))]
</code></pre>
",""
"7781601","1","","<p>My main intention is just use some functions in the ann library in Pylab to calculate nearest neighbor.
My system is Windows Vista 32 bit. I have a few questions about the <a href=""http://www.cs.umd.edu/~mount/ANN/"" rel=""nofollow"">ANN webpage</a>.</p>

<ol>
<li><p>For ANN Version 1.1.2, I found two download options ""ann_1.1.2.zip"" and ""ann_1.1.2_MS_Win32_bin.zip"" for Windows. After reading the ANN manual, I believe ""ann_1.1.2.zip"" needs to compiling on Microsoft Windows Systems. And ""ann_1.1.2_MS_Win32_bin.zip"" is the precompiled Files for Microsoft Windows. I have no idea which one should I download since I don't know their difference.</p></li>
<li><p>Actually I downloaded ""ann_1.1.2_MS_Win32_bin.zip"" and I found some library file and dll file. What should I do with them if I want to use ann library in pylab?</p></li>
</ol>
","<python><matplotlib>"
"7781682","2","7781601","<p>I believe you've got some real difficulty in using ANN with Pylab.</p>

<p>The website contains C++ code and precompiled libraries. This is nice of them, as not all Windows users have C++ compilers available. However, <em>calling</em> into a library requires some sort of programming environment.</p>

<p>To call into C++ code from Python will require writing some <a href=""http://en.wikipedia.org/wiki/Language_binding"" rel=""nofollow"">language bindings</a>, often using a tool such as <a href=""http://en.wikipedia.org/wiki/SWIG"" rel=""nofollow"">SWIG</a> or <a href=""http://en.wikipedia.org/wiki/SIP_%28software%29"" rel=""nofollow"">SIP</a> to help automate the work. Preparing bindings is <em>not</em> a trivial task, though it provides an excellent opportunity to learn about the interpreter internals of your language of choice. If you're lucky, someone else has already done this work for you. However, I don't see any such bindings packaged for Ubuntu and their main page did not list any bindings. (Ubuntu <em>does</em> have ANN-bindings for <a href=""http://en.wikipedia.org/wiki/GNU_Octave"" rel=""nofollow"">Octave</a>, which might be useful to you if you're familiar enough with Octave to get your work done there.)</p>
",""
"7781709","2","7781420","<p>You would need to install node.js and run a separate piece of code that executes the Javascript code in context to emit the html. This is possible using <code>jsdom</code> but the key to it is extracting the Javascript code from the HTML page, and setting up the context correctly.</p>
",""
"7781731","1","","<p>I've been coding a simple android game with openGL ES 1.0 and require a simple exporter for Blender, but don't really understand python and how to add export scripts to blender 2.59.</p>

<p>I tried the tutorial at: <a href=""http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Advanced_Tutorials/Python_Scripting/Export_scripts"" rel=""nofollow"">http://en.wikibooks.org/wiki/Blender_3D:_Noob_to_Pro/Advanced_Tutorials/Python_Scripting/Export_scripts</a> , but I couldn't get it working with blender... I tried copying it to the scripts/addons directory but Blender didn't detect it... I tried manually importing it, but nothing happened... I'm thinking it was written for an earlier version.</p>

<p>All I want to write is a simple exporter that exports simple static meshes in a format like the following:</p>

<pre><code>// v = vertex, i = indices for polygon, t = uv for vertex
v -1 -1 0
v 1 -1 0
v -1 1 0
v 1 1 0
i 0 1 2
i 1 3 2
t 0 0
t 1 0
t 0 1
t 1 1
</code></pre>

<p>The tutorial I found made this look really simple, but everything else I found seemed to be more confusing... If anyone could write a quick exporter script for me, I'd be very thankful, or just point me in the right direction... And also how to get it working with Blender 2.59...
Thanks for reading.</p>
","<python><blender>"
"7781792","1","","<p>How do I write the function for Selenium to wait for a table with just a class identifier in Python? I'm having a devil of a time learning to use Selenium's Python webdriver functions.</p>
","<python><selenium-webdriver><automation><automated-tests>"
"7781855","2","7781431","<p>There is no way around this because <code>class</code> is a keyword and is always parsed as such. People usually use <code>class_</code> instead.</p>
",""
"7782030","2","7781601","<p>Try <a href=""http://projects.scipy.org/scikits/wiki/AnnWrapper"" rel=""nofollow"">scikits.ann</a> (<a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikits.ann"" rel=""nofollow"">Windows binaries</a>). </p>
",""
"7782046","1","","<p>So I have a method that is accessible by multiple routes:</p>

<pre><code>@app.route(""/canonical/path/"")
@app.route(""/alternate/path/"")
def foo():
    return ""hi!""
</code></pre>

<p>Now, how can I call <code>url_for(""foo"")</code> and know that I will get the first route?</p>
","<python><google-app-engine><flask><werkzeug>"
"7782054","1","","<p>Sometimes, I want to parse HTML to extract URLs.<br>
I find <code>[html.parser.HTMLParser]</code> and <code>[re.match]</code> both can do the job.<br>
I want to know which is faster.</p>

<p>Is there a python-module like <code>jquery</code> to parse HTML?</p>

<p>If you have better solution, please leave a comment.</p>

<p>Thanks</p>

<hr>

<p>lxml is very good.
it make the job really simple.</p>

<pre><code>&gt;&gt;&gt;for url in parse(urlopen('http://www.stackoverflow.com')).getroot().find_class('question-hyperlink'): print(url.get('href'))
</code></pre>
","<python>"
"7782068","2","7782054","<p>Attempting to parse (X)HTML with a regular expression has <a href=""http://www.codinghorror.com/blog/2009/11/parsing-html-the-cthulhu-way.html"" rel=""nofollow"">been discussed here</a>.</p>

<p>Without knowing what your regular expression is, it's difficult to say. The authors that implement and maintain html.parser.HTMLParser likely spend a good amount of time optimizing it, while your choice of regular expressions can greatly affect performance. I'd just go with HTMLParser.</p>

<p>But if you still have something specific you want to extract and believe you can do it reliably with a regular expression, the only way to answer your question is to time both. You'll have to be careful to do it in a way that eliminates the effects of caching, etc.</p>
",""
"7782070","2","7782054","<p>I would guess that <code>re</code> is faster, but the only way to know is to measure it.  Benchmark both techniques with your code and your data to get a good answer.</p>
",""
"7782071","1","","<p>The sample code below (heavily influenced from <a href=""http://www.saltycrane.com/blog/2007/12/pyqt-43-qtableview-qabstracttablemodel/"" rel=""nofollow"">here</a>) has a right-click context menu that will appear as the user clicks the cells in the table. Is it possible to have a different right-click context menu for right-clicks in the header of the table? If so, how can I change the code to incorporate this?</p>

<pre><code>import re
import operator
import os
import sys
from PyQt4.QtCore import *
from PyQt4.QtGui import *

def main():
    app = QApplication(sys.argv)
    w = MyWindow()
    w.show()
    sys.exit(app.exec_())

class MyWindow(QWidget):
    def __init__(self, *args):
        QWidget.__init__(self, *args)

        self.tabledata = [('apple', 'red', 'small'),
                          ('apple', 'red', 'medium'),
                          ('apple', 'green', 'small'),
                          ('banana', 'yellow', 'large')]
        self.header = ['fruit', 'color', 'size']

        # create table
        self.createTable()

        # layout
        layout = QVBoxLayout()
        layout.addWidget(self.tv)
        self.setLayout(layout)

    def popup(self, pos):
        for i in self.tv.selectionModel().selection().indexes():
            print i.row(), i.column()
        menu = QMenu()
        quitAction = menu.addAction(""Quit"")
        action = menu.exec_(self.mapToGlobal(pos))
        if action == quitAction:
            qApp.quit()

    def createTable(self):
        # create the view
        self.tv = QTableView()
        self.tv.setStyleSheet(""gridline-color: rgb(191, 191, 191)"")

        self.tv.setContextMenuPolicy(Qt.CustomContextMenu)
        self.tv.customContextMenuRequested.connect(self.popup)

        # set the table model
        tm = MyTableModel(self.tabledata, self.header, self)
        self.tv.setModel(tm)

        # set the minimum size
        self.tv.setMinimumSize(400, 300)

        # hide grid
        self.tv.setShowGrid(True)

        # set the font
        font = QFont(""Calibri (Body)"", 12)
        self.tv.setFont(font)

        # hide vertical header
        vh = self.tv.verticalHeader()
        vh.setVisible(False)

        # set horizontal header properties
        hh = self.tv.horizontalHeader()
        hh.setStretchLastSection(True)

        # set column width to fit contents
        self.tv.resizeColumnsToContents()

        # set row height
        nrows = len(self.tabledata)
        for row in xrange(nrows):
            self.tv.setRowHeight(row, 18)

        # enable sorting
        self.tv.setSortingEnabled(True)

        return self.tv

class MyTableModel(QAbstractTableModel):
    def __init__(self, datain, headerdata, parent=None, *args):
        """""" datain: a list of lists
            headerdata: a list of strings
        """"""
        QAbstractTableModel.__init__(self, parent, *args)
        self.arraydata = datain
        self.headerdata = headerdata

    def rowCount(self, parent):
        return len(self.arraydata)

    def columnCount(self, parent):
        return len(self.arraydata[0])

    def data(self, index, role):
        if not index.isValid():
            return QVariant()
        elif role != Qt.DisplayRole:
            return QVariant()
        return QVariant(self.arraydata[index.row()][index.column()])

    def headerData(self, col, orientation, role):
        if orientation == Qt.Horizontal and role == Qt.DisplayRole:
            return QVariant(self.headerdata[col])
        return QVariant()

    def sort(self, Ncol, order):
        """"""Sort table by given column number.
        """"""
        self.emit(SIGNAL(""layoutAboutToBeChanged()""))
        self.arraydata = sorted(self.arraydata, key=operator.itemgetter(Ncol))
        if order == Qt.DescendingOrder:
            self.arraydata.reverse()
        self.emit(SIGNAL(""layoutChanged()""))

if __name__ == ""__main__"":
    main()
</code></pre>
","<python><header><pyqt><contextmenu><qtableview>"
"7782074","2","7782054","<p>I would strongly suggest <a href=""http://lxml.de/"" rel=""nofollow"">lxml</a>. In my experience, it is the fastest. lxml will actually generate a tree in memory. So you can parse/serialize/...<br />
On the other hand, if you <strong>have</strong> to pick among the mentioned two options, I'd suggest you use the <a href=""http://docs.python.org/library/timeit.html"" rel=""nofollow"">timeit</a> module and determine it. </p>
",""
"7782125","2","7782071","<p>Turned out to be simpler than I thought. In the same manner as I add the popup menu for the QTableView widget itself, I can just get the header from table object and then attach a context menu in the same way as I did with the regular context menu.</p>

<pre><code>headers = self.tv.horizontalHeader()
headers.setContextMenuPolicy(Qt.CustomContextMenu)
headers.customContextMenuRequested.connect(self.header_popup)
</code></pre>
",""
"7782187","2","7781731","<p>I would start with Jeff Lamarche's scripts on github.</p>

<p><a href=""https://github.com/jlamarche/iOS-OpenGLES-Stuff/tree/master/Blender%20Export"" rel=""nofollow"">https://github.com/jlamarche/iOS-OpenGLES-Stuff/tree/master/Blender%20Export</a></p>

<p>The blog post is here:</p>

<p><a href=""http://iphonedevelopment.blogspot.com/2010/10/blender-ios.html"" rel=""nofollow"">http://iphonedevelopment.blogspot.com/2010/10/blender-ios.html</a></p>

<p>I recall having to fiddle with the blender or version tuples in the bl_info dictionary but it has been a while.</p>
",""
"7782233","1","","<p>I've just run into a situation where <em>pseudo</em>-private class member names aren't getting mangled when using <code>setattr</code> or <code>exec</code>.</p>

<pre><code>In [1]: class T:
   ...:     def __init__(self, **kwargs):
   ...:         self.__x = 1
   ...:         for k, v in kwargs.items():
   ...:             setattr(self, ""__%s"" % k, v)
   ...:         
In [2]: T(y=2).__dict__
Out[2]: {'_T__x': 1, '__y': 2}
</code></pre>

<p>I've tried <code>exec(""self.__%s = %s"" % (k, v))</code> as well with the same result:</p>

<pre><code>In [1]: class T:
   ...:     def __init__(self, **kwargs):
   ...:         self.__x = 1
   ...:         for k, v in kwargs.items():
   ...:             exec(""self.__%s = %s"" % (k, v))
   ...:         
In [2]: T(z=3).__dict__
Out[2]: {'_T__x': 1, '__z': 3}
</code></pre>

<p>Doing <code>self.__dict__[""_%s__%s"" % (self.__class__.__name__, k)] = v</code> would work, but <code>__dict__</code> is a readonly attribute.</p>

<p>Is there another way that I can dynamically create these <em>psuedo</em>-private class members (without hard-coding in the name mangling)?</p>

<hr>

<p>A better way to phrase my question:</p>

<p><strong>What does python do “under the hood” when it encounters a double underscore (<code>self.__x</code>)  attribute being set?  Is there a magic function that is used to do the mangling?</strong></p>
","<python><attributes><private-members><name-mangling>"
"7782419","1","","<p>I have a file like this:</p>

<pre><code>A 1
A 1
A 2
A 3
B 2
B 3
C 2
C 3
</code></pre>

<p>which I converted into the following data structure:</p>

<pre><code>s = [set([1, 2, 3]), set([2, 3]), set([2,3])]
</code></pre>

<p>To find the length of the intersection of all 2-combinations, I am using the following:</p>

<pre><code>from itertools import combinations
for i in combinations(s, 2):
    inter = i[0] &amp; i[1]
    print len(inter)
</code></pre>

<p>The size of <code>s</code> is 300,000 distinct sets each having a length of about 1,000. There are two bottle-necks:</p>

<ul>
<li>Reading the file</li>
<li>Computing the length of the intersection</li>
</ul>

<p>The first one is unavoidable perhaps but the second one can be improved. I have a machine with 64 cores so I was wondering how to parallelize this program. Is there some kind of map reduce library available for a multi-core machine?</p>
","<python><parallel-processing><mapreduce>"
"7782425","1","","<p>Hopefully this doesn't fall under ""general discussion topic"", since I'd like it to be more about resolving these issues in an efficient manner than a giant debate about which general approach to GUI programming is the absolute best.</p>

<p>So I've started some GUI programming with tkinter and long story short my code is getting pretty ugly pretty quickly. I'm trying to create a tile-based map editor for a video game. My main issues seem to be:</p>

<ol>
<li>the inability of callbacks to return values.</li>
<li>the inability to transfer data between windows easily.</li>
</ol>

<p>I assume that the reason I see these as issues is because I'm using functions a lot more than I'm using classes. For instance, my ""load tileset"" window is handled entirely functionally: Clicking the menu option in the main window calls the function that loads the new window. From within that window, I create an open file dialog when looking for the image, and modify the canvas displaying the image when I press the enter key (so that it draws the appropriate grid over the image). function function function.</p>

<p>What looks like really bad practice to me is the inclusion of extra arguments to compensate. For example, when I create a tileset, the instance of the TileSet class created should be sent back to the main window where the appropriate information can be displayed. I have a list of loaded tilesets as a global variable (even more bad practice: Everything dealing with my root window is in the global scope! yay!), and because callback functions don't return values, I pass that list as an argument to my ""load tileset window"" function, which <em>then</em> passes the argument to the create tileset function (called when you click the appropriate button in the window), where it's actually needed so that I can add my newly created tileset to the list. Passing arguments through a function 'hierarchy' like that seems like a horrible idea. It gets confusing, it's horrible for writing modular code, and just generally seems unnecessary.</p>

<p>My attempt at fixing the problem would be to write a class representing the whole GUI, and custom made window classes (that the GUI class can create and reference) that can actually store relevant data. That should take care of issues with transferring data between windows. Hopefully it would cut down on my gratuitous use of lambda functions in callbacks as well. 
But I'm wondering: is this the best way? Or at least close? I'd rather not start rewriting and then end up with another system that's just sloppy and confusing in a different way. I know my methods are bad, but I don't really know what the best approach would be. I'm getting a lot of advice on how to do specific things, but none on how to structure the program as a whole. Any help would be greatly appreciated. </p>
","<python><user-interface><tkinter><paradigms>"
"7782485","1","","<p>How to suppress end user ability to edit/add/delete text in a Text widget? (Python v3.2.. and tkinter)</p>

<p>The point is to <strong>suppress only the ability to change/add/delete text</strong> but not to castrate other features. Perhaps a NoEdit Text widged would be a better name.</p>

<p>I've tried <strong>.text['state'] = 'disabled'</strong> and it works <em>almost</em> OK in Windows (it still allows user to select/copy text highlights the selection, page up/down and up/down buttons work. The only thing broken seems to be the cursor made invisible.)</p>

<p><strong>But on MacIntosh everything is broken. No highlights, no select/copy,... UGH</strong></p>

<p>Since Tkinter has practically no documentation in Python, I've searched and found some TCL advise, to derive a new class and suppress the <strong>insert</strong> and <strong>delete</strong> functions.</p>

<p>So, I've tried as so:</p>

<pre><code>class roText(tk.Text):
    def insert(self,*args,**kwargs):
        print("" Hey  - Im inside roText.insert"")
        pass
    def delete(self,*args,**twargs):
        pass    
    def pInsert(self,*args,**twargs):
        super().insert(*args,**twargs)
</code></pre>

<p>Unfortunately it didn't work right. Apparently <strong>tkinter does not use those insert and delete functions when end user enters/deletes code.</strong> Perhaps those TCL insert/delete are something else, and I lost something in translation from TCL and Swahili. What functions does tkinter.Text use for end user editing text? Hopefully they are not internal...</p>

<p><strong>So, is there a way to modify the Text widget to suppress only end user editing?</strong>
Is there a way to do it without diving inside and overriding internal Tkinter code, so the stuff doesn't get broken by next releases of Tkinter?</p>

<p>Looking at the Idle shell window, I see that they've managed to suppress edits (except for the last line). So there is a way. But what is it and how costly?</p>
","<python><text><python-3.x><tkinter><readonly>"
"7782524","1","","<p>While using ExecuteExcel4Macro to run a Excel macro in Python, I always get the False result, here is the code executed:</p>

<pre><code>import win32com.client

filename = r'E:\excel.xls'
xlApp = win32com.client.Dispatch('Excel.Application')
xlApp.visible = 1
xlBook = xlApp.Workbooks.Open(filename)

strPara = xlBook.Name + '!Macro1()'
res = xlApp.ExecuteExcel4Macro(strPara)
print res

xlBook.Close(SaveChanges=0)
</code></pre>

<p>and the output of ""print res"" statement is: <code>False</code></p>

<p>After I search the usage of ExecuteExcel4Macro on <a href=""http://msdn.microsoft.com/en-us/library/aa191494%28v=office.10%29.aspx"" rel=""nofollow"">MSDN</a>, I get the following information:
""ExecuteExcel4Macro -- Runs a Microsoft Excel 4.0 macro function and then returns the result of the function. <strong>The return type depends on the function.</strong>""</p>

<p>Then I get confused: since marco in Excel is always a ""Sub procedure"" and a ""Sub procedure"" in VBA has no return result, how can a Excel macro return a result? Then what does the False result in the above example stand for?</p>

<p>After that, I try ExecuteExcel4Macro within Excel(2003) by coding not in Python but in VBA:</p>

<pre><code>Sub RunMacro()
    res = ExecuteExcel4Macro(""excel.xls!Macro1()"")
    MsgBox CStr(res)
End Sub
Sub Macro1()
    MsgBox ""in Macro1""
End Sub
</code></pre>

<p>and the ""res"" string shown in MsgBox is the same: <code>False</code></p>

<p>1.Why is the rerturn result of ExecuteExcel4Macro always False?</p>

<p>2.What should I do if I want to run a Excel macro in Python and to get the exit status of the Excel macro function?</p>

<p>I will appreciate your help!</p>

<hr>

<p>Updated at 2011.10.28:</p>

<pre><code>Sub TEST()
    res = Application.Run(MacroToRun)
    MsgBox CStr(res)
End Sub

Function MacroToRun()
    MacroToRun = True
End Function
</code></pre>

<p>After I run TEST Macro in Excel 2003, I get this:</p>

<p>A dialog with the information ""Error 2015""
(As a new user,I'm sorry I can't provide the screenshot now）</p>

<p>Thank you for your attention, Tim Williams and Joël !</p>
","<python><vba>"
"7782538","1","","<p>My company has a C/C++ application developed using Visual Studio. Currently we have a Visual Basic plugin which lets you open a built-in text editor and run VB code. This built-in text editor gives the user all the basic debugging tools (break, watch, step...). I was wondering how could I do that using Python. The tricky part is that the python interpreter has to be launched from inside the main application, so that they have access to the same memory space.</p>

<p>I already have a swig interface for the application API and did a proof of concept VB script in which I loaded Python as a DLL and executed a script as described <a href=""http://docs.python.org/c-api/veryhigh.html"" rel=""nofollow"">here</a>. This works perfectly when I am sure the script has no bugs, but it would be much easier if I could have some sort of interface which I can debug the script being executed.</p>

<p>I had a look into the pdb module, but it dosent look like the way to go. If someone could just point me into the right direction it would be much appreciated.</p>
","<python><debugging><mfc><ide><embedding>"
"7782611","2","7782233","<p>Here's the hack I have so far. Suggestions for improvement are welcome.</p>

<pre><code>class T(object):

    def __init__(self, **kwds):
        for k, v in kwds.items():
            d = {}
            cls_name = self.__class__.__name__

            eval(compile(
                'class dummy: pass\n'
                'class {0}: __{1} = 0'.format(cls_name, k), '', 'exec'), d)

            d1, d2 = d['dummy'].__dict__, d[cls_name].__dict__
            k = next(k for k in d2 if k not in d1)

            setattr(self, k, v)

&gt;&gt;&gt; t = T(x=1, y=2, z=3)
&gt;&gt;&gt; t._T__x, t._T__y, t._T__z
(1, 2, 3)
</code></pre>
",""
"7782650","1","","<p>I have a design question. I have a function loadImage() for loading an image file. Now it accepts a string which is a file path. But I also want to be able to load files which are not on physical disk, eg. generated procedurally. I could have it accept a string, but then how could it know the string is not a file path but file data? I could add an extra boolean argument to specify that, but that doesn't sound very clean. Any ideas?
It's something like this now:</p>

<pre><code>def loadImage(filepath):
    file = open(filepath, 'rb')
    data = file.read()
    # do stuff with data
</code></pre>

<p>The other version would be</p>

<pre><code>def loadImage(data):
    # do stuff with data
</code></pre>

<p>How to have this function accept both 'filepath' or 'data' and guess what it is?</p>
","<python><string><file><arguments>"
"7782682","1","","<p>I have this code I am trying out and I can't figure out how to modify the instance attributes when I use them as parameters when calling a method.</p>

<pre><code>class Portfolio(object):
    def __init__(self):
        self.qtyA = 50
        self.qtyB = 0
        self.qtyC = 0
        self.cash = 0  

    def __str__(self):
        return (""%d %d %d %.2f"")%(self.qtyA, self.qtyB, self.qtyC, self.cash)

    def buy(self, stockQty, qtyToBuy, price, commission=20):
        stockQty += qtyToBuy
        print stockQty
        buyTransaction = price * qtyToBuy
        self.cash -= buyTransaction + commission

&gt;&gt;&gt; p = Portfolio()
&gt;&gt;&gt; p.buy(p.qtyA,10,25)
60
&gt;&gt;&gt; print p
50 0 0 -270.00
</code></pre>

<p>What seems to be happening is that a new variable <code>stockQty</code> is being created when <code>buy</code> is called. I would expect that a reference to the attribute <code>qtyA</code> would be passed instead of the value. This problem might be related to this question: <a href=""https://stackoverflow.com/questions/986006/python-how-do-i-pass-a-variable-by-reference"">How do I pass a variable by reference?</a></p>

<p>How can I work around this issue?</p>
","<python><class><methods>"
"7782691","1","","<p>Python noob... please be gentle. In my current program, I have a list of 3 files which may or may not reside in my current directory. If they do reside in my directory, I want to be able to assign them values to be later used in other functions. If the file does not reside in the directory, it should not be assigned values as the file does not exist anyway. The code I have so far is below:</p>

<pre><code>import os, csv

def chkifexists():
    files = ['A.csv', 'B.csv', 'C.csv']
    for fname in files:
        if os.path.isfile(fname):
            if fname == ""A.csv"":
                hashcolumn = 7
                filepathNum = 5
            elif fname == ""B.csv"":
                hashcolumn = 15
                filepathNum = 5
            elif fname == ""C.csv"":
                hashcolumn = 1
                filepathNum = 0
        return fname, hashcolumn, filepathNum


def removedupes(infile, outfile, hashcolumn):
    fname, hashcolumn, filepathNum = chkifexists()
    r1 = file(infile, 'rb')
    r2 = csv.reader(r1)
    w1 = file(outfile, 'wb')
    w2 = csv.writer(w1)
    hashes = set()
    for row in r2:
        if row[hashcolumn] =="""": 
            w2.writerow(row)       
            hashes.add(row[hashcolumn])  
        if row[hashcolumn] not in hashes:
            w2.writerow(row)
            hashes.add(row[hashcolumn])
    w1.close()
    r1.close()


def bakcount(origfile1, origfile2):
    '''This function creates a .bak file of the original and does a row count to determine
    the number of rows removed'''
    os.rename(origfile1, origfile1+"".bak"")
    count1 = len(open(origfile1+"".bak"").readlines())
    #print count1

    os.rename(origfile2, origfile1)
    count2 = len(open(origfile1).readlines())
    #print count2

    print str(count1 - count2) + "" duplicate rows removed from "" + str(origfile1) +""!""


def CleanAndPrettify():
    print ""Removing duplicate rows from input files...""
    fname, hashcolumn, filepathNum = chkifexists()
    removedupes(fname, os.path.splitext(fname)[0] + ""2.csv"", hashcolumn)
    bakcount (fname, os.path.splitext(fname)[0] + ""2.csv"")


CleanAndPrettify()
</code></pre>

<p>The problem I am running into is that the code runs through the list and stops at the first valid file it finds.</p>

<p>I'm not sure if I'm completely thinking of it in the wrong way but I thought I was doing it right.</p>

<p>Current output of this program with A.csv, B.csv, and C.csv present in the same directory:</p>

<pre><code>Removing duplicate rows from input files...
2 duplicate rows removed from A.csv!
</code></pre>

<p>The <strong><em>Desired output</em></strong> should be:</p>

<pre><code>Removing duplicate rows from input files...
2 duplicate rows removed from A.csv!
5 duplicate rows removed from B.csv!
8 duplicate rows removed from C.csv!
</code></pre>

<p>...and then continue on with the next portion of creating the .bak files.
The output of this program <strong>without</strong> any CSV files in the same directory:</p>

<pre><code>UnboundLocalError: local variable 'hashcolumn' referenced before assignment
</code></pre>
","<python><function><csv><for-loop>"
"7782704","2","7782650","<p>How about just creating two functions, <code>loadImageFromString</code> and <code>loadImageFromFile</code>?</p>
",""
"7782706","2","7782650","<p>You can change your <code>loadImage</code> function to expect an opened file-like object, such as:</p>

<pre><code>def load_image(f):
    data = file.read()
</code></pre>

<p>... and then have that called from two functions, one of which expects a path and the other a string that contains the data:</p>

<pre><code>from StringIO import StringIO

def load_image_from_path(path):
    with open(path, 'rb') as f:
        load_image(f)

def load_image_from_string(s):
    sio = StringIO(s)
    try:
        load_image(sio)
    finally:
        sio.close()
</code></pre>
",""
"7782721","1","","<p>Just wondering if there is a library in Java like the module <a href=""http://pyaudiere.org/"" rel=""nofollow"">PyAudiere</a> in Python, that simply allows you to create tones and play them, like this sample Python code:</p>

<pre><code>device = audiere.open_device()
tone = device.create_tone(500) #create a 500hz tone
tone.play()
tone.stop()
</code></pre>

<p>This simply assigns a variable to your default sound device, and then makes a tone for that device and plays it then stops it. Are there any libraries like this that are as simple to use? </p>

<p>I appreciate any and all feedback, thanks! :-D</p>
","<java><python><audio><javasound>"
"7782725","2","7782691","<p>Of course it stops after first match, because you are doing <code>return</code> from a function. Instead, you should either populate some array in the loop and <code>return</code> it in the end, or create a generator using <code>yield</code> on each iteration and <code>raise StopIteration</code> in case of nothing is found. The first approach is simpler and closer to your solution, here it is:</p>

<pre><code>import os, csv

def chkifexists():
    files = ['A.csv', 'B.csv', 'C.csv']
    found = []
    for fname in files:
        if os.path.isfile(fname):
            if fname == ""A.csv"":
                hashcolumn = 7
                filepathNum = 5
            elif fname == ""B.csv"":
                hashcolumn = 15
                filepathNum = 5
            elif fname == ""C.csv"":
                hashcolumn = 1
                filepathNum = 0
            found.append({'fname': fname,
                          'hashcolumn': hashcolumn,
                          'filepathNum': filepathNum})
    return found

found = chkifexists()
if not found:
    print 'No files to scan'
else
    for f in found:
        print f['fname'], f['hashcolumn'], f['filepathNum']
</code></pre>
",""
"7782729","2","7782691","<p>The checking condition that you are using is not the suggested way to compare two strings in python.
Unless you are explicitly <a href=""http://en.wikipedia.org/wiki/String_interning"" rel=""nofollow"">interning</a> the string, you should not use <code>is</code> for comparison as there is no guarantee that it would return <code>True</code>
use <code>==</code> instead.</p>

<p>Alternatively, you can do the following:</p>



<pre><code>files=['A.csv', 'B.csv', 'C.csv']
filedict['A.csv']=(7,5)
filedict['B.csv']=(15,5)
filedict['C.csv']=(1,0)
print [(fname,filedict[fname]) for fname in files if filedict.has_key(fname) and os.path.isfile(fname)]
</code></pre>
",""
"7782749","2","7782721","<p>It is pretty simple to generate a sound in memory.</p>

<p>E.G.</p>

<p><img src=""https://i.stack.imgur.com/U8dty.png"" alt=""Beeper""></p>

<p>The important part of generating the tone (and storing it in a <code>Clip</code>) is encompassed in this code:</p>

<pre><code>/** Generates a tone, and assigns it to the Clip. */
public void generateTone()
    throws LineUnavailableException {
    if ( clip!=null ) {
        clip.stop();
        clip.close();
    } else {
        clip = AudioSystem.getClip();
    }
    boolean addHarmonic = harmonic.isSelected();

    int intSR = ((Integer)sampleRate.getSelectedItem()).intValue();
    int intFPW = framesPerWavelength.getValue();

    float sampleRate = (float)intSR;

    // oddly, the sound does not loop well for less than
    // around 5 or so, wavelengths
    int wavelengths = 20;
    byte[] buf = new byte[2*intFPW*wavelengths];
    AudioFormat af = new AudioFormat(
        sampleRate,
        8,  // sample size in bits
        2,  // channels
        true,  // signed
        false  // bigendian
        );

    int maxVol = 127;
    for(int i=0; i&lt;intFPW*wavelengths; i++){
        double angle = ((float)(i*2)/((float)intFPW))*(Math.PI);
        buf[i*2]=getByteValue(angle);
        if(addHarmonic) {
            buf[(i*2)+1]=getByteValue(2*angle);
        } else {
            buf[(i*2)+1] = buf[i*2];
        }
    }

    try {
        byte[] b = buf;
        AudioInputStream ais = new AudioInputStream(
            new ByteArrayInputStream(b),
            af,
            buf.length/2 );

        clip.open( ais );
    } catch(Exception e) {
        e.printStackTrace();
    }
}
</code></pre>

<h2>Beeper.java</h2>

<p>This is self contained code that shows the GUI seen above.  It is a hybrid that will work either as a free floating frame, or embedded as an applet.</p>

<pre><code>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import javax.swing.border.*;
import java.text.DecimalFormat;

import javax.sound.sampled.*;

import java.io.ByteArrayInputStream;

/** Beeper presents a small, loopable tone that can be heard
by clicking on the Code Key.  It uses a Clip to loop the sound,
as well as for access to the Clip's gain control.
@author Andrew Thompson
@version 2009-12-19
@license LGPL */
public class Beeper extends JApplet {

    BeeperPanel bp;

    public void init() {
        bp = new BeeperPanel();
        getContentPane().add(bp);
        validate();

        String sampleRate = getParameter(""samplerate"");
        if (sampleRate!=null) {
            try {
                int sR = Integer.parseInt(sampleRate);
                bp.setSampleRate(sR);
            } catch(NumberFormatException useDefault) {
            }
        }

        String fpw = getParameter(""fpw"");
        if (fpw!=null) {
            try {
                int fPW = Integer.parseInt(fpw);
                JSlider slider = bp.getFramesPerWavelengthSlider();
                slider.setValue( fPW );
            } catch(NumberFormatException useDefault) {
            }
        }

        boolean harmonic = (getParameter(""addharmonic"")!=null);
        bp.setAddHarmonic(harmonic);

        bp.setUpSound();

        if ( getParameter(""autoloop"")!=null ) {
            String loopcount = getParameter(""loopcount"");
            if (loopcount!=null) {
                try {
                    Integer lC = Integer.parseInt(loopcount);
                    bp.loop( lC.intValue() );
                } catch(NumberFormatException doNotLoop) {
                }
            }
        }
    }

    public void stop() {
        bp.loopSound(false);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                JFrame f = new JFrame(""Beeper"");
                f.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
                BeeperPanel BeeperPanel = new BeeperPanel();
                f.setContentPane(BeeperPanel);
                f.pack();
                f.setMinimumSize( f.getSize() );
                f.setLocationByPlatform(true);
                f.setVisible(true);
            }
        });
    }
}

/** The main UI of Beeper. */
class BeeperPanel extends JPanel {

    JComboBox sampleRate;
    JSlider framesPerWavelength;
    JLabel frequency;
    JCheckBox harmonic;
    Clip clip;

    DecimalFormat decimalFormat = new DecimalFormat(""###00.00"");

    BeeperPanel() {
        super(new BorderLayout());
        // Use current OS look and feel.
        try {
            UIManager.setLookAndFeel(
                UIManager.getSystemLookAndFeelClassName());
            SwingUtilities.updateComponentTreeUI(this);
        } catch (Exception e) {
            e.printStackTrace();
        }
        setPreferredSize( new Dimension(300,300) );

        JPanel options = new JPanel();
        BoxLayout bl = new BoxLayout(options,BoxLayout.Y_AXIS);
        options.setLayout(bl);

        Integer[] rates = {
            new Integer(8000),
            new Integer(11025),
            new Integer(16000),
            new Integer(22050)
        };
        sampleRate = new JComboBox(rates);
        sampleRate.setToolTipText(""Samples per second"");
        sampleRate.setSelectedIndex(1);
        JPanel pSampleRate = new JPanel(new BorderLayout());
        pSampleRate.setBorder(new TitledBorder(""Sample Rate""));
        pSampleRate.add( sampleRate );
        sampleRate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent ae) {
                setUpSound();
            }
        });
        options.add( pSampleRate );

        framesPerWavelength = new JSlider(JSlider.HORIZONTAL,10,200,25);
        framesPerWavelength.setPaintTicks(true);
        framesPerWavelength.setMajorTickSpacing(10);
        framesPerWavelength.setMinorTickSpacing(5);
        framesPerWavelength.setToolTipText(""Frames per Wavelength"");
        framesPerWavelength.addChangeListener( new ChangeListener(){
            public void stateChanged(ChangeEvent ce) {
                setUpSound();
            }
        } );

        JPanel pFPW = new JPanel( new BorderLayout() );
        pFPW.setBorder(new TitledBorder(""Frames per Wavelength""));

        pFPW.add( framesPerWavelength );
        options.add( pFPW );

        JPanel bottomOption = new JPanel( new BorderLayout(4,4) );
        harmonic = new JCheckBox(""Add Harmonic"", false);
        harmonic.setToolTipText(
            ""Add harmonic to second channel, one octave up"");
        harmonic.addActionListener( new ActionListener(){
            public void actionPerformed(ActionEvent ae) {
                setUpSound();
            }
        } );
        bottomOption.add( harmonic, BorderLayout.WEST );

        frequency = new JLabel();
        bottomOption.add( frequency, BorderLayout.CENTER );

        options.add(bottomOption);

        add( options, BorderLayout.NORTH );

        JPanel play = new JPanel(new BorderLayout(3,3));
        play.setBorder( new EmptyBorder(4,4,4,4) );
        JButton bPlay  = new JButton(""Code Key"");
        bPlay.setToolTipText(""Click to make tone!"");
        Dimension preferredSize = bPlay.getPreferredSize();
        bPlay.setPreferredSize( new Dimension(
            (int)preferredSize.getWidth(),
            (int)preferredSize.getHeight()*3) );

        // TODO comment out to try KeyListener!
        //bPlay.setFocusable(false);
        bPlay.addKeyListener( new KeyAdapter(){
            @Override
            public void keyPressed(KeyEvent ke) {
                loopSound(true);
            }
        } );
        bPlay.addMouseListener( new MouseAdapter() {
                @Override
                public void mousePressed(MouseEvent me) {
                    loopSound(true);
                }

                @Override
                public void mouseReleased(MouseEvent me) {
                    loopSound(false);
                }
            } );
        play.add( bPlay );

        try {
            clip = AudioSystem.getClip();

            final FloatControl control = (FloatControl)
                clip.getControl( FloatControl.Type.MASTER_GAIN );

            final JSlider volume = new JSlider(
                JSlider.VERTICAL,
                (int)control.getMinimum(),
                (int)control.getMaximum(),
                (int)control.getValue()
                );
            volume.setToolTipText(""Volume of beep"");
            volume.addChangeListener( new ChangeListener(){
                public void stateChanged(ChangeEvent ce) {
                    control.setValue( volume.getValue() );
                }
            } );
            play.add( volume, BorderLayout.EAST );
        } catch(Exception e) {
            e.printStackTrace();
        }

        add(play, BorderLayout.CENTER);

        setUpSound();
    }

    public void loop(int loopcount) {
        if (clip!=null) {
            clip.loop( loopcount );
        }
    }

    public void setAddHarmonic(boolean addHarmonic) {
        harmonic.setSelected(addHarmonic);
    }

    /** Provides the slider for determining the # of frames per wavelength,
    primarily to allow easy adjustment by host classes. */
    public JSlider getFramesPerWavelengthSlider() {
        return framesPerWavelength;
    }

    /** Sets the sample rate to one of the four
    allowable rates. Is ignored otherwise. */
    public void setSampleRate(int sR) {
        switch (sR) {
            case 8000:
                sampleRate.setSelectedIndex(0);
                break;
            case 11025:
                sampleRate.setSelectedIndex(1);
                break;
            case 16000:
                sampleRate.setSelectedIndex(2);
                break;
            case 22050:
                sampleRate.setSelectedIndex(3);
                break;
            default:
        }
    }

    /** Sets label to current frequency settings. */
    public void setFrequencyLabel() {
        float freq = getFrequency();
        if (harmonic.isSelected()) {
            frequency.setText(
                decimalFormat.format(freq) +
                ""(/"" +
                decimalFormat.format(freq*2f) +
                "") Hz"" );
        } else {
            frequency.setText( decimalFormat.format(freq) + "" Hz"" );
        }
    }

    /** Generate the tone and inform the user of settings. */
    public void setUpSound() {
        try {
            generateTone();
            setFrequencyLabel();
        } catch(Exception e) {
            e.printStackTrace();
        }
    }

    /** Provides the frequency at current settings for
    sample rate &amp; frames per wavelength. */
    public float getFrequency() {
        Integer sR = (Integer)sampleRate.getSelectedItem();
        int intST = sR.intValue();
        int intFPW = framesPerWavelength.getValue();

        return (float)intST/(float)intFPW;
    }

    /** Loops the current Clip until a commence false is passed. */
    public void loopSound(boolean commence) {
        if ( commence ) {
            clip.setFramePosition(0);
            clip.loop( Clip.LOOP_CONTINUOUSLY );
        } else {
            clip.stop();
        }
    }

    /** Generates a tone, and assigns it to the Clip. */
    public void generateTone()
        throws LineUnavailableException {
        if ( clip!=null ) {
            clip.stop();
            clip.close();
        } else {
            clip = AudioSystem.getClip();
        }
        boolean addHarmonic = harmonic.isSelected();

        int intSR = ((Integer)sampleRate.getSelectedItem()).intValue();
        int intFPW = framesPerWavelength.getValue();

        float sampleRate = (float)intSR;

        // oddly, the sound does not loop well for less than
        // around 5 or so, wavelengths
        int wavelengths = 20;
        byte[] buf = new byte[2*intFPW*wavelengths];
        AudioFormat af = new AudioFormat(
            sampleRate,
            8,  // sample size in bits
            2,  // channels
            true,  // signed
            false  // bigendian
            );

        int maxVol = 127;
        for(int i=0; i&lt;intFPW*wavelengths; i++){
            double angle = ((float)(i*2)/((float)intFPW))*(Math.PI);
            buf[i*2]=getByteValue(angle);
            if(addHarmonic) {
                buf[(i*2)+1]=getByteValue(2*angle);
            } else {
                buf[(i*2)+1] = buf[i*2];
            }
        }

        try {
            byte[] b = buf;
            AudioInputStream ais = new AudioInputStream(
                new ByteArrayInputStream(b),
                af,
                buf.length/2 );

            clip.open( ais );
        } catch(Exception e) {
            e.printStackTrace();
        }
    }

    /** Provides the byte value for this point in the sinusoidal wave. */
    private static byte getByteValue(double angle) {
        int maxVol = 127;
        return (new Integer(
            (int)Math.round(
            Math.sin(angle)*maxVol))).
            byteValue();
    }
}
</code></pre>
",""
"7782766","2","7782650","<p>This being Python, you can easily distinguish between a filename and a data string.  I would do something like this:</p>

<pre><code>import os.path as P
from StringIO import StringIO
def load_image(im):
    fin = None
    if P.isfile(im):
        fin = open(im, 'rb')
    else:
        fin = StringIO(im)

    # Read from fin like you would from any open file object
</code></pre>

<p>Other ways to do it would be a <code>try</code> block instead of using <code>os.path</code>, but the essence of the approach remains the same.</p>
",""
"7782770","2","7782682","<p>A simple approach would be to pass in strings as stockQty containing the name of the member you want to modify (e.g. ""qtyA""), and use <code>getattr(self, stockQty)</code> to read and <code>setattr(self, stockQty, newVal)</code> to change the value of this parameter.</p>

<p>If you are not happy about passing in free form strings, you can define some class variables, e.g. <code>refQtyA = ""qtyA""</code>, and use them as your parameters when you call your function: <code>buy(p.refQtyA, 10, 25)</code>.</p>
",""
"7782772","1","","<p>So I parsed a html page with <code>.findAll</code> (BeautifulSoup) to variable named <code>result</code>.
If I type <code>result</code> in Python shell then press Enter, I see normal text as expected, but as I wanted to postprocess this result as string object, I noticed that <code>str(result)</code> returns garbage, like this sample:</p>

<pre><code>\xd1\x87\xd0\xb8\xd0\xbb\xd0\xbd\xd0\xb8\xd1\x86\xd0\xb0&lt;/a&gt;&lt;br /&gt;\n&lt;hr /&gt;\n&lt;/div&gt;
</code></pre>

<p>Html page source is <code>utf-8</code> encoded</p>

<p>How can I handle this?</p>

<hr>

<p>Code is basically this, in case it matters:</p>

<pre><code>from BeautifulSoup import BeautifulSoup
soup = BeautifulSoup(urllib.open(url).read())
result = soup.findAll(something)
</code></pre>

<p>Python is 2.7</p>
","<python><unicode><beautifulsoup>"
"7782811","2","7782772","<p>That's not garbage, that's UTF-8-encoded text. <a href=""http://farmdev.com/talks/unicode/"" rel=""nofollow"">Use Unicode instead.</a></p>
",""
"7782812","2","7782772","<p>Use this:</p>

<pre><code>unicodedata.normalize('NFKC', p.decode()).encode('ascii','ignore')
</code></pre>

<p>Unicode has <a href=""http://unicode.org/reports/tr15/"" rel=""nofollow"">multiple normalization forms</a> 
That output should not be garbage. <br />Use the <code>originalEncoding</code> attribute to verify the encoding scheme.<br /> Regarding python's unicode implementations, refer <a href=""http://docs.python.org/library/unicodedata.html"" rel=""nofollow"">this document</a> (even for the normalization)</p>
",""
"7782834","2","7782682","<p>As <code>@vhallac</code> mentioned you can use <code>setattr</code> or <code>getattr</code> methods to set and get value of attribute respectively. In fact you do not need to pass the object attribute to the function. you can directly access it in the function and update it.:</p>

<pre><code>def buy(self, qtyToBuy, price, commission=20):
    self.qtyA += qtyToBuy
    print self.qtyA
    buyTransaction = price * qtyToBuy
    self.cash -= buyTransaction + commission
&gt;&gt;&gt; p = Portfolio()
&gt;&gt;&gt; p.buy(10,25)
&gt;&gt;&gt; print p
60 0 0 -270.00
</code></pre>
",""
"7782878","2","7782682","<p>I think you should redesign your class. Either write functions <em>buyA, buyB, buyC</em> and make sure to reuse the common code, or refactor <em>buyA, buyB, buyC</em> to a single dictionary which would be updated using a single function <em>buy</em> indexed by a string.
<br><br>
The first proposal is meaningful only if A,B and C have some special business logic meaning in your class.</p>
",""
"7782909","1","","<p>Vexed is a popular puzzle game, with many versions available (some of them GPL free software).  It is very suitable for small screen devices; versions are available for Android, iOS, etc.  I discovered it on the PalmOS platform.</p>

<p>Just for fun, I'd like to write a solver that will solve Vexed levels.</p>

<p>Vexed is a block-sliding puzzle game.  Here are the rules in a nutshell:</p>

<p>0) Each level is a grid of squares, bounded by an impassible border.  In any level there will be some solid squares, which are impassible.  There are some number of blocks of various colors; these could be resting on the bottom border, resting on solid squares, or resting on other blocks (of a different color).  Most levels are 8x8 or smaller.</p>

<p>1) The only action you can take is to slide a block to the left or to the right.  Each square traveled by a block counts as one move.</p>

<p>2) There is gravity.  If, after you slide a block, it is no longer resting on a solid square or another block, it will fall until it comes to rest on another block, a solid square, or the bottom border.  Note that you cannot ever lift it up again.</p>

<p>3) Any time two or more blocks of the same color touch, they disappear.  Note that chains are possible: if a supporting block disappears, blocks that rested upon it will fall, which could lead to more blocks of the same color touching and thus disappearing.</p>

<p>4) The goal is to make all blocks disappear in the minimum number of moves.  Each level has a ""par score"" which tells you the minimum number of moves.  (In the original PalmOS game, the ""par score"" wasn't necessarily the minimum, but in the Android version I play these days it is the minimum.)</p>

<p>Here is the SourceForge project with the source for the PalmOS version of the game:</p>

<p><a href=""http://sourceforge.net/projects/vexed/"" rel=""nofollow"">http://sourceforge.net/projects/vexed/</a></p>

<p>I'm an experienced software developer, but I haven't done really any work in AI sort of stuff (pathfinding, problem-solving, etc.)  So I'm looking for advice to get me pointed in the right direction.</p>

<p>At the moment, I can see two basic strategies for me to pursue:</p>

<p>0) Just write a brute-force solver, probably in C for the speed, that cranks through every possible solution for every game and returns a list of all solutions, best one first.  Would this be a reasonable approach, or would the total number of possible moves make this too slow?  I don't think any levels exist larger than 10x10.</p>

<p>1) Learn some AI-ish algorithms, and apply them in a clever way to solve the problem, probably using Python.</p>

<p>Note that the source for PalmOS Vexed includes a solver.  According to the author, ""The solver uses A* with pruning heuristics to find solutions.""</p>

<p><a href=""http://www.scottlu.com/Content/Vexed.html"" rel=""nofollow"">http://www.scottlu.com/Content/Vexed.html</a></p>

<p>So, one strategy I could pursue would be to study the A* algorithm and then study the C++ code for the existing solver and try to learn from that.</p>

<p>I'm going to tag this with Python and C tags, but if you think I should be using something else, make your sales pitch and I'll consider it!</p>

<p>Here is ASCII art of a level from ""Variety 25 Pack""; level 48, ""Dark Lord"".  I am able to solve most levels but this one has, well, vexed me.  Par score for this level is 25 moves, but I have not yet solved it at all!</p>

<pre class=""lang-none prettyprint-override""><code>__________
|## g####|
|## # b##|
|## # p##|
|#g   ###|
|bp   ###|
|p# p g  |
==========
</code></pre>

<p>In this picture, the borders are underscores, vertical bars, and equals characters.  Filled-in squares are '#'.  Open spaces are space characters.  Colored blocks are 'g' (green), 'b' (blue) and 'p' (purple).</p>

<p>By the way, I'll likely make the input file format to the solver be ASCII art of the levels, just like this but without the fussy line border characters.</p>

<p>Thanks for any advice!</p>

<p>EDIT:</p>

<p>I have accepted an answer.  Thank you to the people who gave me answers.</p>

<p>This is a semi-brute-force solver.  It isn't using A* but it is cutting short unprofitable branches of the tree.</p>

<p>It reads in a simple text file with the level data.  A letter is a block, a '_' (underscore) is an open space, and a '#' is a filled-in space.</p>

<pre><code>#!/usr/bin/env python
#
# Solve levels from the game Vexed.


from collections import Counter
import sys


level_blocks = set(chr(x) for x in range(ord('a'), ord('z')+1))
level_other = set(['_', '#'])
level_valid = set().union(level_blocks, level_other)


def prn_err(s='\n'):
    sys.stderr.write(s)
    sys.stderr.flush()


def validate_llc(llc):
    if len(llc) == 0:
        raise ValueError, ""need at least one row of level data""
    w = len(llc[0])
    if w &lt; 2:
        raise ValueError, ""level data not wide enough""
    for i, row in enumerate(llc):
        if len(row) != w:
            s = ""level data: row %d is different length than row 0""
            raise ValueError, s % i
        for j, ch in enumerate(row):
            if ch not in level_valid:
                s = ""char '%c' at (%d, %d) is invalid"" % (ch, i, j)
                raise ValueError, s


class Info(object):
    pass

info = Info()

info.width = 0
info.height = 0
info.spaces = set()
info.boom_blocks = set()
info.best_solution = 9999999999
info.title = ""unknown""



class Level(object):
    """"""
    Hold the state of a level at a particular move.  self.parent points
    to the previous state, from a previous move, so the solver builds a
    tree representing the moves being considered.  When you reach a solution
    (a state where there are no more blocks) you can walk up the tree
    back to the root, and you have the chain of moves that leads to that
    solution.""""""
    def __init__(self, x):
        if isinstance(x, Level):
            self.blocks = dict(x.blocks)
            self.colors = dict(x.colors)
            self.parent = x
            self.s_move = ''
            self.rank = x.rank + 1
        else:
            if isinstance(x, basestring):
                # allow to init from a one-line ""data"" string
                # example: ""___;___;r_r""
                x = x.split(';')

            # build llc: list of rows, each row a list of characters
            llc = [[ch for ch in row.strip()] for row in x]
            llc.reverse()

            info.width = len(llc[0])
            info.height = len(llc)
            validate_llc(llc)

            # Use llc data to figure out the level, and build self.blocks
            # and info.spaces.  self.blocks is a dict mapping a coordinate
            # tuple to a block color; info.spaces is just a set of
            # coordinate tuples.
            self.blocks = {}
            for y in range(info.height):
                for x in range(info.width):
                    loc = (x, y)
                    c = llc[y][x]
                    if c == '_':
                        # it's a space
                        info.spaces.add(loc)
                    elif c in level_blocks:
                        # it's a block (and the block is in a space)
                        self.blocks[loc] = c
                        info.spaces.add(loc)
                    else:
                        # must be a solid square
                        assert(c == '#')

            # colors: map each block color onto a count of blocks.
            self.colors = Counter(self.blocks.values())

            # parent: points to the level instance that holds the state
            # previous to the state of this level instance.
            self.parent = None

            # s_move: a string used when printing out the moves of a solution
            self.s_move = 'initial state:'

            # rank: 0 == initial state, +1 for each move
            self.rank = 0

            self.validate()

            print ""Solving:"", info.title
            print
            sys.stdout.flush()

        if self._update():
            print ""level wasn't stable!  after updating:\n%s\n"" % str(self)

    def lone_color(self):
        return any(count == 1 for count in self.colors.values())

    def is_solved(self):
        return sum(self.colors.values()) == 0

    def validate(self):
        if info.height == 0:
            raise ValueError, ""need at least one row of level data""
        if info.width &lt; 2:
            raise ValueError, ""level data not wide enough""
        if self.lone_color():
            raise ValueError, ""cannot have just one of any block color""
        for x, y in info.spaces:
            if not 0 &lt;= x &lt; info.width or not 0 &lt;= y &lt; info.height:
                raise ValueError, ""Bad space coordinate: "" + str(loc)
        for x, y in self.blocks:
            if not 0 &lt;= x &lt; info.width or not 0 &lt;= y &lt; info.height:
                raise ValueError, ""Bad block coordinate: "" + str(loc)
        if any(count &lt; 0 for count in self.colors.values()):
            raise ValueError, ""cannot have negative color count!""

        colors = Counter(self.blocks.values())
        for k0 in [key for key in self.colors if self.colors[key] == 0]:
            del(self.colors[k0])  # remove all keys whose value is 0
        if colors != self.colors:
            raise ValueError, ""self.colors invalid!\n"" + str(self.colors)

    def _look(self, loc):
        """"""
return color at location 'loc', or '_' if empty, or '#' for a solid sqaure.
A bad loc does not raise an error; it just returns '#'.
        """"""
        if loc in self.blocks:
            return self.blocks[loc]
        elif loc in info.spaces:
            return '_'
        else:
            return '#'

    def _lookxy(self, x, y):
        loc = x, y
        return self._look(loc)

    def _board_mesg(self, mesg, loc):
        x, y = loc
        return ""%s %c(%d,%d)"" % (mesg, self._look(loc), x, y)

    def _blocked(self, x, y):
        return self._lookxy(x, y) != '_'

    def _s_row(self, y):
        return ''.join(self._lookxy(x, y) for x in xrange(info.width))
    def data(self, ch_join=';'):
        return ch_join.join(self._s_row(y)
                for y in xrange(info.height - 1, -1, -1))

    # make repr() actually print a representation
    def __repr__(self):
        return type(self).__name__ + ""(%s)"" % self.data()

    # make str() work
    def __str__(self):
        return self.data('\n')


    def _move_block(self, loc_new, loc_old):
        self.blocks[loc_new] = self.blocks[loc_old]
        del(self.blocks[loc_old])

    def _explode_block(self, loc):
        if loc in info.boom_blocks:
            return

        info.boom_blocks.add(loc)
        color = self.blocks[loc]
        self.colors[color] -= 1

    def _try_move(self, loc, d):
        x, y = loc
        if not d in ('&lt;', '&gt;'):
            raise ValueError, ""d value '%c' invalid, must be '&lt;' or '&gt;'"" % d

        if d == '&lt;':
            x_m = (x - 1)
        else:
            x_m = (x + 1)
        y_m = y
        loc_m = (x_m, y_m)
        if self._blocked(x_m, y_m):
            return None # blocked, so can't move there

        # Not blocked.  Let's try the move!
        # Make a duplicate level...
        m = Level(self)
        # ...try the move, and see if anything falls or explodes...
        m._move_block(loc_m, loc)
        m._update()
        if m.lone_color():
            # Whoops, we have only one block of some color.  That means
            # no solution can be found by considering this board.
            return None

        # finish the update
        m.s_move = self._board_mesg(""move:"", loc) + ' ' + d
        m.parent = self
        return m

    def _falls(self, loc):
        x, y = loc
        # blocks fall if they can, and only explode when at rest.

        # gravity loop: block falls until it comes to rest
        if self._blocked(x, y - 1):
            return False # it is already at rest

        while not self._blocked(x, y - 1):
            # block is free to fall so fall one step
            y -= 1

        loc_m = (x, y)
        self._move_block(loc_m, loc)
        return True # block fell to new location

    def _explodes(self, loc):
        x, y = loc
        exploded = False

        color = self._look(loc)
        # look left, right, up, and down for blocks of same color
        for e_loc in [(x-1, y), (x+1, y), (x, y-1)]:
            if e_loc in self.blocks and self.blocks[e_loc] == color:
                self._explode_block(e_loc)
                exploded = True

        if exploded:
            self._explode_block(loc)

        return exploded

    def _update(self):
        c = 0
        while True:
            # TRICKY: sum() works on functions that return a bool!
            # As you might expect, True sums as 1 and False as 0.
            f = sum(self._falls(loc) for loc in self.blocks)
            e = sum(self._explodes(loc) for loc in self.blocks)
            for loc in info.boom_blocks:
                del(self.blocks[loc])
            info.boom_blocks.clear()
            c += f + e
            if (f + e) == 0:
                # no blocks fell or exploded; board is stable, update is done
                break
        return c

    def print_moves(self):
        lst = [self]
        a = self
        while a.parent:
            a = a.parent
            lst.append(a)
        lst.reverse()
        for i, a in enumerate(lst):
            if i:
                print ""Move %d of %d"" % (i, len(lst) - 1)
            print a.s_move
            print a
            print


    def solve(self):
        c = 0
        seen = set()
        solutions = []

        seen.add(self.data())
        q = []
        if self.is_solved():
            solutions.append(self)
        else:
            q.append(self)

        while q:
            a = q.pop(0)

            # Show dots while solver is 'thinking' to give a progress
            # indicator.  Dots are written to stderr so they will not be
            # captured if you redirect stdout to save the solution.
            c += 1
            if c % 100 == 0:
                prn_err('.')

            if a.rank &gt; info.best_solution:
                # We cannot beat or even match the best solution.
                # No need to think any more about this possibility.
                # Just prune this whole branch of the solution tree!
                continue

            for loc in a.blocks:
                for d in ('&lt;', '&gt;'):
                    m = a._try_move(loc, d)
                    if not m or m.data() in seen:
                        continue

                    if m.is_solved():
                        if info.best_solution &gt; a.rank:
                            print ""\nnew best solution: %d moves"" % m.rank
                            info.best_solution = a.rank
                        else:
                            print ""\nfound another solution: %d moves"" % m.rank
                        solutions.append(m)
                    else:
                        seen.add(m.data())
                        q.append(m)
        print
        print ""Considered %d different board configurations."" % c
        print

        solutions.sort(key=lambda a: a.rank)
        for n, a in enumerate(solutions):
            print ""solution %d): %d moves"" % (n, a.rank)
            a.print_moves()

        if not solutions:
            print ""no solutions found!""


def load_vex_file(fname):
    with open(fname, ""rt"") as f:
        s = f.next().strip()
        if s != ""Vexed level"":
            raise ValueError, ""%s: not a Vexed level file"" % fname
        s = f.next().strip()
        if not s.startswith(""title:""):
            raise ValueError, ""%s: missing title"" % fname
        info.title = s[6:].lstrip()  # remove ""title:""
        for s in f:
            if s.strip() == ""--"":
                break
        return Level(f)



if __name__ == ""__main__"":
    if len(sys.argv) == 1:
        print ""Usage vexed_solver &lt;vexed_level_file.vex&gt;""
        sys.exit(1)

    fname = sys.argv[1]
    level = load_vex_file(fname)
    level.solve()
</code></pre>

<p>Here is an example level file:</p>

<pre><code>Vexed level
title: 25-48, ""Dark Lord""
--
##_f####
##_#_c##
##_#_p##
#f___###
cp___###
p#_p_f__
</code></pre>

<p>On my computer, it solves ""Dark Lord"" in almost exactly 10 seconds, considering 14252 different board configurations.  I wrote in Python 2.x instead of Python 3, because I want to try this with PyPy and see how fast it becomes.</p>

<p>Next I should work on applying A* to this.  I guess I can make a metric like ""better to move an orange block toward another orange block than away"" and try to work that in.  But I do want all the solutions to pop out, so maybe I'm done already.  (If there are three solutions that are all the minimum number of moves, I want to see all three.)</p>

<p>I welcome comments on this Python program.  I had fun writing it!</p>

<p>EDIT: I did try this with PyPy but I never updated this until now.  On the computer I used with PyPy, the solver could solve the ""Dark Lord"" level in 10 seconds using CPython; that dropped to 4 seconds with PyPy.  The cool part is that I could <em>see</em> the speedup as the JIT kicked in: this program prints dots as it is working, and under PyPy I can see the dots start out slower and then just <em>accelerate</em>.  PyPy is nifty.</p>
","<python><c><artificial-intelligence><solver><game-ai>"
"7782967","1","","<p>What are the best libaries for creating interactive (zoom, pan, create online annotations) charts in python?</p>

<p>I've checked <a href=""https://stackoverflow.com/questions/52652/pretty-graphs-and-charts-in-python"">Pretty graphs and charts in Python</a>
but this does not address zoom, pan, and annotation capabilities.</p>
","<python>"
"7783043","2","7782967","<p>I'm not sure what you mean by ""annotation"" in this context, but <code>matplotlib</code> graphs are well-suited for interactive work, and include very good zooming and panning capabilities built-in.</p>
",""
"7783307","2","7781204","<p>To find your error code replace this code:</p>

<pre><code>name = form.cleaned_data['name']
qdict = { 'name': name}
q_objs = [Q(**{qdict[k]: form.cleaned_data[k]}) for k in qdict.keys() if form.cleaned_data.get(k, None)]
search_results = Group.objects.select_related().filter(*q_objs)
</code></pre>

<p>By this one:</p>

<pre><code>q=None
for k,v in form.cleaned_data.items():
  if q:
    q &amp;= Q( k = v )
  else:
    q = Q( k = v )
search_results = Group.objects.select_related().filter( q )
</code></pre>

<p>But, to have really control over your query, you need to write condition by condition:</p>

<pre><code>qs = []

name = form.cleaned_data['name']
if name:
  q_name = Q( name__contains = name )
  qs.append(q_name)

fromDate = form.cleaned_data['fromDate']
if fromDate:
  q_from = Q( date__gte = fromDate )
  qs.append(q_from)

toDate = form.cleaned_data['toDate']
if toDate:
  q_toDate = Q( date__gte = toDate )
  qs.append(q_toDate)

q=None
for x in qs:
  if q:
    q &amp;= x
  else:
    q = x

search_results = Group.objects.select_related().filter(q)
</code></pre>
",""
"7783444","2","7782682","<blockquote>
  <p>This problem might be related to this question: Python: How do I pass a variable by reference?</p>
</blockquote>

<p>It is.</p>

<blockquote>
  <p>How can I work around this issue?</p>
</blockquote>

<p>You need to pass a value that can be modified, and modify it. Numbers cannot be modified: <code>a</code> can be changed from referring to <code>23</code> to referring to <code>42</code> instead, but you cannot cause <code>23</code> to become <code>42</code> or vice-versa.</p>

<p>In your case, the natural way to do this is to also notice the other silly thing you're doing - using a bunch of related, similarly-named variables in parallel - and fix that as well, by replacing them with a sequence. The <code>list</code> type is a modifiable sequence. You need to pass the list itself instead of just a numeric quantity, and indicate which element of the list to replace. Except you don't actually need to pass the list, because it's <strong>already a part of <code>self</code></strong>.</p>

<pre><code>class Portfolio(object):
    def __init__(self):
        self.quantity = [50, 0, 0]
        self.cash = 0  

    def __str__(self):
        return (""%d %d %d %.2f"")%(self.quantity[0], self.quantity[1], self.quantity[2], self.cash)

    def buy(self, stockToBuy, amountToBuy, price, commission=20):
        self.quantity[stockToBuy] += amountToBuy
        cost = price * amountToBuy
        self.cash -= cost + commission
</code></pre>

<p>For a more flexible solution, you might consider the idea of having an association between stock names and quantities of stock - after all, who knows what stocks the client might want in the future. We can do this simply by using a <code>dict</code> instead.</p>

<p>(A constant 'commission' cost is also unrealistic; a percentage makes more sense.)</p>
",""
"7783724","2","7782909","<p>Maybe translate it into a classical planning problem (using PDDL syntax). Then you can try out some planners that are freely available.</p>

<p>E.g. try <a href=""http://www.loria.fr/~hoffmanj/ff.html"" rel=""nofollow"">Fast Forward</a>.</p>
",""
"7783904","2","7782909","<p>Studying <a href=""http://en.wikipedia.org/wiki/A%2a_search_algorithm"" rel=""nofollow"">Wikipedia</a> may be better than studying the actual source code. A* is written out pretty clearly there. But that feels like cheating, doesn't it?</p>

<p>As all good ideas, A* is actually pretty obvious in retrospective. It's fun trying to work it through, and there are a few nice insights along the way. Here's how you get to it:</p>

<p>Write the brute-force solver. You'll need much of what you write in the more advanced versions: a game state, and a description of getting from one state to another. You'll also end up removing duplicate states. You should have a queue of some sort for states to be considered, a set of states you've already done, and structure to hold the best solution(s) found so far. And a method that takes a state from the queue and generates a state's „neighbor“ states (ones reachable from it). That's the basic structure of classical AI algorithms. Note that you're technically „generating“ or „exploring“ a huge graph here.</p>

<p>After that, add a simple pruning algorithm: if a state has only one block of some color left, there's no need to consider it further. See if you can come up with other pruning algorithms (i.e. ones that mark a state as „unsolvable“). A good pruning algorithm will eliminate lots of pointless states, thus justifying the time it takes to run the pruning itself.</p>

<p>Then, introduce a heuristic score: rank each state with a number that tells you how „good“ the state looks – about how much more solving will it take. Make your queue a <a href=""http://docs.python.org/library/heapq.html"" rel=""nofollow"">priority queue</a>. This will allow you to consider the „best looking“ states first, so the program should come up with <em>a</em> solution faster. But, the first solution found may not actually be the best, so to be sure that you find the best one, you still need to run the whole program.</p>

<p>Store the minimum cost (number of moves) that you took to get to each state. Remember to update it if you find a better path. Take the states with the lowest sum of their cost and their heuristic score first; those will more likely lead to a better solution.</p>

<p>And here comes A*. You need to modify your heuristic function so that it <em>doesn't overestimate</em> the distance to the goal, i.e. it can be lower than the number of moves you will actually need, but not higher. Then, note that if you found a solution, its heuristic score will be 0. And, any state where the sum of its cost and heuristic is more than the cost of a solution can't lead to a better solution. So, you can prune that state. But since you're taking the states in order, once you hit that threshold you can just stop and return, since all other states in the queue would be pruned as well.</p>

<p>All that's left now is perfecting your heuristic: it can never overestimate, but the better estimate it gives the less time A* will take. The better the heuristic, the better your results. Take care that the heuristic doesn't take so much time to complete – you wouldn't want, say, generating the solution by brute force, even though it would give the perfect answer :)</p>

<p>Wikipedia has some more discussion and possible improvements, if you get this far. But the best improvements you can make at this point will likely come from improving the heuristic function.</p>
",""
"7784387","2","7781792","<p>I have made good experiences using:</p>

<ul>
<li>time.sleep(seconds)</li>
<li>webdriver.Firefox.implicitly_wait(seconds)</li>
</ul>

<p>The first one is pretty obvious - just wait a few seconds for some stuff.</p>

<p>For all my Selenium Scripts the sleep() with a few seconds (range from 1 to 3) works when I run them on my laptop, but on my Server the time to wait has a wider range, so I use implicitly_wait() too. I usually use implicitly_wait(30), which is really enough.</p>

<blockquote>
  <p>An implicit wait is to tell WebDriver to poll the DOM for a certain amount of time when trying to find an element or elements if they are not immediately available. The default setting is 0. Once set, the implicit wait is set for the life of the WebDriver object instance.</p>
</blockquote>
",""
"7784814","2","7782425","<p>It sounds like you're trying to create a GUI that acts procedurally, which won't work. GUIs aren't procedural, their code doesn't run linearly where functions call callbacks which return values. What you're asking isn't unique to tkinter. This is the nature of event based GUI programming -- callbacks can't return anything because the caller is an event rather than a function.</p>

<p>Roughly speaking, you <em>must</em> use a global object of some sort to store your data. Typically this is called the ""Model"". It can be a global variable, or it might be a database, or it can be an object of some sort. In any case, it must exist ""globally""; that is, it must be accessible to the whole GUI. </p>

<p>Often, this access is provided by a third component called a ""Controller"". It is the interface between the GUI (the ""View"") and the data (the ""Model""). These three components make up what is called the model-view-controller pattern, or MVC. </p>

<p>The model, view and controller don't have to be three different objects. Often, the GUI and the controller are the same object. For small programs this works quite well -- the GUI components talk directly to your data model. </p>

<p>For example, you could have a class that represents a window which inherits from Tkinter.Toplevel. It can have an attribute that represents the data being edited. When the user selects ""New"" from a main window, it does something like <code>self.tileset = TileSet(filename)</code>.  That is, it sets the attribute named <code>tileset</code> of the GUI object named <code>self</code> to be an instance of the <code>TileSet</code> class specific to the given filename. Later functions that manipulate the data use <code>self.tileset</code> to access the object. For functions that live outside the main window object (for example, a ""save all"" function from the main window) you can either pass this object as an argument, or use the window object as the controller, asking it to do something to its tileset. </p>

<p>Here's a brief example:</p>

<pre><code>import Tkinter as tk
import tkFileDialog
import datetime

class SampleApp(tk.Tk):
    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)
        self.windows = []
        menubar = tk.Menu(self)
        self.configure(menu=menubar)
        fileMenu = tk.Menu(self)
        fileMenu.add_command(label=""New..."", command=self.new_window)
        fileMenu.add_command(label=""Save All"", command=self.save_all)
        menubar.add_cascade(label=""Window"", menu=fileMenu)
        label = tk.Label(self, text=""Select 'New' from the window menu"")
        label.pack(padx=20, pady=40)

    def save_all(self):
        # ask each window object, which is acting both as 
        # the view and controller, to save it's data
        for window in self.windows:
            window.save()

    def new_window(self):
        filename = tkFileDialog.askopenfilename()
        if filename is not None:
            self.windows.append(TileWindow(self, filename))

class TileWindow(tk.Toplevel):
    def __init__(self, master, filename):
        tk.Toplevel.__init__(self, master)
        self.title(""%s - Tile Editor"" % filename)
        self.filename = filename
        # create an instance of a TileSet; all other
        # methods in this class can reference this
        # tile set
        self.tileset = TileSet(filename)
        label = tk.Label(self, text=""My filename is %s"" % filename)
        label.pack(padx=20, pady=40)
        self.status = tk.Label(self, text="""", anchor=""w"")
        self.status.pack(side=""bottom"", fill=""x"")

    def save(self):
        # this method acts as a controller for the data,
        # allowing other objects to request that the 
        # data be saved
        now = datetime.datetime.now()
        self.status.configure(text=""saved %s"" % str(now))

class TileSet(object):
    def __init__(self, filename):
        self.data = ""...""

if __name__ == ""__main__"":
    app = SampleApp()
    app.mainloop()
</code></pre>
",""
"7785441","2","7781448","<p>Use a dictionary to map the integer values to the strings they represent:</p>

<pre><code>choices = {
    1: ""not at all"",
    2: ""somewhat"",
    3: ""moderately"",
    4: ""a lot""
}
</code></pre>

<p>You can then use this to create the UI:</p>

<pre><code>for (i in sorted(choices.keys())):
    label = ""%s - %s"" % (i, choices[i])
    rb=Radiobutton(master, text=label, variable=v, value=i)
    rb.pack(side=TOP, anchor=""w"")
</code></pre>

<p>When you need to fetch the values, obviously it's just a simple dictionary lookup using the value of the variable as the key.</p>
",""
"7786463","2","7782485","<p>The reason the <code>disabled</code> state doesn't seem to work on the Mac is because it turns off the binding that gives focus to the widget. Without focus, the highlighting on a Mac doesn't show up. If you set the state to <code>disabled</code> but then assign a binding to <code>&lt;ButtonPress-1&gt;</code> to explicitly set focus to the disabled text widget, you can then select and copy text and the highlighting will show.</p>

<p>As for the cursor disappearing... arguably, that's what's supposed to happen. The cursor tells the user ""this is where text will get inserted"". Since no text will get inserted, having that visual clue would be confusing to the user. What you could do instead, if it was really important, is to insert a small image wherever they click to simulate the cursor. </p>

<p>To answer your question about whether the widget actually uses the <code>insert</code> and <code>delete</code> methods:  the methods on the actual underlying widget are what the default bindings use, so overriding them in a subclass has no effect. You would need to redo all the default bindings for that to work. It's doable, but a lot of work. </p>

<p>Unfortunately, this is one area where programming in Tcl really shines, because you <em>can</em> simply disable the <code>insert</code> and <code>delete</code> commands of the widget. Of course, you can do that directly in Tkinter also since ultimately it runs tcl code to do everything, but that would involve writing some tcl code which is not a very good solution from the perspective of a Python coder.</p>

<p>I think the best solution is to use the disabled state, then add in just enough bindings to do what you want. </p>

<p>Here's a simple example that works by explicitly setting focus on a mouse button click. With this code I'm able to click and swipe to select a region, or double- or triple-click to select words and lines:</p>

<pre><code>import Tkinter as tk

class SampleApp(tk.Tk):
    def __init__(self, *args, **kwargs):
        tk.Tk.__init__(self, *args, **kwargs)
        self.text = tk.Text(width=40, height=20)
        self.text.bind(""&lt;1&gt;"", self.set_focus)
        self.text.insert(""end"", ""\n"".join(dir(tk.Tk)))
        self.text.configure(state=""disabled"")
        self.text.pack(fill=""both"", expand=True)

    def set_focus(self, event):
        '''Explicitly set focus, so user can select and copy text'''
        self.text.focus_set()

if __name__ == ""__main__"":
    app = SampleApp()
    app.mainloop()
</code></pre>
",""
"7787611","2","7781000","<p>You could use os.mkdir(stu_dir_full)...</p>

<p>But the problem with your subprocess.call line might be that subprocess.call is expecting a list not a string. Try this:</p>

<pre><code>retcode = call([""mkdir"",dir_full], shell=True)
</code></pre>
",""
"7787698","2","7782419","<p>If you haven't already, check out the <code>multiprocessing</code> module. Also, while convenient, it isn't necessary to use <code>itertools.combinations()</code> to get a set of all unique 2-combinations. If you can accept the use of global variables, you could use <code>multiprocessing.Pool.map()</code> to farm it out to a pool of processes. For example:</p>

<pre><code>from multiprocessing import Pool

def tally(n):
    return [len(s[n] &amp; t) for t in s[n+1:]]

p=Pool()
for resultset in p.map(tally, xrange(len(s)), chunksize=1):
    for result in resultset:
        print result
</code></pre>

<p><code>tally()</code> performs a set intersection on a set in <code>l</code> at position <code>n</code> with every other subsequent position in <code>l</code> in a single process. <code>p.map()</code> parallelizes that task for every position in <code>l</code> using as many processes as is returned in <code>cpu_count()</code>.</p>

<p>There's a full working example at <a href=""https://gist.github.com/c576fd7f48be5f66deaa"" rel=""nofollow"">https://gist.github.com/c576fd7f48be5f66deaa</a> and for large data sets, I do get a significant improvement in performance on a quad-core machine compared to running just the built-in <code>map()</code> function on a single process.</p>
",""
"7788975","2","7769415","<p>You can't do this - as you observed, you're dealing with an <code>Entity</code>, not an instance of your model. The only option is to take the code that you want to execute it, copy-and-paste it, and modify it to work with an entity instead. </p>
",""
"7789483","2","7782233","<p>I believe Python does private attribute mangling during compilation...  in particular, it occurs at the stage where it has just parsed the source into an abstract syntax tree, and is rendering it to byte code. This is the only time during execution that the VM knows the name of the class within whose (lexical) scope the function is defined. It then mangles psuedo-private attributes and variables, and leaves everything else unchanged. This has a couple of implications...</p>

<ul>
<li><p>String constants in particular are not mangled, which is why your <code>setattr(self, ""__X"", x)</code> is being left alone. </p></li>
<li><p>Since mangling relies on the lexical scope of the function within the source, functions defined outside of the class and then ""inserted"" do not have any mangling done, since the information about the class they ""belong to"" was not known at compile-time.</p></li>
<li><p>As far as I know, there isn't an easy way to determine (at runtime) what class a function was defined in...  At least not without a lot of <code>inspect</code> calls that rely on source reflection to compare line numbers between the function and class sources.  Even that approach isn't 100% reliable, there are border cases that can cause erroneous results.</p></li>
<li><p>The process is actually rather indelicate about the mangling - if you try to access the <code>__X</code> attribute on an object that <em>isn't</em> an instance of the class the function is lexically defined within, it'll still mangle it for that class... letting you store private class attrs in instances of other objects! (I'd almost argue this last point is a feature, not a bug)</p></li>
</ul>

<p>So the variable mangling is going to have to be done manually, so that you calculate what the mangled attr should be in order to call <code>setattr</code>. </p>

<hr>

<p>Regarding the mangling itself, it's done by the <a href=""https://hg.python.org/cpython/file/a10d37f04569/Python/compile.c#l211"" rel=""nofollow"">_Py_Mangle</a> function, which uses the following logic: </p>

<ul>
<li><code>__X</code> gets an underscore and the class name prepended. E.g. if it's <code>Test</code>, the mangled attr is <code>_Test__X</code>. </li>
<li>The only exception is if the class name begins with any underscores, these are stripped off. E.g. if the class is <code>__Test</code>, the mangled attr is still <code>_Test__X</code>.</li>
<li>Trailing underscores in a class name are <em>not</em> stripped. </li>
</ul>

<p>To wrap this all up in a function...</p>

<pre><code>def mangle_attr(source, attr):
    # return public attrs unchanged
    if not attr.startswith(""__"") or attr.endswith(""__"") or '.' in attr:
        return attr
    # if source is an object, get the class
    if not hasattr(source, ""__bases__""):
        source = source.__class__
    # mangle attr
    return ""_%s%s"" % (source.__name__.lstrip(""_""), attr)
</code></pre>

<p>I know this somewhat ""hardcodes"" the name mangling, but it is at least isolated to a single function. It can then be used to mangle strings for <code>setattr</code>:</p>

<pre><code># you should then be able to use this w/in the code...
setattr(self, mangle_attr(self, ""__X""), value)

# note that would set the private attr for type(self),
# if you wanted to set the private attr of a specific class,
# you'd have to choose it explicitly...
setattr(self, mangle_attr(somecls, ""__X""), value)
</code></pre>

<hr>

<p>Alternately, the following <code>mangle_attr</code> implementation uses an eval so that it always uses Python's current mangling logic (though I don't think the logic laid out above has ever changed)...</p>

<pre><code>_mangle_template = """"""
class {cls}:
    @staticmethod
    def mangle():
        {attr} = 1
cls = {cls}
""""""

def mangle_attr(source, attr):
    # if source is an object, get the class
    if not hasattr(source, ""__bases__""):
        source = source.__class__
    # mangle attr
    tmp = {}
    code = _mangle_template.format(cls=source.__name__, attr=attr)
    eval(compile(code, '', 'exec'), {}, tmp); 
    return tmp['cls'].mangle.__code__.co_varnames[0]

# NOTE: the '__code__' attr above needs to be 'func_code' for python 2.5 and older
</code></pre>
",""
"7789637","2","7782233","<p>Addressing this:</p>

<blockquote>
  <p>What does python do “under the hood” when it encounters a double
  underscore (<code>self.__x</code>) attribute being set? Is there a magic function
  that is used to do the mangling?</p>
</blockquote>

<p>AFAIK, it's basically special cased in the compiler. So once it's in bytecode, the name is already mangled; the interpreter never sees the unmangled name at all, and had no idea of any special handling needed. This is why references through <code>setattr</code>, <code>exec</code>, or by looking up a string in <code>__dict__</code> don't work; the <em>compiler</em> sees all of those as strings, and doesn't know that they have anything to do with attribute access, so it passes them through unchanged. The <em>interpreter</em> knows nothing of the name mangling, so it just uses them directly.</p>

<p>The times I've needed to get around this, I've just manually done the same name mangling, hacky as that is. I've found that using these 'private' names is generally a bad idea, unless it's a case where you know you need them for their intended purpose: to allow an inheritance hierarchy of classes to all use the same attribute name but have a copy per class. Peppering attribute names with double underscores just because they're supposed to be private implementation details seems to cause more harm than benefit; I've taken to just using a single underscore as a hint that external code shouldn't be touching it.</p>
",""
"7790860","2","7781792","<p>Use <code>Wait Until Page Contains Element</code> with the proper XPath locator. For example, given the following HTML:</p>

<pre><code>&lt;body&gt;
  &lt;div id=""myDiv""&gt;
    &lt;table class=""myTable""&gt;
      &lt;!-- implementation --&gt;
    &lt;/table&gt;
  &lt;/div&gt;
&lt;/body&gt;
</code></pre>

<p>... you can enter the following keyword:</p>

<pre><code>Wait Until Page Contains Element  //table[@class='myTable']  5 seconds
</code></pre>

<p>Unless I missed something, there is no need to create a new function for this.</p>
",""
"7791105","2","7781204","<p>It complains about the (uppercase) <code>NAME</code> field, and judging by the error message's format, it is the query that triggers it. I can't really tell from your code, but at some point I think you execute the equivalent of the following:</p>

<pre><code>Group.objects.filter(NAME='some_value')
</code></pre>

<p>If the Group model (which you didn't post, so this is an educated guess) contains a lowercase <code>name</code> field, the above query will generate the error you posted as it tries to access the uppercase <code>NAME</code> field.</p>

<p>So I guess it boils down to: what does the final query look like? For getting information on that, danihp's comment already provided a good breakdown for how to determine this.</p>
",""
"7794516","2","7782046","<p>Ok. It took some delving into the <code>werkzeug.routing</code> and <code>flask.helpers.url_for</code> code, but I've figured out. You just change the <code>endpoint</code> for the route (in other words, you <strong>name</strong> your route)</p>

<pre><code>@app.route(""/canonical/path/"", endpoint=""foo-canonical"")
@app.route(""/alternate/path/"")
def foo():
    return ""hi!""

@app.route(""/wheee"")
def bar():
    return ""canonical path is %s, alternative is %s"" % (url_for(""foo-canonical""), url_for(""foo""))
</code></pre>

<p>will produce</p>

<blockquote>
  <p>canonical path is /canonical/path/, alternative is /alternate/path/</p>
</blockquote>

<p>There is a drawback of this approach. Flask always binds the last defined route to the endpoint defined implicitly (<code>foo</code> in your code). Guess what happens if you redefine the endpoint? All your <code>url_for('old_endpoint')</code> will throw <code>werkzeug.routing.BuildError</code>. So, I guess the right solution for the whole issue is defining canonical path the last and <em>name</em> alternative:</p>

<pre><code>"""""" 
   since url_for('foo') will be used for canonical path
   we don't have other options rather then defining an endpoint for
   alternative path, so we can use it with url_for
""""""
@app.route('/alternative/path', endpoint='foo-alternative')
"""""" 
   we dont wanna mess with the endpoint here - 
   we want url_for('foo') to be pointing to the canonical path
""""""
@app.route('/canonical/path') 
def foo():
    pass

@app.route('/wheee')
def bar():
    return ""canonical path is %s, alternative is %s"" % (url_for(""foo""), url_for(""foo-alternative""))
</code></pre>
",""
"7796046","2","7782524","<p>You may define Excel functions, not by starting with <code>sub</code> but with <code>function</code>:</p>

<pre><code>Function Area(Length As Double, Optional Width As Variant)
    If IsMissing(Width) Then
        Area = Length * Length
    Else
        Area = Length * Width
    End If
End Function
</code></pre>

<p>This should return something. This something is the content of the variable named after the function (here <code>Area</code>).</p>
",""
"7796248","1","","<p>For example:</p>

<pre><code>test = label.find('image').attrib['url'] 
</code></pre>

<p>How to get parent element of image ?</p>
","<python><lxml>"
"7796271","2","7796248","<p>You can use the <code>getparent()</code> method:</p>

<pre><code>image_parent = label.find('image').getparent()
</code></pre>
",""
"7796440","1","","<p>i have looked at examples :</p>

<ol>
<li><a href=""http://pywebsvcs.svn.sourceforge.net/viewvc/pywebsvcs/trunk/wstools/"">http://pywebsvcs.svn.sourceforge.net/viewvc/pywebsvcs/trunk/wstools/</a></li>
<li><a href=""http://pywebsvcs.sourceforge.net/cookbook.pdf"">http://pywebsvcs.sourceforge.net/cookbook.pdf</a></li>
</ol>

<p>and googled, but could not find a single usable example. </p>
","<python><soap><zsi>"
"7796596","1","","<p>I have a strange problem regarding lucene and apache. I am using lucene for full text search and for a search I need to call:</p>

<p><code>initVM()
</code></p>

<p>I found out that after this call nothing gets executed. So this all happens for a http request handled through apache. </p>

<p>Now when I try to do this manually in the interactive command prompt it works fine.</p>

<p>These are some relavent apache configuration lines below:</p>

<pre><code>&lt;IfModule prefork.c&gt;
StartServers       8
MinSpareServers    5
MaxSpareServers   20
ServerLimit      150000
MaxClients       150000
MaxRequestsPerChild  40000
&lt;/IfModule&gt;


&lt;IfModule worker.c&gt;
StartServers         8
MaxClients         1200
MinSpareThreads     25
MaxSpareThreads     75
ThreadsPerChild     45
MaxRequestsPerChild  15
&lt;/IfModule&gt;
</code></pre>

<p><em><strong>edit</em></strong></p>

<p>when executing it manually it creates 9 threads I think:</p>

<pre><code>├─sshd───sshd───sshd───bash─┬─pstree
│                           └─python───9*[{python}]
</code></pre>

<p>thanks in advance!</p>
","<python><lucene><apache><pylucene>"
"7796739","2","7796596","<p>Lucene is really meant to be for client applications. For a webapp use, you should really use <a href=""http://lucene.apache.org/solr/"" rel=""nofollow"">solr</a> which is installed in a separate web container. Hope this helps.  </p>
",""
"7796752","1","","<p>I have just installed the Django debug toolbar. It was slightly fiddly and although it is working I wanted to check if this is the correct way. Here are the 4 steps that I need to achieve success:</p>

<ol>
<li>easy_install django_debug_toolbar</li>
<li>add 'debug_toolbar.middleware.DebugToolbarMiddleware', to the end of my middleware classes in my project settings</li>
<li>edit INTERNAL_IPS = ('127.0.0.1') in my django.global_settings.py</li>
<li>then I added ""/usr/local/lib/python2.7/dist-packages/django_debug_toolbar-0.8.5-py2.7.egg/debug_toolbar/templates"" to my TEMPLATE_DIRS in project settings.</li>
</ol>

<p>This was largely trial and error so I'm not sure this is the way to go. I am oarticoluarly unsure if step 4 is necessary...</p>

<p>Any input would be much appreciated</p>
","<python><django><django-debug-toolbar>"
"7796775","1","","<p>I have a python program that accesses a couchDB database, creates new documents and updates existing ones.
For a given database, db, and document, Doc, I try to take care and reload the document before each modification:</p>

<pre><code>somedoc = Doc.load(db,id)
</code></pre>

<p>before updating via</p>

<pre><code>doc.store(db)
</code></pre>

<p>As far as I am aware this shouldn't be necessary, as doc.rev should be updated each time store is called.  BUT ... I am getting conflict messages:</p>

<pre><code>couchdb.http.ResourceConflict: (u'conflict', u'Document update conflict.')
</code></pre>

<p>Is there any way of just forcing no update and a warning message rather than having a fatal error upon these conflicts.  Or, better, is there some way of quickly checking the document revision number - the db is being accessed by two scripts that both update, but both are careful to load each doc, make modifications quickly and update the db in as little time as possible to minimise the chance of a conflict....</p>

<p>Cheers</p>
","<python><database><couchdb>"
"7796816","1","","<p>I have a long running background process that parses a few hundred thousand lines of a CSV. I noticed that the process has a memory leak that occasionally causes the task to hit its soft memory limit and terminate. I have narrowed the section of code down to the following chunk of code:</p>

<pre><code>class BaseModel(db.Model):
    _keyNamespace = 'MyApp.Models'

    @classmethod
    def get_by_item_id(cls, id):
        key = ""%s_%d"" % (cls._keyNamespace, id)
        item = CacheStrategy.get(key)
        if not item:
            query = cls.gql(""WHERE Id = :1"", id)
            item = query.get()
            del query

        return item
</code></pre>

<p>I've cut this down to the bare bones but it is still causing Query objects to remain in memory. A sample GC reference dump is included at the end of the comment showing the Query and Query_Filter counts increase by 200 after every 200 order batch step. If i get rid of the query call, this of course goes away.</p>

<p>My question is, <strong><em>WHY</em></strong> is this leaking Query references and how do I get it to honour the del and drop the query reference?</p>

<p>I've tried making this an instance method (no difference). Reference count trace below:</p>

<pre><code>INFO     2011-10-17 16:29:39,158 orderparser.py:151] Putting a 200 unit batch of orders, 0.335000 seconds from start
DEBUG    2011-10-17 16:29:40,315 memleaker.py:20] Top Mem Leaks
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]     356306 Property
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]     356305 PropertyValue
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]      74410 Path
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]      74408 Path_Element
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]      45127 PropertyValue_ReferenceValue
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]      45127 PropertyValue_ReferenceValuePathElement
DEBUG    2011-10-17 16:29:40,334 memleaker.py:22]      43822 Reference
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]      30595 EntityProto
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]        320 ProtocolMessage
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]        217 Query
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]        209 Query_Filter
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]         55 NOT_PROVIDED
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]         34 Index_Property
DEBUG    2011-10-17 16:29:40,335 memleaker.py:22]         28 ExtendableProtocolMessage
DEBUG    2011-10-17 16:29:40,336 memleaker.py:22]         18 CompositeIndex
INFO     2011-10-17 16:29:40,644 orderparser.py:151] Putting a 200 unit batch of orders, 1.821000 seconds from start
DEBUG    2011-10-17 16:29:41,930 memleaker.py:20] Top Mem Leaks
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]     356506 Property
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]     356505 PropertyValue
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]      74410 Path
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]      74408 Path_Element
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]      45127 PropertyValue_ReferenceValue
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]      45127 PropertyValue_ReferenceValuePathElement
DEBUG    2011-10-17 16:29:41,948 memleaker.py:22]      43822 Reference
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]      30595 EntityProto
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]        417 Query
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]        409 Query_Filter
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]        320 ProtocolMessage
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]         55 NOT_PROVIDED
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]         34 Index_Property
DEBUG    2011-10-17 16:29:41,951 memleaker.py:22]         28 ExtendableProtocolMessage
DEBUG    2011-10-17 16:29:41,953 memleaker.py:22]         18 CompositeIndex
INFO     2011-10-17 16:29:42,276 orderparser.py:151] Putting a 200 unit batch of orders, 3.450000 seconds from start
DEBUG    2011-10-17 16:29:43,565 memleaker.py:20] Top Mem Leaks
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]     356706 Property
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]     356705 PropertyValue
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]      74410 Path
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]      74408 Path_Element
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]      45127 PropertyValue_ReferenceValue
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]      45127 PropertyValue_ReferenceValuePathElement
DEBUG    2011-10-17 16:29:43,585 memleaker.py:22]      43822 Reference
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]      30595 EntityProto
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]        617 Query
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]        609 Query_Filter
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]        320 ProtocolMessage
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]         55 NOT_PROVIDED
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]         34 Index_Property
DEBUG    2011-10-17 16:29:43,586 memleaker.py:22]         28 ExtendableProtocolMessage
DEBUG    2011-10-17 16:29:43,588 memleaker.py:22]         18 CompositeIndex
</code></pre>
","<python><google-app-engine><memory-leaks><gql>"
"7797004","1","","<p>If I have, for example, the below regex string:  </p>

<pre><code>'^/abc/(?P&lt;some_int&gt;\d{3})/\d{0,2}/$'  
</code></pre>

<p>Is there an easy way to determine when a group is a number/int?  </p>

<hr>

<p>I know that it is an int, but say this needed to be processed somewhere else and it needed to be deduced from just the match object.</p>
","<python><regex>"
"7797038","2","7797004","<p>You are matching it with <code>\d{3}</code> so it will match only if it is a number with three digits ( including leading zeroes)</p>
",""
"7797050","2","7797004","<pre><code>m.group(WHICHEVER_YOU_WANT).isdigit()
</code></pre>
",""
"7797145","1","","<p>I created a python script to a while to retrieve all the local users of windows machines on my network. I used the win32net library. I now need to do this for Mac and Linux machines. I have have been search for a while now and still have nothing but a long list of Mac and Linux user groups that meet around my house. Does anyone have a suggested library to look into?  </p>
","<python><linux><osx><network-programming><user>"
"7797164","1","","<p>Under my debugger:</p>

<pre><code>logging.info(""TZ = %s -- It is now: %s"", os.environ['TZ'], time.ctime())
TZ = UTC -- It is now: Mon Oct 17 12:10:44 2011
</code></pre>

<p>Under App Engine Launcher:</p>

<pre><code>logging.info(""TZ = %s -- It is now: %s"", os.environ['TZ'], time.ctime())
TZ = UTC -- It is now: Mon Oct 17 17:09:24 2011
</code></pre>

<p>So what do I have setup wrong?  This affects not just time.ctime(), but all the data dropped into the debug database.  I'd like the debugger to run in the same ""timeframe"" as the app engine launcher because of timestamps in the database, and the debugger is slower than the launcher, so I don't want to use it all the time.</p>
","<python><google-app-engine>"
"7797174","1","","<p>I am trying to read in from a file that contains city names, an odometer reading, and how much fuel is left. The contents of the text file are:</p>

<pre><code>Kennewick 97840.4 40.0&lt;br&gt;
Benton_City 97861.3 37.6&lt;br&gt;
Prosser 97878.2 35.9&lt;br&gt;
Grandview 97886.5 35.0&lt;br&gt;
Sunnyside 97894.6 34.1&lt;br&gt;
Granger 97904.6 33.1&lt;br&gt;
Toppenish 97913.0 32.2&lt;br&gt;
Wapato 97921.7 31.3&lt;br&gt;
Union_Gap 97931.6 30.4&lt;br&gt;
Yakima 97935.2 30.0&lt;br&gt;
Selah 97939.4 29.6&lt;br&gt;
Ellensburg 97972.7 26.0&lt;br&gt;
Thorp 97981.1 25.1&lt;br&gt;
Rosyln 98002.8 22.6&lt;br&gt;
Easton 98016.1 21.1&lt;br&gt;
North_Bend 98058.1 16.9&lt;br&gt;
Preston 98067.7 16.0&lt;br&gt;
Issaquah 98073.6 15.4&lt;br&gt;
East_Gate 98082.9 14.4&lt;br&gt;
Mercer_Island 98088.5 13.7&lt;br&gt;
Seattle 98095.4 13.0&lt;br&gt;
</code></pre>

<p>Part of the assignment is subtracting the current read-through from the last read-through (both of those values stored in the variable miles).</p>

<pre><code>def BusRoute():
    path = ""C:\\""
    ext = "".txt""

    lines = """"
    stopname = """"
    miles = 0
    prevmiles = 0
    milest = 0
    fuel = 0.0
    mpg = 0.0
    i = 0

    filename = input(""Please enter the file name. The file path [C:\...] and extension [*.txt] is not required: "")

    inFile = open(path + filename + ext, ""r"")

    for lines in inFile:
        stopname, miles, fuel = lines.split("" "")

        miles = float(miles)
        fuel = float(fuel)

        prevmiles = miles

        milest = miles - prevmiles

        miles += 1

        print(""Since last stop:"", float(milest), ""miles"")
</code></pre>

<p>My problem is, I am trying to store the last-read value of <code>miles</code> in a variable called <code>prevmiles</code>, and then subtract <code>prevmiles</code> (the last mileage read) from the CURRENT reading of <code>miles</code>, but it keeps subtracting the current <code>miles</code> from the current <code>miles</code>, obviously making the value that I want printed out 0.0.</p>
","<python><file-io>"
"7797212","2","7797145","<p>I think your best bet is to use <strong>POSIX</strong> standard interface, e.g. <a href=""http://linux.die.net/man/1/getent"" rel=""nofollow"">getent</a> via <a href=""http://pypi.python.org/pypi/getent/0.1"" rel=""nofollow"">http://pypi.python.org/pypi/getent/0.1</a> package</p>

<p><code>getent.passwd()</code> should work pretty much analogous to <a href=""http://www.kernel.org/doc/man-pages/online/pages/man3/getpwent.3.html"" rel=""nofollow"">getpwent</a> system call.</p>

<p><strong>EDIT</strong>: If you are doing this remotely it probably means that you can't install python packages on the hosts, so you might just want to read the contents of <code>/etc/passwd</code> and parse it. Something like (assuming you have the <code>ssh</code> command in path and you have set up <a href=""https://hkn.eecs.berkeley.edu/~dhsu/ssh_public_key_howto.html"" rel=""nofollow"">public key authentication</a>):</p>

<pre><code>import subprocess
users = []
p = subprocess.Popen(['ssh','&lt;host name or ip address&gt;','cat /etc/passwd'], stdout=subprocess.PIPE)
passwd = p.stdout.readlines()
for line in passwd:
    fields = line.split(':')
    uid = int(fields[2])
    if uid &gt; 500 and uid &lt; 32328
         users.append(fields[0])
print users
</code></pre>
",""
"7797216","2","7797174","<p>You have </p>

<pre><code>prevmiles = miles

milest = miles - prevmiles
</code></pre>

<p>which guarantees that milest will be 0. Try just switching the order of those two lines.</p>
",""
"7797225","2","7797174","<p>You should just change the order of the operations. Do the substraction first and then assign a value to prevmiles.</p>
",""
"7797268","1","","<p>I have spread sheets of climate data for which, essentially, I need to transpose parts of rows into columns and vice versa. Unfortunately, the format is somewhat awkward. The data came to me with columns for year, month, number of days in the month, the type of climate data in the row, and then a successive 93 columns, each representing a daily value, succeeded and preceded by an associated flag (so 3 terms, a value and 2 flags, for each day of the month). Although months vary in length, the shorter months have been filled out with null values in the last few columns. What I want, for processing and modeling purposes, is a spreadsheet/.csv file with columns as follows:</p>

<p>year, month, day of month (i.e. a number 1 to 31), and then five columns representing the type of climate data (precip, snow, snow water, tmax, tmin). </p>

<p>If I could get columns with the appropriate flag values as well, that would be great, but it's not a priority. So, I've written the code below to unpack rows into lists (probably very inefficiently, but I'm new at this) representing year, month, type of climate variable, variable value, flag1 and flag2 based on the location in the row (corresponding to a day, 1 to 31):</p>

<pre><code>import matplotlib.mlab as mlab
from matplotlib.pyplot import figure, show
import numpy as np

import scipy
import csv

durham='C:\\Users\\LocalUser\\Desktop\\Drought Data\\My_Met_Data\\USHCN\\Durham.csv'

txt='met'
station='Durham'

output=station+""_""+txt+""_""+""new""+"".csv""

infile=open(durham,'r')
outfile=open(output,'w')
writer=csv.writer(outfile)

yr=[]; mon=[]; var=[]; unit=[]; flag1=   [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\
flag2=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\
value=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\
valu=[]; flg1=[]; flg2=[]; prcp=[]; snow=[]; snwd=[]; tmax=[]; tmin=[]; row=[]
for line in infile:
  stationid, variable, units, year, month, days, flag1[0], value[0], flag2[0], flag1[1], value[1], flag2[1], flag1[2], value[2], flag2[2],\
  flag1[3], value[3], flag2[3], flag1[4], value[4], flag2[4], flag1[5], value[5], flag2[5], flag1[6], value[6], flag2[6],\
  flag1[7], value[7], flag2[7], flag1[8], value[8], flag2[8] ,flag1[9], value[9], flag2[9], flag1[10], value[10], flag2[10],\
  flag1[11], value[11], flag2[11], flag1[12], value[12], flag2[12], flag1[13], value[13], flag2[13], flag1[14], value[14], flag2[14],\
  flag1[15], value[15], flag2[15], flag1[16], value[16], flag2[16], flag1[17], value[17], flag2[17], flag1[18], value[18], flag2[18],\
  flag1[19], value[19], flag2[19], flag1[20], value[20], flag2[20], flag1[21], value[21], flag2[21], flag1[22], value[22], flag2[22],\
  flag1[23], value[23], flag2[23], flag1[24], value[24], flag2[24], flag1[25], value[25], flag2[25], flag1[26], value[26], flag2[26],\
  flag1[27], value[27], flag2[27], flag1[28], value[28], flag2[28], flag1[29], value[29], flag2[29], flag1[30], value[30], flag2[30]=line.split(',')
  yr=[int(year)]
  mon=[int(month)]
  var=variable
  unit=units

  for yr in range(1926, 2003):
     for mon in range(1,13):
        if var=='PRCP':
          valu=[float(i) for i in value]
          flg1=[flag1]
          flg2=[flag2]
          for j in range(31):
            prcp.append(valu[j])

        elif var=='SNOW':
          valu=[float(i) for i in value]
          flg1=[flag1]
          flg2=[flag2]
          for j in range(31):
            snow.append(valu[j])

        elif var=='SNWD':
          valu=[float(i) for i in value]
          flg1=[flag1]
          flg2=[flag2]
          for j in range(31):
            snwd.append(valu[j])

        elif var=='TMAX':
          valu=[float(i) for i in value]
          flg1=[flag1]
          flg2=[flag2]
          for j in range(31):
            tmax.append(valu[j])

        elif var=='TMIN':
          valu=[float(i) for i in value]
          flg1=[flag1]
          flg2=[flag2]
          for j in range(31):
            tmin.append(valu[j])

            row=[yr, mon, j+1, prcp[j], snow[j], snwd[j], tmax[j], tmin[j]]
            writer.writerow(row)


infile.close()
outfile.close()
</code></pre>

<p>Now, leaving aside that I get a memory error when I run this, if I take away a few of the climate variables, then I get a do successfully get a .csv file in the <em>format</em> that I want. The problem is, that every single month, in every single year (1926-2002), reports the same climate data values-- that is, the data for the month of january 1926. The code is calling the data from the appropriate variable for the appropriate day, but repeating the same data month after month. I'm not sure where I've gone wrong with this, but any suggestions/help would be much appreciated.</p>
","<python><csv><row><transpose><iterable-unpacking>"
"7797269","1","","<p>I need to access the process' environment block in a platform-independent manner.</p>

<p>The python <a href=""http://docs.python.org/library/os.html"" rel=""nofollow"">os module docs</a> don't specify anything about case-sensitivity of the <code>os.environ</code> / <code>os.getenv</code>.  Experimenting on my ubuntu and win7 dev box's, I see that os.environ is case sensitive on linux but not on windows (This mirrors the behavior of <code>set</code> on both platforms)</p>

<p>Since dict's are obviously case-senstive for string keys, it appears that the value returned by <code>os.environ</code> is only <em>duck-typed</em> as a dict...</p>

<p>Question:
<strong>Where/How should I be able to find the definitive answer</strong> on this behavior?  I would rather have a real answer than just empirically determine it :)</p>

<p>Alternatively, is os.getenv(...) a better api to use? why?</p>

<p>Thanks!</p>
","<python>"
"7797329","2","7797269","<p>When the documentation doesn't specify the behaviour and you want to discover the answer yourself, you can look in the source code. In this case you can get the source code for <code>os.py</code> online at <a href=""http://svn.python.org/"" rel=""nofollow"">http://svn.python.org/</a>:</p>

<ul>
<li><a href=""http://svn.python.org/projects/python/trunk/Lib/os.py"" rel=""nofollow""><code>os.py</code> (Python trunk)</a>.</li>
<li><a href=""http://svn.python.org/projects/python/branches/release27-maint/Lib/os.py"" rel=""nofollow""><code>os.py</code> (Python 2.7)</a>.</li>
</ul>

<p>The comments in the code say:</p>

<pre><code>elif name in ('os2', 'nt'):  # Where Env Var Names Must Be UPPERCASE
    # But we store them as upper case
    # ...
else:  # Where Env Var Names Can Be Mixed Case
    # ...
</code></pre>

<p>You can also see a difference in the implementations - <code>key.upper()</code> is used instead of <code>key</code> on Windows:</p>

<p>Linux:</p>

<pre><code>def __setitem__(self, key, item):
    putenv(key, item)
    self.data[key] = item
</code></pre>

<p>Windows:</p>

<pre><code>def __setitem__(self, key, item):
    putenv(key, item)
    self.data[key.upper()] = item
</code></pre>
",""
"7797352","2","7797269","<p>Platform independence often means getting worse of all platforms. So for a platform-independent manner you have assume that environment variables are case-sensitive but never try to rely on this (i.e. not create variables with same names in different case intentionally) but be able to handle it. Otherwise you may screw up on non-Windows.</p>

<p>As for what platforms are case-sensitive and what are not - simply. Windows is not case-sensitive, and Unix-like OSs are case sensitive, see:</p>

<ul>
<li><a href=""http://en.wikipedia.org/wiki/Environment_variable#Case_sensitive"" rel=""nofollow"">http://en.wikipedia.org/wiki/Environment_variable#Case_sensitive</a></li>
<li><a href=""http://en.wikipedia.org/wiki/Environment_variable#Case_insensitivity"" rel=""nofollow"">http://en.wikipedia.org/wiki/Environment_variable#Case_insensitivity</a></li>
</ul>

<p>For exotic operating systems you have to check its documentation.</p>

<p>Hope it helps.</p>
",""
"7797406","1","","<p>I'm attempting to instantiate a Properties object in JPype, and am encountering some difficulty. The commands below...</p>

<pre><code>props = JClass('java.util.Properties')
props.setProperty('foo','bar')
</code></pre>

<p>...return the following:</p>

<pre><code>RuntimeError: No matching overloads found. at src/native/common/jp_method.cpp:121
</code></pre>

<p>I've attempted various forms of the arguments, <code>str('foo')</code>, <code>JString('foo')</code>, <code>java.lang.String('foo')</code>, and nothing seems to work. Setting properties for other classes with this general approach in JPype works just fine (e.g., no problems with <code>java.lang.System.setProperty('foo','bar')</code>). </p>

<p>Any suggestions would be appreciated.</p>
","<java><python><properties>"
"7797429","1","","<p>I have a large python code with many modules and classes. I have a special class, whose single instance is needed everywhere throughout the code (it's a threaded application, and that instance of a class also holds Thread Local Storage, locks, etc). It's a bit uncomfortable to always ""populate"" that instance in every imported module. I know, using globals is not the best practice, but anyway: is there any ""import hook"" in python, so I can do with hooking on it to have my instance available in every modules without extra work? It should work for normal imports, ""from mod import ..."" too, and for <strong>import</strong> constructs too. If this is not possible, can you suggest a better solution? Certenly it's not fun to pass that instance to the constructors of every classes, etc ... Inheritance also does not help, since I have modules without classes, and also I need a single instance, not the class itself ...</p>

<pre><code>class master():
    def import_module(self, name):
        mod = __import__(name)
        mod.m = self
        return mod
[...]
m = master()
</code></pre>

<p>Currently I am thinking something like that: but then I have to use m.import_module() to import modules, then other modules will have instance of master class with name of ""m"" available, so I can use m.import_module() too, etc. But then I have to give up to use ""normal"" import statements, and I should write this:</p>

<pre><code>example_mod = m.module_import(""example_mod"")
</code></pre>

<p>instead of just this:</p>

<pre><code>import example_mod
</code></pre>

<p>(but for sure I can do with this too, to assign ""m"" to example_mod.m then)</p>
","<python><module><import>"
"7797442","1","","<p>How can I get <strong>currently running testcase name</strong>, while in the testsuite collection there are 16 testcases. Tests are executed sequentially (in the order of adding test to the testSuite collection). When I add all tests to testSuite collection I can preview this object but how can I get currently executing test while tests are running. Maybe some variable holds this information?</p>

<p><strong>example:</strong></p>

<pre class=""lang-python prettyprint-override""><code>def suite():
    testSuite= unittest.TestSuite()
    testSuite.addTest(FlightsTestCases('test_sel__reservation_one_way_wizzair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_wizzair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_round_wizzair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_tair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_round_tair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_wizzair_credit_card'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_tair_credit_card'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_round_wizzair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_wizzair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_easyjet_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_ryanair_transfer'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_round_ryanair_credit_card'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_tair_duplicated'))
    testSuite.addTest(FlightsTestCases('test_reservation_wrong_card_lowcost'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_tair_credit_card'))
    testSuite.addTest(FlightsTestCases('test_sel_reservation_one_way_tair_wrong_credit_card'))

    return testSuite

if __name__ == ""__main__"":
    result = unittest.TextTestRunner(verbosity=2).run(suite())
    sys.exit(not result.wasSuccessful())
</code></pre>

<p>Tests are executed using Selenium-RC framework.</p>
","<python><unit-testing><selenium>"
"7797561","2","7797429","<p>What's wrong with having each module import the needed object? Explicit is better than implicit.</p>
",""
"7797569","1","","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/7064936/is-there-any-reason-why-lvals-1-08-2011-throws-an-exception"">Is there any reason why lVals = [1, 08, 2011] throws an exception?</a>  </p>
</blockquote>



<p>I am defining a dictionary to map day numbers to their respective word. For some reason the following code raises a ""SyntaxError: invalid token"" and highlights ""08""</p>

<pre><code>days = {01:""first"", 02:""second"", 03:""third"", 04:""fourth"", 05:""fifth"", 06:""sixth"", 07:""seventh"", 08:""eighth"", 09:""nineth"", 10:""tenth"", 
    11:""eleventh"", 12:""twelvth"", 13:""thirteenth"", 14:""fourteenth"", 15:""fifteenth"", 16:""sixteenth"", 17:""seventeenth"", 18:""eighteenth"",
    19:""nineteenth"", 20:""twentieth"", 21:""twenty-first"", 22:""twenty-second"", 23:""twenty-third"", 24:""twenty-fourth"", 25:""twenty-fifth"",
    26:""twenty-sixth"", 27:""twenty-seventh"", 28:""twenty-eighth"", 29:""twenty-nineth"", 30:""thirtieth"", 31:""thirty-first""}
</code></pre>

<p>modifying the code so that 08 and 09 become 98 and 99 stops any errors, as in the code below:</p>

<pre><code>days = {01:""first"", 02:""second"", 03:""third"", 04:""fourth"", 05:""fifth"", 06:""sixth"", 07:""seventh"", 98:""eighth"", 99:""nineth"", 10:""tenth"", 
    11:""eleventh"", 12:""twelvth"", 13:""thirteenth"", 14:""fourteenth"", 15:""fifteenth"", 16:""sixteenth"", 17:""seventeenth"", 18:""eighteenth"",
    19:""nineteenth"", 20:""twentieth"", 21:""twenty-first"", 22:""twenty-second"", 23:""twenty-third"", 24:""twenty-fourth"", 25:""twenty-fifth"",
    26:""twenty-sixth"", 27:""twenty-seventh"", 28:""twenty-eighth"", 29:""twenty-nineth"", 30:""thirtieth"", 31:""thirty-first""}
</code></pre>

<p>and the output becomes:</p>

<pre><code>{1: 'first', 2: 'second', 3: 'third', 4: 'fourth', 5: 'fifth', 6: 'sixth', 7: 'seventh', 10: 'tenth', 11: 'eleventh', 12: 'twelvth', 13: 'thirteenth', 14: 'fourteenth', 15: 'fifteenth', 16: 'sixteenth', 17: 'seventeenth', 18: 'eighteenth', 19: 'nineteenth', 20: 'twentieth', 21: 'twenty-first', 22: 'twenty-second', 23: 'twenty-third', 24: 'twenty-fourth', 25: 'twenty-fifth', 26: 'twenty-sixth', 27: 'twenty-seventh', 28: 'twenty-eighth', 29: 'twenty-nineth', 30: 'thirtieth', 31: 'thirty-first', 98: 'eighth', 99: 'nineth'}
</code></pre>

<p>the previously erroneous keys have moved to the end of the dictionary.</p>

<p>Many thanks to the person who spots what is going on here,</p>

<p>James</p>
","<python><syntax><dictionary>"
"7797592","1","","<p>I'm trying to create a basic date-selector/calendar in wxPython. So far I've managed
to add all the necessary widgets to my grid, but I'm struggling to get them 
positioned properly. Although there are numerous things I don't fully understand, 
I'm getting particularly frustrated with the wx.SpinCtrl widget, which seems to be 
surrounded by a massive border despite the fact that none is specified. Can anyone
tell me how to remove this? I want the spin control to be just a couple of pixels 
away from the top of the frame, with the text 'February' the same number of pixels away
from the bottom of the control. I've tried all manner of approaches but none seem to
have any effect.</p>

<pre><code>import wx
import calendar

MONTH_NAME_AS_KEY = {""January"":1, ""February"":2, ""March"":3, ""April"":4, ""May"":5, ""June"":6,
                 ""July"":7, ""August"":8, ""September"":9, ""October"":10, ""November"":11,
                 ""December"":12}

def getMonthNumber(nameAsString):
    return MONTH_NAME_AS_KEY.get(nameAsString)


class Example(wx.Frame):

    def __init__(self, parent, title): 
        super(Example, self).__init__(parent, title=title,size=(300, 350))

        self.InitUI() 
        self.Centre() 
        self.Show()

    def InitUI(self):

        self.panel = wx.Panel(self)

        mainSizer = wx.BoxSizer(wx.VERTICAL)

        fgs = wx.FlexGridSizer(rows=2, cols=2)

        # fgs 1: blank space
        filler = wx.StaticText(self.panel, -1, label="""")
        fgs.Add(filler)

        # fgs 2: creating containers
        vSizer = wx.BoxSizer(wx.VERTICAL)
        yearNavigationBox = wx.BoxSizer(wx.HORIZONTAL)
        monthNavigationBox = wx.BoxSizer(wx.HORIZONTAL)

        # year navigation
        sc = wx.SpinCtrl(self.panel,-1, """", size=(70,70))
        sc.SetRange(1980,2060)
        sc.SetValue(2011)

        yearNavigationBox.Add(sc, wx.ALL, wx.EXPAND|wx.TOP)

        # month navigation
        monthDown = wx.StaticText(self.panel, -1, label=""&lt;"")    
        monthUp = wx.StaticText(self.panel, -1, label=""&gt;"")      


        monthName = wx.StaticText(self.panel, wx.ID_ANY, label=""February"")  

        monthNavigationBox.Add(monthDown)
        monthNavigationBox.Add(monthName)
        monthNavigationBox.Add(monthUp)

        vSizer.Add(yearNavigationBox)
        vSizer.Add(monthNavigationBox)

        fgs.Add(vSizer)

        # fgs 3: the date of the month writ large
        date = wx.StaticText(self.panel, wx.ID_ANY, label='31', style=wx.ALIGN_CENTER)
        dateFont = wx.Font(150, wx.DEFAULT, wx.NORMAL, wx.BOLD)
        date.SetFont(dateFont)

        fgs.Add(date)


        # fgs 4: the date grid
        dateSquareSizer = wx.GridSizer(rows=6, cols=7, hgap=1, vgap=6)

        dayFont = wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD)
        days = [""Mon"", ""Tue"", ""Wed"", ""Thu"", ""Fri"", ""Sat"", ""Sun""]
        for item in days:
            day = wx.StaticText(self.panel, wx.ID_ANY, label=item)
            day.SetFont(dayFont)
            dateSquareSizer.Add(day)    

        y = 2012
        m = getMonthNumber(monthName.GetLabel())    

        gridData = list(calendar.Calendar().itermonthdays(y, m))
        while len(gridData)&lt;43: gridData.append(0)

        for i in gridData:
            if i == 0: i=""""
            square = wx.StaticText(self.panel, wx.ID_ANY, label=str(i))
            square.SetFont(dayFont)
            dateSquareSizer.Add(square, wx.ID_ANY)      

        fgs.Add(dateSquareSizer)

        mainSizer.Add(fgs, wx.ALL, 2)

        self.panel.SetSizer(mainSizer)
        mainSizer.Fit(self)



if __name__ == '__main__':

    app = wx.App() 
    Example(None, title='') 
    app.MainLoop()
</code></pre>
","<python><layout><wxpython>"
"7797597","2","7797569","<p>The number <code>0</code> is a prefix on an integer literal indicating that it is an octal number in python.</p>

<p>...which as I accidentally omitted, and as @larsmans so kindly pointed out in his comment, limits the number to containing only the numerals <code>0</code> through <code>7</code>, excluding <code>8</code> and <code>9</code>.</p>

<p>Though, also of note, this is the syntax in Python 2.x - it was changed as of Python 3.0, ostensibly for the exact reason that you came here.  <a href=""http://www.python.org/dev/peps/pep-3127/#removal-of-old-octal-syntax"" rel=""nofollow"">PEP 3127</a> contains the details of the change.</p>

<p>The most relevant bit:</p>

<blockquote>
  <p>Almost all currently popular computer languages, including C/C++, Java, Perl, and JavaScript, treat a sequence of digits with a leading zero as an octal number. Proponents of treating these numbers as decimal instead have a very valid point -- [...] the entire non-computer world uses decimal numbers almost exclusively.</p>
</blockquote>
",""
"7797602","1","","<p>I am currently working on making a Python version of the game Connect Four. It is going to be pretty basic, using Tkinter for the interface. I think I have most of the code laid out and I'm not getting any errors, but it currently isn't creating the actual game board. Right now I only have it coded to make the first row of 7 (the gameboard is 7x6), but it's not showing up. Here is the code:</p>

<pre><code>from Tkinter import *

class cell:
    def __init__(self,cellNum,frame,game):
        self.Empty=PhotoImage(file='empty.gif')
        self.Black=PhotoImage(file='black.gif')
        self.Red=PhotoImage(file='red.gif')
        self.b = Button(frame,image=self.Empty,command=self.makeMove)
        self.frame = frame
        self.game = game
        self.num = cellNum

    def pack(self):
        self.gameSquare.pack()

    def makeMove(self):
        Player = self.game.Player
        if self.Player == 'Black':
            self.b.config(image=self.Black)
            num = self.num
            self.game.moves[Player].append(num)
            self.game.free.remove(num)
            self.Player = 'Red'
        else:
            self.b.config(image=self.Red)
            self.Player = 'Black'
        self.turninfo.config(text=Player+""'s Turn"")

    def restart(self):
        self.b.config(image=self.Empty)

class game:
    def __init__(self):
        self.win = Tk()
        self.win.title('Connect Four')
        self.win.config(bg=""blue"")
        self.cells=[]
        self.free = range(42)
        self.moves = { 'X' : [ ], 'O' : [ ] }
        self.Row1 = Frame(self.win)
        for i in range(7):
            self.cells.append(cell(i,self.Row1,self))
        self.Player = 'Black'

        self.titleFrame = Frame(self.win)
        self.title = Label(self.win,text=""Connect Four"",font=(200),fg='white', bg='blue')


        self.middleRow = Frame(self.win)
        self.turninfo = Label(self.middleRow,text=self.Player+""'s Turn"", font=(200),fg='white',bg='blue')

        self.bottomRow = Frame(self.win)
        self.quitbutton = Button(self.bottomRow, text=""Quit"", command=self.win.destroy, font=(200))
        self.playbutton = Button(self.bottomRow, text=""Play Again"", command=self.restart, font=(200))

        self.titleFrame.pack()
        self.title.pack()
        self.Row1.pack()
        self.turninfo.pack()
        self.middleRow.pack()
        self.bottomRow.pack()
        self.quitbutton.pack(side=""left"")
        self.playbutton.pack(side=""right"")
        self.win.mainloop()

    def restart(self):
        self.Player = 'Black'
        self.turninfo.config(text=self.Player+""'s Turn"")
        self.free = range(42)
        self.moves = {'Black' : [ ], 'Red' : [ ]}
        for c in self.cells:
            c.restart()

game = game()
</code></pre>

<p>Does anyone see any obvious errors causing the gameboard buttons not to show up? Or any errors in general? Thanks.</p>
","<python><tkinter><connect>"
"7797609","2","7797569","<p>In Python, prefixing a number with a <code>0</code> denotes it as being octal. So <code>08</code> and <code>09</code> give errors because the digits <code>8</code> and <code>9</code> don't exist in octal. Just get rid of the leading <code>0</code> and it'll work.</p>
",""
"7797618","2","7797569","<p>A number starting with 0 and containing only digits is interpreted in <a href=""http://en.wikipedia.org/wiki/Octal"" rel=""nofollow"">octal</a>. 8 and 9 are not valid octal numbers. If you replace 08 and 09 with 8 and 9, the code will work.</p>
",""
"7797633","1","","<p>In my present job a lot of ad-hoc text processing is required. I have been coding in C for 5+ years and have some exposure to STL of C++. I decided to try out Python, and so far the combination of google and stackoverflow is working well. But it would be great if I can follow some material (lecture/book) to formally learn the language, which will ensure that I haven't missed any important aspect of the same.</p>

<p>Having done some coding before, I don't want a beginner level book/lecture. Any suggestions?</p>

<p>I have used the ""Head First Java"" book, what do you people think of the ""Head First Python"" book?</p>
","<python>"
"7797669","2","7797429","<blockquote>
  <p>Certainly it's not fun to pass that instance to the constructors of
  every classes</p>
</blockquote>

<p>You don't have to do this. Set up your global class in a module like <code>config</code> and import it</p>

<pre><code># /myapp/enviroment/__init__.py

class ThatSingleInstanceClass: pass

# create the singleton object directly or have a function init the module
singleton = ThatSingleInstanceClass() 



# /myapp/somewhere.py

# all you need to use the object is importing it
from myapp.enviroment import singleton

class SomeClass:

    def __init__(self): # no need to pass that object
        print ""Always the same object:"", singleton
</code></pre>
",""
"7797686","1","","<p>I don't know how to do this:
I have a <code>list</code> of <code>list</code>s defined like this: </p>

<pre><code>list=[[day,type,expense],[...]];
</code></pre>

<p>day and expense are <code>int</code>, type is <code>string</code></p>

<p>I need to find the max expense by day. An example:</p>

<pre><code>list=[[1,'food',15],[4,'rent', 50],[1,'other',60],[8,'bills',40]]
</code></pre>

<p>I need to sum the elements that have the same day and find the day with the highest expenses.</p>

<p>The result should be: </p>

<pre>
day:1, total expenses:75
</pre>
","<python><list><sum><max>"
"7797697","2","7797633","<p><a href=""http://docs.python.org/tutorial/index.html"" rel=""nofollow"">The Python Tutorial</a> is actually an excellent reference. It isn't targeted at teaching you how to program, it's written to show you <em>how to python</em>, including the specifics of the language and neat tricks it includes (like <a href=""http://docs.python.org/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops"" rel=""nofollow"">else clauses on loops</a>).</p>
",""
"7797703","2","7797633","<p>I don't use python myself, but I have been meaning to learn and I have been repeatedly recommended <a href=""http://learnpythonthehardway.org/"" rel=""nofollow"">Learn Python the Hard Way</a>.  It's free in HTML but there are epub and physical copies you can order as well.</p>
",""
"7797710","2","7797633","<p><a href=""http://diveintopython3.ep.io/"" rel=""nofollow"">Dive into Python</a> is a great book for experienced programmers coming to Python and wanting to quickly grok its syntax and special features (the latest version is for Python 3, but it's quite backwards compatible). Beyond that, keep the <a href=""http://docs.python.org/library/index.html"" rel=""nofollow"">Standard Library</a> close at hand; one of the biggest advantages of Python is its included batteries.</p>

<p>That said, for text processing... are you in a UNIX environment? Bash is king for that sort of work.</p>
",""
"7797716","2","7797602","<p>Don't forget to pack the buttons into the frame:</p>

<pre><code>    self.b = Button(frame,image=self.Empty,command=self.makeMove)
    self.b.pack(side=LEFT)
</code></pre>
",""
"7797735","2","7797174","<p>I switched the two lines and got what I think you are looking for.</p>

<pre><code>prevmiles = miles

milest = miles - prevmiles
</code></pre>

<p>Note - This code is for Python 2.5.4, so the syntax changes in a few parts, and because of the <br> on the end of the line the floats for fuel were giving errors so I commented that out.</p>

<pre><code>def BusRoute():
    path = ""C:\\""
    ext = "".txt""

    lines = """"
    stopname = """"
    miles = 0
    prevmiles = 0
    milest = 0
    fuel = 0.0
    mpg = 0.0
    i = 0

    filename = raw_input(""Please enter the file name. The file path [C:\...] and extension [*.txt] is not required: "") #raw_input for text in Python 2.5

    inFile = open(path + filename + ext, ""r"")

    for lines in inFile:
        stopname, miles, fuel = lines.split("" "")

        miles = float(miles)
        ##fuel = float(fuel) (Gives me an error message)

        milest = miles - prevmiles

        prevmiles = miles            

        miles += 1

        print ""Since last stop:"", float(milest), ""miles"" #Print syntax is different in Python 2.5

BusRoute()
</code></pre>

<p>Gives the output:</p>

<pre><code>Please enter the file name. The file path [C:\...] and extension [*.txt] is not required: name
Since last stop: 97840.4 miles
Since last stop: 20.9 miles
Since last stop: 16.9 miles
Since last stop: 8.3 miles
Since last stop: 8.10000000001 miles
Since last stop: 10.0 miles
Since last stop: 8.39999999999 miles
Since last stop: 8.7 miles
Since last stop: 9.90000000001 miles
Since last stop: 3.59999999999 miles
Since last stop: 4.2 miles
Since last stop: 33.3 miles
Since last stop: 8.40000000001 miles
Since last stop: 21.7 miles
Since last stop: 13.3 miles
Since last stop: 42.0 miles
Since last stop: 9.59999999999 miles
Since last stop: 5.90000000001 miles
Since last stop: 9.29999999999 miles
Since last stop: 5.60000000001 miles
Since last stop: 6.89999999999 miles
</code></pre>

<p>Why don't you try to print the miles from the file in the loop to make sure you are getting the right values?</p>
",""
"7797756","2","7797686","<pre><code>data=[[1,'food',15],[4,'rent', 50],[1,'other',60],[8,'bills',40]]

# put same days together
data.sort()


# aggregate the days
from itertools import groupby
from operator import itemgetter

grouped = groupby(data, key=itemgetter(0))


# sum values by day
summed = ((day, sum(val for (_,_,val) in day_group))
          for day, day_group in grouped)


# get the max
print max(summed, key=itemgetter(1))
</code></pre>
",""
"7797765","1","","<p>So I have setup a twitter application so that people can reply to tweets inside my own app. I have a callback URL and when I do not try and override it everything seems to go fine. However Now I am having a problem getting the override of the callback to work the app runs on multiple sub domains and servers based on what stage of development it is in and I would like to override the callback to the current url.</p>

<p>When I do override the callback and twitter attempts to send the User back to that page I get to a page that says ""Sorry, that page doesn’t exist!""</p>

<p>and the URL looks something like this</p>

<p><a href=""https://twitter.com/oauth/http%3A//127.0.0.1/authtwitter%3FtwitterCallback?oauth_token=VALUE&amp;oauth_verifier=VALUE"" rel=""nofollow"">https://twitter.com/oauth/http%3A//127.0.0.1/authtwitter%3FtwitterCallback?oauth_token=VALUE&amp;oauth_verifier=VALUE</a></p>

<p>and Here is my Python code using this library for the oauth: <a href=""https://github.com/simplegeo/python-oauth2"" rel=""nofollow"">https://github.com/simplegeo/python-oauth2</a></p>

<pre><code>    #SETUP TWITTER AUTHORIZATION OBJECT
    request_token_url = 'http://twitter.com/oauth/request_token'
    access_token_url = 'http://twitter.com/oauth/access_token'
    authorize_url = 'http://twitter.com/oauth/authenticate'

    consumer = oauth.Consumer(consumer_key, consumer_secret)
    client = oauth.Client(consumer)

    #get request token
    callbackURL = urllib.quote(""%s?twitterCallback"" % self.request.url)

    resp, content = client.request(request_token_url, ""POST"", body=urllib.urlencode({'oauth_callback':callbackURL}))
    if resp['status'] != '200':
            raise Exception(""Invalid Response %s."" %resp['status'])

    request_token = dict(urlparse.parse_qsl(content))

    tmpldict['callbackURL'] = callbackURL
    tmpldict['oauth_token'] = request_token['oauth_token']  
    tmpldict['twitauthurl'] = ""%s?oauth_token=%s"" % ( authorize_url, request_token['oauth_token'] )                               

    qargs=urlparse_qs(self.request.url,True,False)

    if 'oauth_verifier' in qargs:
            oauth_verifier = qargs['oauth_verifier'][0]
    else:
            oauth_verifier = None

    if oauth_verifier:
            token = oauth.Token(request_token['oauth_token'], request_token['oauth_token_secret'])
            token.set_verifier(oauth_verifier)

            client = oauth.Client(consumer,token)

            resp, content = client.request(access_token_url, ""GET"")
            access_token = dict(urlparse.parse_qsl(content))
</code></pre>

<p>Current Flow for User</p>

<p>Click authorization URL</p>

<p>Hit Allow Access on Twitter</p>

<p>Twitter Displays: Redirecting you back to the application</p>

<p>Cannot Find page with URL like the example above.</p>
","<python><twitter><oauth><twitter-oauth>"
"7797768","2","7797633","<p>The <strong>Google Python Class</strong> should give you a hands on guide (don't forget to check the video tutorials and the coding exercises):</p>

<p><a href=""http://code.google.com/edu/languages/google-python-class/"" rel=""nofollow"">http://code.google.com/edu/languages/google-python-class/</a></p>

<p>Oh, and you might want to read the books the others have posted.</p>

<p>For the <strong>text processing</strong> you should check the <strong>Regular Expressions</strong> video (which is available on the sidebar) and tutorial page: <a href=""http://code.google.com/edu/languages/google-python-class/regular-expressions.html"" rel=""nofollow"">http://code.google.com/edu/languages/google-python-class/regular-expressions.html</a></p>
",""
"7797770","2","7797686","<pre><code>list = [[1, 'food', 15], [4,'rent', 50], [1, 'other', 60], [8, 'bills', 40]]
hash = {}
for item in list:
    if item[0] not in hash.keys():
        hash[item[0]] = item[2]
    else:
        hash[item[0]] += item[2]

for (k, v) in hash:
    # print key: value
</code></pre>

<p>or if you just want the most expensive day.</p>

<pre><code>for (k, v) in hash:
    if (v == max(hash.values()):
        #print k: v
</code></pre>
",""
"7797778","2","7797174","<p>Two things going on here:</p>

<ol>
<li>you need to initialize <code>stopname</code>, <code>prevmiles</code>, and <code>fuel</code> with the first line of the file, and</li>
<li>you need to swap the two lines where you assign <code>miles</code> to <code>prevmiles</code>.</li>
</ol>

<p>Here's the updated function:</p>

<pre><code>def BusRoute():
    path = ""C:\\""
    ext = "".txt""

    lines = """"
    stopname = """"
    miles = 0
    prevmiles = 0
    milest = 0
    fuel = 0.0
    mpg = 0.0
    i = 0

    filename = input(""Please enter the file name (no extension)"").strip()

    inFile = open(path + filename + ext, ""r"")

    stopname, prevmiles, fuel = inFile.readline().split()
    prevmiles = float(prevmiles)
    fuel = float(fuel)

    for lines in inFile:
        stopname, miles, fuel = lines.split("" "")

        miles = float(miles)
        fuel = float(fuel)

        milest = miles - prevmiles

        prevmiles = miles

        miles += 1

        print(""Since last stop:"", float(milest), ""miles"")
</code></pre>
",""
"7797782","2","7797686","<p>Isn't a defaultdict just as easy?</p>

<pre><code>import pprint
from collections import defaultdict
from operator import itemgetter

l = [[1, 'food', 15], [4, 'rent', 50], [1, 'other', 60], [8, 'bills', 40]]
d = defaultdict(int)
for item in l:
    d[item[0]] += item[2]
pprint.pprint(dict(d))
print max(d.iteritems(), key=itemgetter(1))
</code></pre>

<p>Result:</p>

<pre><code>{1: 75, 4: 50, 8: 40}
(1, 75)
</code></pre>
",""
"7797821","2","7797592","<p>It looks like you don't quite have the sizer's Add signature correct. It should be sizer.Add(widget, proportion, flags, border)</p>

<p>You keep skipping the proportion and are not specifying a border at all. If you did this instead:</p>

<pre><code>yearNavigationBox.Add(sc, 0, wx.EXPAND|wx.TOP, 5)
</code></pre>

<p>It will put the spinner 5 pixels below the top of the frame (or whatever widget is added before this one). You have a few other places where you're skipping the proportion flag and putting other random stuff in its place. You'll want to go through and change that. Here are a couple tutorials:</p>

<ul>
<li><a href=""http://www.blog.pythonlibrary.org/2008/05/18/a-wxpython-sizers-tutorial/"" rel=""nofollow"">http://www.blog.pythonlibrary.org/2008/05/18/a-wxpython-sizers-tutorial/</a></li>
<li><a href=""http://wiki.wxpython.org/UsingSizers"" rel=""nofollow"">http://wiki.wxpython.org/UsingSizers</a></li>
</ul>
",""
"7797853","2","7797268","<p>Each <code>for</code> makes a loop; your code has two loops for years inside each other – it processes <em>all the years</em> with the first line of the file, then all the years for the second, etc. This is the error you're running into, but if you just go and fix it somehow, another one will pop up soon enough.</p>

<hr>

<p>Now, please do borrow a good Python book at the library and spend some time reading and doing the exercises. Or join a course. Get a knowledgeable friend to review your code for you. StackOverflow might help you to get through a specific problem, but sadly it can't teach you the concepts. You're on the wrong path; there's nothing but trouble ahead if you just continue like this. You should go back and learn the basics a bit better, it'll make it much easier in the long run.</p>

<p>Computers are there to do tedious and repetitive tasks for you. You should <strong>never</strong> type out a giant list of numbers or numbered variables.
Get familiar with lists (and lists of lists), and the <a href=""http://docs.python.org/library/functions.html#range"" rel=""nofollow"">range</a> function.</p>

<p>Use descriptive names for your variables, not abbreviations. This is Python, we like things clear. And put each statement on its own line; all those semicolons look ugly. These things are important if you want to share code, get help, or just organize your own thoughts on it.</p>

<p>Study the documentation for the <a href=""http://docs.python.org/library/csv.html"" rel=""nofollow"">csv module</a> and use its reader also, not just the writer.</p>

<p>Get familiar with <a href=""http://docs.python.org/tutorial/introduction.html#lists"" rel=""nofollow"">list slicing</a>, particularly the line[1::3] variety.</p>

<p>Learn the <a href=""http://docs.python.org/library/stdtypes.html#file.close"" rel=""nofollow"">with</a> statement for files.</p>

<p>If you do the same thing in each if/elif, move it out of there to a common place.</p>

<p>Here's to you becoming a good programmer one day :)</p>
",""
"7797916","2","7797406","<p>Try this:</p>

<pre><code>Properties = JClass('java.util.Properties')
props = Properties()
props.setProperty('foo','bar')
</code></pre>
",""
"7797930","1","","<p>I'm writing some scripts that will be used by non-python users.  I have a Config class that has dictionaries and I'd like to be able to raise a custom exception for KeyError.  Is there an elegant way to do this other than writing a method that raises an exception when checking for the value in the dictionary?  </p>

<p>Here's an example:</p>

<pre><code>class ConfigError(Exception): pass

class Config:
    def __init__(self):
        self.cars = {'BMW': 'M5', 'Honda': 'Civic'}

    def get_car(self, name):
        try:
            return self.cars[name]
        except KeyError, e:
            raise ConfigError(""Car %s doesn't exist!!!"" % name)

conf = Config()
print 'Car: %s' % conf.cars['BMW']
print 'Car: %s' % conf.cars['Mercedes']
</code></pre>

<p>Here's the output:</p>

<pre><code>Car: M5 
Traceback (most recent call last):
  File ""test.py"", line 17, in ?
    print 'Car: %s ' % conf.cars['Mercedes']
KeyError: 'Mercedes'
</code></pre>

<p>I know I can write a method like Config.get_car() above and raise a custom exception, but I'd like to be able to raise the custom exception when directly trying to access the Config.cars dictionary.  I'd like to do so because there's actually more dictionaries in the config, but I only need to raise a custom exception for one of the dictionaries and would like to keep how the data is access consistent (all as dictionaries).</p>

<p>Note:  This is using Python 2.4.4</p>
","<python><exception-handling><dictionary><python-2.4>"
"7797964","2","7797930","<p>Consider doing this.</p>

<pre><code>class MyConfigDict( dict ):
    def __getitem__( self, key ):
        try:
            return super( MyConfigDict, self ).__getitem__( key )
        except KeyError as e:
            raise MyConfigError( e.message )
</code></pre>

<p>Something like that may allow you to wrap every access in your own extended exception.</p>
",""
"7797995","1","","<p>I patched appengine_config to enable foreign characters with blobstoreuploadhandler:</p>

<pre><code>webapp_django_version = '1.2'
import base64
import quopri

from webob import multidict


def from_fieldstorage(cls, fs):

    obj = cls()
    if fs.list:
        # fs.list can be None when there's nothing to parse
        for field in fs.list:
            if field.filename:
                obj.add(field.name, field)
            else:

                # first, set a common charset to utf-8.
                common_charset = 'utf-8'

                # second, check Content-Transfer-Encoding and decode
                # the value appropriately
                field_value = field.value
                transfer_encoding = field.headers.get(
                  'Content-Transfer-Encoding', None)

                if transfer_encoding == 'base64':
                    field_value = base64.b64decode(field_value)

                if transfer_encoding == 'quoted-printable':
                    field_value = quopri.decodestring(field_value)

                if field.type_options.has_key('charset') and \
                      field.type_options['charset'] != common_charset:
                    # decode with a charset specified in each
                    # multipart, and then encode it again with a
                    # charset specified in top level FieldStorage
                    field_value = field_value.decode(
                      field.type_options['charset']).encode(common_charset)

            # TODO: Should we take care of field.name here?
            obj.add(field.name, field_value)

    return obj

multidict.MultiDict.from_fieldstorage = classmethod(from_fieldstorage)
</code></pre>

<p>Now I get this error when performing an upload with a form that has just one file. Is it because I also need text values? If I remove the patch to appengine_config then my upload works but the foreign charcater breaks. Should I try adding just a hidden variable so that everyting that's submitted isn't just a file? Thanks for any good idea</p>

<pre><code>Traceback (most recent call last):
  File ""/base/python_runtime/python_lib/versions/1/google/appengine/ext/webapp/_webapp25.py"", line 703, in __call__
    handler.post(*groups)
  File ""/base/data/home/apps/s~montaoproject/deleteoredit.354032237980992086/main.py"", line 2659, in post
    for upload in self.get_uploads():
  File ""/base/python_runtime/python_lib/versions/1/google/appengine/ext/webapp/blobstore_handlers.py"", line 348, in get_uploads
    for key, value in self.request.params.items():
  File ""/base/python_runtime/python_lib/versions/1/webob/__init__.py"", line 951, in params
    params = self.str_params
  File ""/base/python_runtime/python_lib/versions/1/webob/__init__.py"", line 943, in str_params
    return NestedMultiDict(self.str_GET, self.str_POST)
  File ""/base/python_runtime/python_lib/versions/1/webob/__init__.py"", line 870, in str_POST
    vars = MultiDict.from_fieldstorage(fs)
  File ""/base/data/home/apps/s~montaoproject/deleteoredit.354032237980992086/appengine_config.py"", line 44, in from_fieldstorage
    obj.add(field.name, field_value)
UnboundLocalError: local variable 'field_value' referenced before assignment
</code></pre>
","<python><file><google-app-engine><blobstore>"
"7798114","2","7797442","<p><a href=""http://docs.python.org/library/unittest.html#unittest.TestCase.shortDescription"" rel=""noreferrer"">unittest.TestCase.shortDescription()</a></p>

<blockquote>
  <p>Returns a description of the test, or None if no description has been provided. The default implementation of this method returns the first line of the test method’s docstring, if available, or None.</p>
</blockquote>

<p><a href=""http://docs.python.org/library/unittest.html#unittest.TestCase.id"" rel=""noreferrer"">unittest.TestCase.id()</a></p>

<blockquote>
  <p>Return a string identifying the specific test case. This is usually the full name of the test method, including the module and class name.</p>
</blockquote>

<p>Hopefully one of those is useful for your needs.</p>
",""
"7798120","1","","<p>I am new to Jython, how do you convert a datetime type (of Jython) to java.util.Date?</p>

<p>thank you.</p>
","<python><jython>"
"7798185","1","","<pre><code>print activities
activities  = sorted(activities,key = lambda item:item[1])
print activities
</code></pre>

<p>Activities in this case is a list of tuples like <code>(start_number,finish_number)</code> the output of the above code according to me should be the list of values sorted according the the increasing order of <code>finish_number</code>. When I tried the above code in shell I got the following output. I am not sure why the second list is not sorted according the the increasing order of the <code>finish_number</code>. Please help me in understanding this. </p>

<pre><code>[('1', '4'), ('3', '5'), ('0', '6'), ('5', '7'), ('3', '9'), ('5', '9'), ('6', '10'), ('8', '11'), ('8', '12'), ('2', '14'), ('12', '16')]
[('6', '10'), ('8', '11'), ('8', '12'), ('2', '14'), ('12', '16'), ('1', '4'), ('3', '5'), ('0', '6'), ('5', '7'), ('3', '9'), ('5', '9')]
</code></pre>
","<python><sorting>"
"7798200","2","7796775","<p>Have you checked to make sure that <code>doc</code>'s revision is updated when you <code>store</code>? <strike>Libraries I've used won't modify <code>doc</code> but instead return the new revision upon a successful <code>store</code>.</strike></p>

<p>Edit: I guess they will edit <code>doc</code>:</p>

<pre><code>&gt;&gt;&gt; db = s.get_or_create_db('test')
&gt;&gt;&gt; doc = { '_id': 'abc', 'content': 'words' }
&gt;&gt;&gt; db.save_doc(doc)
{'rev': '1-a5856d62f2444efb55cbcb5d1db7e02c', 'ok': True, 'id': 'abc'}
&gt;&gt;&gt; doc
{'content': 'words', '_rev': '1-a5856d62f2444efb55cbcb5d1db7e02c', '_id': 'abc'}
&gt;&gt;&gt; 
</code></pre>

<p>This sample was generated using <code>couchdbkit</code>.</p>
",""
"7798219","2","7798185","<p>You are sorting strings instead of integers: in that case, <code>10</code> is ""smaller"" than <code>4</code>. To sort on integers, convert it to this:</p>

<pre><code>activites = sorted(activities,key = lambda item:int(item[1]))
print activities
</code></pre>

<p>Results in:</p>

<pre><code>[('1', '4'), ('3', '5'), ('0', '6'), ('5', '7'), ('3', '9'), ('5', '9'), ('6', '10'), ('8', '11'), ('8', '12'), ('2', '14'), ('12', '16')]
</code></pre>
",""
"7798224","2","7798185","<p>Your items are being compared as strings, not as numbers. Thus, since the <code>1</code> character comes before <code>4</code> lexicographically, it makes sense that <code>10</code> comes before <code>4</code>.</p>

<p>You need to cast the value to an int first:</p>

<pre><code>activities  = sorted(activities,key = lambda item:int(item[1]))
</code></pre>
",""
"7798232","2","7798185","<p>It's because you're not storing the number as a number, but as a string. The string <code>'10'</code> comes before the string <code>'2'</code>. Try:</p>

<pre><code>activities = sorted(activities, key=lambda i: int(i[1]))
</code></pre>
",""
"7798238","2","7798185","<p>You are sorting strings, not numbers. Strings get sorted character by character.</p>

<p>So, for example <code>'40'</code> is greater than <code>'100'</code> because character <code>4</code> is larger than <code>1</code>.</p>

<p>You can fix this on the fly by simply casting the item as an integer.</p>

<pre><code> activities  = sorted(activities,key = lambda item: int(item[1]))
</code></pre>
",""
"7798281","1","","<p>Is there any way in Python to get the addition object (operator +) for integers in Python and store it somewhere? </p>
","<python>"
"7798295","2","7798281","<pre><code>&gt;&gt;&gt; int_add = int.__add__
&gt;&gt;&gt; int_add(1, 2)
3
</code></pre>

<p>You can also use <a href=""http://docs.python.org/library/operator.html#operator.add"" rel=""nofollow""><code>operator.add</code></a> to obtain a generic function for adding in Python:</p>

<pre><code>&gt;&gt;&gt; from operator import add
&gt;&gt;&gt; add(1, 2)
3
&gt;&gt;&gt; add('a', 'b')
'ab'
</code></pre>

<p>If you want to get the addition method of a specific integer, instead of the <code>int</code> type, see gnibbler's comment on the question:</p>

<blockquote>
  <p>To get the bound add method of an integer you should use parentheses to prevent the . being treated as a decimal point. eg <strong><code>(1).__add__</code></strong>. Another way would be to add a space between the <strong><code>1</code></strong> and the <strong><code>.</code></strong> eg <strong><code>1 .__add__</code></strong> but I think that it is too obscure.</p>
</blockquote>

<p>An example:</p>

<pre><code>&gt;&gt;&gt; one_add = 1 .__add__
&gt;&gt;&gt; one_add(2)
3
</code></pre>
",""
"7798306","2","7798281","<pre><code>&gt;&gt;&gt; import operator
&gt;&gt;&gt; help(operator.add)
Help on built-in function add in module operator:

add(...)
    add(a, b) -- Same as a + b.
</code></pre>
",""
"7798307","2","7798120","<p>Be aware of this:</p>

<blockquote>
  <p>java.util.Date.getTime() gives the milliseconds since the epoch while Jython (just like CPython) gives seconds since the epoch. So you need to divide the values given from java.util.Date by 1000</p>
</blockquote>

<p>From Jython's <a href=""http://wiki.python.org/jython/JythonFaq/ProgrammingJython#How_can_I_manipulate_a_java.util.Date_object_in_Jython.3F"" rel=""nofollow"">FAQ</a></p>
",""
"7798319","2","7798281","<p>You can use <code>int.__add__</code>:</p>

<pre><code>&gt;&gt;&gt; myOperator = int.__add__
&gt;&gt;&gt; myOperator(23,42)
65
</code></pre>
",""
"7798330","1","","<p>I have a service that spawns threads. <br>
The threads are started by providing a target function. <br>
It would appear that the thread doesn't ""die"" when the function ends.  I know this because the thread makes some SSH connections with <a href=""http://www.lag.net/paramiko/"" rel=""nofollow"">Paramiko</a> (via <a href=""http://fabfile.org"" rel=""nofollow"">Fabric</a>), and if I do an <code>lsof</code> I see the SSH connections are still active after the function completes.<br>
How can I make sure that a thread dies when its target function completes?</p>

<p>Here is an example of what I am working with:</p>

<pre><code>from time import sleep
from threading import Thread
from fabric.api import run, settings

def thread_func(host):
    with settings(host_string=host):
        run('ls -lht /tmp')

def spawn_thread(host):
    t = Thread(
        target=thread_func,
        args=(host,)
    )
    t.start()

spawn_thread('node1.example.com')
while True:
    sleep(1)
</code></pre>

<p>And if I run <code>sudo lsof | grep ssh</code> in another terminal while the above code is in its infinite loop I'll see the following, even after I <i>know</i> that the thread should not exist anymore:</p>

<pre><code>python    6924      daharon    3u     IPv4             170520        0t0        TCP 10.1.1.173:47368-&gt;node1.example.com:ssh (ESTABLISHED)
python    6924      daharon    5u     IPv4             170524        0t0        TCP 10.1.1.173:47369-&gt;node1.example.com:ssh (ESTABLISHED)
python    6924 6930 daharon    3u     IPv4             170520        0t0        TCP 10.1.1.173:47368-&gt;node1.example.com:ssh (ESTABLISHED)
python    6924 6930 daharon    5u     IPv4             170524        0t0        TCP 10.1.1.173:47369-&gt;node1.example.com:ssh (ESTABLISHED)
python    6924 6932 daharon    3u     IPv4             170520        0t0        TCP 10.1.1.173:47368-&gt;node1.example.com:ssh (ESTABLISHED)
python    6924 6932 daharon    5u     IPv4             170524        0t0        TCP 10.1.1.173:47369-&gt;node1.example.com:ssh (ESTABLISHED)
</code></pre>
","<python><fabric><paramiko><python-multithreading>"
"7798357","2","7797164","<p>Now that I understand your problem better (you want your debugger to run on UTC, like GAE's default), this gets exciting and tricky.  <a href=""http://docs.python.org/library/logging.html#logging.Formatter.formatTime"" rel=""nofollow"">logging.Formatter.formatTime</a> defaults to formatting dates according to <a href=""http://docs.python.org/library/time.html#time.localtime"" rel=""nofollow"">time.localtime()</a>.  To change this, set the <code>converter</code> attribute to <a href=""http://docs.python.org/library/time.html#time.gmtime"" rel=""nofollow"">time.gmtime()</a>.  This is barely documented, but I found a blog about <a href=""http://od-eon.com/blogs/stefan/logging-utc-timestamps-python/"" rel=""nofollow"">Logging with UTC Timestamps from Python</a> that may be what you're looking for.</p>

<p>Tell me if this is not helpful; it may be that I still misunderstand what you're asking.</p>

<hr>

<p><strong>Old Answer:</strong> <a href=""http://docs.python.org/library/time.html#time.ctime"" rel=""nofollow"">ctime</a> will always convert to local time.  The local time on the server is different from the local time for your home computer's debugger.  You can set os <code>os.environ</code> time zone variable to whatever you want; <code>time.ctime()</code> won't care.</p>

<p>Try <a href=""http://docs.python.org/library/time.html#time.strftime"" rel=""nofollow"">formatting</a> <a href=""http://docs.python.org/library/time.html#time.gmtime"" rel=""nofollow"">time.gmtime()</a> and you'll be using Greenwich Mean Time for both.</p>

<pre><code>gmt = time.strftime(""%a, %d %b %Y %H:%M:%S"", time.gmtime())
logging.info(""It is now: %s"", gmt)
-- It is now: Mon 17 Oct 2011 19:11:10
</code></pre>
",""
"7798469","2","7798330","<p>Are you sure your fabric module is doing the ssh only for the duration of the ls command. That is, it should be doing the equivalent of </p>

<p>ssh host ls -lht /tmp </p>

<p>This commandline will open a remote shell to run the ls -lht command and then shutdown.</p>

<p>But I suspect the Fabric library might be doing the equivalent of:</p>

<p>ssh host</p>

<p>host$ ls -lht /tmp
.
.</p>

<p>Of course it's not providing a real tty but there are different ssh options that allow keeping a connection open without an interactive tty. This would be desirable in certain cases (e.g., if you run lots of commands on the same host, this technique will reuse the existing ssh session instead of opening new session every time. Check the documentation for arguments to enable or disable such session caching.</p>
",""
"7799052","2","7797269","<p>I'm struggling to understand how standardizing on one or another would not introduce serious violations of the principle of least astonishment.</p>

<p>On windows, programmers are used to case insensitivity... why would a windows-only programmer expect to have to picky about this? Note that there is no possible way to implement case-sensitive environment variables here, that option simply doesn't work.</p>

<p>In the linux world, ENVVAR and envvar are two different variables, you <em>cannot</em> standardize to the windows mechanism without potentially hiding information.</p>

<p>In the version that is implemented, you force the developer to specify upper or lower case for a cross-platform app. The case specification is irrelevant on windows, and you'd have to do it anyways for *nix.</p>
",""
"7799264","2","7797765","<p>Few quick things...</p>

<p>Your URLs are old and outdated and don't function as well as the proper URLs. Use SSL and the api subdomain:</p>

<ul>
<li><a href=""https://api.twitter.com/oauth/request_token"" rel=""nofollow"">https://api.twitter.com/oauth/request_token</a></li>
<li><a href=""https://api.twitter.com/oauth/authorize"" rel=""nofollow"">https://api.twitter.com/oauth/authorize</a></li>
<li><a href=""https://api.twitter.com/oauth/access_token"" rel=""nofollow"">https://api.twitter.com/oauth/access_token</a></li>
</ul>

<p>It's unclear to me looking at this code whether you're performing header-based OAuth or querystring-based OAuth. I recommend header-based OAuth -- it dramatically separates concerns and makes it easier to discover wrongness when it happens.</p>

<p>Make sure that when you send your dynamic oauth_callback value to the oauth/request_token step that it's correctly percent-encoded. Also, make sure you have a placeholder HTTP-based callback on your application record on dev.twitter.com/apps</p>
",""
"7799372","2","7781792","<p>In case this helps ...</p>

<p>In the Selenium IDE, I added ...
  Command: waitForElementPresent
  Target: //table[@class='pln']</p>

<p>Then I did File>Export TestCase As Python2(Web Driver), and it gave me this ...</p>

<pre><code>def test_sel(self):
    driver = self.driver
    for i in range(60):
        try:
            if self.is_element_present(By.XPATH, ""//table[@class='pln']""): break
        except: pass
        time.sleep(1)
    else: self.fail(""time out"")
</code></pre>
",""
"7799393","2","7797995","<p>Indent ""obj.add(field.name, field_value)"" so that it is part of your else statement. </p>
",""
"7799707","2","7798185","<p><strong>Look for a BROADER solution to your problem</strong>: Convert your data from <code>str</code> to <code>int</code> immediately on input, work with it as <code>int</code> (otherwise you'll be continually be bumping into little problems like this), and format your data as <code>str</code> for output.</p>

<p>This principle applies generally, e.g. when working with non-ASCII string data, do UTF-8 -> unicode -> UTF-8; don't try to manipulate undecoded text.</p>
",""
"7806275","2","7796775","<p>I still haven't worked out where the resource conflict is coming from, given that just before storing a doc I check that the revision is correct:</p>

<pre><code>latestRev = CouchDoc.load(db,doc.id)
if latestRev.rev != doc.rev:
    print 'revision mismatch ' + doc.rev + '\t' + revs.rev
else:
    doc.store(db)
</code></pre>

<p>However, there is an easy way round the conflict causing a fatal error (new to python, so didn't think of doing this before):</p>

<pre><code>try:
    doc.store(db)
except couchdb.http.ResourceConflict:
    latestDoc = ConflictDoc.load(db,doc.id)
</code></pre>

<p>This does require that any updates to doc before the try command are redone before storing again when couchDB throws a ResourceConflict.</p>
",""
"7809484","2","7797164","<p>The issue is that the C runtime functions on Windows with Python 2.5 seem to cache the value of the TZ environment variable the first time either time or ctime is called.  The following will display the time in local time and not in UTC:</p>

<pre><code>import time, os
time.time()
os.environ['TZ'] = 'UTC'
print time.ctime()
</code></pre>

<p>Wing's debugger calls time() before running any AppEngine code so the initial value of TZ was captured.  The workaround is to set TZ=UTC in the environment variables via the project properties dialog.</p>
",""
"7812524","1","","<p>So I am trying to search for a certain string which for example could be:
process.control.timeout=30, but the 30 could be anything. I tried this:</p>

<pre><code>for line in process:
    line = line.replace(""process.control.timeout"", ""process.control.timeout=900"")
    outFile.write(line)
</code></pre>

<p>But this will bring me back process.control.timeout=900=30. I have a feeling I will need to use regex with a wildcard? But I'm pretty new to python.</p>
","<python><regex><replace>"
"7812557","2","7812524","<p>You are correct, regex is the way to go.</p>

<pre><code>import re
pattern = re.compile(r""process\.control\.timeout=\d+"")
for line in process:
    line = pattern.sub(""process.control.timeout=900"", line)
    outFile.write(line)
</code></pre>
",""
"7812572","2","7812524","<p>This is probably what you want (matching <code>=</code> and digits after <code>=</code> is optional). As you are searching and replacing in a loop, compiling the regex separately will be more efficient than using <code>re.sub</code> directly.</p>

<pre><code>import re

pattern = re.compile(r'process\.control\.timeout(=\d+)?')

for line in process:
    pattern.sub('process.control.timeout=900', line)
</code></pre>
",""
"7812573","2","7812524","<p>Without regex:</p>

<pre><code>for line in process:
    if ""process.control.timeout"" in line:
        # You need to include a newline if you're replacing the whole line
        line = ""process.control.timeout=900\n"" 
    outFile.write(line)
</code></pre>

<p>or </p>

<pre><code>outFile.writelines(""process.control.timeout=900\n"" 
                      if ""process.control.timeout"" in line else line 
                         for line in process)
</code></pre>

<p>If the text you're matching is at the beginning of the line, use <code>line.startswith(""process.control.timeout"")</code> instead of <code>""process.control.timeout"" in line</code>.</p>
",""
"7815387","2","7796816","<p>I'm unable to reproduce this using your refcount code and a trivial snippet below (on shell.appspot.com or a fresh app):</p>

<pre><code>from google.appengine.ext import db
import logging
import sys
import types

def get_refcounts():
    d = {}
    # collect all classes
    for m in sys.modules.values():
        for sym in dir(m):
            o = getattr (m, sym)
            if type(o) is types.ClassType:
                d[o] = sys.getrefcount (o)
    # sort by refcount
    pairs = map (lambda x: (x[1],x[0]), d.items())
    pairs.sort()
    pairs.reverse()
    return pairs

def print_top(num = 15):
    print 'Top Mem Leaks'
    for n, c in get_refcounts()[:num]:
        print '%10d %s' % (n, c.__name__)

class TestModel(db.Model):
  id = db.IntegerProperty()


print_top()

q = TestModel.gql(""WHERE id = :1"", 1)
item = q.get()
del q

print_top()
</code></pre>

<p>It seems likely that something in your environment is holding references to the queries that have been executed. Are you using appstats or another development or debugging tool? Can you create a minimum reproduction case that exhibits the behaviour you observed?</p>
",""
"7829279","1","","<p>I have a bit of a problem with using the Python YouTube API to get the title of the videos in the playlist. I have the enviroment configured correctly, also when I copied the example from the API documentation it works for the added playlist id, but when I try to use one from an other playlist I get an error.</p>

<p>Here is some code I wrote: (In this example I try to get the titles of the videos <a href=""http://www.youtube.com/playlist?p=PLCD939C4D974A5815"" rel=""nofollow"">from here</a>)</p>

<pre><code>import gdata.youtube
import gdata.youtube.service

yt_service = gdata.youtube.service.YouTubeService()
yt_service.ssl = True

# a typical playlist URI
playlist_uri = ""http://gdata.youtube.com/feeds/api/playlists/PLCD939C4D974A5815""

playlist_video_feed = yt_service.GetYouTubePlaylistVideoFeed(playlist_uri)

# iterate through the feed as you would with any other
for playlist_video_entry in playlist_video_feed.entry:
    print playlist_video_entry.title.text
</code></pre>

<p>Here is the error I get: </p>

<pre><code>RequestError: {'status': 400, 'body': 'Invalid playlist id', 'reason': 'Bad Request'}
</code></pre>

<p>I'm quite frustrated with this and would appreciate some help. Thank you!</p>
","<python><api><youtube-api>"
"7829295","2","7829279","<p>Remove <code>PL</code> in your request URI:</p>

<pre><code>playlist_uri = ""http://gdata.youtube.com/feeds/api/playlists/CD939C4D974A5815""
</code></pre>

<p>I'm not sure <em>why</em> YouTube needs it to be in that format, but it needs to be.</p>

<p>You can also just do a <code>.replace('playlists/PL', 'playlists/')</code> on your string.</p>
",""
"7829311","1","","<p>The goal is just to retrieve a specific file without downloading the entire contents, using the HTTP range method as described:
<a href=""http://www.codeproject.com/KB/cs/remotezip.aspx"" rel=""noreferrer"">http://www.codeproject.com/KB/cs/remotezip.aspx</a></p>
","<python><http><zip>"
"7829384","1","","<p>I cannot get translations to show up for my templates.  Here is what I have done:</p>

<ol>
<li>In my template file (index.html), I have loaded i18n and used the <code>trans</code> tag where I want translations.</li>
<li>In my project directory, I rand <code>./manage.py makemessages -l es</code></li>
<li>My django.po file is in <code>./conf/locale/es/LC_MESSAGES/django.po</code></li>
<li>I edited this file with the translations.</li>
<li>I then ran <code>./manage.py compilemessages</code></li>
<li>I set my <code>LANGUAGE_CODE</code> to 'es' in settings.py</li>
<li>Added <code>django.middleware.locale.LocaleMiddleware</code> to <code>MIDDLEWARE_CLASSES</code> in between SessionMiddleware and CommonMiddleware.</li>
<li>Restarted Django, refreshed my page. </li>
</ol>

<p>Only the english representations are still showing.  What am I doing wrong here?  Did I miss something?  </p>
","<python><django><internationalization>"
"7829499","1","","<p>With python 2.7 the following code computes the mD5 hexdigest of the content of a file.</p>

<p>(EDIT: well, not really as answers have shown, I just thought so).</p>

<pre><code>import hashlib

def md5sum(filename):
    f = open(filename, mode='rb')
    d = hashlib.md5()
    for buf in f.read(128):
        d.update(buf)
    return d.hexdigest()
</code></pre>

<p>Now if I run that code using python3 it raise a TypeError Exception:</p>

<pre><code>    d.update(buf)
TypeError: object supporting the buffer API required
</code></pre>

<p>I figured out that I could make that code run with both python2 and python3 changing it to:</p>

<pre><code>def md5sum(filename):
    f = open(filename, mode='r')
    d = hashlib.md5()
    for buf in f.read(128):
        d.update(buf.encode())
    return d.hexdigest()
</code></pre>

<p>Now I still wonder why the original code stopped working. It seems that when opening a file using the binary mode modifier it returns integers instead of strings encoded as bytes (I say that because type(buf) returns int). Is this behavior explained somewhere ?</p>
","<python><python-3.x><hashlib>"
"7829550","2","7829499","<pre><code>for buf in f.read(128):
  d.update(buf)
</code></pre>

<p>.. updates the hash sequentially with each of the first 128 <em>bytes</em> values of the file. Since iterating over a <code>bytes</code> produces <code>int</code> objects, you get the following calls which cause the error you encountered in Python3.</p>

<pre><code>d.update(97)
d.update(98)
d.update(99)
d.update(100)
</code></pre>

<p>which is not what you want. </p>

<p>Instead, you want:</p>

<pre><code>def md5sum(filename):
  with open(filename, mode='rb') as f:
    d = hashlib.md5()
    while True:
      buf = f.read(4096) # 128 is smaller than the typical filesystem block
      if not buf:
        break
      d.update(buf)
    return d.hexdigest()
</code></pre>
",""
"7829658","2","7829499","<p>I think you wanted the for-loop to make successive calls to <code>f.read(128)</code>.  That can be done using <em>iter()</em> and <em>functools.partial()</em>:</p>

<pre><code>import hashlib
from functools import partial

def md5sum(filename):
    with open(filename, mode='rb') as f:
        d = hashlib.md5()
        for buf in iter(partial(f.read, 128), b''):
            d.update(buf)
    return d.hexdigest()

print(md5sum('utils.py'))
</code></pre>
",""
"7829763","2","7829499","<p>I finally changed my code to the version below (that I find easy to understand) after asking the question. But I will probably change it to the version suggested by Raymond Hetting unsing functools.partial.  </p>

<pre><code>import hashlib

def chunks(filename, chunksize):
    f = open(filename, mode='rb')
    buf = ""Let's go""
    while len(buf):
        buf = f.read(chunksize)
        yield buf

def md5sum(filename):
    d = hashlib.md5()
    for buf in chunks(filename, 128):
        d.update(buf)
    return d.hexdigest()
</code></pre>
",""
"7830439","2","7829384","<p>Django's <code>LocaleMiddleware</code> tries to determine the locale from the given request and replaces the <code>LANGUAGE_CODE</code> accordingly. It goes through the following steps:</p>

<ol>
<li>Checks the session for a session variable called <code>django_language</code>. Set the language to the given locale in this session. If not existing it goes to 2.</li>
<li>Checks the cookies for a similar variable set (you can define the name yourself). It not existing it goes to 3.</li>
<li>Tries to determine the language from the <code>HTTP_ACCEPT_LANGUAGE</code> header. If not possible it will go to 4.</li>
<li>At last it will use the <code>LANGUAGE_CODE</code> setting as given locale.</li>
</ol>

<p>In all steps except 4 it will check if the language is given in your <code>LANGUAGES</code> setting, which is a tuple of 2-tuples representing language code and language title. Make sure you set/overwrite the default, since the default would be a tuple of all available Django languages. </p>

<p><strong>If you have multiple languages in your Django site:</strong></p>

<p>Make sure your session or cookies are set correctly. You could use Django's internal view for setting the language (<code>django.views.i18n.set_language</code>). </p>

<p><strong>If you got only one language:</strong></p>

<p>If you only have Spanish you usually don't need to bother with this. Just make sure <code>LANGUAGES</code> and <code>LANGUAGE_CODE</code> is set. It will not attempt to set the pages language to your browsers language if it is not provided in <code>LANGUAGES</code>. Additionally you should make sure that <code>USE_I18N = True</code>. That should be the default though, so make at least sure you didn't set it to <code>False</code> somewhere. </p>
",""
"7830793","2","7782691","<p>You have a couple problems in your code.  </p>

<p>First, <code>chkifexists</code> is <code>return</code>ing as soon as it finds an existing file, so it never checks any remaining names; also, if no files are found then the hashcolumn and filepathNum are never set -- giving you the <code>UnboundLocalError</code>.</p>

<p>Second, you are calling <code>chkifexists</code> in two places -- from <code>removedupes</code> and from <code>CleanAndPrettify</code>.  So <code>removedupes</code> will run for every existing file for every existing file -- not what you want!  In fact, since <code>CleanAndPrettify</code> has just verified the file exists <code>removedupes</code> should just go with whatever is handed to it.</p>

<p>There are at least three ways to handle the case where no files are found: have <code>chkifexists</code> raise an exception; have a flag in <code>CleanAndPrettify</code> that tracks if files were found; or turn the results of <code>chkifexists</code> into a <code>list</code> which you can then check for emptiness.</p>

<p>In the modified code I moved the files into a dictionary with the name as the key and the value as a tuple of <code>hashcolumn</code> and <code>filepathNum</code>.  <code>chkifexists</code> now accepts the filenames to look for as a dictionary, and <code>yield</code>s the values when a file is found; if no files were found, a <code>NoFilesFound</code> exception will be raised.</p>

<p>Here's the code:</p>

<pre><code>import os, csv

# store file attributes for easy modifications
# format is 'filename': (hashcolumn, filepathNum)
files = {
        'A.csv': (7, 5),
        'B.csv': (15, 5),
        'C.csv': (1, 0),
        }

class NoFilesFound(Exception):
    ""No .csv files were found to clean up""

def chkifexists(somefiles):
    # load all three at once, but only yield them if filename
    # is found
    filesfound = False
    for fname, (hashcolumn, filepathNum) in somefiles.items():
        if os.path.isfile(fname):
            filesfound = True
            yield fname, hashcolumn, filepathNum
    if not filesfound:
        raise NoFilesFound

def removedupes(infile, outfile, hashcolumn, filepathNum):
    # this is now a single-run function
    r1 = file(infile, 'rb')
    r2 = csv.reader(r1)
    w1 = file(outfile, 'wb')
    w2 = csv.writer(w1)
    hashes = set()
    for row in r2:
        if row[hashcolumn] =="""": 
            w2.writerow(row)       
            hashes.add(row[hashcolumn])  
        if row[hashcolumn] not in hashes:
            w2.writerow(row)
            hashes.add(row[hashcolumn])
    w1.close()
    r1.close()


def bakcount(origfile1, origfile2):
    '''This function creates a .bak file of the original and does a row count
    to determine the number of rows removed'''
    os.rename(origfile1, origfile1+"".bak"")
    count1 = len(open(origfile1+"".bak"").readlines())
    #print count1

    os.rename(origfile2, origfile1)
    count2 = len(open(origfile1).readlines())
    #print count2

    print str(count1 - count2) + "" duplicate rows removed from "" \
        + str(origfile1) +""!""


def CleanAndPrettify():
    print ""Removing duplicate rows from input files...""
    try:
        for fname, hashcolumn, filepathNum in chkifexists(files):
            removedupes(
                   fname,
                   os.path.splitext(fname)[0] + ""2.csv"",
                   hashcolumn,
                   filepathNum,
                   )
            bakcount (fname, os.path.splitext(fname)[0] + ""2.csv"")
    except NoFilesFound:
        print ""no files to clean up""

CleanAndPrettify()
</code></pre>

<p>Unable to test as I don't have the <code>A</code>, <code>B</code>, and <code>C</code> .csv files, but hopefully this will get you pointed in the right direction.  As you can see, the <code>raise NoFilesFound</code> option uses the flag method to keep track of files not being found;  here is the <code>list</code> method:</p>

<pre><code>def chkifexists(somefiles):
    # load all three at once, but only yield them if filename
    # is found
    for fname, (hashcolumn, filepathNum) in somefiles.items():
        if os.path.isfile(fname):
            filesfound = True
            yield fname, hashcolumn, filepathNum

def CleanAndPrettify():
    print ""Removing duplicate rows from input files...""
    found_files = list(chkifexists(files))
    if not found_files:
        print ""no files to clean up""
    else:
        for fname, hashcolumn, filepathNum in found_files:
            removedupes(...)
            bakcount(...)
</code></pre>
",""
"7838833","2","7829384","<p>Ok, I found the problem... My po files were in <code>./conf/locale</code> instead of just <code>./locale</code>.</p>

<p>The reason I created <code>./conf/locale</code> was because when I rand <code>django-admin.py makemessages</code>, it instructed me to do so.  However, if it's in your local project directory, then it is just simply <code>./locale</code>.</p>
",""
"7839212","2","7796440","<p>reference: (Thanks to Doug Hellmann ) <a href=""http://doughellmann.com/2009/09/01/evaluating-tools-for-developing-with-soap-in-python.html"" rel=""noreferrer"">building soap service</a></p>

<p>The Zolera Soap Infrastucture (ZSI), is a part of the pywebsvcs project. It provides complete server and client libraries for working with SOAP. To use it, a developer writes the WSDL file (by hand or using a WSDL editor), and then generates Python source for the client and stubs for the server. The data structures defined in the WSDL file are converted into Python classes that can be used in both client and server code.</p>

<p>we implemented a simple echo service that returns as output whatever it gets as input from the client. Listing 1 contains the hand-crafted WSDL inputs for the ZSI version of this service.</p>

<p><strong>Listing 1</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;definitions 
  xmlns=""http://schemas.xmlsoap.org/wsdl/""
  xmlns:soap=""http://schemas.xmlsoap.org/wsdl/soap/""
  xmlns:soapenc=""http://schemas.xmlsoap.org/soap/encoding/""
  xmlns:http=""http://schemas.xmlsoap.org/wsdl/http/""
  xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
  xmlns:tns=""urn:ZSI""
  targetNamespace=""urn:ZSI"" &gt;

  &lt;types&gt;
    &lt;xsd:schema elementFormDefault=""qualified"" 
        targetNamespace=""urn:ZSI""&gt;
      &lt;xsd:element name=""Echo""&gt;
        &lt;xsd:complexType&gt;
          &lt;xsd:sequence&gt;
            &lt;xsd:element name=""value"" type=""xsd:anyType""/&gt;
          &lt;/xsd:sequence&gt;
        &lt;/xsd:complexType&gt;
      &lt;/xsd:element&gt;
    &lt;/xsd:schema&gt;
  &lt;/types&gt;

  &lt;message name=""EchoRequest""&gt;
    &lt;part name=""parameters"" element=""tns:Echo"" /&gt;
  &lt;/message&gt;
  &lt;message name=""EchoResponse""&gt;
    &lt;part name=""parameters"" element=""tns:Echo""/&gt;
  &lt;/message&gt;

  &lt;portType name=""EchoServer""&gt;
    &lt;operation name=""Echo""&gt;
      &lt;input message=""tns:EchoRequest""/&gt;
      &lt;output message=""tns:EchoResponse""/&gt;
    &lt;/operation&gt;
  &lt;/portType&gt;

  &lt;binding name=""EchoServer"" type=""tns:EchoServer""&gt;
    &lt;soap:binding style=""document"" 
                  transport=""http://schemas.xmlsoap.org/soap/http""/&gt;
    &lt;operation name=""Echo""&gt;
      &lt;soap:operation soapAction=""Echo""/&gt;
      &lt;input&gt;
        &lt;soap:body use=""literal""/&gt; 
      &lt;/input&gt;
      &lt;output&gt;
        &lt;soap:body use=""literal""/&gt; 
      &lt;/output&gt;
    &lt;/operation&gt;
  &lt;/binding&gt;

  &lt;service name=""EchoServer""&gt;
    &lt;port name=""EchoServer"" binding=""tns:EchoServer""&gt;
      &lt;soap:address location=""http://localhost:7000""/&gt;
    &lt;/port&gt;
  &lt;/service&gt;

&lt;/definitions&gt;
</code></pre>

<p>To generate the client and server code from the WSDL, feed it into the wsdl2py program (included with ZSI). To add support for complex types, add the -b option, but it isn’t required for this simple example. wsdl2py will, in response, produce three files:</p>

<p><strong>Listing 2</strong></p>

<p>EchoServer_client.py is the code needed to build a client for the SimpleEcho web service.</p>

<pre><code>##################################################
# file: EchoServer_client.py
# 
# client stubs generated by 
# ""ZSI.generate.wsdl2python.WriteServiceModule""
# 
##################################################

from EchoServer_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type

# Locator
class EchoServerLocator:
    EchoServer_address = ""http://localhost:7000""
    def getEchoServerAddress(self):
        return EchoServerLocator.EchoServer_address
    def getEchoServer(self, url=None, **kw):
        return EchoServerSOAP(
            url or EchoServerLocator.EchoServer_address, 
            **kw)

# Methods
class EchoServerSOAP:
    def __init__(self, url, **kw):
        kw.setdefault(""readerclass"", None)
        kw.setdefault(""writerclass"", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: Echo
    def Echo(self, request, **kw):
        if isinstance(request, EchoRequest) is False:
            raise TypeError, ""%s incorrect request type"" % \
                (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction=""Echo"", **kw)
        # no output wsaction
        response = self.binding.Receive(EchoResponse.typecode)
        return response

EchoRequest = GED(""urn:ZSI"", ""Echo"").pyclass

EchoResponse = GED(""urn:ZSI"", ""Echo"").pyclass
</code></pre>

<p><strong>Listing 3</strong></p>

<p>EchoServer_server.py contains code needed to build the SimpleEcho web service server.</p>

<pre><code>##################################################
# file: EchoServer_server.py
#
# skeleton generated by 
#  ""ZSI.generate.wsdl2dispatch.ServiceModuleWriter""
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from EchoServer_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
EchoRequest = GED(""urn:ZSI"", ""Echo"").pyclass

EchoResponse = GED(""urn:ZSI"", ""Echo"").pyclass


# Service Skeletons
class EchoServer(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_Echo(self, ps, **kw):
        request = ps.Parse(EchoRequest.typecode)
        return request,EchoResponse()

    soapAction['Echo'] = 'soap_Echo'
    root[(EchoRequest.typecode.nspname,EchoRequest.typecode.pname)] = \
        'soap_Echo'
</code></pre>

<p><strong>Listing 4</strong></p>

<p>EchoServer_types.py has type definitions used by both the client and server code.</p>

<pre><code>##################################################
# file: EchoServer_types.py
#
# schema types generated by 
#  ""ZSI.generate.wsdl2python.WriteServiceModule""
#
##################################################

import ZSI
import ZSI.TCcompound
from ZSI.schema import (LocalElementDeclaration, ElementDeclaration, 
                        TypeDefinition, GTD, GED)
from ZSI.generate.pyclass import pyclass_type

##############################
# targetNamespace
# urn:ZSI
##############################

class ns0:
    targetNamespace = ""urn:ZSI""

    class Echo_Dec(ZSI.TCcompound.ComplexType, ElementDeclaration):
        literal = ""Echo""
        schema = ""urn:ZSI""
        def __init__(self, **kw):
            ns = ns0.Echo_Dec.schema
            TClist = [ZSI.TC.AnyType(pname=(ns,""value""), 
                      aname=""_value"", minOccurs=1, maxOccurs=1, 
                      nillable=False, typed=False, 
                      encoded=kw.get(""encoded""))]
            kw[""pname""] = (""urn:ZSI"",""Echo"")
            kw[""aname""] = ""_Echo""
            self.attribute_typecode_dict = {}
            ZSI.TCcompound.ComplexType.__init__(self,None,TClist,
                                                inorder=0,**kw)
            class Holder:
                __metaclass__ = pyclass_type
                typecode = self
                def __init__(self):
                    # pyclass
                    self._value = None
                    return
            Holder.__name__ = ""Echo_Holder""
            self.pyclass = Holder

# end class ns0 (tns: urn:ZSI)
</code></pre>

<p>Once generated, these files are not meant to be edited, because they will be regenerated as part of a build process whenever the WSDL input changes. The code in the files grows as more types and calls are added to the service definition.</p>

<p>The implementation of the server goes in a separate file that imports the generated code. In the example, the actual service is on lines 18–25 of Listing 5. The @soapmethod decorator defines the input (an EchoRequest) and the output (an EchoResponse) for the call. In the example, the implementation of soap_Echo() just fills in the response value with the request value, and returns both the request and the response. From there, ZSI takes care of building the SOAP response and sending it back to the client.</p>

<p><strong>Listing 5</strong></p>

<pre><code>import os
import sys
from EchoServer_client import *
from ZSI.twisted.wsgi import (SOAPApplication,
                              soapmethod,
                              SOAPHandlerChainFactory)

class EchoService(SOAPApplication):
    factory = SOAPHandlerChainFactory
    wsdl_content = dict(name='Echo', 
                        targetNamespace='urn:echo', 
                        imports=(), 
                        portType='',
                        )

    def __call__(self, env, start_response):
        self.env = env
        return SOAPApplication.__call__(self, env, start_response)

    @soapmethod(EchoRequest.typecode, 
                EchoResponse.typecode, 
                operation='Echo', 
                soapaction='Echo')
    def soap_Echo(self, request, response, **kw):
        # Just return what was sent
        response.Value = request.Value
        return request, response

def main():
    from wsgiref.simple_server import make_server
    from ZSI.twisted.wsgi import WSGIApplication

    application         = WSGIApplication()
    httpd               = make_server('', 7000, application)
    application['echo'] = EchoService()
    print ""listening...""
    httpd.serve_forever()

if __name__ == '__main__':
    main()
</code></pre>

<p><strong>Listing 6</strong> includes a sample of how to use the ZSI client libraries to access the servers from the client end. All that needs to be done is to create a handle to the EchoServer web service, build an EchoRequest, send it off to the web service, and read the response.</p>

<pre><code>from EchoServer_client import *
import sys, time

loc  = EchoServerLocator()
port = loc.getEchoServer(url='http://localhost:7000/echo')

print ""Echo: "", 
msg = EchoRequest()
msg.Value = ""Is there an echo in here?""
rsp = port.Echo(msg)
print rsp.Value
</code></pre>
",""
"7842745","2","7782721","<p>If you ok with installing additional libs like Xuggler, you can use this shorter way, but it loads an external file - sure, you can also generate the soundpackets on the run. It's an fragment from the tutorials site.
<a href=""http://www.xuggle.com/xuggler/downloads/3.1.final.jsp"" rel=""nofollow"">http://www.xuggle.com/xuggler/downloads/3.1.final.jsp</a></p>

<pre><code>IMediaReader reader = ToolFactory.makeReader(""Your.MP3"");
IMediaViewer viewer = ToolFactory.makeViewer();
reader.addListener(viewer);
while (reader.readPacket() == null)
        ;
</code></pre>
",""
"7843535","2","7829311","<p>Since there was no such library I have written a small module myself, most code and logic is is from zipfile with the seek/reads translated to HTTP range requests.</p>

<p>Feel free to review and suggest improvements:</p>

<p>The code:</p>

<pre><code>""""""
Read remote ZIP files using HTTP range requests
""""""
import struct
import urllib2
import zlib
import cStringIO
from zipfile import ZipInfo, ZipExtFile, ZipInfo
from os.path import join, basename

# The code is mostly adatpted from the zipfile module
# NOTE: ZIP64 is not supported

# The ""end of central directory"" structure, magic number, size, and indices
# (section V.I in the format document)
structEndArchive = ""&lt;4s4H2LH""
stringEndArchive = ""PK\005\006""
sizeEndCentDir = struct.calcsize(structEndArchive)

_ECD_SIGNATURE = 0
_ECD_DISK_NUMBER = 1
_ECD_DISK_START = 2
_ECD_ENTRIES_THIS_DISK = 3
_ECD_ENTRIES_TOTAL = 4
_ECD_SIZE = 5
_ECD_OFFSET = 6
_ECD_COMMENT_SIZE = 7
# These last two indices are not part of the structure as defined in the
# spec, but they are used internally by this module as a convenience
_ECD_COMMENT = 8
_ECD_LOCATION = 9

# The ""central directory"" structure, magic number, size, and indices
# of entries in the structure (section V.F in the format document)
structCentralDir = ""&lt;4s4B4HL2L5H2L""
stringCentralDir = ""PK\001\002""
sizeCentralDir = struct.calcsize(structCentralDir)

# indexes of entries in the central directory structure
_CD_SIGNATURE = 0
_CD_CREATE_VERSION = 1
_CD_CREATE_SYSTEM = 2
_CD_EXTRACT_VERSION = 3
_CD_EXTRACT_SYSTEM = 4
_CD_FLAG_BITS = 5
_CD_COMPRESS_TYPE = 6
_CD_TIME = 7
_CD_DATE = 8
_CD_CRC = 9
_CD_COMPRESSED_SIZE = 10
_CD_UNCOMPRESSED_SIZE = 11
_CD_FILENAME_LENGTH = 12
_CD_EXTRA_FIELD_LENGTH = 13
_CD_COMMENT_LENGTH = 14
_CD_DISK_NUMBER_START = 15
_CD_INTERNAL_FILE_ATTRIBUTES = 16
_CD_EXTERNAL_FILE_ATTRIBUTES = 17
_CD_LOCAL_HEADER_OFFSET = 18

# The ""local file header"" structure, magic number, size, and indices
# (section V.A in the format document)
structFileHeader = ""&lt;4s2B4HL2L2H""
stringFileHeader = ""PK\003\004""
sizeFileHeader = struct.calcsize(structFileHeader)

_FH_SIGNATURE = 0
_FH_EXTRACT_VERSION = 1
_FH_EXTRACT_SYSTEM = 2
_FH_GENERAL_PURPOSE_FLAG_BITS = 3
_FH_COMPRESSION_METHOD = 4
_FH_LAST_MOD_TIME = 5
_FH_LAST_MOD_DATE = 6
_FH_CRC = 7
_FH_COMPRESSED_SIZE = 8
_FH_UNCOMPRESSED_SIZE = 9
_FH_FILENAME_LENGTH = 10
_FH_EXTRA_FIELD_LENGTH = 11


def _http_get_partial_data(url, start_range, end_range=None):
    req = urllib2.Request(url)
    range_header = ""bytes=%s"" % start_range
    if end_range is not None:
        range_header += ""-%s"" % end_range
    req.headers['Range'] = range_header
    f = urllib2.urlopen(req)    
    return f


def _EndRecData(url):
    """"""Return data from the ""End of Central Directory"" record, or None.

    The data is a list of the nine items in the ZIP ""End of central dir""
    record followed by a tenth item, the file seek offset of this record.""""""
    ECD = _http_get_partial_data(url, -sizeEndCentDir)
    content_range =  ECD.headers.get('Content-Range')
    filesize = int(content_range.split('/')[1]) if content_range and '/' in content_range else 0
    data = ECD.read()
    ECD.close() 
    if data[0:4] == stringEndArchive and data[-2:] == ""\000\000"":
        # the signature is correct and there's no comment, unpack structure
        endrec = struct.unpack(structEndArchive, data)
        endrec = list(endrec)

        # Append a blank comment and record start offset
        endrec.append("""")
        endrec.append(filesize - sizeEndCentDir)
        return endrec
    # Either this is not a ZIP file, or it is a ZIP file with an archive
    # comment.  Search the end of the file for the ""end of central directory""
    # record signature. The comment is the last item in the ZIP file and may be
    # up to 64K long.  It is assumed that the ""end of central directory"" magic
    # number does not appear in the comment.

    # Search by retrieving chunks of 256, 1k and 64k
    try_ranges = (1 &lt;&lt; 8, 1 &lt;&lt; 10, 1 &lt;&lt; 16)
    for check_range in try_ranges:
        ECD = _http_get_partial_data(url, -(check_range + sizeEndCentDir))      
        data = ECD.read()       
        content_range =  ECD.headers.get('Content-Range')       
        ECD.close()
        download_start = content_range.split('-')[0]
        start = data.rfind(stringEndArchive)        
        if start &gt;= 0:          
            # found the magic number; attempt to unpack and interpret
            recData = data[start:start+sizeEndCentDir]
            endrec = list(struct.unpack(structEndArchive, recData))
            commentSize = endrec[_ECD_COMMENT_SIZE] #as claimed by the zip file
            comment = data[start+sizeEndCentDir:start+sizeEndCentDir+commentSize]
            endrec.append(comment)
            endrec.append(download_start + start)           
            return endrec

    raise IOError


class HTTPZipFile:
    def __init__(self, url):
        self.url = url
        self.NameToInfo = {}    # Find file info given name
        self.filelist = []      # List of ZipInfo instances for archive
        self.pwd = None
        self.comment = ''
        self.debug = 0
        self._RealGetContents()     

    def _RealGetContents(self):
        """"""Read in the table of contents for the ZIP file.""""""
        try:
            endrec = _EndRecData(self.url)
        except IOError:
            raise BadZipfile(""File is not a zip file"")
        if not endrec:
            raise BadZipfile, ""File is not a zip file""
        if self.debug &gt; 1:
            print endrec
        size_cd = endrec[_ECD_SIZE]             # bytes in central directory
        offset_cd = endrec[_ECD_OFFSET]         # offset of central directory
        self.comment = endrec[_ECD_COMMENT]     # archive comment

        # ""concat"" is zero, unless zip was concatenated to another file
        concat = endrec[_ECD_LOCATION] - size_cd - offset_cd
        #if endrec[_ECD_SIGNATURE] == stringEndArchive64:
        #   # If Zip64 extension structures are present, account for them
        #   concat -= (sizeEndCentDir64 + sizeEndCentDir64Locator)

        if self.debug &gt; 2:
            inferred = concat + offset_cd
            print ""given, inferred, offset"", offset_cd, inferred, concat
        # self.start_dir:  Position of start of central directory
        self.start_dir = offset_cd + concat
        ECD = _http_get_partial_data(self.url, self.start_dir, self.start_dir+size_cd-1)
        data = ECD.read()
        ECD.close()
        fp = cStringIO.StringIO(data)               
        total = 0
        while total &lt; size_cd:
            centdir = fp.read(sizeCentralDir)
            if centdir[0:4] != stringCentralDir:
                raise BadZipfile, ""Bad magic number for central directory""
            centdir = struct.unpack(structCentralDir, centdir)
            if self.debug &gt; 2:
                print centdir
            filename = fp.read(centdir[_CD_FILENAME_LENGTH])
            # Create ZipInfo instance to store file information
            x = ZipInfo(filename)
            x.extra = fp.read(centdir[_CD_EXTRA_FIELD_LENGTH])
            x.comment = fp.read(centdir[_CD_COMMENT_LENGTH])
            x.header_offset = centdir[_CD_LOCAL_HEADER_OFFSET]
            (x.create_version, x.create_system, x.extract_version, x.reserved,
                x.flag_bits, x.compress_type, t, d,
                x.CRC, x.compress_size, x.file_size) = centdir[1:12]
            x.volume, x.internal_attr, x.external_attr = centdir[15:18]
            # Convert date/time code to (year, month, day, hour, min, sec)
            x._raw_time = t
            x.date_time = ( (d&gt;&gt;9)+1980, (d&gt;&gt;5)&amp;0xF, d&amp;0x1F,
                                     t&gt;&gt;11, (t&gt;&gt;5)&amp;0x3F, (t&amp;0x1F) * 2 )

            x._decodeExtra()
            x.header_offset = x.header_offset + concat
            x.filename = x._decodeFilename()
            self.filelist.append(x)
            self.NameToInfo[x.filename] = x

            # update total bytes read from central directory
            total = (total + sizeCentralDir + centdir[_CD_FILENAME_LENGTH]
                     + centdir[_CD_EXTRA_FIELD_LENGTH]
                     + centdir[_CD_COMMENT_LENGTH])

        if self.debug &gt; 2:
            print ""total"", total

    def namelist(self):
        """"""Return a list of file names in the archive.""""""
        l = []
        for data in self.filelist:
            l.append(data.filename)
        return l

    def infolist(self):
        """"""Return a list of class ZipInfo instances for files in the
        archive.""""""
        return self.filelist

    def printdir(self):
        """"""Print a table of contents for the zip file.""""""
        print ""%-46s %19s %12s"" % (""File Name"", ""Modified    "", ""Size"")
        for zinfo in self.filelist:
            date = ""%d-%02d-%02d %02d:%02d:%02d"" % zinfo.date_time[:6]
            print ""%-46s %s %12d"" % (zinfo.filename, date, zinfo.file_size)

    def getinfo(self, name):
        """"""Return the instance of ZipInfo given 'name'.""""""
        info = self.NameToInfo.get(name)
        if info is None:
            raise KeyError(
                'There is no item named %r in the archive' % name)

        return info         

    def open(self, name, pwd=None):
        """"""Return file-like object for 'name'.""""""
        if not self.url:
            raise RuntimeError, \
                  ""Attempt to read ZIP archive that was already closed""
        zinfo = self.getinfo(name)
        offset = zinfo.header_offset
        f = _http_get_partial_data(self.url, offset, offset+sizeFileHeader-1)
        fheader = f.read()
        f.close()

        fheader = struct.unpack(structFileHeader, fheader)
        offset += sizeFileHeader
        f = _http_get_partial_data(self.url, offset, offset+fheader[_FH_FILENAME_LENGTH]-1)
        fname = f.read()
        f.close()

        if fname != zinfo.orig_filename:
            raise BadZipfile, \
                      'File name in directory ""%s"" and header ""%s"" differ.' % (
                          zinfo.orig_filename, fname)

        is_encrypted = zinfo.flag_bits &amp; 0x1
        if is_encrypted:
            raise RuntimeError, ""File %s is encrypted, "" \
                  ""not supported."" % name

        offset += fheader[_FH_FILENAME_LENGTH]+fheader[_FH_EXTRA_FIELD_LENGTH]
        f = _http_get_partial_data(self.url, offset, offset+fheader[_FH_COMPRESSED_SIZE]-1)
        data = f.read()
        return ZipExtFile(cStringIO.StringIO(data), 'r', zinfo)


if __name__ == ""__main__"":
    # Some tests
    link=""http://dfn.dl.sourceforge.net/project/filezilla/FileZilla_Client/3.5.1/FileZilla_3.5.1_win32.zip""
    hzfile = HTTPZipFile(link)
    hzfile.printdir()
    for fname in ('GPL.html', 'resources/blukis/48x48/filter.png', 'resources/finished.wav'):
        source_name = join('FileZilla-3.5.1', fname)
        dest_fname = join('/tmp', basename(fname))
        print ""Extracing %s to %s"" % (source_name, dest_fname)
        with hzfile.open(source_name) as f:
            data = f.read()
            new_file = open(dest_fname, 'w')
            new_file.write(data)
            new_file.close()
</code></pre>
",""
"7852229","2","7829311","<p>You can solve this a bit more generally with less code.  Essentially, create enough of a file-like object for ZipFile to use.  So you wind up with <code>z = ZipFile(HttpFile(url))</code> and it dynamically downloads just the portion needed.  The advantage with this is you write less code, and it applies to more than just zip files.  (In fact, I wonder if there is something like this already... I'm not finding it though.)</p>

<p>Using the same idea, you could also create a caching wrapper for HttpFile to avoid repeated downloads.</p>

<p>And here's the code: (note the lack of error-handling)</p>

<pre><code>#!/usr/bin/python
import urllib2

class HttpFile(object):
    def __init__(self, url):
        self.url = url
        self.offset = 0
        self._size = -1

    def size(self):
        if self._size &lt; 0:
            f = urllib2.urlopen(self.url)
            self._size = int(f.headers[""Content-length""])
        return self._size

    def read(self, count=-1):
        req = urllib2.Request(self.url)
        if count &lt; 0:
            end = self.size() - 1
        else:
            end = self.offset + count - 1
        req.headers['Range'] = ""bytes=%s-%s"" % (self.offset, end)
        f = urllib2.urlopen(req)
        data = f.read()
        # FIXME: should check that we got the range expected, etc.
        chunk = len(data)
        if count &gt;= 0:
            assert chunk == count
        self.offset += chunk
        return data

    def seek(self, offset, whence=0):
        if whence == 0:
            self.offset = offset
        elif whence == 1:
            self.offset += offset
        elif whence == 2:
            self.offset = self.size() + offset
        else:
            raise Exception(""Invalid whence"")

    def tell(self):
        return self.offset
</code></pre>
",""
"7876088","2","7782046","<p>Rules in Flask are unique.  If you define the absolute same URL to the same function it will by default clash because you're doing something which we stop you from doing since from our perspective that is wrong.</p>

<p>There is one reason why you would want to have more than one URL to the absolute same endpoint and that is backwards compatibility with a rule that existed in the past.  Since WZ0.8 and Flask 0.8 you can explicitly specify an alias for a route:</p>

<pre><code>@app.route('/')
@app.route('/index.html', alias=True)
def index():
    return ...
</code></pre>

<p>In this case if the user requests <code>/index.html</code> Flask will automatically issue a permanently redirect to just <code>/</code>.</p>

<p>That does not mean a function could not be bound to more than one url though, but in this case you would need to change the endpoint:</p>

<pre><code>@app.route('/')
def index():
    ...

app.add_url_rule('/index.html', view_func=index, endpoint='alt_index')
</code></pre>

<p>Or alternatively:</p>

<pre><code>@app.route('/')
@app.route('/index.html', endpoint='alt_index')
def index():
    ...
</code></pre>

<p>In this case you can define a view a second time under a different name.  However this is something you generally want to avoid because then the view function would have to check request.endpoint to see what is called.  Instead better do something like this:</p>

<pre><code>@app.route('/')
def index():
    return _index(alt=False)

@app.route('/index.html')
def alt_index():
    return _index(alt=True)

def _index(alt):
    ...
</code></pre>

<p>In both of these cases URL generation is <code>url_for('index')</code> or <code>url_for('alt_index')</code>.</p>

<p>You can also do this on the routing system level:</p>

<pre><code>@app.route('/', defaults={'alt': False})
@app.route('/index.html', defaults={'alt': True})
def index(alt):
    ...
</code></pre>

<p>In this case url generation is <code>url_for('index', alt=True)</code> or <code>url_for('index', alt=False)</code>.</p>
",""
"7942780","2","7782485","<p>@BryanOakley   It took me a while to test your suggestion since I have no Mac.
Unfortunately Mac implementation of Python is buggy. 
I've added focus, ie my disable function which I call after creating a window and inserting text, now calls first:</p>

<pre><code>self.txt['state'] = 'disabled'
</code></pre>

<p>and then</p>

<pre><code>self.txt.focus_set()
</code></pre>

<p>Which is what I think you've suggested.</p>

<p>It ""kind of"" worked. Ie: when selecting text (click and drag or double-click) highlighting works <em>most</em> of the time.   Python must have some bad memory references or such bugs: Sometimes highlighting doesn't work at first, then it starts working (in the same window) after more clicking. Sometimes when program is invoked it works right of the bat.   Sometimes selecting with Shift-rightArrow key will work but selecting with the mouse will not. Then starts working again. Or it will work fine in one window but not in another one (both of the same class), then starts working in all windows...etc...</p>

<p>The good thing is that adding focus did not affect badly Windows (ie all works fine as without focus.
I guess at this point I will just hope that future/next release of Python for Mac will fix those bugs..</p>

<p>BTW, it seems that Mac is a bit of an orphan for Python.   Implementation is much uglier then for Windows. I mean the fonts look worse, the buttons, etc..  Or it could be due to different screen resolutions and Python ports that poorly account for those. Not sure</p>

<p>Anyway.   Thank you for your help and suggestion to use focus for Mac. </p>
",""
"8047142","2","7781792","<p>I implemented the following for python for wait_for_condition since the python selenium driver does not support this function.</p>

<pre><code>def wait_for_condition(c):
for x in range(1,10):
    print ""Waiting for ajax: "" + c
    x = browser.execute_script(""return "" + c)
    if(x):
        return
    time.sleep(1)
</code></pre>

<p>to be used as</p>

<p>Wait that an ExtJS Ajax call is not pending:</p>

<pre><code>wait_for_condition(""!Ext.Ajax.isLoading()"")
</code></pre>

<p>A Javascript variable is set</p>

<pre><code>wait_for_condition(""CG.discovery != undefined;"")
</code></pre>

<p>etc.</p>
",""
"8226638","1","","<p>What is the easiest and fastest way to do a modulo operation (<code>5 % 2</code>) in Cython code? It seems that using <code>%</code> slows down the code a lot, so is a better way to do this?</p>
","<python><cython><modulo>"
"8226785","2","8226638","<p>According to <a href=""http://wiki.cython.org/enhancements/division"" rel=""nofollow"">http://wiki.cython.org/enhancements/division</a>, use the compiler directive <code>cython.cdivision</code>. Note that there will be different semantics for handling the modulus of negative numbers.</p>
",""
"8227206","2","8226638","<p>Can you use the builtin <code>divmod</code> instead? This function takes two arguments and returns the tuple of their quotient and remainder.</p>

<pre><code>&gt;&gt;&gt; 10 % 7
3
&gt;&gt;&gt; divmod(10,7)
(1, 3)
&gt;&gt;&gt; -7 % 3
2
&gt;&gt;&gt; divmod(-7,3)
(-3, 2)
</code></pre>
",""
"8259648","2","111945","<p>I've used a variety of python HTTP libs in the past, and I've settled on '<a href=""http://docs.python-requests.org/en/latest/index.html"">Requests</a>' as my favourite.  Existing libs had pretty useable interfaces, but code can end up being a few lines too long for simple operations.  A basic PUT in requests looks like:</p>

<pre><code>payload = {'username': 'bob', 'email': 'bob@bob.com'}
&gt;&gt;&gt; r = requests.put(""http://somedomain.org/endpoint"", data=payload)
</code></pre>

<p>You can then check the response status code with:</p>

<pre><code>r.status_code
</code></pre>

<p>or the response with:</p>

<pre><code>r.content
</code></pre>

<p>Requests has a lot synactic sugar and shortcuts that'll make your life easier.</p>
",""
"8474838","2","111954","<p>The reliable/standardized way to parse FTP directory listing is by using MLSD command, which by now should be supported by all recent/decent FTP servers.</p>

<pre><code>import ftplib
f = ftplib.FTP()
f.connect(""localhost"")
f.login()
ls = []
f.retrlines('MLSD', ls.append)
for entry in ls:
    print entry
</code></pre>

<p>The code above will print:</p>

<pre><code>modify=20110723201710;perm=el;size=4096;type=dir;unique=807g4e5a5; tests
modify=20111206092323;perm=el;size=4096;type=dir;unique=807g1008e0; .xchat2
modify=20111022125631;perm=el;size=4096;type=dir;unique=807g10001a; .gconfd
modify=20110808185618;perm=el;size=4096;type=dir;unique=807g160f9a; .skychart
...
</code></pre>

<p>Starting from python 3.3, ftplib will provide a specific method to do this:</p>

<ul>
<li><a href=""http://bugs.python.org/issue11072"" rel=""noreferrer"">http://bugs.python.org/issue11072</a></li>
<li><a href=""http://hg.python.org/cpython/file/67053b135ed9/Lib/ftplib.py#l535"" rel=""noreferrer"">http://hg.python.org/cpython/file/67053b135ed9/Lib/ftplib.py#l535</a></li>
</ul>
",""
"8598742","2","36932","<p>I have had occasion to need of an Enum class, for the purpose of decoding a binary file format. The features I happened to want is concise enum definition, the ability to freely create instances of the enum by either integer value or string, and a useful <code>repr</code>esentation.  Here's what I ended up with:</p>

<pre><code>&gt;&gt;&gt; class Enum(int):
...     def __new__(cls, value):
...         if isinstance(value, str):
...             return getattr(cls, value)
...         elif isinstance(value, int):
...             return cls.__index[value]
...     def __str__(self): return self.__name
...     def __repr__(self): return ""%s.%s"" % (type(self).__name__, self.__name)
...     class __metaclass__(type):
...         def __new__(mcls, name, bases, attrs):
...             attrs['__slots__'] = ['_Enum__name']
...             cls = type.__new__(mcls, name, bases, attrs)
...             cls._Enum__index = _index = {}
...             for base in reversed(bases):
...                 if hasattr(base, '_Enum__index'):
...                     _index.update(base._Enum__index)
...             # create all of the instances of the new class
...             for attr in attrs.keys():
...                 value = attrs[attr]
...                 if isinstance(value, int):
...                     evalue = int.__new__(cls, value)
...                     evalue._Enum__name = attr
...                     _index[value] = evalue
...                     setattr(cls, attr, evalue)
...             return cls
... 
</code></pre>

<p>A whimsical example of using it:</p>

<pre><code>&gt;&gt;&gt; class Citrus(Enum):
...     Lemon = 1
...     Lime = 2
... 
&gt;&gt;&gt; Citrus.Lemon
Citrus.Lemon
&gt;&gt;&gt; 
&gt;&gt;&gt; Citrus(1)
Citrus.Lemon
&gt;&gt;&gt; Citrus(5)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""&lt;stdin&gt;"", line 6, in __new__
KeyError: 5
&gt;&gt;&gt; class Fruit(Citrus):
...     Apple = 3
...     Banana = 4
... 
&gt;&gt;&gt; Fruit.Apple
Fruit.Apple
&gt;&gt;&gt; Fruit.Lemon
Citrus.Lemon
&gt;&gt;&gt; Fruit(1)
Citrus.Lemon
&gt;&gt;&gt; Fruit(3)
Fruit.Apple
&gt;&gt;&gt; ""%d %s %r"" % ((Fruit.Apple,)*3)
'3 Apple Fruit.Apple'
&gt;&gt;&gt; Fruit(1) is Citrus.Lemon
True
</code></pre>

<p>Key features:</p>

<ul>
<li><code>str()</code>, <code>int()</code> and <code>repr()</code> all produce the most useful output possible, respectively the name of the enumartion, its integer value, and a Python expression that evaluates back to the enumeration.</li>
<li>Enumerated values returned by the constructor are limited strictly to the predefined values, no accidental enum values.</li>
<li>Enumerated values are singletons; they can be strictly compared with <code>is</code></li>
</ul>
",""
"8861512","2","7781792","<p>From the <a href=""http://seleniumhq.org/docs/book/Selenium_Documentation.pdf"">Selenium Documentation PDF</a> :</p>

<pre><code>import contextlib
import selenium.webdriver as webdriver
import selenium.webdriver.support.ui as ui

with contextlib.closing(webdriver.Firefox()) as driver:
    driver.get('http://www.google.com')
    wait = ui.WebDriverWait(driver,10)
    # Do not call `implicitly_wait` if using `WebDriverWait`.
    #     It magnifies the timeout.
    # driver.implicitly_wait(10)  
    inputElement=driver.find_element_by_name('q')
    inputElement.send_keys('Cheese!')
    inputElement.submit()
    print(driver.title)

    wait.until(lambda driver: driver.title.lower().startswith('cheese!'))
    print(driver.title)

    # This raises
    #     selenium.common.exceptions.TimeoutException: Message: None
    #     after 10 seconds
    wait.until(lambda driver: driver.find_element_by_id('someId'))
    print(driver.title)
</code></pre>
",""
"8905914","2","36932","<p>I really like Alec Thomas' solution (http://stackoverflow.com/a/1695250):</p>

<pre><code>def enum(**enums):
    '''simple constant ""enums""'''
    return type('Enum', (object,), enums)
</code></pre>

<p>It's elegant and clean looking, but it's just a function that creates a class with the specified attributes.</p>

<p>With a little modification to the function, we can get it to act a little more 'enumy':</p>

<blockquote>
  <p>NOTE: I created the following examples by trying to reproduce the
  behavior of pygtk's new style 'enums' (like Gtk.MessageType.WARNING)</p>
</blockquote>

<pre><code>def enum_base(t, **enums):
    '''enums with a base class'''
    T = type('Enum', (t,), {})
    for key,val in enums.items():
        setattr(T, key, T(val))

    return T
</code></pre>

<p>This creates an enum based off a specified type. In addition to giving attribute access like the previous function, it behaves as you would expect an Enum to with respect to types.  It also inherits the base class.</p>

<p>For example, integer enums:</p>

<pre><code>&gt;&gt;&gt; Numbers = enum_base(int, ONE=1, TWO=2, THREE=3)
&gt;&gt;&gt; Numbers.ONE
1
&gt;&gt;&gt; x = Numbers.TWO
&gt;&gt;&gt; 10 + x
12
&gt;&gt;&gt; type(Numbers)
&lt;type 'type'&gt;
&gt;&gt;&gt; type(Numbers.ONE)
&lt;class 'Enum'&gt;
&gt;&gt;&gt; isinstance(x, Numbers)
True
</code></pre>

<p>Another interesting thing that can be done with this method is customize specific behavior by overriding built-in methods:</p>

<pre><code>def enum_repr(t, **enums):
    '''enums with a base class and repr() output'''
    class Enum(t):
        def __repr__(self):
            return '&lt;enum {0} of type Enum({1})&gt;'.format(self._name, t.__name__)

    for key,val in enums.items():
        i = Enum(val)
        i._name = key
        setattr(Enum, key, i)

    return Enum



&gt;&gt;&gt; Numbers = enum_repr(int, ONE=1, TWO=2, THREE=3)
&gt;&gt;&gt; repr(Numbers.ONE)
'&lt;enum ONE of type Enum(int)&gt;'
&gt;&gt;&gt; str(Numbers.ONE)
'1'
</code></pre>
",""
"9145592","2","62064","<p>I would strongly suggest <a href=""http://python.mirocommunity.org/"" rel=""nofollow"">http://python.mirocommunity.org/</a>. It's by far the best resource on the <a href=""http://en.wikipedia.org/wiki/Python_%28programming_language%29"" rel=""nofollow"">Python</a> and <a href=""http://en.wikipedia.org/wiki/Django_%28web_framework%29"" rel=""nofollow"">Django</a> subjects. Please somebody show me better one :) </p>
",""
"9153726","2","7796752","<p>The <code>INTERNAL_IPS</code> should be a list or tuple, not a string, so:</p>

<pre><code>INTERNAL_IPS = ('127.0.0.1', )   # note, comma
</code></pre>
",""
"9201329","2","36932","<p>An Enum class can be a one-liner.</p>

<pre><code>class Enum(tuple): __getattr__ = tuple.index
</code></pre>

<p>How to use it (forward and reverse lookup, keys, values, items, etc.)</p>

<pre><code>&gt;&gt;&gt; State = Enum(['Unclaimed', 'Claimed'])
&gt;&gt;&gt; State.Claimed
1
&gt;&gt;&gt; State[1]
'Claimed'
&gt;&gt;&gt; State
('Unclaimed', 'Claimed')
&gt;&gt;&gt; range(len(State))
[0, 1]
&gt;&gt;&gt; [(k, State[k]) for k in range(len(State))]
[(0, 'Unclaimed'), (1, 'Claimed')]
&gt;&gt;&gt; [(k, getattr(State, k)) for k in State]
[('Unclaimed', 0), ('Claimed', 1)]
</code></pre>
",""
"9217524","2","7780998","<p>You can accomplish this using the built-in function <a href=""http://docs.python.org/library/functions.html#iter""><code>iter()</code></a> using the two-argument call method:</p>

<pre><code>import functools
for i in iter(fuctools.partial(sys.stdin.read, 1), '\n'):
    ...
</code></pre>

<p>Documentation for this:</p>

<blockquote>
  <p><a href=""http://docs.python.org/library/functions.html#iter""><code>iter(o[, sentinel])</code></a><br>
  ...<br>
  If the second argument, <em>sentinel</em>, is given, then <em>o</em> must be a callable object. The iterator created in this case will call <em>o</em> with no arguments for each call to its <a href=""http://docs.python.org/library/stdtypes.html#iterator.next""><code>next()</code></a> method; if the value returned is equal to <em>sentinel</em>, <a href=""http://docs.python.org/library/exceptions.html#exceptions.StopIteration""><code>StopIteration</code></a> will be raised, otherwise the value will be returned.</p>
  
  <p>One useful application of the second form of <a href=""http://docs.python.org/library/functions.html#iter""><code>iter()</code></a> is to read lines of a file until a certain line is reached. The following example reads a file until the <code>readline()</code> method returns an empty string:</p>
</blockquote>

<pre><code>with open('mydata.txt') as fp:
    for line in iter(fp.readline, ''):
        process_line(line)
</code></pre>
",""
"9387466","2","7781792","<p>You could always use a short sleep in a loop and pass it your element id:</p>

<pre><code>def wait_for_element(element):
     count = 1
     if(self.is_element_present(element)):
          if(self.is_visible(element)):
              return
          else:
              time.sleep(.1)
              count = count + 1
     else:
         time.sleep(.1)
         count = count + 1
         if(count &gt; 300):
             print(""Element %s not found"" % element)
             self.stop
             #prevents infinite loop
</code></pre>
",""
"9714622","2","7769981","<p>I spent hours trying to find the answer to this. The solution turns out to be really simple: struct.unpack is what you're looking for. The final code will look something like this:</p>

<pre><code>rawdata=stream.read()                  # The raw PCM data in need of conversion
from struct import unpack              # Import unpack -- this is what does the conversion
npts=len(rawdata)                      # Number of data points to be converted
formatstr='%ih' % npts                 # The format to convert the data; use '%iB' for unsigned PCM
int_data=unpack(formatstr,rawdata)     # Convert from raw PCM to integer tuple
</code></pre>

<p>Most of the credit goes to <a href=""https://stackoverflow.com/questions/2226853/interpreting-wav-data"">Interpreting WAV Data</a>. The only trick is getting the format right for unpack: it has to be the right number of bytes and the right format (signed or unsigned).</p>
",""
"9865533","2","7782772","<p>Python 2.6.7
BeautifulSoup.<strong>version</strong> 3.2.0</p>

<p>This worked for me:</p>

<pre><code>unicode.join(u'\n',map(unicode,result))
</code></pre>

<p>I'm pretty sure a  <code>result</code> is a <code>BeautifulSoup.ResultSet</code> object, which seems to be an extension of the standard python list</p>
",""
"9867663","2","38238","<p>When a user logs in on my website, a User() object is instantiated from the username and password.</p>

<p>If I need a user object without the user being there to log in (e.g. an admin user might want to delete another users account, so i need to instantiate that user and call its delete method):</p>

<p>I have class methods to grab the user object.</p>

<pre><code>class User():
    #lots of code
    #...
    # more code

    @classmethod
    def get_by_username(cls, username):
        return cls.query(cls.username == username).get()

    @classmethod
    def get_by_auth_id(cls, auth_id):
        return cls.query(cls.auth_id == auth_id).get()
</code></pre>
",""
"9965418","2","7782485","<p>Sorry for bumping an old question, but I was searching for an answer to this question also and finally found a solution. The solution I found involves overriding the key bindings when the text widget has focus and is pretty simple. Found <a href=""http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"" rel=""nofollow"">here</a>.</p>

<p>To override the bindings of a widget there is a bind function where you pass a string of what is to be overridden and the new function you want it to call.</p>

<pre><code>    self.txtBox.bind(""&lt;Key&gt;"", self.empty)
</code></pre>

<p>Somewhere else in the class you'll need to define the function to handle the event.</p>

<pre><code>    def empty(self, event):
        return ""break""
</code></pre>

<p>By returning the string ""break"" the event handler knows to stop after your function, instead of continuing with the default action.</p>

<p>I hope this answers your question. Cheers.</p>
",""
"10004274","2","36932","<p>I use a metaclass to implement an enumeration (in my thought, it is a const). Here is the code:</p>

<pre><code>class ConstMeta(type):
    '''
    Metaclass for some class that store constants
    '''
    def __init__(cls, name, bases, dct):
        '''
        init class instance
        '''
        def static_attrs():
            '''
            @rtype: (static_attrs, static_val_set)
            @return: Static attributes in dict format and static value set
            '''
            import types
            attrs = {}
            val_set = set()
            #Maybe more
            filter_names = set(['__doc__', '__init__', '__metaclass__', '__module__', '__main__'])
            for key, value in dct.iteritems():
                if type(value) != types.FunctionType and key not in filter_names:
                    if len(value) != 2:
                        raise NotImplementedError('not support for values that is not 2 elements!')
                    #Check value[0] duplication.
                    if value[0] not in val_set:
                        val_set.add(value[0])
                    else:
                        raise KeyError(""%s 's key: %s is duplicated!"" % (dict([(key, value)]), value[0]))
                    attrs[key] = value
            return attrs, val_set

        attrs, val_set = static_attrs()
        #Set STATIC_ATTRS to class instance so that can reuse
        setattr(cls, 'STATIC_ATTRS', attrs)
        setattr(cls, 'static_val_set', val_set)
        super(ConstMeta, cls).__init__(name, bases, dct)

    def __getattribute__(cls, name):
        '''
        Rewrite the special function so as to get correct attribute value
        '''
        static_attrs = object.__getattribute__(cls, 'STATIC_ATTRS')
        if name in static_attrs:
            return static_attrs[name][0]
        return object.__getattribute__(cls, name)

    def static_values(cls):
        '''
        Put values in static attribute into a list, use the function to validate value.
        @return: Set of values
        '''
        return cls.static_val_set

    def __getitem__(cls, key):
        '''
        Rewrite to make syntax SomeConstClass[key] works, and return desc string of related static value.
        @return: Desc string of related static value
        '''
        for k, v in cls.STATIC_ATTRS.iteritems():
            if v[0] == key:
                return v[1]
        raise KeyError('Key: %s does not exists in %s !' % (str(key), repr(cls)))


class Const(object):
    '''
    Base class for constant class.

    @usage:

    Definition: (must inherit from Const class!
        &gt;&gt;&gt; class SomeConst(Const):
        &gt;&gt;&gt;   STATUS_NAME_1 = (1, 'desc for the status1')
        &gt;&gt;&gt;   STATUS_NAME_2 = (2, 'desc for the status2')

    Invoke(base upper SomeConst class):
    1) SomeConst.STATUS_NAME_1 returns 1
    2) SomeConst[1] returns 'desc for the status1'
    3) SomeConst.STATIC_ATTRS returns {'STATUS_NAME_1': (1, 'desc for the status1'), 'STATUS_NAME_2': (2, 'desc for the status2')}
    4) SomeConst.static_values() returns set([1, 2])

    Attention:
    SomeCosnt's value 1, 2 can not be duplicated!
    If WrongConst is like this, it will raise KeyError:
    class WrongConst(Const):
        STATUS_NAME_1 = (1, 'desc for the status1')
        STATUS_NAME_2 = (1, 'desc for the status2')
    '''
    __metaclass__ = ConstMeta
##################################################################
#Const Base Class ends
##################################################################


def main():
    class STATUS(Const):
        ERROR = (-3, '??')
        OK = (0, '??')

    print STATUS.ERROR
    print STATUS.static_values()
    print STATUS.STATIC_ATTRS

    #Usage sample:
    user_input = 1
    #Validate input:
    print user_input in STATUS.static_values()
    #Template render like:
    print '&lt;select&gt;'
    for key, value in STATUS.STATIC_ATTRS.items():
        print '&lt;option value=""%s""&gt;%s&lt;/option&gt;' % (value[0], value[1])
    print '&lt;/select&gt;'


if __name__ == '__main__':
    main()
</code></pre>
",""
"10147388","2","7796752","<p>I was having the same problems.  But, I think I figured it out.  I believe the step you are missing is to add 'debug_toolbar' to your projects setting.py INSTALLED_APPS tuple.  This solves it for me.  Here is a link to the <a href=""http://www.packtpub.com/article/django-debug-toolbar"" rel=""nofollow"">article</a> that I used as a reference.</p>
",""
"10254842","2","37535","<p>I was able to read a DBF file (with associated BAK, CDX, FBT, TBK files**) using the dbf package from PyPI <a href=""http://pypi.python.org/pypi/dbf"">http://pypi.python.org/pypi/dbf</a> . I am new to python and know nothing about DBF files, but it worked easily to read a DBF file from my girlfriend's business (created with a music store POS application called AIMsi).  </p>

<p>After installing the dbf package (I used aptitude and installed dbf version 0.88 I think), the following python code worked:</p>

<pre><code>from dbf import *
test = Table(""testfile.dbf"")
for record in test:
    print record
    x = raw_input("""")  # to pause between showing records
</code></pre>

<p>That's all I know for now, but hopefully it's a useful start for someone else who finds this question!</p>

<blockquote>
  <p>April 21, 2012 SJK Edit: Per Ethan Furman's comment, I should point out that I actually don't know <em>which</em> of the data files were necessary, besides the DBF file.  The first time I ran the script, with only the DBF available, it complained of a missing support file.  So, I just copied over the BAK, CDX, FPT (not FBT as I said before edit), TBK files and then it worked. </p>
</blockquote>
",""
"10272369","2","60208","<p>If you have a complicated case block you can consider using a function dictionary lookup table... </p>

<p>If you haven't done this before its a good idea to step into your debugger and view exactly how the dictionary looks up each function.  </p>

<p>NOTE: Do <em>not</em> use ""()"" inside the case/dictionary lookup or it will call each of your functions as the dictionary / case block is created.  Remember this because you only want to call each function once using a hash style lookup.</p>

<pre><code>def first_case():
    print ""first""

def second_case():
    print ""second""

def third_case():
    print ""third""

mycase = {
'first': first_case, #do not use ()
'second': second_case, #do not use ()
'third': third_case #do not use ()
}
myfunc = mycase['first']
myfunc()
</code></pre>
",""
"10519634","2","35538","<p>I think the most elegant way it to invoke the W3C Validation Service at</p>

<pre><code>http://validator.w3.org/
</code></pre>

<p>programmatically. Few people know that you do not have to screen-scrape the results in order to get the results, because the service returns non-standard HTTP header paramaters </p>

<pre><code>X-W3C-Validator-Recursion: 1
X-W3C-Validator-Status: Invalid (or Valid)
X-W3C-Validator-Errors: 6
X-W3C-Validator-Warnings: 0
</code></pre>

<p>for indicating the validity and the number of errors and warnings.</p>

<p>For instance, the command line </p>

<pre><code>curl -I ""http://validator.w3.org/check?uri=http%3A%2F%2Fwww.stalsoft.com""
</code></pre>

<p>returns</p>

<pre><code>HTTP/1.1 200 OK
Date: Wed, 09 May 2012 15:23:58 GMT
Server: Apache/2.2.9 (Debian) mod_python/3.3.1 Python/2.5.2
Content-Language: en
X-W3C-Validator-Recursion: 1
X-W3C-Validator-Status: Invalid
X-W3C-Validator-Errors: 6
X-W3C-Validator-Warnings: 0
Content-Type: text/html; charset=UTF-8
Vary: Accept-Encoding
Connection: close
</code></pre>

<p>Thus, you can elegantly invoke the W3C Validation Service and extract the results from the HTTP header:</p>

<pre class=""lang-python prettyprint-override""><code># Programmatic XHTML Validations in Python
# Martin Hepp and Alex Stolz
# mhepp@computer.org / alex.stolz@ebusiness-unibw.org

import urllib
import urllib2

URL = ""http://validator.w3.org/check?uri=%s""
SITE_URL = ""http://www.heppnetz.de""

# pattern for HEAD request taken from 
# http://stackoverflow.com/questions/4421170/python-head-request-with-urllib2

request = urllib2.Request(URL % urllib.quote(SITE_URL))
request.get_method = lambda : 'HEAD'
response = urllib2.urlopen(request)

valid = response.info().getheader('X-W3C-Validator-Status')
if valid == ""Valid"":
    valid = True
else:
    valid = False
errors = int(response.info().getheader('X-W3C-Validator-Errors'))
warnings = int(response.info().getheader('X-W3C-Validator-Warnings'))

print ""Valid markup: %s (Errors: %i, Warnings: %i) "" % (valid, errors, warnings)
</code></pre>
",""
"10750633","2","35817","<p>Maybe <code>subprocess.list2cmdline</code> is a better shot?</p>
",""
"11147900","2","36932","<p>A variant (with support to get an enum value's name) to <a href=""https://stackoverflow.com/questions/36932/whats-the-best-way-to-implement-an-enum-in-python/1695250#1695250"">Alec Thomas's neat answer</a>:</p>

<pre><code>class EnumBase(type):
    def __init__(self, name, base, fields):
        super(EnumBase, self).__init__(name, base, fields)
        self.__mapping = dict((v, k) for k, v in fields.iteritems())
    def __getitem__(self, val):
        return self.__mapping[val]

def enum(*seq, **named):
    enums = dict(zip(seq, range(len(seq))), **named)
    return EnumBase('Enum', (), enums)

Numbers = enum(ONE=1, TWO=2, THREE='three')
print Numbers.TWO
print Numbers[Numbers.ONE]
print Numbers[2]
print Numbers['three']
</code></pre>
",""
"11438029","2","7782538","<p>I've had some luck embedding Spyder in a C/C++ program that I had created wrappers for (using PySide). Since the wrappers included the main application logic, I turned the program into a python application and then embedded Spyder using one of their examples.</p>

<p>However, it uses pdb or winpdb under the hood, so complete functionality is still not there IMHO.</p>
",""
"11784942","2","38056","<p>i had problems with the versions above (for example the function found also part of the string and such things...)
so i wrote my own, modified version of Maksym Kozlenko's:</p>

<pre><code>#proc    -&gt; name/id of the process
#id = 1  -&gt; search for pid
#id = 0  -&gt; search for name (default)

def process_exists(proc, id = 0):
   ps = subprocess.Popen(""ps -A"", shell=True, stdout=subprocess.PIPE)
   ps_pid = ps.pid
   output = ps.stdout.read()
   ps.stdout.close()
   ps.wait()

   for line in output.split(""\n""):
      if line != """" and line != None:
        fields = line.split()
        pid = fields[0]
        pname = fields[3]

        if(id == 0):
            if(pname == proc):
                return True
        else:
            if(pid == proc):
                return True
return False
</code></pre>

<p>I think it's more reliable, easier to read and you have the option to check for process ids or names.</p>
",""
"11904594","2","7798120","<p>Here is my solution:</p>

<pre><code>from java.util import Calendar, GregorianCalendar

def datetimeToJavaDate(value):
    cal = GregorianCalendar(value.year, value.month - 1, value.day, 
        value.hour, value.minute, value.second)
    cal.set (Calendar.MILLISECOND, value.microsecond / 1000)
    return cal.getTime()
</code></pre>
",""
"12312026","2","38238","<p>This is an interesting topic. My take on it is that python classmethod operates like a singleton rather than a factory (which returns a produced an instance of a class). The reason it is a singleton is that there is a common object that is produced (the dictionary) but only once for the class but shared by all instances.</p>

<p>To illustrate this here is an example. Note that all instances have a reference to the single dictionary. This is not Factory pattern as I understand it. This is probably very unique to python.</p>

<pre><code>class M():
 @classmethod
 def m(cls, arg):
     print ""arg was"",  getattr(cls, ""arg"" , None),
     cls.arg = arg
     print ""arg is"" , cls.arg

 M.m(1)   # prints arg was None arg is 1
 M.m(2)   # prints arg was 1 arg is 2
 m1 = M()
 m2 = M() 
 m1.m(3)  # prints arg was 2 arg is 3  
 m2.m(4)  # prints arg was 3 arg is 4 &lt;&lt; this breaks the factory pattern theory.
 M.m(5)   # prints arg was 4 arg is 5
</code></pre>
",""
"12362812","2","36901","<p><code>*</code> and <code>**</code> have special usage in the function argument list. <code>*</code>
implies that the argument is a list and <code>**</code> implies that the argument
is a dictionary. This allows functions to take arbitrary number of
arguments</p>
",""
"12583531","2","8226638","<p>I use % operator everywhere, and I don't think it slows the code. In fact, % is really fast! Are you declaring your variables with cdef? Maybe you are adding too much python overhead just because of that.</p>
",""
"12642509","2","60208","<p>Greg's solutions will not work for unhashable entries. For example when indexing <code>lists</code>.</p>

<pre><code># doesn't work
def give_me_array(key)
  return {
      [1, 0]: ""hello""
    }[key]
</code></pre>

<p>Luckily though <code>tuples</code> are hashable.</p>

<pre><code># works
def give_me_array(key)
  return {
      (1, 0): ""hello""
    }[tuple(key)]
</code></pre>

<p>Similarly there probably are immutable (thus probably hashable) versions of dictionaries or sets too.</p>
",""
"13058101","2","7781792","<p>Selenium 2's Python bindings have a new support class called expected_conditions.py for doing all sorts of things like testing if an element is visible. It's <a href=""http://code.google.com/p/selenium/source/browse/trunk/py/selenium/webdriver/support/expected_conditions.py"" rel=""nofollow noreferrer"">available here.</a></p>

<p><strong>NOTE:</strong> the above file is in the trunk as of Oct 12, 2012, but not yet in the latest download which is still 2.25. For the time being until a new Selenium version is released, you can just save this file locally for now and include it in your imports like I've done below.</p>

<p>To make life a little simpler, you can combine some of these expected condition methods with the Selenium <code>wait until</code> logic to make some very handy functions similar to what was available in Selenium 1. For example, I put this into my base class called SeleniumTest which all of my Selenium test classes extend:</p>

<pre><code>from selenium.common.exceptions import TimeoutException
from selenium.webdriver.common.by import By
import selenium.webdriver.support.expected_conditions as EC
import selenium.webdriver.support.ui as ui

@classmethod
def setUpClass(cls):
    cls.selenium = WebDriver()
    super(SeleniumTest, cls).setUpClass()

@classmethod
def tearDownClass(cls):
    cls.selenium.quit()
    super(SeleniumTest, cls).tearDownClass()

# return True if element is visible within 2 seconds, otherwise False
def is_visible(self, locator, timeout=2):
    try:
        ui.WebDriverWait(driver, timeout).until(EC.visibility_of_element_located((By.CSS_SELECTOR, locator)))
        return True
    except TimeoutException:
        return False

# return True if element is not visible within 2 seconds, otherwise False
def is_not_visible(self, locator, timeout=2):
    try:
        ui.WebDriverWait(driver, timeout).until_not(EC.visibility_of_element_located((By.CSS_SELECTOR, locator)))
        return True
    except TimeoutException:
        return False
</code></pre>

<p>You can then use these easily in your tests like so:</p>

<pre><code>def test_search_no_city_entered_then_city_selected(self):
    sel = self.selenium
    sel.get('%s%s' % (self.live_server_url, '/'))
    self.is_not_visible('#search-error')
</code></pre>
",""
"13239503","2","60208","<pre><code>def f(x):
     return 1 if x == 'a' else\
            2 if x in 'bcd' else\
            0 #default
</code></pre>

<p>Short and easy to read, has a default value and supports expressions in both conditions and return values.</p>

<p>However, it is less efficient than the solution with a dictionary. For example, Python has to scan through all the conditions before returning the default value.</p>
",""
"13474078","2","36932","<p>I like to use lists or sets as enumerations. For example:</p>

<pre><code>&gt;&gt;&gt; packet_types = ['INIT', 'FINI', 'RECV', 'SEND']
&gt;&gt;&gt; packet_types.index('INIT')
0
&gt;&gt;&gt; packet_types.index('FINI')
1
&gt;&gt;&gt;
</code></pre>
",""
"14042417","2","38238","<p>It allows you to write generic class methods that you can use with any compatible class.</p>

<p>For example:</p>

<pre class=""lang-python prettyprint-override""><code>@classmethod
def get_name(cls):
    print cls.name

class C:
    name = ""tester""

C.get_name = get_name

#call it:
C.get_name()
</code></pre>

<p>If you don't use <code>@classmethod</code> you can do it with self keyword but it needs an instance of Class:</p>

<pre class=""lang-python prettyprint-override""><code>def get_name(self):
    print self.name

class C:
    name = ""tester""

C.get_name = get_name

#call it:
C().get_name() #&lt;-note the its an instance of class C
</code></pre>
",""
"14315179","2","36953","<p>This question is pretty old, but maybe my answer would help someone who wants to learn the basics. I find this resource to be very good. It is a simple interpreter written in python without the use of any external libraries. So this will help anyone who would like to understand the internal working of parsing, lexing, and tokenising:</p>

<p>""A Simple Intepreter from Scratch in Python:"" <a href=""http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1"">Part 1</a>, <a href=""http://www.jayconrod.com/posts/38/a-simple-interpreter-from-scratch-in-python-part-2"">Part 2</a>,
<a href=""http://www.jayconrod.com/posts/39/a-simple-interpreter-from-scratch-in-python-part-3"">Part 3</a>, and <a href=""http://www.jayconrod.com/posts/40/a-simple-interpreter-from-scratch-in-python-part-4"">Part 4</a>.</p>
",""
"14628126","2","36932","<p>The solution that I usually use is this simple function to get an instance of a dynamically created class.</p>

<pre><code>def enum(names):
    ""Create a simple enumeration having similarities to C.""
    return type('enum', (), dict(map(reversed, enumerate(
        names.replace(',', ' ').split())), __slots__=()))()
</code></pre>

<p>Using it is as simple as calling the function with a string having the names that you want to reference.</p>

<pre><code>grade = enum('A B C D F')
state = enum('awake, sleeping, dead')
</code></pre>

<p>The values are just integers, so you can take advantage of that if desired (just like in the C language).</p>

<pre><code>&gt;&gt;&gt; grade.A
0
&gt;&gt;&gt; grade.B
1
&gt;&gt;&gt; grade.F == 4
True
&gt;&gt;&gt; state.dead == 2
True
</code></pre>
",""
"14688688","2","60208","<p>Just mapping some a key to some code is not really and issue as most people have shown using the dict. The real trick is trying to emulate the whole drop through and break thing. I don't think I've ever written a case statement where I used that ""feature"". Here's a go at drop through. </p>

<pre><code>def case(list): reduce(lambda b, f: (b | f[0], {False:(lambda:None),True:f[1]}[b | f[0]]())[0], list, False)

case([
    (False, lambda:print(5)),
    (True, lambda:print(4))
])
</code></pre>

<p>I was really imagining it as a single statement. I hope you'll pardon the silly formatting.</p>

<pre><code>reduce(
    initializer=False,
    function=(lambda b, f:
        ( b | f[0]
        , { False: (lambda:None)
          , True : f[1]
          }[b | f[0]]()
        )[0]
    ),
    iterable=[
        (False, lambda:print(5)),
        (True, lambda:print(4))
    ]
)
</code></pre>

<p>I hope that's valid python. It should give you drop through. of course the boolean checks could be expressions and if you wanted them to be evaluated lazily you could wrap them all in a lambda. I wouldn't be to hard to make it accept after executing some of the items in the list either. Just make the tuple (bool, bool, function) where the second bool indicates whether or not to break or drop through.</p>
",""
"14906244","2","60805","<p>There is a simple way to pull a random row that IS database independent.
Just use .offset() . No need to pull all rows:</p>

<pre class=""lang-python prettyprint-override""><code>import random
query = DBSession.query(Table)
rowCount = int(query.count())
randomRow = query.offset(int(rowCount*random.random())).first()
</code></pre>

<p>Where Table is your table (or you could put any query there).
If you want a few rows, then you can just run this multiple times, and make sure that each row is not identical to the previous.</p>
",""
"15575160","1","","<p>I'm developing an app that needs to simulate a drag and drop action using the voice, but when im trying to emit a signal to get the mouse release, the code blocks until the drag and drop action finishes. I need to send a signal to permit dropaction happen .
How can i send a signal or execute a command during the drag.start action.
Thanks in advance!</p>
","<python><qt><drag-and-drop><pyqt><pyside>"
"15575161","1","","<p>I'm thinking about creating a decorator for a class, which can add a decorator dynamically to specific methods that start with a certain word, instead of manually adding the decorator to each method.</p>

<p>Any idea how to do that?</p>
","<python><dynamic><decorator>"
"15575197","1","","<p>I am abit of a download freak. Most of everything i download is in gigabytes but is displayed in megabytes.</p>

<p>I would like to build a small python program that detects how long it is going to take for a download to finish depending on how fast the connection speed is.</p>

<p>I am terrible at maths, and i wouldn't know where to start in the algorithm.</p>

<p>It will have floating point numbers.. and i do understand that connection speeds can be very eratic at times, they may go up and down.. But it will be an approximation. I love maths, but floating point numbers are a great weakness.</p>

<p>It should go a little something like this:</p>

<pre><code>fileSize: raw_input(""How big is the file you are downloading? "")
conSpeed: raw_input(""How fast is your current connection speed? "")

## Make sure fileSize and conSpeed are floats

print(""Your download will finish in ""+str(ALGORITHM_VAL)+"" ."")

# prints no more than 4 digits, not like 1 hour 23423432423424 seconds
</code></pre>

<p>Thanks for the help guys (and girls), much appreciated!</p>
","<python><math>"
"15575358","1","","<p>I am trying to build a tool that allows user to create a tree, using dynamically created and drag-gable buttons as nodes, in the GUI window. I want to add a function to my tool that allows the user to save the tree in any picture format. The saved file need not load load into my app again! Just like the Print Screen function in windows.</p>

<p>How do I do it ?</p>

<p>Thanks in Advance!</p>
","<python><wxpython><wxwidgets>"
"15575359","1","","<p>This looks very simple, but I don't know how to do it.</p>

<p>I need print the elements from a list placed into a string. I'm trying to use list comprehension, but the interpreter raises a error.</p>

<pre><code>print '%s (...) %s (...) %s%s (...)%s (...)'%(i for i in mylist)
</code></pre>

<p>I can't use    print '%s'%(i for i in mylist) because the string has not a regular structure. The code above has a syntax error. What is the crrect form?</p>

<p>Thanks in advance.</p>
","<python><list><list-comprehension>"
"15575383","2","15575197","<p>The basic equation to use will be: estimated_time = file_size/con_speed</p>

<p>Please ensure that toy have consistent units while computing. For example: if your connection speed in in Megabytes per second (Mbps) then the file size should also be in Mega bytes.</p>

<p>Normally 1 Gb is 1024 Mb or 1000 Mb (approx.)</p>

<p>For other  conversion rates please look at this chart:
<a href=""http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html"" rel=""nofollow"">http://www.wu.ece.ufl.edu/links/dataRate/DataMeasurementChart.html</a></p>

<p>Keep in mind that internet service providers normally use 1000 as the approximation unit rather than 1024.</p>
",""
"15575402","2","15575359","<p>Turn the list into a tuple instead:</p>

<pre><code>print '%s (...) %s (...) %s%s (...)%s (...)' % tuple(mylist)
</code></pre>

<p>Demo:</p>

<pre><code>&gt;&gt;&gt; mylist = ['a', 'b', 'c', 'd', 'e']
&gt;&gt;&gt; print '%s (...) %s (...) %s%s (...)%s (...)' % tuple(mylist)
a (...) b (...) cd (...)e (...)
</code></pre>

<p>Alternatively, use the <a href=""http://docs.python.org/2/library/stdtypes.html#str.format"" rel=""nofollow""><code>.format()</code> method</a> instead to format your string:</p>

<pre><code>print '{} (...) {} (...) {}{} (...){} (...)'.format(*mylist)
</code></pre>

<p><code>.format()</code> also supports indexing into the list:</p>

<pre><code>print '{0[0]} (...) {0[1]} (...) {0[2]}{0[3]} (...){0[4]} (...)'.format(mylist)
</code></pre>
",""
"15575420","1","","<p>I am new to regular expression and have a problem with the re.split functionality.</p>

<p>In my case the split has to care ""special escapes"".</p>

<p>The text should be seperated at <code>;</code>, except there is a leading <code>?</code>.</p>

<p><strong>Edit:</strong> In that case the two parts shouldn't be splitted and the <code>?</code> has to be removed.</p>

<p>Here an example and the result I wish:</p>

<pre><code>import re
txt = 'abc;vwx?;yz;123'
re.split(r'magical pattern', txt)
['abc', 'vwx;yz', '123']
</code></pre>

<p>I tried so far these attempt:</p>

<pre><code>re.split(r'(?&lt;!\?);', txt)
</code></pre>

<p>and got:</p>

<pre><code>['abc', 'vwx?;yz', '123']
</code></pre>

<p>Sadly causes the not consumed <code>?</code> trouble and the following list comprehension is to performance critical:</p>

<pre><code>[part.replace('?;', ';') for part in re.split(r'(?&lt;!\?);', txt)]
['abc', 'vwx;yz', '123']
</code></pre>

<p>Is there a ""fast"" way to reproduce that behavior with re?</p>

<p>Could the re.findall function be the solution to take?</p>

<p>For example a extended version of this code:</p>

<pre><code>re.findall(r'[^;]+', txt)
</code></pre>

<p>I am using python 2.7.3.</p>

<p>Thanking you in anticipation!</p>
","<python><regex>"
"15575441","2","15575161","<p>Below code example shows how to do that:</p>

<pre><code>def class_dec(starts_with,fun_dec):
    def fun(cls):
        for k,v in cls.__dict__.items():
            if k.startswith(starts_with):
                cls.__dict__[k] = fun_dec(v)
        return cls
    return fun

def fun_decorator(f):
    def dec(*args,**kwargs):
        print ""I m decorating""
        f(*args,**kwargs)
    return dec

@class_dec(""name"",fun_decorator)
class Hello:
    def name_new_one(self):
        print ""new one""

    def name(self):
        print ""Hello""

h = Hello()
h.name()
h.name_new_one()
</code></pre>
",""
"15575454","2","15575197","<p>Provided the two inputs are using the same unit of measurement, it should be a standard division operation:</p>

<pre><code>size = raw_input(""File size in KB: "")
speed = raw_input(""Speed in KB/sec: "")
est = float(size) / float(speed)
print ""It will take %f seconds."" % est
</code></pre>

<p>Really, any time you see the word <em>per</em>, such as miles <em>per</em> hour or kilobytes <em>per</em> second, you can think of <em>divided by</em>: miles <em>divided by</em> hours, or kilobytes <em>divided by</em> seconds.</p>

<p>Now, if your file size input was in a <em>different</em> unit of measurement, such as megabytes, you'll need to convert that to a common unit of measurement first:</p>

<pre><code>sizeInKb = float(size) * 1024
est = float(sizeInKb) / float(speed)
</code></pre>

<p>Lastly, you can easily display a time duration with Python by importing <code>datetime</code>:</p>

<pre><code>print ""Estimated Time: %s"" % datetime.timedelta(seconds = est)
</code></pre>

<p>Hope this helps!</p>
",""
"15575466","1","","<p>I am using a python program to produce some data, plotting the data using matplotlib.pyplot and then displaying the figure in a latex file. </p>

<p>I am currently saving the figure as a .png file but the image quality isn't great. I've tried changing the DPI in <code>matplotlib.pyplot.figure(dpi=200)</code> etc but this seems to make little difference. I've also tried using differnet image formats but they all look a little faded and not very sharp.</p>

<p>Has anyone else had this problem? </p>

<p>Any help would be much appreciated </p>
","<python><graph><matplotlib>"
"15575546","2","15575358","<p>If you mean you want to take a screenshot of your GUI, you can use <code>ImageGrab</code> from the Python Imaging Library: <a href=""http://effbot.org/imagingbook/imagegrab.htm"" rel=""nofollow"">http://effbot.org/imagingbook/imagegrab.htm</a></p>
",""
"15575658","1","","<p>I'm trying to parse a huge Excel file which contains properties and their values.
The problem is as follows: Some properties are able to contain multiple values.</p>

<p>Example:</p>

<pre><code>list = ['a=1', 'b=2', 'c=3', 'd=4', 'd=5', 'd=6', 'e=7']
</code></pre>

<p>Should be:</p>

<pre><code>list2 = ['a=1', 'b=2', 'c=3', 'd=4,5,6', 'e=7']
</code></pre>

<p>The elements are strings with a variable length and they are seperated by a '='.</p>

<p>This is how i generate the list out of the Excel file:</p>

<pre><code>#for each row in the excel file.
for rows in range(DATA_ROW, sheet.nrows):
#generate a list with all properties.
for cols in range(sheet.ncols):
    #if the propertie is not emty 
    if str(sheet.cell(PROPERTIE_ROW,cols).value) is not '':
        proplist.append(sheet.cell(PROPERTIE_ROW,cols).value + '=' + str(sheet.cell(rows,cols).value) + '\n')
</code></pre>

<p>I gave it a try but that didn't work very well ...</p>

<pre><code>last_item = ''
new_list = []
#find and collect multiple values.
for i, item in enumerate(proplist):
#if the propertie is already in the list
if str(item).find(last_item) is not -1:
    #just copy the value and append it to the propertie
    new_list.insert(i, propertie);
else:
    #slize the string in propertie and value
    pos = item.find('=')
    propertie = item[0:pos+1]
    value = item[pos+1:len(item)]
    #save the propertie
    last_item = propertie
    #append item
    new_list.append(item)
</code></pre>

<p>Any help would be greatly appreciated! </p>
","<python><python-3.x>"
"15575725","2","15575658","<p>If the order doesn't matter, you could probably use a <code>defaultdict</code> for this sort of thing:</p>

<pre><code>from collections import defaultdict
orig = ['a=1', 'b=2', 'c=3', 'd=4', 'd=5', 'd=6', 'e=7']
d = defaultdict(list)
for item in orig:
    k,v = item.split('=',1)
    d[k].append(v)

new = ['{0}={1}'.format(k,','.join(v)) for k,v in d.items()]
print(new)  #['a=1', 'c=3', 'b=2', 'e=7', 'd=4,5,6']
</code></pre>

<hr>

<p>I suppose that if order does matter, you could use an <code>OrderedDict</code> + <code>setdefault</code> but it really isn't as pretty:</p>

<pre><code>from collections import OrderedDict
orig = ['a=1', 'b=2', 'c=3', 'd=4', 'd=5', 'd=6', 'e=7']
d = OrderedDict()
for item in orig:
    k,v = item.split('=',1)
    d.setdefault(k,[]).append(v)

new = ['{0}={1}'.format(k,','.join(v)) for k,v in d.items()]
print new # ['a=1', 'b=2', 'c=3', 'd=4,5,6', 'e=7']
</code></pre>
",""
"15575735","2","15575358","<p>No special library is required, you have everything needed to grab the display of any windows and save to a file.  Simething like this:</p>

<pre><code>   1 def OnSaveToFile( self, event ):
   2         context = wx.ClientDC( self )
   3         memory = wx.MemoryDC( )
   4         x, y = self.ClientSize
   5         bitmap = wx.EmptyBitmap( x, y, -1 )
   6         memory.SelectObject( bitmap )
   7         memory.Blit( 0, 0, x, y, context, 0, 0)
   8         memory.SelectObject( wx.NullBitmap)
   9         bitmap.SaveFile( 'test.jpg', wx.BITMAP_TYPE_JPEG )
</code></pre>
",""
"15575776","1","","<p>I feel like Python ought to have a built-in to do this. Take a list of items and turn them into a dictionary mapping keys to a list of items with that key in common.</p>

<p>It's easy enough to do:</p>

<pre><code># using defaultdict
lookup = collections.defaultdict(list)
for item in items:
    lookup[key(item)].append(item)

# or, using plain dict
lookup = {}
for item in items:
    lookup.setdefault(key(item), []).append(item)
</code></pre>

<p>But this is frequent enough of a use case that a built-in function would be nice. I could implement it myself, as such:</p>

<pre><code>def grouped(iterable, key):
    result = {}
    for item in iterable:
        result.setdefault(key(item), []).append(item)
    return result

lookup = grouped(items, key)
</code></pre>

<p>This is different than <code>itertools.groupby</code> in a few important ways. To get the same result from <code>groupby</code>, you'd have to do this, which is a little ugly:</p>

<pre><code>lookup = dict((k, list(v)) for k, v in groupby(sorted(items, key=key), key))
</code></pre>

<p>Some examples:</p>

<pre><code>&gt;&gt;&gt; items = range(10)
&gt;&gt;&gt; grouped(items, lambda x: x % 2)
{0: [0, 2, 4, 6, 8], 1: [1, 3, 5, 7, 9]}

&gt;&gt;&gt; items = 'hello stack overflow how are you'.split()
&gt;&gt;&gt; grouped(items, len)
{8: ['overflow'], 3: ['how', 'are', 'you'], 5: ['hello', 'stack']}
</code></pre>

<p>Is there a better way?</p>
","<python><collections><group-by><iterable>"
"15575789","1","","<p>Saw the following example to illustrate how to create NAN through DataFrame.</p>

<pre><code>import pandas as pd
import numpy as np
import math
import copy
import QSTK.qstkutil.qsdateutil as du
import datetime as dt
import QSTK.qstkutil.DataAccess as da
import QSTK.qstkutil.tsutil as tsu
import QSTK.qstkstudy.EventProfiler as ep

""""""
Accepts a list of symbols along with start and end date
Returns the Event Matrix which is a pandas Datamatrix
Event matrix has the following structure :
    |IBM |GOOG|XOM |MSFT| GS | JP |
(d1)|nan |nan | 1  |nan |nan | 1  |
(d2)|nan | 1  |nan |nan |nan |nan |
(d3)| 1  |nan | 1  |nan | 1  |nan |
(d4)|nan |  1 |nan | 1  |nan |nan |
...................................
...................................
Also, d1 = start date
nan = no information about any event.
1 = status bit(positively confirms the event occurence)
""""""

def find_events(ls_symbols, d_data):
    ''' Finding the event dataframe '''
    df_close = d_data['actual_close']
    ts_market = df_close['SPY']

    print ""Finding Events""

    # Creating an empty dataframe
    df_events = copy.deepcopy(df_close) # type &lt;class 'pandas.core.frame.DataFrame'&gt;
    df_events = df_events * np.NAN # &lt;&lt; why it works here
</code></pre>

<p>Try to duplicate the method as follows:</p>

<pre><code>import numpy as np
import pandas as pd
from pandas import Series, DataFrame

data = {'state': ['Ohio', 'Ohio', 'Ohio', 'Nevada', 'Nevada'],
        'year': [2000, 2001, 2002, 2001, 2002],
        'pop': [1.5, 1.7, 3.6, 2.4, 2.9]}
frame = DataFrame(data)
frame = frame * np.NAN # TypeError: can't multiply sequence by non-int of type 'float'
</code></pre>

<p>Q> Why it doesn't work here now?</p>
","<python><numpy><pandas>"
"15575826","1","","<p>I'm using Celery (3.0.15) with Redis as a broker.</p>

<p>Is there a straightforward way to query the number of tasks with a given name that exist in a Celery queue?</p>

<p>And, as a followup, is there a way to cancel all tasks with a given name that exist in a Celery queue?</p>

<p>I've been through the <a href=""http://docs.celeryproject.org/en/latest/userguide/monitoring.html"" rel=""noreferrer"">Monitoring and Management Guide</a> and don't see a solution there.</p>
","<python><redis><celery>"
"15575832","1","","<p>I got a program running on my local machine which uses some files. I create the reference to the files by using: <code>os.path.join( tempfile.gettempdir(), 'filename.txt' )</code></p>

<p>After that I'm running a program which accepts some parameters <code>--log-file filepath</code> where filepath is one of the files I just explained above.</p>

<p>On my machine python creates backslashes for the paths but not double backslashes and the program complains because it's considered an escape character and should be a double backslash.</p>

<p>Is there any standard way of making sure that I get a working path with double backslashes in python? I could use regex but I would prefer something similar to what <code>os.</code> provides. Maybe I'm missing something.</p>

<p>I'm calling the program using <code>subprocess.Popen</code>:</p>

<p><code>self._proc = subprocess.Popen( command.split( ' ' ) )</code></p>

<p>where <code>command</code> is something like <code>pcix.exe --log-file file_path</code></p>

<p>Also, running a test on my console shows that my python does not produce double backslash for paths:</p>

<pre><code>&gt;&gt;&gt; print os.path.join(tempfile.gettempdir(), ""test.txt"")
c:\users\manilo~1\appdata\local\temp\test.txt
</code></pre>

<p>Leaving out the print command produces the same path:</p>

<pre><code>&gt;&gt;&gt; os.path.join(tempfile.gettempdir(), ""test.txt"")
c:\users\manilo~1\appdata\local\temp\test.txt
</code></pre>

<p>Any idea why?</p>

<p>P.S. The platform i'm running is <code>CPython</code></p>
","<python>"
"15575868","2","15575420","<p>You cannot do what you want with one regular expression. Unescaping <code>?;</code> after splitting is a separate task altogether, not one that you can get the <code>re</code> module to do for you while splitting at the same time.</p>

<p>Just keep the task separate; you could use a generator to do the unescaping for you:</p>

<pre><code>def unescape(iterable):
    for item in iterable:
        yield item.replace('?;', ';')

for elem in unescape(re.split(r'(?&lt;!\?);', txt)):
    print elem
</code></pre>

<p>but that won't be faster than your list comprehension.</p>
",""
"15576043","2","15575420","<p>Regex is not the tool for the job. Use the <code>csv</code> module instead:</p>

<pre><code>&gt;&gt;&gt; txt = 'abc;vwx?;yz;123'
&gt;&gt;&gt; r = csv.reader([txt], delimiter=';', escapechar='?')
&gt;&gt;&gt; next(r)
['abc', 'vwx;yz', '123']
</code></pre>
",""
"15576062","2","15575789","<p>Because you have the column <code>state</code> which contains string, and multiplying strings with a <code>NaN</code> produces the error. If you really want to set the states to <code>NaN</code>, use <code>frame['state'] = np.NAN</code>.</p>
",""
"15576101","2","15575420","<p>I would do it like this: </p>

<pre><code> re.sub('(?&lt;!\?);',r'|', txt).replace('?;',';').split('|')
</code></pre>
",""
"15576216","2","15575832","<p>Try:</p>

<pre><code>print os.path.join(tempfile.gettempdir(), ""test.txt"").replace('\\\\','\\\\\\\\')
</code></pre>
",""
"15578952","2","15575466","<p>You can save the images in a vector format so that they will be scalable without quality loss. Such formats are PDF and EPS. Just change the extension to <code>.pdf</code> or <code>.eps</code> and matplotlib will write the correct image format. Remember <code>LaTeX</code> likes EPS and <code>PDFLaTeX</code> likes PDF images. Although most modern LaTeX executables are PDFLaTeX in disguise and convert EPS files on the fly (same effect as if you included the <code>epstopdf</code> package in your preamble, which may not perform as well as you'd like).</p>

<p>Alternatively, increase the DPI, a lot. These are the numbers you should keep in mind:</p>

<ul>
<li>300dpi: plain paper prints</li>
<li>600dpi: professional paper prints. Most commercial office printers reach this in their output.</li>
<li>1200dpi: professional poster/brochure grade quality.</li>
</ul>

<p>I use these to adapt the quality of PNG figures in conjunction with <code>figure</code>'s <code>figsize</code> option, which allows for correctly scaled text and graphics as you improve the quality through dpi.</p>
",""
"15583947","2","15575776","<p>I also posted this question to comp.lang.python, and the consensus seems to be that this isn't actually common enough to warrant a built-in function. So, using the obvious approaches are best. They work and they're readable.</p>

<pre><code># using defaultdict
lookup = collections.defaultdict(list)
for item in items:
    lookup[key(item)].append(item)

# or, using plain dict
lookup = {}
for item in items:
    lookup.setdefault(key(item), []).append(item)
</code></pre>

<p>I was going to delete my question, but I might as well leave this here in case anyone stumbles across it looking for information.</p>
",""
"15585484","1","","<p>My Python program needs to multiplex reads from several different file descriptors. Some of them are the stdout/stderr descriptors of subprocesses; others are the file descriptors associated with <code>inotify</code> calls.</p>

<p>My problem is being able to do a ""non-blocking""[1] read after <code>select()</code>. According to <a href=""http://docs.python.org/2/library/select.html"" rel=""nofollow"">the documentation</a>, sockets that <code>select()</code> reports to be ready for writes ""are guaranteed to not block on a write of up to PIPE_BUF bytes"". </p>

<p>I suppose that no such guarantee makes sense with a read, as <code>select()</code> reporting that there is data waiting to be ready in the kernel pipe buffer doesn't mean that you can go ahead and to <code>.read(socket.PIPE_BUF)</code>, as there could be just a few bytes in there.</p>

<p>This means that when I'm calling <code>read()</code> on the socket, I can get what is effectively a deadlock as some of the subprocesses produce output very rarely.</p>

<p>Is there any way around this? My current workaround is to call <code>readline()</code> on it, and I'm lucky enough that everything I'm reading from has line-by-line output. Is <code>select()</code> of any use at all when reading from a pipe like this, seeing as there's no way to know how many bytes you can safely read without blocking?</p>

<p>[1] I'm aware that this is distinct from an O_NONBLOCK socket</p>
","<python><unix>"
"15585493","1","","<p>I'm using <code>@functools.lru_cache</code> in Python 3.3. I would like to save the cache to a file, in order to restore it when the program will be restarted. How could I do?</p>

<p><strong>Edit 1</strong> Possible solution: <a href=""https://stackoverflow.com/questions/6234586/we-need-to-pickle-any-sort-of-callable"">We need to pickle any sort of callable</a></p>

<p>Problem pickling <code>__closure__</code>:</p>

<pre><code>_pickle.PicklingError: Can't pickle &lt;class 'cell'&gt;: attribute lookup builtins.cell failed
</code></pre>

<p>If I try to restore the function without it, I get:</p>

<pre><code>TypeError: arg 5 (closure) must be tuple
</code></pre>
","<python><python-3.x><memoization>"
"15585553","2","15585484","<p>It's OK to go ahead and <code>read</code> each pipe and socket: you'll get whatever data are available now:</p>

<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; desc = os.pipe()
&gt;&gt;&gt; desc
(3, 4)
&gt;&gt;&gt; os.write(desc[1], 'foo')
3
&gt;&gt;&gt; os.read(desc[0], 100)
'foo'
&gt;&gt;&gt; os.read(desc[0], 100)
</code></pre>

<p>[hangs here as there's no input available, interrupt with ^C]</p>

<pre><code>...
KeyboardInterrupt
&gt;&gt;&gt; os.write(desc[1], 'a')
1
&gt;&gt;&gt; os.read(desc[0], 100)
'a'
&gt;&gt;&gt; 
</code></pre>
",""
"15585560","2","15585493","<p>You are not supposed to touch anything inside the decorator implementation except for the public API so if you want to change its behavior you probably need to copy its implementation and add necessary functions yourself. Note that the cache is currently stored as a circular doubly linked list so you will need to take care when saving and loading it.</p>
",""
"15585823","1","","<p>My question is about parsing the output of Missile Datcom, I don't know if someone knows it. The length of the file is variable.</p>

<p>My aim is to retrieve all the data stored in those tables and save it in a correct file structure (I think MATLAB .mat file). The only symmetry I can get is the repetition of text structures like this:</p>

<pre><code>***** THE USAF AUTOMATED MISSILE DATCOM * REV 3/99 *****     CASE   1
           AERODYNAMIC METHODS FOR MISSILE CONFIGURATIONS          PAGE   2
               STATIC AERODYNAMICS FOR BODY-FIN SET 1

   ******* FLIGHT CONDITIONS AND REFERENCE QUANTITIES *******
 MACH NO  =       0.01                REYNOLDS NO = 2.318E+05 /M
 ALTITUDE =        0.0 M         DYNAMIC PRESSURE =      7.09 N/M**2
 SIDESLIP =      -5.00 DEG                   ROLL =      0.00 DEG     
 REF AREA =      0.006 M**2         MOMENT CENTER =     1.750 M
 REF LENGTH =     0.10 M           LAT REF LENGTH =      0.10 M

               ----- LONGITUDINAL -----     -- LATERAL DIRECTIONAL --
     ALPHA       CN        CM        CA        CY       CLN       CLL

    -15.00   -13.959    -4.106     2.661     4.031     1.817     0.565
    -12.50   -12.292    -1.954     5.103     4.302     1.267     0.449
    -10.00    -9.985    -0.720     7.148     4.600     0.677     0.253
     -7.50    -7.477    -0.030     7.516     4.833     0.143     0.073
     -5.00    -4.881     0.206     6.380     4.881    -0.206     0.000
     -2.50    -2.374     0.167     5.504     4.949    -0.509    -0.059
     -1.00    -0.933     0.069     5.287     4.965    -0.604    -0.036
      0.00     0.000     0.000     5.308     4.967    -0.623    -0.000
      1.00     0.933    -0.069     5.287     4.965    -0.604     0.036
      2.50     2.374    -0.167     5.504     4.949    -0.509     0.059
      5.00     4.881    -0.206     6.380     4.881    -0.206     0.000
      7.50     7.477     0.030     7.516     4.833     0.143    -0.073
     10.00     9.985     0.720     7.148     4.600     0.677    -0.253
     12.50    12.292     1.954     5.103     4.302     1.267    -0.449
     15.00    13.959     4.106     2.661     4.031     1.817    -0.565

     ALPHA       CL        CD      CL/CD     X-C.P.

    -15.00   -12.795     6.183    -2.069     0.294
    -12.50   -10.896     7.643    -1.426     0.159
    -10.00    -8.592     8.773    -0.979     0.072
     -7.50    -6.432     8.427    -0.763     0.004
     -5.00    -4.307     6.781    -0.635    -0.042
     -2.50    -2.132     5.602    -0.381    -0.071
     -1.00    -0.841     5.302    -0.159    -0.074
      0.00     0.000     5.308     0.000     2.298
      1.00     0.841     5.302     0.159    -0.074
      2.50     2.132     5.602     0.381    -0.071
      5.00     4.307     6.781     0.635    -0.042
      7.50     6.432     8.427     0.763     0.004
     10.00     8.592     8.773     0.979     0.072
     12.50    10.896     7.643     1.426     0.159
     15.00    12.795     6.183     2.069     0.294
</code></pre>

<p>where you can get the input data to which the tables are related: MACH NO, ALTITUDE, SIDESLIP.</p>

<p>I have to create a 2-dimensional array (a table) for every group of data that have the same MACH NO, ALTITUDE and SIDESLIP.</p>

<p>Every time one of them changes I have to create a new array.</p>

<p>I am supposed to use regex to read the values next to the MACH NO, ALTITUDE and SIDESLIP ad check if they were changed but it seems to me a quite convoluted method. What would your approach be?</p>

<p>I was thinking of using Python.</p>
","<python><matlab><parsing><numpy>"
"15585885","1","","<p>Here's the structure: </p>

<pre><code>   &lt;foo&gt;
        &lt;bar&gt; 
    &lt;buildCommand&gt;
        &lt;name&gt;com.android.ide.eclipse.adt.ApkBuilder&lt;/name&gt;
        &lt;arguments&gt;
        &lt;/arguments&gt;
    &lt;/buildCommand&gt;
    &lt;buildCommand&gt;
        &lt;name&gt;org.eclipse.ui.externaltools.ExternalToolBuilder&lt;/name&gt;
        &lt;triggers&gt;auto,full,incremental,&lt;/triggers&gt;
    &lt;/buildCommand&gt;
        &lt;/bar&gt;
   &lt;/foo&gt;
</code></pre>

<p>and here's my logic, which identifies the buildCommand I want to delete (the second one), adds it to a list, and then does a remove. </p>

<pre><code>import os;
import xml.etree.ElementTree as ET

document = ET.parse(""foo""); 
root = document.getroot(); 
removeList = list()
for child in root.iter('buildCommand'): 
   if (child.tag == 'buildCommand'): 
      name = child.find('name').text
      if (name == 'org.eclipse.ui.externaltools.ExternalToolBuilder'):
          removeList.append(child)

for tag in removeList:
   root.remove(tag)

document.write(""newfoo"")
</code></pre>

<p>Python 2.7.1 has the remove command but I get an error on remove: </p>

<p>File ""/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/xml/etree/ElementTree.py"", line 337, in remove
    self._children.remove(element)
ValueError: list.remove(x): x not in list</p>

<p>UPDATE: </p>

<p><em>*</em> Solved by @martijn-pieters - correct logic for second for loop is </p>

<pre><code>for tag in removeList:
   parent = root.find('bar')
   parent.remove(tag)
</code></pre>
","<python><elementtree>"
"15585915","1","","<p>I'm using spyder and have written the following class:</p>

<pre><code>class Ray:

    def __init__(self, r, p, k):

        if r.shape == (3,):
            self.r = r
        if p.shape == (3,):
            self.p = p
        if k.shape == (3,):
            self.k = k

r = array(range(3))
p = array(range(3))
k = array(range(3))
</code></pre>

<p>It is stored in /home/user/workspace/spyder/project and the console working directory is that one. In the console I can run an array(range(3)) and it returns an array with values 0,1,2. However when doing</p>

<pre><code>import ray
</code></pre>

<p>I get the following error</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""ray.py"", line 8, in &lt;module&gt;
    class Ray:
  File ""ray.py"", line 20, in ray
    r = array(range(3));
NameError: name 'array' is not defined
</code></pre>

<p><strong>EDIT:</strong></p>

<p>by default spyder has the following behaviour, don't really understand why array() works by default I thought it was only part of numpy.</p>

<pre><code>import numpy as np  # NumPy (multidimensional arrays, linear algebra, ...)
import scipy as sp  # SciPy (signal and image processing library)

import matplotlib as mpl         # Matplotlib (2D/3D plotting library)
import matplotlib.pyplot as plt  # Matplotlib's pyplot: MATLAB-like syntax
from mayavi import mlab          # 3D plotting functions
from pylab import *              # Matplotlib's pylab interface
ion()                            # Turned on Matplotlib's interactive mode

Within Spyder, this intepreter also provides:
    * special commands (e.g. %ls, %pwd, %clear)
    * system commands, i.e. all commands starting with '!' are subprocessed
      (e.g. !dir on Windows or !ls on Linux, and so on)
</code></pre>
","<python><nameerror><spyder>"
"15585923","2","15585885","<p>You need to remove the element from its <em>parent</em>; you'll need to get a reference to the parent directly though, there is no path from child back up. In this case you'll have to get a reference to the <code>&lt;bar&gt;</code> element at the same time as finding the <code>&lt;buildCommand&gt;</code> element.</p>

<p>Trying to remove the tag from the root fails because the tag is not a direct child of the root.</p>
",""
"15585926","2","15585915","<p>You need <code>from numpy import array</code>.</p>

<p>This is done for you by the Spyder console. But in a program, you must do the necessary imports; the advantage is that your program can be run by people who do not have Spyder, for instance.</p>

<p>I am not sure of what Spyder imports for you by default. <code>array</code> might be imported through <code>from pylab import *</code> or equivalently through <code>from numpy import *</code>. If you want to directly copy code from the Spyder console to a program, you might need <code>from numpy import *</code> or even <code>from pylab import *</code>. It is <a href=""http://docs.python.org/2/tutorial/modules.html#more-on-modules"">officially not recommended to do this in a program</a>, though, as this pollutes the program's namespace; doing <code>import numpy as np</code> and then <code>np.array(…)</code> is customary.</p>
",""
"15586116","1","","<p>I have a list of folder names as 1d array:
ie:</p>

<pre><code>folderList=['A1_001', 'A1_002', 'A1_003', 'A1_004', 
            'A2_001', 'A2_002', 'A2_003', 'A2_004',
            'A3_001', 'A3_002', 'A3_003', 'A3_004']
</code></pre>

<p>and want to group the list by the first two characters, as ""A1"", ""A2"" and ""A3.
I figured this should be done through groupby, but my code doesn't work</p>

<pre><code>sectionName=[] #to get the first two characters of each element into a new list

for file in folderList:
    sectionName.append(file.split('_')[0])

for key, group in groupby(folderList,sectionName): 
    print key
    for record in group:
        print record
</code></pre>

<p>and I got an error:</p>

<pre><code>for key, group in groupby(folderList,sectionName):
TypeError: 'list' object is not callable
</code></pre>

<p>what I want to get is some result like this:</p>

<pre><code>A1
['A1_001', 'A1_002', 'A1_003', 'A1_004']

A2
['A2_001', 'A2_002', 'A2_003', 'A2_004']

A3
['A3_001', 'A3_002', 'A3_003', 'A3_004']
</code></pre>

<p>I figured the <code>groupby</code> function need the second input to be a keyfunction, but failed so far to implement the <code>sectionName</code> into keyfunction.
Thanks in advance if you can help.</p>
","<python><group-by>"
"15586140","1","","<p>I'm working with a GUI for my program. The code looks like this:</p>

<pre><code>lijst=[]
def setValueTrue():
    del lijst[0:len(lijst)]
    e2=""True""
    lijst.append(e2)
    print lijst[0]

def setValueFalse():
    del lijst[0:len(lijst)]
    e2=""False""
    lijst.append(e2)
    print lijst[0]

lijst1=[]
def setValueTrue1():
    del lijst1[0:len(lijst1)]
    e2=""True""
    lijst1.append(e2)

def setValueFalse1():
    del lijst1[0:len(lijst1)]
    e2=""False""
    lijst1.append(e2)


root = Tk()
var = IntVar()
R1 = Radiobutton(root, text=""Option 1"", variable=var, value=1,
                  command=setValueTrue())
R1.pack(anchor = W)
R2 = Radiobutton(root, text=""Option 2"", variable=var, value=2,
                  command=setValueFalse())
R2.pack(anchor = W)
R3 = Radiobutton(root, text=""Option 3"", variable=var, value=3,
                  command=setValueTrue1())
R3.pack(anchor = W)

R4 = Radiobutton(root, text=""Option 4"", variable=var, value=4,
                  command=setValueFalse1())
R4.pack(anchor = W)

b=Button(root, text='Quit', command=root.quit)
b.pack()
b=Button(root, text='Oke', command=lambda:tekenGraaf(""OutputB1.txt"",25,0.8,dimensies=3,kleur=str(lijst[0]),groepen=str(lijst1[0])))
b.pack()
mainloop()
</code></pre>

<p>I have 4 radiobuttons. These create with the definitions the value true or false. This value i want to use in my 'big' definition. But when i click the radiobuttons, the defs (setValueTrue etc.) are not executed. Only when i run the program the radiobuttons run the def's. FOr this reasons the values of list and list1 automatically become false and false. Does anyone know why the radiobuttons aren't running the code.</p>
","<python><user-interface><radio-button><tkinter>"
"15586213","2","15586116","<pre><code>In [40]: folderList=['A1_001', 'A1_002', 'A1_003', 'A1_004','A2_001', 'A2_002', 'A2_003', 'A2_004','A3_001', 'A3_002', 'A3_003', 'A3_004','B1_001','B1_002','B1_003','B2_001','B2_002','B2_003']

In [41]: for k, v in groupby(folderList, lambda x:x[:2]):
    ...:     print k, [x for x in v]
    ...:     
A1 ['A1_001', 'A1_002', 'A1_003', 'A1_004']
A2 ['A2_001', 'A2_002', 'A2_003', 'A2_004']
A3 ['A3_001', 'A3_002', 'A3_003', 'A3_004']
B1 ['B1_001', 'B1_002', 'B1_003']
B2 ['B2_001', 'B2_002', 'B2_003']
</code></pre>

<p>or in simple way:</p>

<pre><code>In [42]: result={}

In [43]: for v in folderList:
    ...:     result.setdefault(v[:2],[]).append(v)
    ...:     

In [44]: result
Out[44]: 
{'A1': ['A1_001', 'A1_002', 'A1_003', 'A1_004'],
 'A2': ['A2_001', 'A2_002', 'A2_003', 'A2_004'],
 'A3': ['A3_001', 'A3_002', 'A3_003', 'A3_004'],
 'B1': ['B1_001', 'B1_002', 'B1_003'],
 'B2': ['B2_001', 'B2_002', 'B2_003']}
</code></pre>
",""
"15586221","2","15586116","<p>For example:</p>

<pre><code>grouped = {prefix: list(folders) for 
    prefix, folders in itertools.groupby(folderList, lambda x: x[:2])}
</code></pre>

<p>Alternative approach, that doesn't require <code>folderList</code> to be sorted:</p>

<pre><code>from collections import defaultdict
grouped = defaultdict(list)
for folder in folderList:
    grouped[folder[:2]].append(folder)
</code></pre>
",""
"15586233","1","","<p>Installed pyes recently , but when i tired it in the python shell it is giving the error,
Can any one please help me out in this regard:</p>

<pre><code>Traceback (most recent call last):

File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
File ""/usr/local/lib/python2.7/dist-packages/pyes-0.19.1-py2.7.egg/pyes/__init__.py"", line 41, in &lt;module&gt;
    from .djangoutils import *
File ""/usr/local/lib/python2.7/dist-packages/pyes-0.19.1-py2.7.egg/pyes/djangoutils.py"", line 6, in &lt;module&gt;
    from django.db import models
  File ""/usr/local/lib/python2.7/dist-packages/django/db/__init__.py"", line 11, in &lt;module&gt;
    if settings.DATABASES and DEFAULT_DB_ALIAS not in settings.DATABASES:
  File ""/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py"", line 52, in __getattr__
    self._setup(name)
  File ""/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py"", line 45, in _setup
    % (desc, ENVIRONMENT_VARIABLE))
django.core.exceptions.ImproperlyConfigured: Requested setting DATABASES, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.
</code></pre>
","<python><elasticsearch><pyes>"
"15586269","2","15586140","<p>The <code>command</code> option takes a <em>reference</em> to a function. When you do <code>command=setValueTrue()</code> you are <em>calling</em> the function, and giving the result of the function to the <code>command</code> attribute. The result is <code>None</code>, so there is no command associated with the button.</p>

<p>The fix is to remove the parenthesis:</p>

<pre><code>R1 = Radiobutton(..., command=setValueTrue, ...)
</code></pre>
",""
"15586290","1","","<p>I've setup Kannel in Ubuntu using a USB Modem and I can send SMS via the browser using the URL as seen below</p>

<pre><code>localhost:13013/cgi-bin/sendsms?username=kannel&amp;password=kannel&amp;to=+254781923855&amp;text='Kid got swag'
</code></pre>

<p>In python, I have the following script which works only if the message to be sent does not have spaces.</p>

<pre><code>import urllib.request
def send_sms(mobile_no, message):
    url=""http://%s:%d/cgi-bin/sendsms?username=%s&amp;password=%s&amp;to=%s&amp;text=%s"" \
    % ('localhost', 13013, 'kannel', 'kannel', str(mobile_no), message)
    f = urllib.request.urlopen(url)
    print(""sms sent"")
</code></pre>

<p>If I call the function with <strong>NO</strong> spaces in the message, it works and the message is sent.</p>

<pre><code>sms.send_sms('+254781923855', 'kid_got_swag')
</code></pre>

<p>If I have spaces in the message, it fails with the error belw</p>

<pre><code>sms.send_sms('+254781923855', 'kid got swag')

Traceback (most recent call last):
File ""/home/lukik/workspace/projx/src/short_message.py"", line 24, in &lt;module&gt;
sms.send_sms('+254781923855', 'kid got swag')
File ""/home/lukik/workspace/projx/src/short_message.py"", line 18, in send_sms
f = urllib.request.urlopen(url)
File ""/usr/lib/python3.2/urllib/request.py"", line 139, in urlopen
return opener.open(url, data, timeout)
File ""/usr/lib/python3.2/urllib/request.py"", line 376, in open
response = meth(req, response)
File ""/usr/lib/python3.2/urllib/request.py"", line 488, in http_response
'http', request, response, code, msg, hdrs)
File ""/usr/lib/python3.2/urllib/request.py"", line 414, in error
return self._call_chain(*args)
File ""/usr/lib/python3.2/urllib/request.py"", line 348, in _call_chain
result = func(*args)
File ""/usr/lib/python3.2/urllib/request.py"", line 496, in http_error_default
raise HTTPError(req.full_url, code, msg, hdrs, fp)
urllib.error.HTTPError: HTTP Error 400: Bad Request
</code></pre>

<p>I've tried other variants of calling urllib but they all fail coz of the spaces in the message....</p>
","<python><urllib><kannel>"
"15586314","1","","<p>I have written a simple guessing game and a method to guess it... </p>

<pre><code>    from gasp import *

    number = random_between(1, 1000)
    guesses = 0

    while True:
        guess = input(""Guess the number between 1 and 1000: "")
        guesses += 1
        if guess &gt; number:
            print ""Too high!""
        elif guess &lt; number:
            print ""Too low!""
        else:
            print ""\n\nCongratulations, you got it in %d guesses!\n\n"" % guesses
            break
</code></pre>

<p>Now according to the question the max number of guesses should be equal to 11 if the proper strategy is used.I used binary search to get the right number, but the the number of guesses are never more than 10. To check I did the following and it produced a non terminating loop.</p>

<pre><code>    from gasp import *


    guesses = 0
    big = 1000
    small = 1
    while guesses != 11
        number = random_between(1, 1000)
        while True:
            guess = (big + small) / 2
            guesses += 1
            if guess &gt; number:
                print ""Too high!""
                big = guess
            elif guess &lt; number:
                print ""Too low!""
                small = guess
            else:
                print ""\n\nCongratulations, you got it in %d guesses!\n\n"" % guesses
                break
</code></pre>

<p>So who is right am I making some mistake or the number of guesses required can't be more than 10 and the question is wrong.</p>
","<python><search><binary>"
"15586342","2","15586116","<p>A simple loop and a <code>defaultdict</code> will do:</p>

<pre><code>from collections import defaultdict

folderList=['A1_001', 'A1_002', 'A1_003', 'A1_004', 
            'A2_001', 'A2_002', 'A2_003', 'A2_004',
            'A3_001', 'A3_002', 'A3_003', 'A3_004']

sections = defaultdict(lambda: [])
for folder in folderList:
    sections[folder[:2]].append(folder)
print sections.values()
</code></pre>

<p>prints:</p>

<pre><code>[['A1_001', 'A1_002', 'A1_003', 'A1_004'], ['A3_001', 'A3_002', 'A3_003', 'A3_004'], ['A2_001', 'A2_002', 'A2_003', 'A2_004']]
</code></pre>

<p>The disadvantage of <code>groupby</code> is that the input has to be sorted, and it outputs iterators.  In your case, it sounds like you want lists, so you'll need to take the extra steps of <code>list</code>ifying them.  The loop above is the simple way to achieve what you want.</p>
",""
"15586368","2","15586314","<p>Let's see:</p>

<pre><code>A number between 1 and  1 requires 1 guess
A number between 1 and  3 requires 2 guesses at most
A number between 1 and  7 requires 3 guesses at most
A number between 1 and 15 requires 4 guesses at most
A number between 1 and 31 requires 5 guesses at most
...
</code></pre>

<p>In other words, <code>n</code> guesses are enough to cover the range from <code>1</code> to <code>(2**n)-1</code>.</p>

<p>For <code>n=10</code>, this range is from <code>1</code> to <code>1023</code>. Since <code>1023 &gt;= 1000</code>, your conclusion about ten guesses is correct.</p>

<p>That said, the code you used to verify this conclusion is buggy, since it fails to re-initialize <code>big</code> and <code>small</code> and <code>guesses</code> whenever you move on to the next number. Also, instead of generating the numbers randomly, you could just test every number between 1 and 1000 and have a deterministic algorithm with finite runtime.</p>
",""
"15586380","2","15586116","<pre><code>folderList.sort()
def sectionName(sec):
    return sec.split('_', 1)[0]
for key, lst in groupby(folderList, sectionName):
     print key
     for record in lst:
         print record
</code></pre>
",""
"15586434","2","15586290","<p>In your request you send via browser, the message is inside quotes - </p>

<pre><code>&amp;text='Kid got swag'
</code></pre>

<p>Try that in your request - </p>

<pre><code>url=""http://%s:%d/cgi-bin/sendsms?username=%s&amp;password=%s&amp;to=%s&amp;text='%s'"" \
    % ('localhost', 13013, 'kannel', 'kannel', str(mobile_no), message)
</code></pre>

<p>Notice the single quotes at <code>&amp;text='%s'</code>.</p>

<p>PS: I'd recommend using <a href=""http://docs.python-requests.org/en/latest/user/quickstart/#make-a-request"" rel=""nofollow"">requests</a> for requests like this. You could construct your urls better that way, like this - </p>

<pre><code>&gt;&gt;&gt; payload = {'key1': 'value1', 'key2': 'value2'}
&gt;&gt;&gt; r = requests.get(""http://httpbin.org/get"", params=payload)
</code></pre>
",""
"15586721","1","","<p>I wanted to use wordnet lemmatizer in python and I have learnt that the default pos tag is NOUN and that it does not output the correct lemma for a verb, unless the pos tag is explicitly specified as VERB.</p>

<p>My question is what is the best shot inorder to perform the above lemmatization accurately?</p>

<p>I did the pos tagging using <code>nltk.pos_tag</code> and I am lost in integrating the tree bank pos tags to wordnet compatible pos tags. Please help</p>

<pre><code>from nltk.stem.wordnet import WordNetLemmatizer
lmtzr = WordNetLemmatizer()
tagged = nltk.pos_tag(tokens)
</code></pre>

<p>I get the output tags in NN,JJ,VB,RB. How do I change these to wordnet compatible tags?</p>

<p>Also do I have to train <code>nltk.pos_tag()</code> with a tagged corpus or can I use it directly on my data to evaluate?</p>
","<python><nltk><wordnet><lemmatization>"
"15586724","1","","<p>I had the following function written in Python as part of a larger simulation:</p>

<pre><code>#!/usr/bin/python
counter = 1
while (counter &lt; 10000):
    oldpa = .5
    t = 1
    while (t &lt; counter):
        newpa = ((oldpa * t) + 1) / (t + 1)
        t = t + 1
        oldpa = newpa
    counter = counter + 1
    print str(counter) + ""\t"" + str(oldpa)
</code></pre>

<p>Then, I started rewriting the simulation in C so that it would run faster (and also to give myself an excuse to spend time learning C). Here's my C version of the above function.</p>

<pre><code>#include &lt;stdio.h&gt;
main()
{
  int counter, t;
  float oldpa, newpa;
  counter = 1;
  while ( counter &lt; 10000 )
    {
      oldpa = .5;
      t = 1;
      while ( t &lt; counter )
        {
          newpa = ((oldpa * t) + 1) / (t + 1);
          t = t + 1;
          oldpa = newpa;
        }
      counter = counter + 1;
      printf(""%d\t%f\n"", counter, oldpa);
   }
}
</code></pre>

<p>Now, here is the funny thing. When I run the Python function, the result converges to 0.999950, but when I run the C function, it converges to 0.999883. This difference is actually negligible for the purposes of my simulation, but I still want to know why I get different results</p>
","<python><c>"
"15586881","2","15586290","<p>URLs are not permitted to contain spaces.  When you tried in your browser,  the browser took care of correctly encoding the URL before issuing the request.  In your program you need to encode the URL.  Fortunately <code>urllib</code> has functions built-in to take careof the details.</p>

<p><a href=""http://docs.python.org/3.3/library/urllib.parse.html#url-quoting"" rel=""nofollow"">http://docs.python.org/3.3/library/urllib.parse.html#url-quoting</a></p>
",""
"15586919","1","","<p>I am trying to plot some data from a big file.
The data has the following form:</p>

<pre><code>0.025876 139 0
0.030881 140 0
0.030982 141 0
0.035602 142 0
0.035521 143 0
0.038479 144 0
0.040668 145 0
0.040121 146 0
0.037953 147 0
0.039027 148 0
0.038338 149 0
0.047557 139 1
0.045105 140 1
0.044943 141 1
0.042370 142 1
0.042025 143 1
0.038946 144 1
0.037953 145 1
0.033373 146 1
0.030070 147 1
0.029118 148 1
0.025552 149 1 
</code></pre>

<p>In principle, each line corresponds to a three dimensional point and I would ""simply"" like to plot a 3d surface generated from these points akin to what I could do with the splot function in gnuplot for those of you that know about it.</p>

<p>Going on the net to find an answer to my problem, I tried the following thing with the matplolib contour function:</p>

<pre><code>#!/usr/bin/python

from numpy import *
import pylab as p
import sys
import mpl_toolkits.mplot3d.axes3d as p3

 s = str(sys.argv[1])
 f = open(s)
 z,y,x = loadtxt(f, unpack = True)
 f.close
 #x = [1,2,3]
 #y = [1,2,3]
 #z = [1,8,16]
 data = zip(x,y,z)

 #map data on the plane
 X, Y = meshgrid(arange(0, 89, 1), arange(0, 300, 1))
 Z = zeros((len(X),len(Y)),'Float32')
 for x_,y_,z_ in data:
   Z[x_, y_] = z_ #this should work, but only because x and y are integers
             #and arange was done with a step of 1, starting from 0

 fig=p.figure()
 ax = p3.Axes3D(fig)
 ax.contourf(X,Y,Z)
 ax.set_xlabel('X')
 ax.set_ylabel('Y')
 ax.set_zlabel('Z')
 p.show()
</code></pre>

<p>This piece of code worked actually fine with the vectors x,y and z commented with an hashtag in the above code.</p>

<p>But know that I am trying with the data given above, I get ""Inputs x and y must be 1D or 2D"" error in matplotlib.</p>

<p>I have read that this could be related to the fact that Z does not have the same shape as X or Y...but I am not sure how to deal with this problem.</p>

<p>By the way, as you probably realized, I am a super newbie in Python and I apologize if the code appears very ugly to some of you.</p>

<p>In any case, any help will be very much welcome.</p>

<p>Thanks !</p>

<p>Fabien</p>
","<python><matplotlib>"
"15586924","2","15586314","<pre><code>&gt;&gt;&gt; from math import log, ceil
&gt;&gt;&gt; ceil(log(1000, 2))
10.0
</code></pre>
",""
"15586954","1","","<p>I have a dictionary which I would like to use to create a tree. The idea is to get the <strong>value</strong> of the index specified, append it to a list. Use this value as index in the next item of the dictionary and the process repeats until when we get a None</p>

<p>My dictionary</p>

<pre><code>dict = {
         'A' : 'AF',
         'BF': 'B',
         'AF': 'Z',
         'Z' : None,
         'B' : 'B'
       }
</code></pre>

<p>I can loop through the dict and get the first value, but I can't a better way of loop recursively through the dict. </p>

<p>Note x is my index parameter I would like to specify.i.e A,BF,AF,Z or B</p>

<pre><code>def tree(x,dict):
   result = []
   for value in dict:
      result.append(value)
    #stuck somewhere here. 
    #I would like to use this value as an index again and pick next value. 
    #Do this until I have no further relation

   #print final results in a list
   print result
</code></pre>

<p>When tree(x,dict) is called, take x = 'A' the expected result should be:</p>

<pre><code>['A','AF','Z']
</code></pre>

<p>Thank you for your assistance and contribution.</p>
","<python><loops><data-structures><recursion>"
"15586984","2","15586954","<pre><code>def tree(x,dict):
    old_value = x
    while True:
        value = dict.get(old_value)
        if not value:
            break
        result.append(value)
    print result
</code></pre>
",""
"15587016","2","15586954","<p>The non-recursive version is much faster but there's one that looks nice</p>

<pre><code>&gt;&gt;&gt; def tree(D, x):
        if x is None: 
            return []
        else: 
            return [x] + tree(D, D[x])


&gt;&gt;&gt; tree(D, 'A')
['A', 'AF', 'Z']
</code></pre>

<p>Or as a one-liner:</p>

<pre><code>def tree(D, x):
    return [] if x is None else [x] + tree(D, D[x])
</code></pre>

<p>This will have quadratic runtime since it adds two lists each time, although if you want performance you would just use <code>.append</code> and then it would be much more practical to just use a loop anyway.</p>
",""
"15587017","2","15586724","<p>Floating-point values in Python are almost always IEEE-754 <a href=""http://docs.python.org/2/tutorial/floatingpoint.html"" rel=""nofollow"">double precision</a>, corresponding to a C or C++ <code>double</code>. If you want a lot more precision, check out the <a href=""http://docs.python.org/2/library/decimal.html"" rel=""nofollow"">decimal module</a>.</p>
",""
"15587033","1","","<p>I'm parsing some TV episodes that have been transcribed by different people, meaning I need to search for a variety of formats. For example, new scenes are indicated one of two ways:</p>

<p><code>[A coffee shop]</code></p>

<p>or</p>

<p><code>INT. Coffee shop - NIGHT</code></p>

<p>Right now, I match this with the following regex in Python:</p>

<pre><code>re.findall(""(^\[(.+?)\]$)|(^[INTEXT]{3}\. .+?$)"", text)
</code></pre>

<p>where ""text"" is the text of the entire script (hence using <code>findall</code>). This always appears on its own line, hence the <code>^$</code></p>

<p>This gives me something like: <code>(None, None, ""INT. Coffee Shop - NIGHT"")</code> for example.</p>

<p><strong>My question:</strong> How do you construct a regex to search for one of two complex patterns, using the <code>|</code> notation, without <em>also</em> creating submatches that you don't really want? Or is there a better way?</p>

<p>Many thanks.</p>

<p><strong>UPDATE</strong>: I had overlooked the idea of non-capturing groups. I can accomplish what I want with:</p>

<pre><code>""(?:^\[.+?\]$)|(?:^[INTEX]{3}\. .+?$)""
</code></pre>

<p>However, this raises a new question. I don't actually want the brackets or the INT/EXT in the scenes, just the location. I thought that I could use actual groups within the none-capturing groups, but I'm still getting those blank matches for the other expression, like so:</p>

<pre><code>import re

pattern = ""(?:^\[(.+?)\]$)|(?:^[INTEX]{3}\. (.+?)$)""

examples = [                                                                                                                                                                     
    ""[coffee shop]"",                                                                                                                                                                 
    ""INT. COFFEE SHOP - DAY"",                                                                                                                                                        
    ""EXT. FIELD - NIGHT"",                                                                                                                                                            
    ""[Hugh's aparment]""
]

for example in examples:
    print re.findall(pattern, example)


'''
[('coffee shop', '')]
[('', 'COFFEE SHOP - DAY')]
[('', 'FIELD - NIGHT')]
[(""Hugh's aparment"", '')]
'''
</code></pre>

<p>I can just <code>join()</code> them, but is there a better way?</p>
","<python><regex>"
"15587125","1","","<p>I have classical Python package structure:</p>

<pre><code>bin/
    my_script
docs/
my_package/
   ...
</code></pre>

<p>and I create docs with Sphinx. </p>

<p>I would like to take docstring from <code>my_script</code> automatically. Is there any way to do it? </p>

<p>Why want I to do it? I have usage information in this script and I would like to show it in documentation.</p>
","<python><documentation><package><python-sphinx>"
"15587210","2","15587033","<p>Based on the limited examples you've provided, how about using assertions for the brackets:</p>

<pre><code>re.findall(""((?&lt;=^\[)[^[\]]+(?=\]$)|^[INTEXT]{3}\. .+?$)"", text)
</code></pre>
",""
"15587231","1","","<p>Is it possible that I create two different roups of radiobuttons.
I now have 4 radiobutttons with only one option. I want to 2 groups with 2 options
so i can click two options.</p>

<p>the code now:</p>

<pre><code>Radiobutton(root, text=""Ja"", variable=var, value=1,
                  command=setValueTrue).grid(row=0,column=8)

Radiobutton(root, text=""Nee"", variable=var, value=2,
                  command=setValueFalse).grid(row=1,column=8)

Radiobutton(root, text=""Ja"", variable=var, value=3,
                  command=setValueTrue1).grid(row=3,column=8)


Radiobutton(root, text=""Nee"", variable=var, value=4,
                  command=setValueFalse1).grid(row=4,column=8)
</code></pre>
","<python><radio-button><tkinter>"
"15587246","1","","<p>Maybe it´s the easiest way to show you the code and try to explain it later:</p>

<pre><code>sigma_aussen = 7.1
roh_aussen = 38
lambda_schreib = 532*10**-9
lambda_rek = 432*10**-9
sigma_aussen=radians(sigma_aussen)
roh_aussen=radians(roh_aussen)

def BraggMatch(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek):


    gw2, sig_innen, ref_innen, sig_din, ref_din, p2, sig, ref =var('gw2 sig_innen ref_innen sig_din ref_din p2 sig ref')

    sigma = asin(1/n_brech*sin(sigma_aussen))
    roh = asin(1/n_brech*sin(roh_aussen))
    gw = (sigma+roh)/2
    sigma_din =  (roh-sigma)/2
    roh_din =  (sigma-roh)/2


    gw2 = (asin(1/n_brech*sin(sig))+asin(1/n_brech*sin(ref))/2)
    print(""gw2: "", gw2)

    sig_innen = asin(1/n_brech*sin(sig))
    ref_innen = asin(1/n_brech*sin(ref))
    print (""sig_innen: "", sig_innen)
    print (""ref_innen: "", ref_innen)


    sig_din = gw2-sig_innen
    ref_din = gw2-ref_innen
    print (""ref_din: "", ref_din)

    p = lambda_schreib/(n_brech*(sin(sigma_din)-sin(roh_din)))
    print (""p: "",p)
    p2 = lambda_rek/n_brech*(sin(sig_din)-sin(ref_din))
    print (""p2: "", p2)

    Winkel=nsolve([gw-gw2, p-p2],[sig,ref], [0,0])
    return Winkel    

Winkel = BraggMatch(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek)
</code></pre>

<p>Here my explanation: BraggMatch ist a method which returns two angles in radians.</p>

<p>the two equations are gw-gw2=0 and p-p2=0. gw and p are two known variables. only two variables are unknown, sig and ref. that two unknown variables should be solved nummerical and get returned in the method BraggMatch.</p>

<p>With the software Maple solving that two equations is no problem. Maybe it could help, showing you the solution: sig=0.064 and ref=0.734</p>

<p>This is the error: ""ValueError: Could not find root within given tolerance. (0.0448851 > 2.1684e-19)
Try another starting point or tweak arguments.""</p>

<p>You make me very thankful by helping me solving this problem. It is the core of my master thesis.</p>

<hr>

<p>First, thanks for your fast reaktion.</p>

<p>But I don´t think that this is the right way. You´re right, i´ve forgot the <code>n_brech=1.5</code>.
Today, i find out, that <code>gw-gw2</code> can solve analytical. So i only need a solution for <code>p-p2</code>.
The solutions of <code>ref</code>and <code>sig</code>are can be between PI and -PI, by a variation of <code>sigma_aussen, roh_aussen, lambda_rek</code>, that´s the reason i´m start looking a solution at 0.</p>

<p>Here you see my new code:</p>

<pre><code>n_brech = 1.5
sigma_aussen = 7.1
roh_aussnen = 38
lambda_schreib = 532*10**-9
lambda_rek = 432*10**-9
sigma_aussen=radians(sigma_aussen)
roh_aussen=radians(roh_aussen)

def BraggMatch(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek):

    gw2, sig_innen, ref_innen, sig_din, ref_din, p2, sig, ref =var('gw2 sig_innen ref_innen sig_din ref_din p2 sig ref')

    sigma = asin(1/n_brech*sin(sigma_aussen))
    roh = asin(1/n_brech*sin(roh_aussen))
    gw = (sigma+roh)/2
    sigma_din =  (roh-sigma)/2
    roh_din =  (sigma-roh)/2


    gw2 = (asin(1/n_brech*sin(sig))+asin(1/n_brech*sin(ref))/2)
    ref_list=solve(gw-gw2,ref)
    ref=ref_list[0]
    print(""ref: "", ref)
    gw2 = (asin(1/n_brech*sin(sig))+asin(1/n_brech*sin(ref))/2)

    sig_innen = asin(1/n_brech*sin(sig))
    ref_innen = asin(1/n_brech*sin(ref))
    sig_din = gw2-sig_innen
    ref_din = gw2-ref_innen

    p = lambda_schreib/(n_brech*(sin(sigma_din)-sin(roh_din)))
    p2 = lambda_rek/(n_brech*(sin(sig_din)-sin(ref_din)))
    print (""p2: "", p2)
    print (""p-p2: "", p-p2)
    sig=fsolve(p-p2,0)
    Winkel=[sig, ref]
    return Winkel

Winkel=BraggMatch(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek)
</code></pre>

<p>If you are good at Maple, in the image i upload, you see totaly the problem i have to solve in Python, because here i can visualize it with VPython. The Maple code returns the angles in degrees, which is no problem.
<img src=""https://i.stack.imgur.com/z4LfM.jpg"" alt=""enter image description here""></p>

<hr>

<p>Now I tried to write the code, like I did in Maple. I get some now Error:</p>

<p><code>ZeroDivisionError</code></p>

<p>Here is the code:</p>

<pre><code>n_brech = 1.5
sigma_aussen = 7.1
roh_aussen = 38
lambda_schreib = 532*10**-9
lambda_rek = 432*10**-9
sigma_aussen=radians(sigma_aussen)
roh_aussen=radians(roh_aussen)

def BraggMatch(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek):

    sig, ref =var('sig ref')

    def sigma(n_brech, sigma_aussen):
        return (asin(1/n_brech*sin(sigma_aussen)))
    def roh(n_brech, roh_aussen):
        return (asin(1/n_brech*sin(roh_aussen)))
    def gw(n_brech, sigma_aussen, roh_aussen):
        return ((sigma(n_brech, sigma_aussen)+roh(n_brech, roh_aussen))/2)
    def sigma_din(n_brech, sigma_aussen, roh_aussen):
        return (gw(n_brech, sigma_aussen, roh_aussen)-sigma(n_brech, sigma_aussen))
    def roh_din(n_brech, sigma_aussen, roh_aussen):
        return (gw(n_brech, sigma_aussen, roh_aussen)-roh(n_brech, roh_aussen))
    def p(n_brech, sigma_aussen, roh_aussen, lambda_schreib):
        return (lambda_schreib/(n_brech*(sin(sigma_din(n_brech, sigma_aussen, roh_aussen))-sin(roh_din(n_brech, sigma_aussen, roh_aussen)))))

    return (nsolve([gw(n_brech, sigma_aussen, roh_aussen)-gw(n_brech, sig, ref), p(n_brech, sigma_aussen, roh_aussen, lambda_rek)-p(n_brech, sig, ref, lambda_schreib)], [sig, ref], [0, 0]))

Winkel=BraggMatch(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek)
</code></pre>

<p>I do not understand why it don´t work...</p>
","<python><numerical><sympy>"
"15587312","2","15587125","<p>My solution - I don't think it's the best.</p>

<p>I created <code>__init__.py</code> in bin directory and symlink <code>my_script.py</code> to <code>my_script</code>. Into <code>conf.py</code> (config of sphinx) I added:</p>

<pre><code>sys.path.insert(0, os.path.abspath('..'))
</code></pre>

<p>Now I can use automodule:</p>

<pre><code>.. automodule:: bin.my_script
</code></pre>
",""
"15587418","2","15585493","<p>You can't do what you want using <code>lru_cache</code>, since it doesn't provide an API to access the cache, and it might be rewritten in C in future releases. If you really want to save the cache you have to use a different solution that gives you access to the cache.</p>

<p>It's simple enough to write a cache yourself. For example:</p>

<pre><code>from functools import wraps

def cached(func):
    func.cache = {}
    @wraps(func)
    def wrapper(*args):
        try:
            return func.cache[args]
        except KeyError:
            func.cache[args] = result = func(*args)
            return result   
    return wrapper
</code></pre>

<p>You can then apply it as a decorator:</p>

<pre><code>&gt;&gt;&gt; @cached
... def fibonacci(n):
...     if n &lt; 2:
...             return n
...     return fibonacci(n-1) + fibonacci(n-2)
... 
&gt;&gt;&gt; fibonacci(100)
354224848179261915075L
</code></pre>

<p>And retrieve the <code>cache</code>:</p>

<pre><code>&gt;&gt;&gt; fibonacci.cache
{(32,): 2178309, (23,): 28657, ... }
</code></pre>

<p>You can then pickle/unpickle the cache as you please and load it with:</p>

<pre><code>fibonacci.cache = pickle.load(cache_file_object)
</code></pre>

<hr>

<p>I found a <a href=""http://bugs.python.org/issue17528"">feature request</a> in python's issue tracker to add dumps/loads to <code>lru_cache</code>, but it wasn't accepted/implemented. Maybe in the future it will be possible to have built-in support for these operations via <code>lru_cache</code>.</p>
",""
"15587426","2","15587231","<p>Then you need to create a new variable to be used in the second group:</p>

<pre><code>Radiobutton(root, text=""Ja"", variable=var, value=1, ...)
Radiobutton(root, text=""Nee"", variable=var, value=2, ...)
Radiobutton(root, text=""Ja"", variable=var2, value=3, ...)
Radiobutton(root, text=""Nee"", variable=var2, value=4, ...)
</code></pre>
",""
"15587430","2","15586919","<p>Using <a href=""http://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.griddata.html#scipy.interpolate.griddata"" rel=""nofollow noreferrer"">scipy.interpolate.griddata</a>:</p>

<pre><code>import io
import sys
import numpy as np
import matplotlib.pyplot as plt
import mpl_toolkits.mplot3d.axes3d as axes3d
import scipy.interpolate as interpolate

content = '''0.025876 139 0
0.030881 140 0
0.030982 141 0
0.035602 142 0
0.035521 143 0
0.038479 144 0
0.040668 145 0
0.040121 146 0
0.037953 147 0
0.039027 148 0
0.038338 149 0
0.047557 139 1
0.045105 140 1
0.044943 141 1
0.042370 142 1
0.042025 143 1
0.038946 144 1
0.037953 145 1
0.033373 146 1
0.030070 147 1
0.029118 148 1
0.025552 149 1'''

data = np.genfromtxt(io.BytesIO(content), dtype=None, names='x, y, z')

# Or, to read from a file:
# data = np.genfromtxt(filename, dtype=None, names='x, y, z')

x, y, z = data['x'], data['y'], data['z']
N = 20
xi = np.linspace(x.min(), x.max(), N)
yi = np.linspace(y.min(), y.max(), N)

X, Y = np.meshgrid(xi, yi)
Z = interpolate.griddata((x, y), z, (X, Y), method='nearest')

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1, projection='3d')
ax.scatter(data['x'], data['y'], data['z'])
ax.plot_wireframe(X, Y, Z, rstride=1, cstride=1)
# ax.plot_surface(X, Y, Z)
plt.show()
</code></pre>

<p>yields</p>

<p><img src=""https://i.stack.imgur.com/Ee3ar.png"" alt=""enter image description here""></p>

<hr>

<p>Relevant links:</p>

<ul>
<li><a href=""http://docs.scipy.org/doc/scipy/reference/generated/scipy.interpolate.griddata.html#scipy.interpolate.griddata"" rel=""nofollow noreferrer"">scipy.interpolate.griddata</a></li>
<li><a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html#numpy-genfromtxt"" rel=""nofollow noreferrer"">np.genfromtxt</a></li>
<li><a href=""http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#mpl_toolkits.mplot3d.Axes3D.plot_wireframe"" rel=""nofollow noreferrer"">Axes3D.plot_wireframe</a></li>
<li><a href=""http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#mpl_toolkits.mplot3d.Axes3D.plot_surface"" rel=""nofollow noreferrer"">Axes3D.plot_surface</a></li>
</ul>
",""
"15587439","2","15586954","<p>You could also try a recursive generator:</p>

<pre><code>data = {                                                                        
        'A' : 'AF',                                                          
        'BF': 'B',                                                           
        'AF': 'Z',                                                           
        'Z' : None,                                                          
        'B' : 'B'                                                            
       }                                                                      

def tree(key):                                                                  
  value = data.get(key)                                                         
  yield key                                                                     
  if value is not None:                                                         
    for value in tree(value):                                                   
      yield value                                                               

for value in tree(""A""):                                                         
  # Do something with the value     
</code></pre>
",""
"15588038","2","15586290","<p>You need to <a href=""http://en.wikipedia.org/wiki/Percent-encoding"" rel=""nofollow"">URL-encode</a> the values you pass as parameters, otherwise a broken URL gets constructed, that's why the request fails. I believe <a href=""http://docs.python.org/3.3/library/urllib.parse.html#urllib.parse.urlencode"" rel=""nofollow"">urllib.parse.urlencode</a> does what you need.</p>
",""
"15588486","2","15575160","<p>You could for example reimplement the <code>start</code> method to emit a signal, something like:</p>

<pre><code>class MyDrag(QtGui.QDrag):
    dragStarted = QtCore.pyqtSignal()

    def __init__(self, dragSource):
        super(MyDrag, self).__init__(dragSource)

    def start(self):
        self.dragStarted.emit()

        super(MyDrag, self).start()
</code></pre>
",""
"15589609","2","15587033","<p>You may be better off just using two expressions.</p>

<pre><code>patterns = [r'^\[(.+?)\]$', r'^(?:INT|EXT)\. (.+?)$']

for example in examples:
    print re.findall(patterns[0], example) or re.findall(patterns[1], example)
</code></pre>
",""
"15590384","2","15586721","<p>First of all, you can use <code>nltk.pos_tag()</code> directly without training it. 
The function will load a pretrained tagger from a file. You can see the file name 
with <code>nltk.tag._POS_TAGGER</code>:</p>

<pre><code>nltk.tag._POS_TAGGER
&gt;&gt;&gt; 'taggers/maxent_treebank_pos_tagger/english.pickle' 
</code></pre>

<p>As it was trained with the Treebank corpus, it also uses the <a href=""https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html"" rel=""noreferrer"">Treebank tag set</a>.</p>

<p>The following function would map the treebank tags to WordNet part of speech names: </p>

<pre><code>from nltk.corpus import wordnet

def get_wordnet_pos(treebank_tag):

    if treebank_tag.startswith('J'):
        return wordnet.ADJ
    elif treebank_tag.startswith('V'):
        return wordnet.VERB
    elif treebank_tag.startswith('N'):
        return wordnet.NOUN
    elif treebank_tag.startswith('R'):
        return wordnet.ADV
    else:
        return ''
</code></pre>

<p>You can then use the return value with the lemmatizer:</p>

<pre><code>from nltk.stem.wordnet import WordNetLemmatizer
lemmatizer = WordNetLemmatizer()
lemmatizer.lemmatize('going', wordnet.VERB)
&gt;&gt;&gt; 'go'
</code></pre>
",""
"15590603","2","15587033","<p>This seems to do what you want:</p>

<pre><code>(?m)^(?=(?:\[|[INTEX]{3}\.\s+)([^\]\r\n]+))(?:\[\1\]|[INTEX]{3}\. \1)$
</code></pre>

<p>First the lookahead peeks at the text of the scene marker, capturing it in group #1.  Then the rest of the regex goes ahead and consumes the whole line containing the marker.  Although now I think about it, you don't really have to consume anything.  This works, too:</p>

<pre><code>result = re.findall(r""(?m)^(?=(?:\[|[INTEX]{3}\.\s+)([^\]\r\n]+))"", subject)
</code></pre>

<p>The marker text is still captured in group #1, so it still gets added to the result of <code>findall()</code>.  Then again, I don't see why you would want to use <code>findall()</code> here.  If you're trying to normalize the scene markers by replacing them in place, you'll have to use the consuming version of the regex.</p>

<p>Also, notice the <code>(?m)</code>.  In your examples you always apply the regex to the scene markers in isolation.  To pluck them out of the whole script, you have to set the <code>MULTILINE</code> flag, turning <code>^</code> and <code>$</code> into line anchors.</p>
",""
"15592027","2","15585823","<p>You can always use something like </p>

<pre><code>fid=fopen('yourfile');
A=fread(fid);
fclose(fid);

C=regexp(char(A'),'[\s ,]','split');
</code></pre>

<p>C will be a cell array consisting of strings (C{1} C{2} C{3} ...) obtained by breaking up the file by whitespace.  By keeping track of the index and applying str2num you should be able to get the data you need.  </p>

<p><em>edit</em> </p>

<p>Also, strcmp will work with C.  So for example if you want to find what cell index SIDESLIP occurs at you can do </p>

<pre><code>n=find(strcmp(C,'SIDESLIP'));
</code></pre>
",""
"15592101","2","15585823","<p>EDIT : below is a piece of code which is doing the job. Since I decided to work on this topic to get more knowledge about the regexp, I end up a little bit frustrated since there is no regexp in the final code. Let me summarize below the different part of the parsing code with the hope that someone can help to use a regexp at the right place - I found only one place where the regexp could have been helpful but maybe there is other places where it could be the case. Feel free to comment.</p>

<p>1/ split the file into blocks by looking for the lines where there is the string '  FLIGHT CONDITIONS   ' - no regexp usefull I guess</p>

<p>2/split a block in two parts : first one with the hdr :
several lines with a format like the following line :
       MACH NUMBER = 0.67       REYNOLDS NU = 2.05E5 /M
Maybe this is a place here a regexp could have been helpful :
instead of splitting the line with ' ', how could a regexp have extracted from this line the useful information let say [('MACH NUMBER', 0.67), ('REYNOLDS NU', 2.05E5))</p>

<p>3/ merge the possibly splitted data array => I can't see if a regexp could have been usefull.</p>

<hr>

<p>Here is a piece of code which is doing the job. I hope you can start from it to have the format you want. Let me explain it in a few words: </p>

<p>First step is to be able to split your file into blocks : blocks are separated with FLIGHT CONDITIONS.</p>

<p>Second step is to split a block into a hdr (where the details of the flight conditions are stored) and the raw data. </p>

<p>Details of the flight conditions are stored into a dct (hdr_dct) and the raw data are stored into a list (data_lst) with a data_hdr describing what is in the list. </p>

<pre><code>import itertools
import sys

def parse_hdr(block) :
    """"""
    parsing the header of a block of data
    """"""
    parsed_hdr = {}
    for line in block :
        if '=' not in line :
            continue
        res = [e for e in line.split(' ') if len(e) &gt;0] # remove white space
        match = False
        name = ''
        for e in res :
            if not match :
               if e == '=' :
                  match = True
               else :
                  name += e
            else :
               parsed_hdr[name] = float(e)
               name = ''
               match = False
    return parsed_hdr


def parse_data(block) :
    """"""
    parse the numerical data
    """"""
    hdr, res, block_id = [], [], -1
    for line in block :
        splitted_line = [e for e in line.split(' ') if len(e) &gt; 0]
        if 'ALPHA' in splitted_line :
            hdr.extend(splitted_line)
            block_id += 1
            i_b = 0
        else :
            try :
                to_add = [float(e) for e in splitted_line]
            except :
                #print ""skip : "" + line
                sys.exc_clear()
                continue
            if block_id == 0 :
                res.append(to_add)
            else :
               res[i_b].extend(to_add)
            i_b += 1
    return hdr, res

def parse_block(block) :
""""""
    parsing the data ofone block
""""""
hdr_dct  = parse_hdr(block[:5])
data_hdr, data_lst = parse_data(block[6:])


def main() :
    block_limit ='    ******* FLIGHT CONDITIONS AND REFERENCE QUANTITIES *******'
    stt_data_lst = []
    end_data_lst = []

    with open('input.dat') as f :
       lines = f.readlines()
       for i_line, line in enumerate(lines) :
            if block_limit in line :
                stt_data_lst.append(i_line)

    end_data_lst = stt_data_lst[1:] + [-1]


    for stt, end in itertools.izip(stt_data_lst, end_data_lst) :
        parse_block([ee for ee in [e.strip() for e in lines[stt+1:end]] if len(ee) &gt; 0])


main()
</code></pre>
",""
"15596646","2","15587246","<p>The problem could also be solved numerically, e.g. with <code>scipy.optimize.minimize()</code>:</p>

<pre><code>from scipy.optimize import minimize;
from math import radians, asin, sin;

sigma_aussen = 7.1
roh_aussen = 38
lambda_schreib = 532*10**-9
lambda_rek = 432*10**-9
sigma_aussen=radians(sigma_aussen)
roh_aussen=radians(roh_aussen)

n_brech = 1

def BraggMatch(sig,ref,sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek):
    sigma = asin(1/n_brech*sin(sigma_aussen))
    roh = asin(1/n_brech*sin(roh_aussen))
    gw = (sigma+roh)/2
    sigma_din =  (roh-sigma)/2
    roh_din =  (sigma-roh)/2
    gw2 = (asin(1/n_brech*sin(sig))+asin(1/n_brech*sin(ref))/2)
    sig_innen = asin(1/n_brech*sin(sig))
    ref_innen = asin(1/n_brech*sin(ref))
    sig_din = gw2-sig_innen
    ref_din = gw2-ref_innen
    p = lambda_schreib/(n_brech*(sin(sigma_din)-sin(roh_din)))
    p2 = lambda_rek/n_brech*(sin(sig_din)-sin(ref_din))
    return (gw-gw2)**2 + (p-p2)**2  

def f(x,sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_re):
    return BraggMatch(x[0],x[1],sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_re)

print(minimize(f,[0,0],args=(sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek)).x)
</code></pre>

<p>However I've had to guess that <code>n_brech = 1</code> because its value was not shown in the question. <code>scipy.optimize.minimize()</code> does, in fact, find a solution (<code>[ 0.3148574  0.1574287]</code>) but it is not the same solution as Maple found. </p>

<p>Without knowing the source of the equations and what they are intended to mean, I can't be sure that they are formulated correctly. I could, however, check for multiple solutions. Starting the optimisation at <code>[0.064, 0.734]</code> instead of at <code>[0, 0]</code> gave the result <code>[ 0.0340574  0.7190287]</code>. </p>

<p>Thus, it seems that there are multiple solutions for these equations and (at least for this value of <code>n_brech</code>), the optimization will find different solutions if it is started at different points.</p>

<p>(Further EDIT)</p>

<p>To investigate the multiple solutions, I used the following code:</p>

<pre><code>from scipy.optimize import minimize;
from math import radians, asin, sin, log;

sigma_aussen = 7.1
roh_aussen = 38
lambda_schreib = 532*10**-9
lambda_rek = 432*10**-9
sigma_aussen=radians(sigma_aussen)
roh_aussen=radians(roh_aussen)

n_brech = 1.5

def BraggMatch(sig,ref,sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek):
    sigma = asin(1/n_brech*sin(sigma_aussen))
    roh = asin(1/n_brech*sin(roh_aussen))
    gw = (sigma+roh)/2
    sigma_din =  (roh-sigma)/2
    roh_din =  (sigma-roh)/2
    gw2 = (asin(1/n_brech*sin(sig))+asin(1/n_brech*sin(ref))/2)
    sig_innen = asin(1/n_brech*sin(sig))
    ref_innen = asin(1/n_brech*sin(ref))
    sig_din = gw2-sig_innen
    ref_din = gw2-ref_innen
    p = lambda_schreib/(n_brech*(sin(sigma_din)-sin(roh_din)))
    p2 = lambda_rek/n_brech*(sin(sig_din)-sin(ref_din))
    return log((gw-gw2)**2 + (p-p2)**2) 

import matplotlib
import itertools
import numpy as np
import matplotlib.cm as cm
import matplotlib.mlab as mlab
import matplotlib.pyplot as plt

matplotlib.rcParams['xtick.direction'] = 'out'
matplotlib.rcParams['ytick.direction'] = 'out'

delta = 0.001
sig = np.arange(0, 1, delta)
ref = np.arange(0, 1, delta)
XY = [(x,y) for x in sig for y in ref]
Z = [ BraggMatch(x,y,sigma_aussen, roh_aussen, n_brech, lambda_schreib, lambda_rek) for x,y in XY]
X = [x for x,y in XY]
Y = [y for x,y in XY]
Z = np.reshape(Z,(len(sig),-1))

plt.figure()
CS = plt.contour(sig, ref, Z)
plt.clabel(CS, inline=1, fontsize=10)
plt.title('Contour plot')
plt.xlabel('sig')
plt.ylabel('ref')

plt.show()
</code></pre>

<p>... which produces the following output:</p>

<p><img src=""https://i.stack.imgur.com/CgZOO.png"" alt=""enter image description here""></p>

<p>... from which it can be seen that there are many local minima along a curve in the range of interest. Thus, I'm not surprised that different methods (and different software) find different minima.</p>
",""
"15598625","1","","<p>I am having a pandas OLS model,</p>

<pre><code>mid_lag_lead_df_model
</code></pre>

<blockquote>
  <p>-------------------------Summary of Regression Analysis-------------------------</p>
  
  <p>Formula: Y ~ &lt;1> + &lt;2> + &lt;3> + </p>
  
  <p>Number of Observations:         56
  Number of Degrees of Freedom:   4</p>
  
  <p>R-squared:         0.2864
  Adj R-squared:     0.2452</p>
  
  <p>Rmse:              0.0001</p>
  
  <p>F-stat (3, 52):     6.9554, p-value:     0.0005</p>
  
  <p>Degrees of Freedom: model 3, resid 52</p>
  
  <p>-----------------------Summary of Estimated Coefficients------------------------</p>

<pre><code> Variable       Coef    Std Err     t-stat    p-value    CI 2.5%   CI 97.5%
</code></pre>
  
  <hr>

<pre><code>        1     0.0527     0.0268       1.97     0.0547     0.0001     0.1053
        2    -0.0009     0.0269      -0.03     0.9730    -0.0537     0.0519
        3     0.0980     0.0268       3.66     0.0006     0.0455     0.1505
intercept     0.0000     0.0000       1.59     0.1184    -0.0000     0.0000
</code></pre>
  
  <p>---------------------------------End of Summary---------------------------------</p>
</blockquote>

<p>If i need to predict, the <code>y</code> value from <code>[0.000207, -0.000361, -0.000091]</code></p>

<pre><code>mid_lag_lead_df_model.predict
</code></pre>

<p>what the signature should be using <code>predict</code> as above?</p>
","<python><model><pandas><regression><predict>"
"15598669","1","","<h2>My Situation</h2>

<p>I've installed Microsoft Z3 (<code>Z3 [version 4.3.0 - 64 bit]. (C) 2006</code>) and it's <code>pyc</code> binaries for Python2.</p>

<p>I've written an Python3 package which needs access to <code>z3</code> functionality.</p>

<p>In order to be able to use the <code>pyc</code> binaries with my Python3 package, I <code>decompyle</code> the <code>z3</code> binaries and applied <code>2to3</code>.</p>

<h2>My Problem</h2>

<p><code>Int('string')</code> doesn't work because Z3Py isn't able to handle the new <code>&lt;class 'str'&gt;</code> used as <code>'string'</code> argument:</p>

<pre><code>&gt;&gt;&gt; import z3; z3.Int('abc')

Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File "".\bin\z3.py"", line 2931, in Int
    return ArithRef(Z3_mk_const(ctx.ref(), to_symbol(name, ctx), IntSort(ctx).ast), ctx)
  File "".\bin\z3.py"", line 72, in to_symbol
    return Z3_mk_string_symbol(_get_ctx(ctx).ref(), s)
  File "".\bin\z3core.py"", line 1430, in Z3_mk_string_symbol
    r = lib().Z3_mk_string_symbol(a0, a1)
ctypes.ArgumentError: argument 2: &lt;class 'TypeError'&gt;: wrong type
</code></pre>

<h2>My Questions</h2>

<ul>
<li>It's a little bit hacky to need to <code>decompyle</code> Z3's <code>*.pyc</code> files first. So, are there any Z3Py source codes available?</li>
<li>Is there already an existing Z3Py port to Python3?</li>
<li>Any other idea how to get <strong>Z3Py to run with Python3</strong>?</li>
</ul>

<p>Thanks. - If anything's unclear, please leave a question comment.</p>
","<python><python-3.x><z3><python-2to3>"
"15598867","1","","<p>If I define a function whit two array, for instance like this:</p>

<pre><code>from numpy import *
x = arange(-10,10,0.1)
y = x**3
</code></pre>

<p>How can I extract the value of y(5.05) interpolating the value of the two closer point y(5) and y(5.1)? Now if I want find that value, I use this method:</p>

<pre><code>y0 = y[x&gt;5][0]
</code></pre>

<p>And I should obtain the value of <code>y</code> for <code>x=5.1</code>, but I think that exist better methods, and probably they are the correct ones.</p>
","<python><numpy>"
"15598928","2","15598867","<p>There's <a href=""http://docs.scipy.org/doc/numpy/reference/generated/numpy.interp.html"" rel=""nofollow"">numpy.interp</a>, if linear interpolation will suffice:</p>

<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; x = np.arange(-10, 10, 0.1)
&gt;&gt;&gt; y = x**3
&gt;&gt;&gt; np.interp(5.05, x, y)
128.82549999999998
&gt;&gt;&gt; 5.05**3
128.787625
</code></pre>

<p>And there are a bunch of tools in <code>scipy</code> for interpolation <a href=""http://docs.scipy.org/doc/scipy/reference/interpolate.html"" rel=""nofollow"">[docs]</a>:</p>

<pre><code>&gt;&gt;&gt; import scipy.interpolate
&gt;&gt;&gt; f = scipy.interpolate.UnivariateSpline(x, y)
&gt;&gt;&gt; f
&lt;scipy.interpolate.fitpack2.LSQUnivariateSpline object at 0xa85708c&gt;
&gt;&gt;&gt; f(5.05)
array(128.78762500000025)
</code></pre>
",""
"15598932","2","15598867","<p>There's a function for this in numpy/scipy..</p>

<pre><code>import numpy as np
np.interp(5.05, x, y)
</code></pre>
",""
"15598980","1","","<p>I have a long running python process running headless on a raspberrypi (controlling a garden) like so:</p>

<pre><code>from time import sleep

def run_garden():
    while 1:
        /* do work */
        sleep(60)

if __name__ == ""__main__"":
    run_garden()
</code></pre>

<p>The 60 second sleep period is plenty of time for any changes happening in my garden (humidity, air temp, turn on pump, turn off fan etc), BUT what if i want to manually override these things?</p>

<p>Currently, in my <code>/* do work */</code> loop, i first call out to another server where I keep config variables, and I can update those config variables via a web console, but it lacks any sort of real time feel, because it relies on the 60 second loop (e.g. you might update the web console, and then wait 45 seconds for the desired effect to take effect)</p>

<p>The raspberryPi running <code>run_garden()</code> is dedicated to the garden and it is basically the only thing taking up resources. So i know i have room to do something, I just dont know what.</p>

<p>Once the loop picks up the fact that a config var has been updated, the loop could then do exponential backoff to keep checking for interaction, rather than wait 60 seconds, but it just doesnt feel like that is a whole lot better.</p>

<p>Is there a better way to basically jump into this long running process?</p>
","<python><background-process><raspberry-pi>"
"15599012","1","","<p>I'm trying to learn Python and Django by implementing an online forum. Right now, I'm trying to set the default value of the post title to ""Re:"" + thread.title, but I can't seem to do it.</p>

<p>I've searched for anything like this but nothing seems to answer my problem.</p>

<p>Here's my code (models.py):</p>

<pre><code>from django.db import models

class Thread(models.Model):
    title = models.CharField(max_length=50)

    def __unicode__(self):
        return u'[id=%s]%s' % (self.id, self.title)

class Post(models.Model):
    thread = models.ForeignKey(Thread)
    title = models.CharField(max_length=50)
    post_date = models.DateTimeField(auto_now_add=True)
    content = models.TextField()

    def __init__(self):
        super(Post, self).__init__()
        if not self.title:
            self.title = ""Re: %s"" % self.thread.title

    def __unicode__(self):
        return u'%s::[id=%s]%s' % (self.thread, self.id, self.title)
</code></pre>

<p>I hope someone can help me.</p>

<p>Regards,
Chad</p>
","<python><django>"
"15599014","1","","<p>I'm trying to develop an app for Google App Engine using Cherrypy.</p>

<p>I'm using a custom tool to apply templates with.  Part of the output is a html css stylesheet declaration.  I can get cherrypy to find and load the css file no problem, the problem is the template gets applied to the css output.</p>

<p>Here's my code I'm using</p>

<pre><code>import cherrypy
from lib.tools.template import HamlTool

engine = cherrypy.engine

from lib.plugin.template import MakoTemplatePlugin
engine.mako = MakoTemplatePlugin(engine, os.path.join(os.path.dirname(__file__), 'templates'))
engine.mako.subscribe()

class Root(object):
  exposed = True

  @tools.encode()
  @tools.template(template='index.haml')
  def GET(self):
    return 'Hello I like CherryPy!'

cherrypy.tools.template = HamlTool()

conf = {
  '/': {
    'request.dispatch': cherrypy.dispatch.MethodDispatcher(),
    'tools.sessions.on': True,
  },
  '/assets/css/bootstrap-responsive.min.css' : {
    'tools.staticfile.on': True,
    'tools.staticfile.filename' : os.path.join(os.path.dirname(__file__), 'assets/css/bootstrap-responsive.min.css')
  }
}

root = Root()

app = cherrypy.tree.mount(root, '/', config=conf)
run_wsgi_app(app)
</code></pre>

<p>This is the HamlTool code</p>

<pre><code>import cherrypy
import haml
import mako.lookup

class HamlTool(cherrypy.Tool):
  def __init__(self):
    cherrypy.Tool.__init__(self, 'before_finalize',
                           self._render,
                           priority=0)


  def _render(self, template=None):
    if cherrypy.response.status &gt; 399:
        return

    # retrieve the data returned by the handler
    data = {'data':''.join(cherrypy.response.body), 'title': 'Hello there'} or {}

    try:
      template = cherrypy.engine.publish(""lookup-template"", template).pop()
    except:
      template = None
    print
    print 'template: ', template

    if template:
        # dump the template using the dictionary
        cherrypy.response.body = str(template.render(**data))
</code></pre>

<p>And the MakoTemplatePlugin code</p>

<pre><code>from cherrypy.process import plugins
import mako.lookup
import haml

class MakoTemplatePlugin(plugins.SimplePlugin):
  def __init__(self, engine, template_dir='templates'):
    super(MakoTemplatePlugin, self).__init__(engine)
    self.template_dir = template_dir
    print 'MakoTemplatePlugin: init', self.template_dir
    self.lookup = mako.lookup.TemplateLookup(
                        directories=self.template_dir,
                        preprocessor=haml.preprocessor
                  )
    self.bus.subscribe('lookup-template', self.get_template)

  def start(self):
    print 'MakoTemplatePlugin: start', self.template_dir
    self.lookup = mako.lookup.TemplateLookup(
                        directories=self.template_dir,
                        preprocessor=haml.preprocessor
                  )
    self.bus.subscribe('lookup-template', self.get_template)



  def stop(self):
    self.bus.unsubscribe('lookup-template', self.get_template)
    self.lookup = None



  def get_template(self, name):
    print 'MakoTemplatePlugin: lookup template', name, self.template_dir
    return self.lookup.get_template(name)
</code></pre>

<p>The base template</p>

<pre><code>!!! 5

%html(lang=""en"")
  %head
    %title= title
    %meta(name=""viewport"", content=""width=device-width, initial-scale=1.0"")
    %link(href=""/assets/css/bootstrap-responsive.min.css"", rel=""stylesheet"")
  %body
    .container-fluid=self.body()
    %script(src=""http://code.jquery.com/jquery.js"")
    %script(src=""/assets/js/bootstrap-responsive.min.js"")
</code></pre>

<p>The actual template which inherits from base</p>

<pre><code>&lt;%inherit file=""base.haml""/&gt;

.row-fluid
  .span12-fluid=data
</code></pre>

<p>The output from the root is fine</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
    &lt;head&gt;
        &lt;title&gt;Hello there&lt;/title&gt;
        &lt;meta content=""width=device-width, initial-scale=1.0"" name=""viewport"" /&gt;
        &lt;link href=""/assets/css/bootstrap-responsive.min.css"" rel=""stylesheet"" /&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class=""container-fluid""&gt;
&lt;div class=""row-fluid""&gt;
    &lt;div class=""span12-fluid""&gt;Hello I like CherryPy!&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
        &lt;script src=""http://code.jquery.com/jquery.js""&gt;&lt;/script&gt;
        &lt;script src=""/assets/js/bootstrap-responsive.min.js""&gt;&lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>but when you have a look at the output from the css you get</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
    &lt;head&gt;
        &lt;title&gt;Hello there&lt;/title&gt;
        &lt;meta content=""width=device-width, initial-scale=1.0"" name=""viewport"" /&gt;
        &lt;link href=""/assets/css/bootstrap-responsive.min.css"" rel=""stylesheet"" /&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;div class=""container-fluid""&gt;
&lt;div class=""row-fluid""&gt;
    &lt;div class=""span12-fluid""&gt;/*!
 * Bootstrap Responsive v2.3.1
 *
 * Copyright 2012 Twitter, Inc
 * Licensed under the Apache License v2.0
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Designed and built with all the love in the world @twitter by @mdo and @fat.
 */.clearfix{*zoom:1}.clearfix:before,.clearfix:after{display:table;line-height:0;content:""""}.clearfix:after{clear:both}.hide-text{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.input-block-level{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}@-ms-viewport{width:device-width}.hidden{display:none;visibility:hidden}.visible-phone{display:none!important}.visible-tablet{display:none!important}.hidden-desktop{display:none!important}.visible-desktop{display:inherit!important}@media(min-width:768px) and (max-width:979px){.hidden-desktop{display:inherit!important}.visible-desktop{display:none!important}.visible-tablet{display:inherit!important}.hidden-tablet{display:none!important}}@media(max-width:767px){.hidden-desktop{display:inherit!important}.visible-desktop{display:none!important}.visible-phone{display:inherit!important}.hidden-phone{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:inherit!important}.hidden-print{display:none!important}}@media(min-width:1200px){.row{margin-left:-30px;*zoom:1}.row:before,.row:after{display:table;line-height:0;content:""""}.row:after{clear:both}[class*=""span""]{float:left;min-height:1px;margin-left:30px}.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:1170px}.span12{width:1170px}.span11{width:1070px}.span10{width:970px}.span9{width:870px}.span8{width:770px}.span7{width:670px}.span6{width:570px}.span5{width:470px}.span4{width:370px}.span3{width:270px}.span2{width:170px}.span1{width:70px}.offset12{margin-left:1230px}.offset11{margin-left:1130px}.offset10{margin-left:1030px}.offset9{margin-left:930px}.offset8{margin-left:830px}.offset7{margin-left:730px}.offset6{margin-left:630px}.offset5{margin-left:530px}.offset4{margin-left:430px}.offset3{margin-left:330px}.offset2{margin-left:230px}.offset1{margin-left:130px}.row-fluid{width:100%;*zoom:1}.row-fluid:before,.row-fluid:after{display:table;line-height:0;content:""""}.row-fluid:after{clear:both}.row-fluid [class*=""span""]{display:block;float:left;width:100%;min-height:30px;margin-left:2.564102564102564%;*margin-left:2.5109110747408616%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*=""span""]:first-child{margin-left:0}.row-fluid .controls-row [class*=""span""]+[class*=""span""]{margin-left:2.564102564102564%}.row-fluid .span12{width:100%;*width:99.94680851063829%}.row-fluid .span11{width:91.45299145299145%;*width:91.39979996362975%}.row-fluid .span10{width:82.90598290598291%;*width:82.8527914166212%}.row-fluid .span9{width:74.35897435897436%;*width:74.30578286961266%}.row-fluid .span8{width:65.81196581196582%;*width:65.75877432260411%}.row-fluid .span7{width:57.26495726495726%;*width:57.21176577559556%}.row-fluid .span6{width:48.717948717948715%;*width:48.664757228587014%}.row-fluid .span5{width:40.17094017094017%;*width:40.11774868157847%}.row-fluid .span4{width:31.623931623931625%;*width:31.570740134569924%}.row-fluid .span3{width:23.076923076923077%;*width:23.023731587561375%}.row-fluid .span2{width:14.52991452991453%;*width:14.476723040552828%}.row-fluid .span1{width:5.982905982905983%;*width:5.929714493544281%}.row-fluid .offset12{margin-left:105.12820512820512%;*margin-left:105.02182214948171%}.row-fluid .offset12:first-child{margin-left:102.56410256410257%;*margin-left:102.45771958537915%}.row-fluid .offset11{margin-left:96.58119658119658%;*margin-left:96.47481360247316%}.row-fluid .offset11:first-child{margin-left:94.01709401709402%;*margin-left:93.91071103837061%}.row-fluid .offset10{margin-left:88.03418803418803%;*margin-left:87.92780505546462%}.row-fluid .offset10:first-child{margin-left:85.47008547008548%;*margin-left:85.36370249136206%}.row-fluid .offset9{margin-left:79.48717948717949%;*margin-left:79.38079650845607%}.row-fluid .offset9:first-child{margin-left:76.92307692307693%;*margin-left:76.81669394435352%}.row-fluid .offset8{margin-left:70.94017094017094%;*margin-left:70.83378796144753%}.row-fluid .offset8:first-child{margin-left:68.37606837606839%;*margin-left:68.26968539734497%}.row-fluid .offset7{margin-left:62.393162393162385%;*margin-left:62.28677941443899%}.row-fluid .offset7:first-child{margin-left:59.82905982905982%;*margin-left:59.72267685033642%}.row-fluid .offset6{margin-left:53.84615384615384%;*margin-left:53.739770867430444%}.row-fluid .offset6:first-child{margin-left:51.28205128205128%;*margin-left:51.175668303327875%}.row-fluid .offset5{margin-left:45.299145299145295%;*margin-left:45.1927623204219%}.row-fluid .offset5:first-child{margin-left:42.73504273504273%;*margin-left:42.62865975631933%}.row-fluid .offset4{margin-left:36.75213675213675%;*margin-left:36.645753773413354%}.row-fluid .offset4:first-child{margin-left:34.18803418803419%;*margin-left:34.081651209310785%}.row-fluid .offset3{margin-left:28.205128205128204%;*margin-left:28.0987452264048%}.row-fluid .offset3:first-child{margin-left:25.641025641025642%;*margin-left:25.53464266230224%}.row-fluid .offset2{margin-left:19.65811965811966%;*margin-left:19.551736679396257%}.row-fluid .offset2:first-child{margin-left:17.094017094017094%;*margin-left:16.98763411529369%}.row-fluid .offset1{margin-left:11.11111111111111%;*margin-left:11.004728132387708%}.row-fluid .offset1:first-child{margin-left:8.547008547008547%;*margin-left:8.440625568285142%}input,textarea,.uneditable-input{margin-left:0}.controls-row [class*=""span""]+[class*=""span""]{margin-left:30px}input.span12,textarea.span12,.uneditable-input.span12{width:1156px}input.span11,textarea.span11,.uneditable-input.span11{width:1056px}input.span10,textarea.span10,.uneditable-input.span10{width:956px}input.span9,textarea.span9,.uneditable-input.span9{width:856px}input.span8,textarea.span8,.uneditable-input.span8{width:756px}input.span7,textarea.span7,.uneditable-input.span7{width:656px}input.span6,textarea.span6,.uneditable-input.span6{width:556px}input.span5,textarea.span5,.uneditable-input.span5{width:456px}input.span4,textarea.span4,.uneditable-input.span4{width:356px}input.span3,textarea.span3,.uneditable-input.span3{width:256px}input.span2,textarea.span2,.uneditable-input.span2{width:156px}input.span1,textarea.span1,.uneditable-input.span1{width:56px}.thumbnails{margin-left:-30px}.thumbnails&gt;li{margin-left:30px}.row-fluid .thumbnails{margin-left:0}}@media(min-width:768px) and (max-width:979px){.row{margin-left:-20px;*zoom:1}.row:before,.row:after{display:table;line-height:0;content:""""}.row:after{clear:both}[class*=""span""]{float:left;min-height:1px;margin-left:20px}.container,.navbar-static-top .container,.navbar-fixed-top .container,.navbar-fixed-bottom .container{width:724px}.span12{width:724px}.span11{width:662px}.span10{width:600px}.span9{width:538px}.span8{width:476px}.span7{width:414px}.span6{width:352px}.span5{width:290px}.span4{width:228px}.span3{width:166px}.span2{width:104px}.span1{width:42px}.offset12{margin-left:764px}.offset11{margin-left:702px}.offset10{margin-left:640px}.offset9{margin-left:578px}.offset8{margin-left:516px}.offset7{margin-left:454px}.offset6{margin-left:392px}.offset5{margin-left:330px}.offset4{margin-left:268px}.offset3{margin-left:206px}.offset2{margin-left:144px}.offset1{margin-left:82px}.row-fluid{width:100%;*zoom:1}.row-fluid:before,.row-fluid:after{display:table;line-height:0;content:""""}.row-fluid:after{clear:both}.row-fluid [class*=""span""]{display:block;float:left;width:100%;min-height:30px;margin-left:2.7624309392265194%;*margin-left:2.709239449864817%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*=""span""]:first-child{margin-left:0}.row-fluid .controls-row [class*=""span""]+[class*=""span""]{margin-left:2.7624309392265194%}.row-fluid .span12{width:100%;*width:99.94680851063829%}.row-fluid .span11{width:91.43646408839778%;*width:91.38327259903608%}.row-fluid .span10{width:82.87292817679558%;*width:82.81973668743387%}.row-fluid .span9{width:74.30939226519337%;*width:74.25620077583166%}.row-fluid .span8{width:65.74585635359117%;*width:65.69266486422946%}.row-fluid .span7{width:57.18232044198895%;*width:57.12912895262725%}.row-fluid .span6{width:48.61878453038674%;*width:48.56559304102504%}.row-fluid .span5{width:40.05524861878453%;*width:40.00205712942283%}.row-fluid .span4{width:31.491712707182323%;*width:31.43852121782062%}.row-fluid .span3{width:22.92817679558011%;*width:22.87498530621841%}.row-fluid .span2{width:14.3646408839779%;*width:14.311449394616199%}.row-fluid .span1{width:5.801104972375691%;*width:5.747913483013988%}.row-fluid .offset12{margin-left:105.52486187845304%;*margin-left:105.41847889972962%}.row-fluid .offset12:first-child{margin-left:102.76243093922652%;*margin-left:102.6560479605031%}.row-fluid .offset11{margin-left:96.96132596685082%;*margin-left:96.8549429881274%}.row-fluid .offset11:first-child{margin-left:94.1988950276243%;*margin-left:94.09251204890089%}.row-fluid .offset10{margin-left:88.39779005524862%;*margin-left:88.2914070765252%}.row-fluid .offset10:first-child{margin-left:85.6353591160221%;*margin-left:85.52897613729868%}.row-fluid .offset9{margin-left:79.8342541436464%;*margin-left:79.72787116492299%}.row-fluid .offset9:first-child{margin-left:77.07182320441989%;*margin-left:76.96544022569647%}.row-fluid .offset8{margin-left:71.2707182320442%;*margin-left:71.16433525332079%}.row-fluid .offset8:first-child{margin-left:68.50828729281768%;*margin-left:68.40190431409427%}.row-fluid .offset7{margin-left:62.70718232044199%;*margin-left:62.600799341718584%}.row-fluid .offset7:first-child{margin-left:59.94475138121547%;*margin-left:59.838368402492065%}.row-fluid .offset6{margin-left:54.14364640883978%;*margin-left:54.037263430116376%}.row-fluid .offset6:first-child{margin-left:51.38121546961326%;*margin-left:51.27483249088986%}.row-fluid .offset5{margin-left:45.58011049723757%;*margin-left:45.47372751851417%}.row-fluid .offset5:first-child{margin-left:42.81767955801105%;*margin-left:42.71129657928765%}.row-fluid .offset4{margin-left:37.01657458563536%;*margin-left:36.91019160691196%}.row-fluid .offset4:first-child{margin-left:34.25414364640884%;*margin-left:34.14776066768544%}.row-fluid .offset3{margin-left:28.45303867403315%;*margin-left:28.346655695309746%}.row-fluid .offset3:first-child{margin-left:25.69060773480663%;*margin-left:25.584224756083227%}.row-fluid .offset2{margin-left:19.88950276243094%;*margin-left:19.783119783707537%}.row-fluid .offset2:first-child{margin-left:17.12707182320442%;*margin-left:17.02068884448102%}.row-fluid .offset1{margin-left:11.32596685082873%;*margin-left:11.219583872105325%}.row-fluid .offset1:first-child{margin-left:8.56353591160221%;*margin-left:8.457152932878806%}input,textarea,.uneditable-input{margin-left:0}.controls-row [class*=""span""]+[class*=""span""]{margin-left:20px}input.span12,textarea.span12,.uneditable-input.span12{width:710px}input.span11,textarea.span11,.uneditable-input.span11{width:648px}input.span10,textarea.span10,.uneditable-input.span10{width:586px}input.span9,textarea.span9,.uneditable-input.span9{width:524px}input.span8,textarea.span8,.uneditable-input.span8{width:462px}input.span7,textarea.span7,.uneditable-input.span7{width:400px}input.span6,textarea.span6,.uneditable-input.span6{width:338px}input.span5,textarea.span5,.uneditable-input.span5{width:276px}input.span4,textarea.span4,.uneditable-input.span4{width:214px}input.span3,textarea.span3,.uneditable-input.span3{width:152px}input.span2,textarea.span2,.uneditable-input.span2{width:90px}input.span1,textarea.span1,.uneditable-input.span1{width:28px}}@media(max-width:767px){body{padding-right:20px;padding-left:20px}.navbar-fixed-top,.navbar-fixed-bottom,.navbar-static-top{margin-right:-20px;margin-left:-20px}.container-fluid{padding:0}.dl-horizontal dt{float:none;width:auto;clear:none;text-align:left}.dl-horizontal dd{margin-left:0}.container{width:auto}.row-fluid{width:100%}.row,.thumbnails{margin-left:0}.thumbnails&gt;li{float:none;margin-left:0}[class*=""span""],.uneditable-input[class*=""span""],.row-fluid [class*=""span""]{display:block;float:none;width:100%;margin-left:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.span12,.row-fluid .span12{width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.row-fluid [class*=""offset""]:first-child{margin-left:0}.input-large,.input-xlarge,.input-xxlarge,input[class*=""span""],select[class*=""span""],textarea[class*=""span""],.uneditable-input{display:block;width:100%;min-height:30px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}.input-prepend input,.input-append input,.input-prepend input[class*=""span""],.input-append input[class*=""span""]{display:inline-block;width:auto}.controls-row [class*=""span""]+[class*=""span""]{margin-left:0}.modal{position:fixed;top:20px;right:20px;left:20px;width:auto;margin:0}.modal.fade{top:-100px}.modal.fade.in{top:20px}}@media(max-width:480px){.nav-collapse{-webkit-transform:translate3d(0,0,0)}.page-header h1 small{display:block;line-height:20px}input[type=""checkbox""],input[type=""radio""]{border:1px solid #ccc}.form-horizontal .control-label{float:none;width:auto;padding-top:0;text-align:left}.form-horizontal .controls{margin-left:0}.form-horizontal .control-list{padding-top:0}.form-horizontal .form-actions{padding-right:10px;padding-left:10px}.media .pull-left,.media .pull-right{display:block;float:none;margin-bottom:10px}.media-object{margin-right:0;margin-left:0}.modal{top:10px;right:10px;left:10px}.modal-header .close{padding:10px;margin:-10px}.carousel-caption{position:static}}@media(max-width:979px){body{padding-top:0}.navbar-fixed-top,.navbar-fixed-bottom{position:static}.navbar-fixed-top{margin-bottom:20px}.navbar-fixed-bottom{margin-top:20px}.navbar-fixed-top .navbar-inner,.navbar-fixed-bottom .navbar-inner{padding:5px}.navbar .container{width:auto;padding:0}.navbar .brand{padding-right:10px;padding-left:10px;margin:0 0 0 -5px}.nav-collapse{clear:both}.nav-collapse .nav{float:none;margin:0 0 10px}.nav-collapse .nav&gt;li{float:none}.nav-collapse .nav&gt;li&gt;a{margin-bottom:2px}.nav-collapse .nav&gt;.divider-vertical{display:none}.nav-collapse .nav .nav-header{color:#777;text-shadow:none}.nav-collapse .nav&gt;li&gt;a,.nav-collapse .dropdown-menu a{padding:9px 15px;font-weight:bold;color:#777;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px}.nav-collapse .btn{padding:4px 10px 4px;font-weight:normal;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px}.nav-collapse .dropdown-menu li+li a{margin-bottom:2px}.nav-collapse .nav&gt;li&gt;a:hover,.nav-collapse .nav&gt;li&gt;a:focus,.nav-collapse .dropdown-menu a:hover,.nav-collapse .dropdown-menu a:focus{background-color:#f2f2f2}.navbar-inverse .nav-collapse .nav&gt;li&gt;a,.navbar-inverse .nav-collapse .dropdown-menu a{color:#999}.navbar-inverse .nav-collapse .nav&gt;li&gt;a:hover,.navbar-inverse .nav-collapse .nav&gt;li&gt;a:focus,.navbar-inverse .nav-collapse .dropdown-menu a:hover,.navbar-inverse .nav-collapse .dropdown-menu a:focus{background-color:#111}.nav-collapse.in .btn-group{padding:0;margin-top:5px}.nav-collapse .dropdown-menu{position:static;top:auto;left:auto;display:none;float:none;max-width:none;padding:0;margin:0 15px;background-color:transparent;border:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;-webkit-box-shadow:none;-moz-box-shadow:none;box-shadow:none}.nav-collapse .open&gt;.dropdown-menu{display:block}.nav-collapse .dropdown-menu:before,.nav-collapse .dropdown-menu:after{display:none}.nav-collapse .dropdown-menu .divider{display:none}.nav-collapse .nav&gt;li&gt;.dropdown-menu:before,.nav-collapse .nav&gt;li&gt;.dropdown-menu:after{display:none}.nav-collapse .navbar-form,.nav-collapse .navbar-search{float:none;padding:10px 15px;margin:10px 0;border-top:1px solid #f2f2f2;border-bottom:1px solid #f2f2f2;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.1);-moz-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.1);box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 0 rgba(255,255,255,0.1)}.navbar-inverse .nav-collapse .navbar-form,.navbar-inverse .nav-collapse .navbar-search{border-top-color:#111;border-bottom-color:#111}.navbar .nav-collapse .nav.pull-right{float:none;margin-left:0}.nav-collapse,.nav-collapse.collapse{height:0;overflow:hidden}.navbar .btn-navbar{display:block}.navbar-static .navbar-inner{padding-right:10px;padding-left:10px}}@media(min-width:980px){.nav-collapse.collapse{height:auto!important;overflow:visible!important}}
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
        &lt;script src=""http://code.jquery.com/jquery.js""&gt;&lt;/script&gt;
        &lt;script src=""/assets/js/bootstrap-responsive.min.js""&gt;&lt;/script&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>What have I done wrong and how do I prevent the tenmplate from being applied to css and javascript files referenced by this page?</p>

<p>UPDATE:</p>

<p>I forgot to mention that I already tried disabling the template plugin on the static files by putting</p>

<pre><code>'tools.template.on':False
</code></pre>

<p>in the static files part of the config.  The only way I seem to be able to stop this is to remove the templates decorator all together.  The only problem with that is the template will not be applied and the output will not include the html which includes the desired css import.</p>
","<python><google-app-engine><cherrypy>"
"15599015","2","15598980","<p>Why not use an event based loop instead of sleeping for a certain amount of time.</p>

<p>That way your loop will only run when a change is detected, and it will always run when a change is detected (which is the point of your question?).</p>

<p>You can do such a thing by using:<br>
<a href=""http://docs.python.org/2/library/threading.html#event-objects"" rel=""nofollow noreferrer"">python event objects</a></p>

<p>Just wait for one or all of your event objects to be triggered and run the loop. You can also wait for X events to be done, etc, depending if you expect one variable to be updated a lot.</p>

<p>Or even a system like:
<a href=""https://stackoverflow.com/questions/1092531/event-system-in-python"">broadcasting events</a></p>
",""
"15599085","2","15598980","<p>Listen on a socket in your main loop. Use a timeout (e.g. of 60 seconds, the time until the next garden update should be performed) on your socket read calls so you get back to your normal functionality at least every minute when there are no commands coming in.</p>

<p>If you need garden-tending updates to happen no <em>faster</em> than every minute you need to check the time since the last update, since read calls will complete significantly faster when there <em>are</em> commands coming in.</p>
",""
"15599181","2","15599014","<p>In your static sections, simply disable the tool:</p>

<p>tools.template.on: False</p>
",""
"15599190","2","15598980","<p>Python's <a href=""http://docs.python.org/2/library/select.html"" rel=""nofollow""><code>select</code></a> module sounds like it might be helpful.</p>

<p>If you've ever used the unix analog (for example in socket programming maybe?), then it'll be familiar.</p>

<p>If not, <a href=""http://www.beej.us/guide/bgnet/output/html/multipage/selectman.html"" rel=""nofollow"">here is the <code>select</code> section of a C sockets reference I often recommend</a>.  And <a href=""http://pymotw.com/2/select/"" rel=""nofollow"">here is what looks like a nice writeup of the module</a>.</p>

<p>Warning: the first reference is specifically about C, not Python, but the concept of the <code>select</code> system call is the same, so the discussion might be helpful.</p>

<p>Basically, it allows you to tell it what events you're interested in (for example, socket data arrival, keyboard event), and it'll block either forever, or until a timeout you specify elapses.</p>

<p>If you're using sockets, then adding the socket and stdin to the list of events you're interested in is easy.  If you're just looking for a way to ""conditionally sleep"" for 60 seconds unless/until a keypress is detected, this would work just as well.</p>

<p><strong>EDIT</strong>:</p>

<p>Another way to solve this would be to have your raspberry-pi ""register"" with the server running the web console.  This could involve a little bit extra work, but it would give you the realtime effect you're looking for.</p>

<p>Basically, the raspberry-pi ""registers"" itself, by alerting the server about itself, and the server stores the address of the device.  If using TCP, you could keep a connection open (which might be important if you have firewalls to deal with).  If using UDP you could bind the port on the device before registering, allowing the server to respond to the source address of the ""announcement"".</p>

<p>Once announced, when config. options change on the server, one of two things usually happen:</p>

<p>A) You send a tiny ""ping"" (in the general sense, not the ICMP host detection protocol) to the device alerting it that config options have changed.  At this point the host would immediately request the full config. set, acquiring the update with it.</p>

<p>B) You send the updated config. option (or maybe the entire config. set) back to the device.  This decreases the number of messages between the device and server, but would probably take more work as it seems like more a deviation from your current setup.</p>
",""
"15599208","1","","<p>I am doing a simple collaborative filtering(CF). It is an item-to-item CF. 
For example, I have a giant dict containing N items, where the key is the name of product,  and value is a list of customers who bought them:</p>

<pre><code>d={
item1:[customer1,customer3,customer7], 
item2:[customer3, customer5],
...
itemN:[customerX...customerY]
}
</code></pre>

<p>I also have a little function that calculates the similarity of customers between each item, e.g. <strong>item1 vs item2</strong>:</p>

<pre><code>def littlefunction(...):

    #convert them to a set
    item1=set(d['item1'])
    item2=set(d['item2'])

    commonCustomer=item1.intersect(item2)
    totalCustomer=item1.union(item2)

    similarity=float(len(commonCustomer))/len(totalCustomer)
</code></pre>

<p>To obtain the top similar items for each item specified, I have to scan, and calculate the similiarty for N times then sort. So for N items the complexity is <code>O(N*N)</code>.</p>

<p>The running time for each item is now 2 minutes (N approx=3millions). To generate a complete N*N similarity table it will take 100,000 hours. Any algorithms better than this brute force approach? Only the top few results are needed for each item.</p>
","<python><algorithm><collaborative-filtering>"
"15599230","1","","<p>I downloaded python 3.3.0 which is latest version and i finished installing 
now I want to run it in my centOS linux but when i type it in console ""python"" , python 2.7.0 which is bundled with os installation runs.
how can i change it to run 3?
I vaguely feel that i have to change the code about path in bin folder or something</p>
","<python><linux><python-3.x><centos>"
"15599266","1","","<p>I'm very new to Python and I'm working with an API which recently started required url signing. I have been advised that in PHP this code which will sign the url look like this:</p>

<pre><code>function signUrl($url, $post = null)
{
if ($post !== null) { ksort($post); }
return md5(YourSecretApiKey . $url . ($post === null ? '' : implode(',', $post)));
}
</code></pre>

<p>How do I do this in Python?</p>

<p>That's my Python code:</p>

<pre><code>import wykop

appkey = 'KEY'
secretkey = 'KEYa'

api = wykop.WykopAPI(appkey)
profile = api.get_profile(""m__b"")
print api.get_profile(""m__b"")
</code></pre>

<p>And I get an error:</p>

<pre><code>wykop.InvalidAPISignError
</code></pre>
","<php><python><signing>"
"15599271","2","15599012","<p>You probably want to set the default value in the overridden <code>save</code> method. Your <code>__init__</code> code doesn't work because at that point <code>self.thread</code> is not set yet.</p>
",""
"15599273","2","15599230","<p>Try commands:</p>

<pre><code>python3.3
</code></pre>

<p>Or</p>

<pre><code>python3
</code></pre>

<p>Python commands and compatibility <a href=""http://www.python.org/dev/peps/pep-0394/"" rel=""noreferrer"">http://www.python.org/dev/peps/pep-0394/</a></p>

<p><strong>You should not change system defaults by symlinking Python 3 to Python 2</strong>, because this potentially breaks your operating system which relies to the fact that system default <code>python</code> is Python 2.x (referred by start up scripts, applications, etc.)</p>

<p>If you want to run Python 3 when you type command <code>python</code> add the following to your shell configuratin file:</p>

<pre><code> alias python=python3
</code></pre>
",""
"15599326","1","","<p>I am trying to calculate the sum of all the prime numbers below 2 million and since I had already written a function to find the prime numbers which are less than a given number, I simply wrote a new one that calls the older function and sum the items in that list.</p>

<p>But it seems like it's taking forever. How can I speed this code up?</p>

<pre><code>def find_primes(n):
    ""Find the prime numbers below n""
    primes=[];
    for i in range(2,n):
        for fac in range (2,i):
            if i!=fac and i%fac == 0:
                break
        else:
            primes.append(i)
    return primes

def add_primes(m):
    ""Sum all the prime numbers below m""
    newlist=find_primes(m);
    t=sum(newlist);
    return t
</code></pre>

<p>PS: I'm kind of a novice about Python, so I will be glad if you can nicely explain my mistakes. Thanks in advance.</p>
","<python>"
"15599362","2","15599326","<p>Implement the <a href=""http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"" rel=""nofollow"">Sieve of Eratosthenes</a>. That'll make your code do a lot less work than it's doing currently, making it a lot faster.</p>
",""
"15599460","2","15599326","<p>You can improve your current code by replacing the for <code>fac in range (2,i)</code> line with this:</p>

<pre><code>for fac in primes:
</code></pre>

<p>code:</p>

<pre><code>def find_primes1(n):
    ""Find the prime numbers below n""
    primes=[2,3]     #initialize primes with 2 values
    for i in range(4,n):
        for fac in primes:
            if i!=fac and i%fac == 0:
                break
        else:
            primes.append(i)
    return primes
</code></pre>

<p>Timing comparisons:</p>

<pre><code>In [6]: %timeit find_primes(10**4)   # your version
1 loops, best of 3: 2.33 s per loop

In [7]: %timeit find_primes1(10**4)
1 loops, best of 3: 171 ms per loop

In [8]: find_primes1(10**3)==find_primes(10**3)
Out[8]: True
</code></pre>

<p>But for larger values you should definitely learn the <a href=""http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"" rel=""nofollow"">Sieve of Eratosthenes</a> method.</p>
",""
"15599466","2","15599208","<p>Create an inverted index that has:</p>

<pre><code>customer1: [item1, item3, item8, ...]
customer2: [item7, item8, item74, ...]
</code></pre>

<p>Then you can:</p>

<ol>
<li>Look up an item to get the list of customers who bought it</li>
<li>Look up each customer to get the list of items that customer bought</li>
</ol>

<p>Your time per item should go from 2 minutes to less than 2 seconds.</p>

<p>It requires more memory for that second index, but you're not duplicating the data. And if memory is a problem, you can store this in a simple database and still be much faster than the N^2 algorithm that you're currently using.</p>

<h2>More detail</h2>

<p>You want to create an N*N matrix that shows the similarity between any two items. Using my technique, you do the following:</p>

<pre><code>Create an N*N matrix, and initialize it to 0.
for each item
  Get the list of customers who bought the item (from your item-to-customer index).
  Create an empty dictionary of related items
  for each customer in that list
    for each item that the customer bought
      update the dictionary (add new item, or increase count)
    end for
  end for
  You now have a dictionary that contains the related items,
  and how many customers bought each one. You can update the matrix row
  for the current item from that dictionary.
end for
</code></pre>
",""
"15599468","2","15599230","<p>If running <code>python</code> from your command line, the search order for an executable named <code>python</code> is determined by your <code>$PATH</code> environment variable.  <code>echo $PATH</code> will show you your path search order; earlier directories have precedence over latter ones.</p>

<p>If you type <code>which python</code> you'll see what your machine determined to be the first <code>python</code> in your search path.</p>

<p>Most likely, however, is the case where you have a symlink inside <code>/usr/local/bin</code> or <code>/usr/bin</code> named <code>python</code> which points to the python binary.</p>

<p>In most systems, there are actually two symlinks,</p>

<pre><code>python  -&gt; pythonX
pythonX -&gt; pythonX.Y
</code></pre>

<p>For example,</p>

<pre><code>python  -&gt; python2
python2 -&gt; python2.7
</code></pre>

<p>You can see whether your <code>python</code> is actually just a symlink with something like</p>

<pre><code>ls -l $(which python)
</code></pre>

<p>In my case, this gives me: </p>

<pre><code>/usr/local/bin/python -&gt; python2
</code></pre>

<p>Showing that python is a symlink to python2</p>

<p>I could go further by typing</p>

<pre><code>ls -l $(which python2)
</code></pre>

<p>In my case, this gives me</p>

<pre><code>/usr/local/bin/python2 -&gt; python2.7
</code></pre>

<hr>

<p>So anyway, you have a few choices</p>

<p>1)  Add a symlink from <code>python</code> to the python version you want (probably <code>python3</code>) in some directory higher on the <code>$PATH</code> food-chain -- in a directory earlier in the list.  For example, <code>/usr/local/bin</code> is usually higher than <code>/usr/bin</code>.</p>

<p>2) Change your current <code>python</code> symlink to point to the python version you want.  Usually this is done by adding the force <code>-f</code> flag to <code>ln</code>.</p>

<p>3) Explicitly stating that you want to run python 3.x by typing <code>python3</code> on the command line or using <code>#!/bin/env python3</code> as the hash-bang in your scripts.</p>

<p>4) Alias <code>python</code> to <code>python3</code> in your .bashrc or equivalent file (eg <code>alias python='/path/to/python3</code>).</p>

<p>The first two options may have wider reaching impact than you expect.  For example, they will break the <code>yum</code> package manager, since it only specifies <code>python</code>.</p>

<p>The third might get a bit tedious, but it's more precise, and will allow everything to, by default, use python2 except the scripts you specifically call python3.</p>

<p>The last is a decent compromise, allowing you the ease of just typing <code>python</code> but not affecting other users.</p>

<p>It's all up to you really.</p>
",""
"15599519","1","","<p>I have db.model like :</p>

<pre><code>class UserProfile(db.Model):
  __tablename__ = 'UserProfile'
  nickname = db.Column(db.String(40), primary_key=True)
  wm = db.Column(db.Boolean)

def __init__(self,name):
    self.nickname = name
    self.wm  = 1

def __repr__(self):
    return '&lt;UserProfile {nickname}&gt;'.format(username=self.nickname)
</code></pre>

<p>And during user login  - I'm trying to retrive the record from db
and store its value in a session variable -</p>

<pre><code>    userprofile = UserProfile(form.username.data)
    userprofile = UserProfile.query.filter_by(nickname=form.username.data).first()
    session['wm']=userprofile.wm
</code></pre>

<p>But it fails with message like :</p>

<pre><code>     session['wm']=userprofile.wm
     AttributeError: 'NoneType' object has no attribute 'wm'
</code></pre>

<p>Mysql db:</p>

<pre><code>mysql&gt; desc UserProfile;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| nickname   | varchar(40) | NO   | PRI | NULL    |       |
| wm         | tinyint(1)  | YES  |     | NULL    |       |
</code></pre>

<p>It has a record too.</p>

<p>Thanks for any help.</p>
","<python><sqlalchemy><flask>"
"15599565","1","","<p>I need to create a program/game in python where the user quickly enters 2 keys such as the z or x keys and this makes their character move forward everytime they press it in the right order. I've done a lot of research and decided that I should use msvcrt.getch() to recieve the input, but whenever I try it, it stores the input as a byte which I cannot use, I am relatively new to programming and could use some help explaining the function.</p>
","<python><python-3.x>"
"15599575","2","15599519","<p>You need to actually <em>add</em> your new <code>UserProfile</code> object to the database first:</p>

<pre><code>userprofile = UserProfile(form.username.data)
db.session.add(userprofile)
</code></pre>

<p>See the <a href=""http://pythonhosted.org/Flask-SQLAlchemy/queries.html#inserting-records"" rel=""nofollow"">Flask-SQLAlchemy documentation on insertion</a>:</p>

<blockquote>
  <p>Before you add the object to the session, SQLAlchemy basically does not plan on adding it to the transaction. That is good because you can still discard the changes. For example think about creating the post at a page but you only want to pass the post to the template for preview rendering instead of storing it in the database.</p>
  
  <p>The <code>add()</code> function call then adds the object.</p>
</blockquote>
",""
"15599608","2","15599565","<p>You need to <em>decode</em> the returned value to a <code>str</code> object:</p>

<pre><code>msvcrt.getch().decode('ASCII')
</code></pre>

<p>would interpret the byte as a ASCII codepoint, for example. You may need to use a different encoding depending on the keyboard layout and locale, but the <code>msvcrt.getch()</code> API specifically only deals with ASCII characters according to the documentation:</p>

<blockquote>
  <p>The module implements both the normal and wide char variants of the console I/O api. The normal API deals only with ASCII characters and is of limited use for internationalized applications. The wide char API should be used where ever possible.</p>
</blockquote>

<p>You probably want to use <a href=""http://docs.python.org/3/library/msvcrt.html#msvcrt.getwch"" rel=""nofollow""><code>msvcrt.getwch()</code></a> instead to get Unicode values directly; the method supports more than just ASCII codepoints as well.</p>
",""
"15599639","1","","<p>To read some text file, in C or Pascal, I always use the following snippets to read the data until EOF:</p>

<pre><code>while not eof do begin
  readline(a);
  do_something;
end;
</code></pre>

<p>Thus, I wonder how can I do this simple and fast in Python? </p>
","<python><file><iteration><eof>"
"15599648","2","15599639","<p>Loop over the file to read lines:</p>

<pre><code>with open('somefile') as openfileobject:
    for line in openfileobject:
        do_something()
</code></pre>

<p>File objects are iterable and yield lines until EOF. Using the file object as an iterable uses  a buffer to ensure performant reads.</p>

<p>You can do the same with the stdin (no need to use <code>raw_input()</code>:</p>

<pre><code>import sys

for line in sys.stdin:
    do_something()
</code></pre>

<p>To complete the picture, binary reads can be done with:</p>

<pre><code>from functools import partial

with open('somefile', 'rb') as openfileobject:
    for chunk in iter(partial(openfileobject.read, 1024), ''):
        do_something()
</code></pre>

<p>where <code>chunk</code> will contain up to 1024 bytes at a time from the file.</p>
",""
"15599657","2","15599639","<p>The Python idiom for opening a file and reading it line-by-line is:</p>

<pre><code>with open('filename') as f:
    for line in f:
        do_something(line)
</code></pre>

<p>The file will be automatically closed at the end of the above code (the <code>with</code> construct takes care of that).</p>

<p>Finally, it is worth noting that <code>line</code> will preserve the trailing newline. This can be easily removed using:</p>

<pre><code>line = line.rstrip()
</code></pre>
",""
"15599726","1","","<p>Is there a pythonian or shorthand way to get all pattern occurrences from a string and their indices? I can write a method that does it, I'm just wondering if there's a super short one-liner or something :)</p>
","<python><regex><string><shortcut>"
"15599760","2","15599726","<p>python <a href=""http://docs.python.org/2/library/re.html"" rel=""nofollow noreferrer""><code>re</code></a> module to the rescue.</p>

<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; [x.start() for x in re.finditer('foo', 'foo foo foo foo')]
[0, 4, 8, 12]
</code></pre>

<p><a href=""http://docs.python.org/library/re.html#re.finditer"" rel=""nofollow noreferrer""><code>re.finditer</code></a> returns a <a href=""http://wiki.python.org/moin/Generators"" rel=""nofollow noreferrer"">generator</a>, what this means is that instead of using <a href=""http://carlgroner.me/Python/2011/11/09/An-Introduction-to-List-Comprehensions-in-Python.html"" rel=""nofollow noreferrer"">list-comprehensions</a> you could use in in a <code>for-loop</code> which would be more memory efficient.</p>

<p>You could extend this to get the span of your pattern in the given text. i.e. the start and end index.</p>

<pre><code>&gt;&gt;&gt; [x.span() for x in re.finditer('foo', 'foo foo foo foo')]
[(0, 3), (4, 7), (8, 11), (12, 15)]
</code></pre>

<p>Isn't Python Awesome :) couldn't stop myself from quoting <a href=""http://xkcd.com/353/"" rel=""nofollow noreferrer"">XKCD</a>, downvotes or no downvotes...</p>

<p><img src=""https://i.stack.imgur.com/tFETX.png"" alt=""enter image description here""></p>
",""
"15599780","2","15599639","<p>You can imitate the C idiom in Python.</p>

<p>To read a buffer up to <code>max_size</code> number of bytes, you can do this:</p>

<pre><code>with open(filename,'rb') as f:
    while True:
        buf=f.read(max_size)
        if not buf: break
        process(buf)
</code></pre>

<p>Or, a text file line by line:</p>

<pre><code># warning -- not idiomatic Python! See below...
with open(filename,'rb') as f:
    while True:
        line=f.readline()
        if not line: break
        process(line)
</code></pre>

<p>You need to use <code>while True / break</code> construct since there is <a href=""http://mail.python.org/pipermail/python-dev/2001-January/011445.html"" rel=""noreferrer"">no eof test</a> in Python other than the lack of bytes returned from a read. </p>

<p>In C, you might have:</p>

<pre><code>while ((ch != '\n') &amp;&amp; (ch != EOF)){
   // read the next ch and add to a buffer
   // ..
}
</code></pre>

<p>However, you cannot have this in Python:</p>

<pre><code> while(line=f.readline()):
     # syntax error
</code></pre>

<p>because <a href=""http://docs.python.org/2/faq/design.html#why-can-t-i-use-an-assignment-in-an-expression"" rel=""noreferrer"">assignments are not allowed in expressions</a> in Python. </p>

<p>It is certainly <em>more</em> idiomatic in Python to do this:</p>

<pre><code># THIS IS IDIOMATIC Python. Do this:
with open('somefile') as f:
    for line in f:
        process(line)
</code></pre>
",""
"15599963","1","","<p>I have an usual M2M with an additional field in the intermediate table:</p>

<pre><code>class Customer(models.Model):
    items = models.ManyToManyField(Item, verbose_name=u'Items', through='CustomerItem')

class Item(models.Model):
    pass

class CustomerItem(models.Model):
    item = models.ForeignKey(Item, related_name='customer_items')
    customer = models.ForeignKey(Customer, related_name='customer_items')
    item_count = models.PositiveIntegerField(default=0)
</code></pre>

<p>I want to get a queryset with all Items for a given Customer where <code>item_count &gt; 0</code>. The only way I've found so far (from <a href=""https://stackoverflow.com/questions/10674687/filter-in-manytomanyfield-with-through"">here</a>) is to filter the intermediate table and then make a list of objects with Python code, but I need a queryset (for a form <code>ChoiceField</code>).</p>
","<python><django><many-to-many><django-orm>"
"15600014","1","","<p>I asign slot with this.</p>

<pre><code>...
self.query = QtGui.QLineEdit(self)            
self.query.textChanged.connect(lambda: self.makeThread(self.googleSearch()))
self.query.returnPressed.connect(lambda: self.launchNavigator(1))
...
</code></pre>

<p>but how i can disconnect? I tried with this but desnt not work...</p>

<pre><code>self.query.textChanged.disconnect(lambda: self.makeThread(self.googleSearch()))
self.query.returnPressed.disconnect(lambda: self.launchNavigator(1))
</code></pre>
","<python><pyqt><signals><disconnect><slot>"
"15600150","2","15599963","<p>what about this?</p>

<pre><code>Customer.object.filter(customeritem__item_count__gt=0)
</code></pre>
",""
"15600152","1","","<p>I use PHP, JS, HTML, CSS. I'm willing to learn ruby or python if that is the best option.</p>

<p>My next project will involve live data being fed to users from the server and vice versa. I have shell access on my shared server, but I'm not sure about access to ports. Is it possible to use websockets or any other efficient server-client connection on a shared hosting account, and if so, what do I need to do?</p>
","<python><ruby><websocket><tornado><long-polling>"
"15600196","1","","<p>I have been trying to take a long int (m39 prime) and store it as a binary file.
When I attempt to write the bin value to a file it is written as a string.</p>

<pre><code>&gt;&gt;&gt; m39 = bin(2**13466917-1)
&gt;&gt;&gt; open('m39', 'wb').write(m39) 
madsc13ntist@jaberwock:~/Desktop$ xxd m39 | head
0000000: 3062 3131 3131 3131 3131 3131 3131 3131  0b11111111111111
0000010: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000020: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000030: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000040: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000050: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000060: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000070: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
0000080: 3131 3131 3131 3131 3131 3131 3131 3131  1111111111111111
</code></pre>

<p>I'm feeling pretty certain that there is a ridiculously simple answer to this but I haven't been successful at converting m39 into a bytearray or a buffer for writing.  Should I be using io or memoryview, etc.</p>

<p>Many thanks in advance for any assistance anyone can provide. :)</p>

<p>I am using Python 2.7.3 and I prefer to us builtin modules if at all possible.</p>

<p>EDIT: I am attempting to store the value as a binary file which would occupy much less space on the disk/memory.  I understand that the bin type is a string in python but I am attempting to write <code>\x11\x11\x11\x11 not \x31\x31\x31\x31</code>.  My intent is not to print a string representation of the value, but to store it efficiently for later use/manipulation.</p>
","<python><file-io><type-conversion><primes><binary-data>"
"15600280","1","","<pre><code>while True:
    p = []
    q = []
    H = []
    E = []
    for m in range(n):
        p = (i-d[m-2][1])/d[m-2][0]
        q.append(p)
    print q

    r = q[0]
    if r  &lt; g[1][0]:
        r == g[1][0]
    elif r &gt; g[1][1]:
        r == g[1][1]
    print r
</code></pre>

<p>For the problem of the coding above, I want to explain it in a simpler manner.</p>

<pre><code>i = [3,5]

r = [5,6]

if i[0] &lt; r[0]:
    i[0] == r[0]
    print i
</code></pre>

<p>However, i could not get <code>[5,5]</code> in this example, why? the output is still <code>[3,5]</code></p>
","<python><list><limit>"
"15600303","2","15600280","<p>The following lines are comparisons rather than assignments:</p>

<pre><code>    r == g[1][0]
    r == g[1][1]
    i[0] == r[0]
</code></pre>

<p>I suspect you meant to write</p>

<pre><code>    r = g[1][0]
    r = g[1][1]
    i[0] = r[0]
</code></pre>
",""
"15600311","2","15600196","<p>You should either use the <a href=""http://docs.python.org/2/library/struct.html"" rel=""nofollow"">struct</a> module or <a href=""http://docs.python.org/2/library/array.html"" rel=""nofollow"">array</a> depending on structure of the data (i.e. for an array of homogenous values, array will be simpler/faster).</p>
",""
"15600321","2","15600280","<p>Change</p>

<pre><code>i[0] == r[0]
r == g[1][0]
r == g[1][1]
</code></pre>

<p>to (respectively)</p>

<pre><code>i[0] = r[0]
r = g[1][0]
r = g[1][1]
</code></pre>

<p><code>==</code> is a logical comparison (it tests whether the two values are equal and returns <code>False</code> or <code>True</code>). <code>=</code> is the assignment operator.</p>
",""
"15600388","1","","<p>Consider the following Python code from Kent Beck's book <a href=""http://rads.stackoverflow.com/amzn/click/0321146530"" rel=""nofollow"">Test Driven Development</a> <em>Chapter 18</em> where he is building a framework for unit testing.</p>

<pre><code>class TestCaseTest(TestCase):
    def testRunning(self):
       test= WasRun(""testMethod"")
       assert(not test.wasRun)
       test.run() // Here run() is called once
       assert(test.wasRun)
  TestCaseTest(""testRunning"").run()//Here run() is called again
</code></pre>

<p>The implementation of the base class <code>TestCase</code> looks like the following:</p>

<pre><code>TestCase
 def __init__(self, name):
    self.name= name
def  run(self):
    method = getattr(self, self.name)
    method()
</code></pre>

<ol>
<li>Why is <code>run()</code> method called twice in the above code snippet?</li>
<li>And who is calling the method <code>testRunning()</code> and when? Here it is only defining the method but no one seems to be calling this method.</li>
</ol>

<p>P.S: I come from a Java background and I am not much familiar with Python syntax as such.</p>
","<python><unit-testing><tdd>"
"15600448","1","","<p>below code shows only estates[0].id in my text box.need to load all values in my field.how to do such a thing.?how to iterate and add those to field value.?</p>

<pre><code>def on_change_company(self, cr, uid, ids, company_id, context=None):
    if not company_id:
        return {'value': {
            'bpl_estate_id': False
        }}
    company = self.pool.get('bpl.company.n.registration').browse(cr, uid, company_id, context=context)
    estates = company.estates
    if estates:
        return {
                'value': {
                          'bpl_estate_id': estates[0].id
                          }
                }
    else:
        return {
                'value': {
                          'bpl_estate_id': 0
                          }
                }
</code></pre>
","<python><openerp>"
"15600458","2","15600014","<p>The lambda expressions return <em>different</em> functions that (more or less by chance ;) ) will do the same thing. Therefore, what you connected your signal to is not the same thing as the second lambda you're using when trying to disconnect it; see this example:</p>

<pre><code>&gt;&gt;&gt; f = lambda x: x
&gt;&gt;&gt; g = lambda x: x
&gt;&gt;&gt; f is g
False
</code></pre>

<p>You can either use <code>self.query.textChanged.disconnect()</code> without any parameters, which will disconnect the signal from <em>all</em> slots (which might be ok if you only have that one connection) or you will have to store a reference to the lambda somewhere:</p>

<pre><code>self.func1 = lambda: self.makeThread(self.googleSearch())
self.query.textChanged.connect(self.func1)
...
self.query.textChanged.disconnect(self.func1)
</code></pre>
",""
"15600534","2","15600388","<p>I don't have access to the book you're talking about, so I'm going off the code snippet you posted.</p>

<p>It looks like run() methods on two different objects are being called -- one of class TestCaseTest, one of class WasRun (or whatever a function named WasRun returns).</p>

<p>As for who is calling testRunning(), .run() is called on the TestCaseTest object and this is presumably a method from the superclass TestCase. Look up run() in TestCase and see whether self.testRunning() is called there.</p>
",""
"15600543","2","15600152","<p>Until some weeks ago, websockets deployment required either a standalone server running on a different port, or server side proxies like varnish/haproxy to listen on port 80 and redirecting normal http traffic. The latest nginx versions added built-in support for websockets, but unless your hosting provider uses it, you're out of luck. (note that I don't have personal experience with this nginx feature)</p>

<p>Personally I find that for most applications, websockets can be replaced with <a href=""https://developer.mozilla.org/en-US/docs/Server-sent_events/Using_server-sent_events"" rel=""nofollow"">Server-sent events</a> instead - a very lightweight protocol which is basically another http connection that stays open on the server side and sends a stream of plaintext with messages separated by double newlines.</p>

<p>It's supported in most decent browsers, but since this excludes internet explorer there are polyfills available <a href=""https://github.com/remy/polyfills/blob/master/EventSource.js"" rel=""nofollow"">here</a> and <a href=""https://github.com/Yaffle/EventSource"" rel=""nofollow"">here</a></p>

<p>This covers one side of the connection, the one that is usually implemented with long-polling. The other direction can be covered the usual way with XHR. The end result is very similar to websockets IMO, but with a bit higher latency for client->server messages.</p>
",""
"15600561","1","","<p>I am getting warning :<code>Assignment to reserved built-in symbol: file</code>
on this comand:</p>

<pre><code>file=open(fileName,'r')
</code></pre>

<p>Any Specific reason?</p>
","<python><warnings>"
"15600583","2","15600561","<p><a href=""http://docs.python.org/2/library/functions.html#file""><code>file</code></a> is a built-in global name in Python.  It's warning you not to redefine it.</p>
",""
"15600584","2","15600448","<p>In your dictionary, you're only placing <code>estates[0].id</code> in your dictionary.  If you want the list of ids, use a list comprehension.</p>

<pre><code>if estates:
    return {'value': {'bpl_estate_id': [e.id for e in estates] } }
# rest of code
</code></pre>
",""
"15600707","1","","<p>I have a command in a try clause which I know throws an exception.  I'm trying to catch it in an ""except"" clause, but the except clause seems to not recognize the existence of the exception. The exception, when unhandled (i.e. not enclosed in a try clause), looks like this in the interactive window:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
  File ""C:\Users\Andy\software\Turkeys\actions.py"", line 234, in annotate
    annotation=annotator.ncbo_annotate(thing)
  File ""C:\Users\Andy\software\Turkeys\annotator.py"", line 49, in ncbo_annotate
    fh = urllib2.urlopen(submitUrl, postData)
  File ""C:\32Python27\lib\urllib2.py"", line 126, in urlopen
    return _opener.open(url, data, timeout)
  File ""C:\32Python27\lib\urllib2.py"", line 406, in open
    response = meth(req, response)
  File ""C:\32Python27\lib\urllib2.py"", line 519, in http_response
    'http', request, response, code, msg, hdrs)
  File ""C:\32Python27\lib\urllib2.py"", line 444, in error
    return self._call_chain(*args)
  File ""C:\32Python27\lib\urllib2.py"", line 378, in _call_chain
    result = func(*args)
  File ""C:\32Python27\lib\urllib2.py"", line 527, in http_error_default
    raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)
HTTPError: HTTP Error 500: Internal Server Error
</code></pre>

<p>The when I put the command in a try/except construct in the first file in that list, ""actions.py"", like this:</p>

<pre><code>try:
    annotation=annotator.ncbo_annotate(thing)
except HTTPError: 
    ...do some things with this 
</code></pre>

<p>I would expect that the above clause would catch the ""HTTPError: HTTP Error 500: Internal Server Error"" being produced when I run the ncbo_annotate function, but instead when I run the above, I am getting an error saying global name ""HTTPError"" is not defined:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
  File ""C:\Users\Andy\software\Turkeys\actions.py"", line 235, in annotate
    except HTTPError:
NameError: global name 'HTTPError' is not defined
</code></pre>

<p>So what's the deal?  I thought python raises the exception until it finds a handler within a try clause or spits it out unhandled.  Why does my code not have any idea what an HTTPError is, or alternatively, how do I tell it what it is so that it can handle it? </p>
","<python><exception><global-variables>"
"15600710","1","","<p>Well, I was proud of myself that I got mlabwrap installed properly, but now I cannot get it to work with matlab cells.  In python, lists are analogous to cells, so I figured I would input a list and mlabwrap would convert it to a cell.  Unfortunately, it does not seem to work that way.</p>

<p>For example, I have a matlab m-file:</p>

<pre><code>function list_test(x)
display(x);
</code></pre>

<p>In python, if I type</p>

<pre><code>mlab.list_test([[1,2],[3,4]])
</code></pre>

<p>I get:</p>

<pre><code>x =

1     2
3     4
</code></pre>

<p>Thus, mlabwrap seems to take my two nested lists and turn them into a 2x2 matrix, which is not what I want.  </p>

<p>When I try</p>

<pre><code>mlab.list_test([[1,2],[3,4,5]]) 
</code></pre>

<p>then I get:</p>

<pre><code>Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Users/Ben/.virtualenvs/test/lib/python2.7/site-packages/mlabwrap.py"", line 607, in mlab_command
    return self._do(name, *args, **update({'nout':nout}, kwargs))
  File ""/Users/Ben/.virtualenvs/test/lib/python2.7/site-packages/mlabwrap.py"", line 534, in _do
    mlabraw.put(self._session,  argnames[-1], arg)
TypeError: a float is required
</code></pre>

<p>Clearly no dice.</p>

<p>If I have to, I imagine I could write some python code to convert lists into several 1-D arrays, feed the 1-D arrays into matlab using mlabwrap and write some matlab code to convert those 1-D arrays into cells.  But this is messy, and I would like to know if there is an easier way. Can mlabwrap do this for me somehow?</p>

<p>Here are the details of my setup.
OS: Mountain Lion (OS X 10.8),
Python: 2.7,
Matlab: 2010b,
mlabwrap: 1.1</p>
","<python><matlab><mlabwrap>"
"15600736","2","15600707","<p>You probably just need to import the <code>HTTPError</code> class before using it. Try inserting at the top of your actions.py file:</p>

<pre><code>from urllib2 import HTTPError
</code></pre>

<p>and then you should be able to use your code as is.</p>
",""
"15600753","2","15600707","<p>You need to check for urllib2.HTTPError:</p>

<pre><code>except urllib2.HTTPError:
</code></pre>
",""
"15600789","2","15598669","<p>The <code>unstable</code> (work-in-progress) has support for Python 3. This feature will be available in the next Z3 release (v4.3.2). In the meantime, you can build the <code>unstable</code> branch using the instructions found <a href=""http://z3.codeplex.com/wikipage?title=Building%20the%20unstable%20%28working-in-progress%29%20branch&amp;referringTitle=Documentation"" rel=""nofollow"">here</a>.</p>
",""
"15600793","2","15600196","<p>The Python <code>pickle</code> module is pretty efficient.  The representation is only 8 bytes longer than the raw binary value can be stored into.  This works in Python 2.X or 3.X:</p>

<pre><code>import pickle
m39 = 2**13466917-1
with open('m39.dat','wb') as f:
    pickle.dump(m39,f,pickle.HIGHEST_PROTOCOL)
</code></pre>

<p>Resulting hex dump (1,683,373 bytes):</p>

<pre><code> 80 03 8B A5 AF 19 00 FF FF FF ... FF FF FF 1F 2E
</code></pre>

<p>To read back:</p>

<pre><code>import pickle
with open('m39.dat','rb') as f:
   m39 = pickle.load(f)
</code></pre>

<p>Python 3 also has <code>to_bytes</code> and <code>from_bytes</code> methods on integers, but requires a little more work as the length of the integer in bytes has to be computed.</p>

<pre><code>import math
m39 = 2**13466917-1
s = m39.to_bytes(math.ceil(m39.bit_length()/8),'little')
with open('m39.dat','wb') as f:
    f.write(s)
</code></pre>

<p>Resulting hex dump (1,683,365 bytes):</p>

<pre><code> FF FF FF FF FF FF FF FF FF FF ... FF FF FF FF 1F
</code></pre>

<p>To read back:</p>

<pre><code>with open('m39.dat','rb') as f:
    data = f.read()
m39 = int.from_bytes(data,'little')
</code></pre>

<p>Obviously there is a pattern there and it would be more efficient to just store the exponent of the prime instead.</p>
",""
"15600804","2","15600152","<p>For having the best performance and full control of your setup you need ""your own"" server.<br>
Today there are a huge amount of virtual server providers which means you get full control over your IP but where the physical server is still shared between many clients, meaning cheaper prices and more flexibility.</p>

<p>I recommend utilizing the free tier program at <a href=""https://aws.amazon.com/free/"" rel=""nofollow"">Amazon EC2</a>, you can always resign after the free period. And they have many geographical locations to choose from.</p>

<p>Another provider in Europe that I have been satisfied with is <a href=""http://www.tilaa.com/"" rel=""nofollow"">Tilaa</a></p>

<p>You can probably find many more alternatives that suits your needs on the <a href=""http://www.webhostingtalk.com/forumdisplay.php?f=104"" rel=""nofollow"">Webhosting talk forum</a></p>
",""
"15600835","2","15599208","<p>This is essentially the same idea as @Jim Mischel's answer, build an explicit reverse index, but does not build an explicit NxN matrix, and is an implementation rather than a sketch of the full system.</p>

<p>For large numbers of NUM_CUSTOMERS (say 1,000,000) it doesn't perform very well (~20sec for 3 similiarty_for checks), but the data is random.  Presumably, there would be more correlation and less randomness in actual customer purchase data.</p>

<p>First, build some synthetic data for testing:</p>

<pre><code>import random
import operator

NUM_CUSTOMERS = 10000
NUM_ITEMS = 1000
MIN_PER_CUST = 2
MAX_PER_CUST = 10
NUM_INTEREST = 10

customers = [""customer_{}"".format(num) for num in xrange(1, NUM_CUSTOMERS+1)]
items = [""item_{}"".format(num) for num in xrange(1, NUM_ITEMS+1)]

customer_items = {
    customer: random.sample(items, random.randint(MIN_PER_CUST, MAX_PER_CUST))
    for customer in customers}

item_customers = {}
for customer, this_items in customer_items.iteritems():
    for item in this_items:
        item_customers.setdefault(item, [])
        item_customers[item].append(customer)
</code></pre>

<p>Then define a couple of functions:</p>

<pre><code>def similarity(item1, item2):
    item1_set = set(item_customers[item1])
    item2_set = set(item_customers[item2])

    num_common = len(item1_set.intersection(item2_set))
    num_total = len(item1_set.union(item2_set))

    return float(num_common) / num_total

def similarity_for(item):
    to_check = {
        itm for customer in item_customers[item]
            for itm in customer_items[customer] }
    to_check.discard(item)
    rankings = {
        item2: similarity(item, item2)
        for item2 in to_check }
    return sorted(rankings.iteritems(), key=operator.itemgetter(1), reverse=True)
</code></pre>

<p>And, run it:</p>

<pre><code>for index, item in enumerate(sorted(random.sample(items, 3))):
    rankings = similarity_for(item)
    print ""check {}; {} (of {}):"".format(index, item, len(rankings))
    for item_other, ranking in rankings[:NUM_INTEREST]:
        print ""  {}: {}"".format(item_other, ranking)
</code></pre>

<p>Getting results that look like:</p>

<pre><code>% python /tmp/similarity.py
check 0; item_121 (of 309):
  item_520: 0.0283018867925
  item_361: 0.027027027027
  item_536: 0.0265486725664
  item_637: 0.0238095238095
  item_515: 0.020202020202
  item_750: 0.019801980198
  item_960: 0.0192307692308
  item_25: 0.0190476190476
  item_548: 0.018691588785
  item_841: 0.018691588785
check 1; item_714 (of 298):
  item_162: 0.0285714285714
  item_491: 0.0272727272727
  item_617: 0.0265486725664
  item_949: 0.0260869565217
  item_788: 0.0192307692308
  item_446: 0.0190476190476
  item_558: 0.018691588785
  item_606: 0.0181818181818
  item_177: 0.0181818181818
  item_577: 0.018018018018
check 2; item_991 (of 352):
  item_758: 0.0298507462687
  item_204: 0.025
  item_85: 0.0247933884298
  item_769: 0.024
  item_501: 0.0232558139535
  item_860: 0.0227272727273
  item_408: 0.0225563909774
  item_480: 0.0223880597015
  item_73: 0.0220588235294
  item_593: 0.021897810219
</code></pre>
",""
"15601240","2","15599963","<p>Here - </p>

<pre><code>items = Item.objects.filter(customer_items__customer=customer, customer_items__item_count__gt = 0)
</code></pre>

<p>As you've added <code>related_name='customer_items'</code> to the <code>Item</code> foreign-key. You can access the <code>CustomerItem</code> related to any <code>Item</code> via <code>item.customer_items</code>. Rest is piece of cake.</p>
",""
"15601449","2","15600280","<pre><code>i[0] == r[0] --&gt; i[0] = r[0]
r == g[1][0] --&gt; r = g[1][0]
r == g[1][1] --&gt; r = g[1][1]
</code></pre>
",""
"15603547","2","15598625","<p>You can do this to calculate <code>y</code> this your independent variables vector:</p>

<pre><code>mid_lag_lead_df_model.beta.dot(pandas.Series([0.000207, -0.000361, -0.000091]))
</code></pre>
",""
"15621850","2","15575420","<p>Try this :-)</p>

<pre><code>def split( txt, sep, esc, escape_chars):
    ''' Split a string
        txt - string to split
        sep - separator, one character
        esc - escape character
        escape_chars - List of characters allowed to be escaped
    '''
    l = []
    tmp = []
    i = 0
    while i &lt; len(txt):
        if len(txt) &gt; i + 1 and txt[i] == esc and txt[i+1] in escape_chars:
            i += 1
            tmp.append(txt[i])
        elif txt[i] == sep:
            l.append("""".join(tmp))
            tmp = []
        elif txt[i] == esc:
            print('Escape Error')
        else:
            tmp.append(txt[i])
        i += 1
    l.append("""".join(tmp))
    return l

if __name__ == ""__main__"":
    txt = 'abc;vwx?;yz;123'
    print split(txt, ';', '?', [';','\\','?'])
</code></pre>

<p>Returns:</p>

<pre><code>['abc', 'vwx;yz', '123']
</code></pre>
",""
"15628641","1","","<p>I've extended the user object using the 1.4x method by adding a custom ""profile"" model and then instantiating it on user save/create. During my registration process I'd like to add additional information to the profile model. The view successfully renders, but the profile model doesn't save. Code below:</p>

<pre><code>    user = User.objects.create_user(request.POST['username'], request.POST['email'], request.POST['password'])
    user.save()

    profile = user.get_profile()
    profile.title = request.POST['title']
    profile.birthday = request.POST['birthday']

    profile.save()
</code></pre>
","<python><django><django-models><django-views><django-authentication>"
"15628660","1","","<p>I was building a quick 1-hour game, got about half of the way through, and the <code>TypeError: 'builtin_function_or_method' object is not subscriptable</code> error occurred.  I have no clue why this occurred, there seems to be some problem with using <code>time.sleep[x]</code> function.  My full error and the code are below.</p>

<p>Code:</p>

<pre><code>import time
import random

def intro():
    print(""You are playing a game..."")
    time.sleep[3]
    print(""of chance."")
    time.sleep[1.5]
    print(""Enter [1] to continue."")
    introChoice=''
    while introChoice not in ['1']:
          introChoice=input(""&gt; "")
    if introChoice==""1"":
          tutorial()
</code></pre>

<p>Error:</p>

<pre><code>You are playing a game...
Traceback (most recent call last):
  File ""/Users/jacob/Documents/a game of chance.py"", line 126, in &lt;module&gt;
    intro()
  File ""/Users/jacob/Documents/a game of chance.py"", line 9, in intro
    time.sleep[3]
TypeError: 'builtin_function_or_method' object is not subscriptable
</code></pre>

<p>Any help is appreciated, and I'm willing to give more information if necessary.</p>
","<python><time><typeerror>"
"15628675","2","15628660","<p><code>sleep</code> is a function/method and not an indexable object. You call it like such:</p>

<pre><code>sleep(time)
</code></pre>

<p>Not like:</p>

<pre><code>sleep[time]
</code></pre>
",""
"15628722","1","","<p>fk crazy editor =_+ <a href=""http://dpaste.com/1035040/"" rel=""nofollow"">http://dpaste.com/1035040/</a>  ## CODE here</p>

#

<p>Values response:</p>

<pre><code>    {'articul': [u'testetete'],
     'diametr': ['Empty'],
     'image': [u'/foto/11.20.jpg'],
     'name': [u'Трололололо'],
     'url': ['http://test.ru/goods/detali.html?product_id=20']}
</code></pre>

<p>where other fields?</p>

#

<p>items.py: </p>

<p><a href=""http://dpaste.com/1035050/"" rel=""nofollow"">http://dpaste.com/1035050/</a></p>
","<python><python-2.7><xpath><scrapy><cp1251>"
"15628730","2","15628660","<p>You are confusing the Python syntax for two very different things. <code>[]</code> is an indexing notation; <code>myindexable[i]</code> refers to the <code>i</code>th item in <code>myindexable</code>. <code>()</code>, meanwhile, is the notation for calling a function; <code>myfunc(n)</code> calls the function <code>myfunc</code> with the argument <code>n</code>.</p>
",""
"15630954","2","15628641","<p>user is an instance of User model. And it is seems like you are trying to get an instance which is already exists. It depends on what you returning from user.get_profile. You have to initiate UserProfile instance. The simpler way could be like this:</p>

<pre><code>user_profile = UserProfile.objects.create(user=user)
user_profile.title = request.POST['title']
...
.
.
user_profile.save()
</code></pre>
",""
"15633027","2","15628641","<p>update your models.py with this code</p>

<pre><code>from django.db.models.signals import post_save
def create_user_profile(sender, instance, created, **kwargs):
    if created:
        profile, created = UserProfile.objects.get_or_create(user=instance)

post_save.connect(create_user_profile, sender=User)
</code></pre>

<p>now when you do</p>

<p>user.save()</p>

<p>it will automatically create a profile object. then you can do</p>

<pre><code>user.profile.title = request.POST['title']
user.profile.birthday = request.POST['birthday']
user.profile.save()
</code></pre>

<p>hope it helps.</p>
",""
"15640132","2","34439","<blockquote>
  <p>...is there at least an easy way to check if it has a particular method other than simply checking if an error occurs when the method is called</p>
</blockquote>

<p>While ""<a href=""http://docs.python.org/2/glossary.html#term-eafp"" rel=""nofollow"">Easier to ask for forgiveness than permission</a>"" is certainly the Pythonic way, what you are looking for maybe:</p>

<pre><code>d={'foo':'bar', 'spam':'eggs'}
if 'get' in dir(d):
    d.get('foo')
# OUT: 'bar'
</code></pre>
",""
"15642110","2","15575826","<pre><code># Retrieve tasks
# Reference: http://docs.celeryproject.org/en/latest/reference/celery.events.state.html
query = celery.events.state.tasks_by_type(your_task_name)

# Kill tasks
# Reference: http://docs.celeryproject.org/en/latest/userguide/workers.html#revoking-tasks
for uuid, task in query:
    celery.control.revoke(uuid, terminate=True)
</code></pre>
",""
"15642165","2","15575826","<p>It looks like <code>flower</code> provides monitoring:</p>

<p><a href=""https://github.com/mher/flower"" rel=""nofollow"">https://github.com/mher/flower</a></p>

<blockquote>
  <p>Real-time monitoring using Celery Events</p>
  
  <p>Task progress and history Ability to show task details (arguments,
  start time, runtime, and more) Graphs and statistics Remote Control</p>
  
  <p>View worker status and statistics Shutdown and restart worker
  instances Control worker pool size and autoscale settings View and
  modify the queues a worker instance consumes from View currently
  running tasks View scheduled tasks (ETA/countdown) View reserved and
  revoked tasks Apply time and rate limits Configuration viewer Revoke
  or terminate tasks HTTP API</p>
  
  <p>OpenID authentication</p>
</blockquote>
",""
"15737958","2","15628722","<p>It's because <code>add_xpath</code> method gets XPath as argument only. If you need to add another one (such as ""Масса"" or ""Состав"") to value that spider takes from xpath, you can add it to <a href=""http://doc.scrapy.org/en/latest/topics/item-pipeline.html"" rel=""nofollow"">pipelines.py</a> , or to your another module, that takes results from Spider.</p>
",""
"15886819","2","36932","<h2>Python 2.7 and find_name()</h2>

<p>Here is an easy-to-read implementation of the chosen idea with some helper methods, which perhaps are more Pythonic and cleaner to use than ""reverse_mapping"". Requires Python >= 2.7. </p>

<p>To address some comments below, Enums are quite useful to prevent spelling mistakes in code, e.g. for state machines, error classifiers, etc.</p>

<pre><code>def Enum(*sequential, **named):
  """"""Generate a new enum type. Usage example:

  ErrorClass = Enum('STOP','GO')
  print ErrorClass.find_name(ErrorClass.STOP)
    = ""STOP""
  print ErrorClass.find_val(""STOP"")
    = 0
  ErrorClass.FOO     # Raises AttributeError
  """"""
  enums = { v:k for k,v in enumerate(sequential) } if not named else named

  @classmethod
  def find_name(cls, val):
    result = [ k for k,v in cls.__dict__.iteritems() if v == val ]
    if not len(result):
        raise ValueError(""Value %s not found in Enum"" % val)
    return result[0]

  @classmethod
  def find_val(cls, n):
    return getattr(cls, n)

  enums['find_val'] = find_val
  enums['find_name'] = find_name
  return type('Enum', (), enums)
</code></pre>
",""
"15891216","2","7782071","<p>There's another potentially more powerful way to do this if you take the step and inherit the view instead of simply composing it.   Does custom context menu work here? Yes, but why does anything other than the view need to know about it? It also will help better shape your code to deal with other issues properly.   Currently the implementation doesn't provide any encapsulation, cohesion or support separation of responsibility.  In the end you will have one big blob which is the antithesis of good design.
   I mention this because you seem to be placing all of the GUI Logic in this ever growing main function, and its the reason you ended up putting the sort implementation inside your model, which makes no sense to me.  (What if you have two views of the model, you are forcing them to be sorted in the same way)</p>

<p>Is it more code? Yes, but it gives you more power which I think is worth mentioning.  Below I'm demonstrating how to handle the headers and also any given cell you want.  Also note that in my implementation if some OTHER widget exists which also defines a context menu event handler it will potentially get a chance to have crack at handling the event after mine; so that if someone else adds a handler for only certain cases they can do so without complicating my code.  Part of doing this is marking if you handled the event or not.</p>

<p>Enough of my rambling and thoughts here's the code:</p>

<pre><code>    #Alteration : instead of self.tv = QTableView...
        self.tv = MyTableView()
        ....

# somewhere in your TableView object's __init__ method
# yeah IMHO you should be inheriting and thus extending TableView 
class MyTableView(QTableView):
    def __init__(self, parent = None):
        super(MyTableView, self).__init__()
        self.setContextMenuPolicy(Qt.DefaultContextMenu)

        ## uniform one for the horizontal headers.
        self.horizontalHeader().setContextMenuPolicy(Qt.ActionsContextMenu)

        ''' Build a header action list once instead of every time they click it'''
        doSomething = QAction(""&amp;DoSomething"", self.verticalHeader(),
                              statusTip = ""Do something uniformly for headerss"",
                              triggered = SOME_FUNCTION
        self.verticalHeader().addAction(doSomething)
        ...
        return

    def contextMenuEvent(self, event)
    ''' The super function that can handle each cell as you want it'''
        handled = False
        index = self.indexAt(event.pos())
        menu = QMenu()
        #an action for everyone
        every = QAction(""I'm for everyone"", menu, triggered = FOO)
        if index.column() == N:  #treat the Nth column special row...
            action_1 = QAction(""Something Awesome"", menu,
                               triggered = SOME_FUNCTION_TO_CALL )
            action_2 = QAction(""Something Else Awesome"", menu,
                               triggered = SOME_OTHER_FUNCTION )
            menu.addActions([action_1, action_2])
            handled = True
            pass
        elif index.column() == SOME_OTHER_SPECIAL_COLUMN:
            action_1 = QAction(""Uh Oh"", menu, triggered = YET_ANOTHER_FUNCTION)
            menu.addActions([action_1])
            handled = True
            pass

        if handled:
            menu.addAction(every)
            menu.exec_(event.globalPos())
            event.accept() #TELL QT IVE HANDLED THIS THING
            pass
        else:
            event.ignore() #GIVE SOMEONE ELSE A CHANCE TO HANDLE IT
            pass
        return


    pass #end of class
</code></pre>
",""
"15929066","2","15586233","<p>I found that this issue can be ""worked around"" by simply performing the following before running the script in Terminal</p>

<pre><code>export DJANGO_SETTINGS_MODULE=default.settings
</code></pre>

<p>After running that code the script worked exactly the way it was supposed to!</p>
",""
"15983172","1","","<p>I have breadcrumbs from a website and I want to remove all ""Home"" entries from the beginning with a lambda expression.</p>

<p>Something like:</p>

<pre><code>lambda v: v[1:] if v and v[0] == 'Home' else v
</code></pre>

<p>But I want to remove multiples, not just the first one, and only from the beginning, so that:</p>

<pre><code>['Home', 'Home', 'Home and Garden', 'Home', 'Kitchen']
</code></pre>

<p>becomes:</p>

<pre><code>['Home and Garden', 'Home', 'Kitchen']
</code></pre>
","<python><python-2.7>"
"15983181","2","15983172","<p>Maybe this is what you were going for with your <code>lambda</code>:</p>

<pre><code>&gt;&gt;&gt; F = lambda v: F(v[1:]) if v and v[0] == 'Home' else v
&gt;&gt;&gt; L = ['Home', 'Home', 'Home and Garden', 'Home', 'Kitchen']
&gt;&gt;&gt; F(L)
['Home and Garden', 'Home', 'Kitchen']
</code></pre>

<p>However that will be inefficient and Python already has tools for this:</p>

<pre><code>&gt;&gt;&gt; from itertools import dropwhile
&gt;&gt;&gt; L = ['Home', 'Home', 'Home and Garden', 'Home', 'Kitchen']
&gt;&gt;&gt; list(dropwhile(lambda x: x == 'Home', L))
['Home and Garden', 'Home', 'Kitchen']
</code></pre>

<p>Alternatively:</p>

<pre><code>&gt;&gt;&gt; from functools import partial
&gt;&gt;&gt; from operator import eq
&gt;&gt;&gt; from itertools import dropwhile
&gt;&gt;&gt; L = ['Home', 'Home', 'Home and Garden', 'Home', 'Kitchen']
&gt;&gt;&gt; list(dropwhile(partial(eq, ""Home""), L))
['Home and Garden', 'Home', 'Kitchen']
</code></pre>

<p>Which should be faster, bur requires a few more imports</p>
",""
"15983184","1","","<pre><code>class Cat(object):
    def __init__(self,run,fast):
        self.run=run
        self.fast=fast

    def skip(self,to,store):
        return 'Cat'

class Dog(Cat):
    def __init_(self,run, fast,tongue):
        Cat.__init__(self,run,fast)
        self.tongue=tongue

    def skip(self,to,store,happier):
        return 'Doggy'
class Parent(object):
    def __init__(self,velocity):
        self.velocity=velocity

""""""
velocity is a list of speeds or something. But it can 
be from dogs or cats. Fast is a single number
""""""
class Owner(Parent):
    def __init__(self,smile):
        Parent.__init__(self,velocity)
        self.smile=smile
        self.jumper=[]

    def update(self):
        # velocity is a list of instances of cats and dog
        for number in self.velocity:
            if isinstance(number,Dog):
                number.skip(to,store,happier)
                self.jumper.append(number)
            if isinstance(number,Cat):
                 number.skip(to,store)
                self.jumper.append(number)
</code></pre>

<p>The problem that keeps arises is say i go to that first if statement in the if instance update method, it keeps giving me a type error, where it is saying I only need to arguments for skip and not three. Yet I know because it is going in the block the instance I must have is dog, which needs three arguments. Why is this type error keep arising?</p>
","<python><class><error-handling>"
"15983299","2","15983184","<p>What you've got here is a derived class which overrides a base class method with a different signature (formal parameter list).  You can read some about this here:</p>

<p><a href=""https://stackoverflow.com/questions/2398666/python-can-subclasses-overload-inherited-methods"">Python: Can subclasses overload inherited methods?</a></p>

<p>Perhaps you should not use the same method name in both classes, since the two methods aren't really interchangeable.  Or you could make them interchangeable by taking extra arguments as <code>*args</code> or <code>**kwargs</code>, not needing those extra arguments in the base class, but using them in the derived.  Something like this:</p>

<pre><code>class Cat(object):
    def skip(self,to,store,*args):
        return 'Cat'

class Dog(Cat):
    def skip(self,to,store,happier):
        return 'Doggy'
</code></pre>

<p>Now either class can have its method called with three arguments (plus self).</p>
",""
"15983308","2","15983184","<p>You haven't shown us the actual error message you're getting, but I'm going to assume that you're misinterpreting it and it's actually saying that you're passing only <em>two</em> arguments to a method that expects <em>three</em>.  Specifically, I expect that the problem is not with this code block:</p>

<pre><code>if isinstance(number,Dog):
    number.skip(to,store,happier)
    self.jumper.append(number)
</code></pre>

<p>But with the one right after it:</p>

<pre><code>if isinstance(number,Cat):
    number.skip(to,store)
    self.jumper.append(number)
</code></pre>

<p>Because <code>Dog</code> is a subclass of <code>Cat</code>, any instance of <code>Dog</code> is also an instance of <code>Cat</code>.  Thus, if <code>number</code> is a <code>Dog</code>, the first block of code will run successfully, and then, because you're using <code>if</code> instead of <code>elif</code>, the second block of code will try to execute, and Python will try to call <code>.skip(to, store)</code> on the <code>Dog</code>, which doesn't work, because <code>Dog</code>'s <code>skip</code> expects three arguments.</p>

<p>It's not clear from this contrived example what you want to do in the first place, but I suspect that the best solution to your problem is to simply change the second <code>if</code> to an <code>elif</code> so that <code>Dog</code>s won't be treated as non-<code>Dog</code> <code>Cat</code>s.</p>
",""
"16095304","1","","<p>Given two 2D numpy arrays containing x and y coordinates,  how can I find identical pairs in another array with identical dimensions?</p>

<p>For example, I have these arrays:</p>

<pre><code>array([[ 2,  1,  3,  4],
       [ 4,  3,  5, 10]])
</code></pre>

<p>and</p>

<pre><code>array([[ 0,  2,  3,  4],
       [ 3,  4, 11, 10]])
</code></pre>

<p>I would expect to find that the pairs <code>(2, 4)</code> and <code>(4, 10)</code> would be detected as existing in both arrays.</p>

<p>Thanks very much in advance!</p>
","<python><numpy>"
"16095359","2","16095304","<p>Try this:</p>

<pre><code>&gt;&gt;&gt; a2 = [[ 0,  2,  3,  4],
   [ 3,  4, 11, 10]]
&gt;&gt;&gt; a1 = [[ 2,  1,  3,  4],
   [ 4,  3,  5, 10]]
&gt;&gt;&gt; set(zip(*a1)) &amp; set(zip(*a2))
{(4, 10), (2, 4)}
</code></pre>

<p>You could traslate the array to list by array.tolist()</p>

<p>For any 2D array, to say, the first row represents the X-axis, and the second the Y-axis. So zip(*a1) would result in all coordinate pairs. Then the set() constructor will filter out all the duplicate records. And finally, the &amp; operation between two set would  figure out all the coordinate pairs, in both two arrays.</p>

<p>Hope it helps!</p>
",""
"16095372","2","16095304","<p>A direct solution would be:</p>

<pre><code>import numpy

array1 = numpy.array([[ 1, 99, 2, 400],
                      [ 3, 98, 4, 401]])

array2 = numpy.array([[ 1,  6, 99,   7],
                      [ 8,  9, 98, 401]])

result = []
for column_1 in xrange(array1.shape[1]):
    for column_2 in xrange(array2.shape[1]):
        if numpy.array_equal(array1[:,column_1], array2[:,column_2]):
            result.append(array1[:,column_1])

print numpy.array(result).transpose()

[[99]
 [98]]
</code></pre>
",""
"16095707","2","36932","<p>While the original enum proposal, <a href=""http://www.python.org/dev/peps/pep-0354/"" rel=""nofollow"">PEP 354</a>, was rejected years ago, it keeps coming back up. Some kind of enum was intended to be added to 3.2, but it got pushed back to 3.3 and then forgotten. And now there's a <a href=""http://www.python.org/dev/peps/pep-0435/"" rel=""nofollow"">PEP 435</a> intended for inclusion in Python 3.4. The reference implementation of PEP 435 is <a href=""http://pythonhosted.org/flufl.enum/docs/using.html"" rel=""nofollow""><code>flufl.enum</code></a>.</p>

<p>As of April 2013, there seems to be a general consensus that <em>something</em> should be added to the standard library in 3.4—as long as people can agree on what that ""something"" should be. That's the hard part. See the threads starting <a href=""http://mail.python.org/pipermail/python-ideas/2013-January/019003.html"" rel=""nofollow"">here</a> and <a href=""http://mail.python.org/pipermail/python-ideas/2013-February/019332.html"" rel=""nofollow"">here</a>, and a half dozen other threads in the early months of 2013.</p>

<p>Meanwhile, every time this comes up, a slew of new designs and implementations appear on PyPI, ActiveState, etc., so if you don't like the FLUFL design, try a <a href=""https://pypi.python.org/pypi?%3aaction=search&amp;term=enum&amp;submit=search"" rel=""nofollow"">PyPI search</a>.</p>
",""
"16096912","2","16095304","<p>The <em>numpythonic</em> way of doing this would be as follows:</p>

<pre><code>&gt;&gt;&gt; a1 = np.array([[2, 1, 3, 4], [4, 3, 5, 10]])
&gt;&gt;&gt; a2 = np.array([[0, 2, 3, 4], [3, 4, 11, 10]])
&gt;&gt;&gt; a1 = a1.T.copy().view([('', a1.dtype)]*2)
&gt;&gt;&gt; a2 = a2.T.copy().view([('', a2.dtype)]*2)
&gt;&gt;&gt; np.intersect1d(a1, a2)
array([(2, 4), (4, 10)], 
      dtype=[('f0', '&lt;i4'), ('f1', '&lt;i4')])
</code></pre>
",""
"16210253","2","35817","<p>The real answer is: Don't use <code>os.system()</code> in the first place. Use <a href=""http://docs.python.org/2/library/subprocess.html#subprocess.call"" rel=""nofollow""><code>subprocess.call</code></a> instead and supply the unescaped arguments.</p>
",""
"16309356","2","15575776","<p>If you wanted something with roughly the same API as <code>groupby</code>, you could use:</p>

<pre><code>def groupby2(iterable, keyfunc):
    lookup = collections.defaultdict(list)
    for item in iterable:
        lookup[keyfunc(item)].append(item)
    return lookup.iteritems()
</code></pre>

<p>So that's the same as your example above, but made into a function returning the <code>iteritems</code> of the lookup table you've built.</p>
",""
"16486444","2","36932","<p>On 2013-05-10, Guido agreed to accept <a href=""http://www.python.org/dev/peps/pep-0435/"">PEP 435</a> into the Python 3.4 standard library. This means that Python finally has builtin support for enumerations!</p>

<p>There is a backport available for Python 3.3, 3.2, 3.1, 2.7, 2.6, 2.5, and 2.4.  It's on Pypi as <a href=""https://pypi.python.org/pypi/enum34"">enum34</a>.</p>

<p>Declaration:</p>

<pre><code>&gt;&gt;&gt; from enum import Enum
&gt;&gt;&gt; class Color(Enum):
...     red = 1
...     green = 2
...     blue = 3
</code></pre>

<p>Representation:</p>

<pre><code>&gt;&gt;&gt; print(Color.red)
Color.red
&gt;&gt;&gt; print(repr(Color.red))
&lt;Color.red: 1&gt;
</code></pre>

<p>Iteration:</p>

<pre><code>&gt;&gt;&gt; for color in Color:
...   print(color)
...
Color.red
Color.green
Color.blue
</code></pre>

<p>Programmatic access:</p>

<pre><code>&gt;&gt;&gt; Color(1)
Color.red
&gt;&gt;&gt; Color['blue']
Color.blue
</code></pre>

<p>For more information, refer to <a href=""http://www.python.org/dev/peps/pep-0435/"">the proposal</a>. Official documentation will probably follow soon.</p>
",""
"16486681","2","36932","<p>The new standard in Python is <a href=""http://www.python.org/dev/peps/pep-0435/"" rel=""noreferrer"">PEP 435</a>, so an Enum class will be available in future versions of Python:</p>

<pre><code>&gt;&gt;&gt; from enum import Enum
</code></pre>

<p>However to begin using it now you can install the <a href=""http://bazaar.launchpad.net/~barry/flufl.enum/trunk/view/head:/flufl/enum/README.rst"" rel=""noreferrer"">original library</a> that motivated the PEP:</p>

<pre><code>#sudo pip install flufl.enum   //or #sudo easy_install flufl.enum
</code></pre>

<p>Then you <a href=""http://pythonhosted.org/flufl.enum/docs/using.html"" rel=""noreferrer"">can use it as per its online guide</a>:</p>

<pre><code>&gt;&gt;&gt; from flufl.enum import Enum
&gt;&gt;&gt; class Colors(Enum):
...     red = 1
...     green = 2
...     blue = 3
&gt;&gt;&gt; for color in Colors: print color
Colors.red
Colors.green
Colors.blue
</code></pre>
",""
"16767379","2","15599266","<p>Here is the Python version of that part of PHP code</p>

<pre><code>import hashlib
# Ready for md5

def signUrl(url, post=None):

  # Set default. Empty for not provided
  post_string = ''

  if post is not None:

    # Dictionary in Python does not maintain order 
    # Sort it manually with a for loop instead
    post = [post[k] for k in sorted(post.keys())]

    post_string = ','.join(post)
    # PHP implode

  return hashlib.md5(YourSecretApiKey + url + post_string).hexdigest()
</code></pre>
",""
"16842481","2","15600710","<p>Unfortunately, mlabwrap has limited support for cell arrays; both when passing cell arrays into matlab, and when receiving cell arrays from matlab.  </p>

<p>Here's the answer for your immediate question:</p>

<pre><code>&gt;&gt;&gt; from mlabwrap import mlab as matlab

&gt;&gt;&gt; a = [[1, 2], [3, 4]]
&gt;&gt;&gt; cell = matlab.mat2cell(array(a), [1, 1], [2])
&gt;&gt;&gt; matlab.display(cell)

PROXY_VAL2__ = 

    [1x2 double]
    [1x2 double]
</code></pre>

<p>Note that this really only works with regularly-sized lists.  I.e. [[1,2],[3,4]] works, but [[1,2],[3,4,5]] does not.  This is because mlabwrap doesn't handle dtype=object arrays particularly well, instead requiring dtype=float arrays.</p>

<p>Let's swich over to matlab for a quick comparison:</p>

<pre><code>&gt;&gt; display(cell)

cell = 

    [1x2 double]    [1x2 double]
</code></pre>

<p>Looks good! However, when we switch back to python, and try and actually access the cell array that we've created:</p>

<pre><code>&gt;&gt;&gt; cell[0][0]

error: Unable to get matrix from MATLAB(TM) workspace

&gt;&gt;&gt; cell[0, 0]

error: Unsupported index type: &lt;type 'tuple'&gt;

&gt;&gt;&gt; type(cell)
mlabwrap.MlabObjectProxy
</code></pre>

<p>Unfortunately, mlabwrap doesn't really allow access to the data stored in MlabObjectProxy objects.  There are a few ways to try and get around this.  You could write <code>cell_insert</code>
and <code>cell_pop</code> functions in matlab.  These should enable you to put python variables into an existing cell array, and get python-readable variables out from the cell array.  Alternatively, you could write the cell array to a .mat file from matlab, and read it into python using <code>scipy.io.loadmat()</code></p>

<p>Honestly, unless you absolutely need cell arrays for some reason, I would try and avoid using them  through mlabwrap.</p>
",""
"16947479","2","7829384","<p>Have you tried setting <code>LOCALE_PATHS</code> in your settings file? That fixed it for me...for more info check out <a href=""https://stackoverflow.com/a/16947426/1149774"">an answer I wrote for a similar question</a> or django's <a href=""https://docs.djangoproject.com/en/dev/ref/settings/#locale-paths"" rel=""nofollow noreferrer"">official documentation for the <code>LOCALE_PATHS</code> setting</a>.</p>
",""
"16964129","2","60208","<p>also use the List for store the cases ,and call corresponding function by select-</p>

<pre><code>cases = ['zero()','one()','two()','three()']

def zero():
  print ""method for 0 called...""
def one():
  print ""method for 1 called...""
def two():
  print ""method for 2 called...""
def three():
  print ""method for 3 called..."" 

i = int(raw_input(""Enter choice between 0-3 ""))

if(i&lt;=len(cases)):
 exec(cases[i])
else:
 print ""wrong choice""
</code></pre>

<p>also explained at <a href=""http://screwdesk.com/python-switch-case-alternative/"" rel=""nofollow"">screwdesk</a> </p>
",""
"17201727","2","36932","<p>Here's an approach with some different characteristics I find valuable:</p>

<ul>
<li>allows > and &lt; comparison based on order in enum, not lexical order</li>
<li>can address item by name, property or index: x.a, x['a'] or x[0]</li>
<li>supports slicing operations like [:] or [-1]</li>
</ul>

<p>and most importantly <strong>prevents comparisons between enums of different types</strong>!</p>

<p>Based closely on <a href=""http://code.activestate.com/recipes/413486-first-class-enums-in-python"" rel=""nofollow"">http://code.activestate.com/recipes/413486-first-class-enums-in-python</a>.</p>

<p>Many doctests included here to illustrate what's different about this approach.</p>

<pre><code>def enum(*names):
    """"""
SYNOPSIS
    Well-behaved enumerated type, easier than creating custom classes

DESCRIPTION
    Create a custom type that implements an enumeration.  Similar in concept
    to a C enum but with some additional capabilities and protections.  See
    http://code.activestate.com/recipes/413486-first-class-enums-in-python/.

PARAMETERS
    names       Ordered list of names.  The order in which names are given
                will be the sort order in the enum type.  Duplicate names
                are not allowed.  Unicode names are mapped to ASCII.

RETURNS
    Object of type enum, with the input names and the enumerated values.

EXAMPLES
    &gt;&gt;&gt; letters = enum('a','e','i','o','u','b','c','y','z')
    &gt;&gt;&gt; letters.a &lt; letters.e
    True

    ## index by property
    &gt;&gt;&gt; letters.a
    a

    ## index by position
    &gt;&gt;&gt; letters[0]
    a

    ## index by name, helpful for bridging string inputs to enum
    &gt;&gt;&gt; letters['a']
    a

    ## sorting by order in the enum() create, not character value
    &gt;&gt;&gt; letters.u &lt; letters.b
    True

    ## normal slicing operations available
    &gt;&gt;&gt; letters[-1]
    z

    ## error since there are not 100 items in enum
    &gt;&gt;&gt; letters[99]
    Traceback (most recent call last):
        ...
    IndexError: tuple index out of range

    ## error since name does not exist in enum
    &gt;&gt;&gt; letters['ggg']
    Traceback (most recent call last):
        ...
    ValueError: tuple.index(x): x not in tuple

    ## enums must be named using valid Python identifiers
    &gt;&gt;&gt; numbers = enum(1,2,3,4)
    Traceback (most recent call last):
        ...
    AssertionError: Enum values must be string or unicode

    &gt;&gt;&gt; a = enum('-a','-b')
    Traceback (most recent call last):
        ...
    TypeError: Error when calling the metaclass bases
        __slots__ must be identifiers

    ## create another enum
    &gt;&gt;&gt; tags = enum('a','b','c')
    &gt;&gt;&gt; tags.a
    a
    &gt;&gt;&gt; letters.a
    a

    ## can't compare values from different enums
    &gt;&gt;&gt; letters.a == tags.a
    Traceback (most recent call last):
        ...
    AssertionError: Only values from the same enum are comparable

    &gt;&gt;&gt; letters.a &lt; tags.a
    Traceback (most recent call last):
        ...
    AssertionError: Only values from the same enum are comparable

    ## can't update enum after create
    &gt;&gt;&gt; letters.a = 'x'
    Traceback (most recent call last):
        ...
    AttributeError: 'EnumClass' object attribute 'a' is read-only

    ## can't update enum after create
    &gt;&gt;&gt; del letters.u
    Traceback (most recent call last):
        ...
    AttributeError: 'EnumClass' object attribute 'u' is read-only

    ## can't have non-unique enum values
    &gt;&gt;&gt; x = enum('a','b','c','a')
    Traceback (most recent call last):
        ...
    AssertionError: Enums must not repeat values

    ## can't have zero enum values
    &gt;&gt;&gt; x = enum()
    Traceback (most recent call last):
        ...
    AssertionError: Empty enums are not supported

    ## can't have enum values that look like special function names
    ## since these could collide and lead to non-obvious errors
    &gt;&gt;&gt; x = enum('a','b','c','__cmp__')
    Traceback (most recent call last):
        ...
    AssertionError: Enum values beginning with __ are not supported

LIMITATIONS
    Enum values of unicode type are not preserved, mapped to ASCII instead.

    """"""
    ## must have at least one enum value
    assert names, 'Empty enums are not supported'
    ## enum values must be strings
    assert len([i for i in names if not isinstance(i, types.StringTypes) and not \
        isinstance(i, unicode)]) == 0, 'Enum values must be string or unicode'
    ## enum values must not collide with special function names
    assert len([i for i in names if i.startswith(""__"")]) == 0,\
        'Enum values beginning with __ are not supported'
    ## each enum value must be unique from all others
    assert names == uniquify(names), 'Enums must not repeat values'

    class EnumClass(object):
        """""" See parent function for explanation """"""

        __slots__ = names

        def __iter__(self):
            return iter(constants)

        def __len__(self):
            return len(constants)

        def __getitem__(self, i):
            ## this makes xx['name'] possible
            if isinstance(i, types.StringTypes):
                i = names.index(i)
            ## handles the more normal xx[0]
            return constants[i]

        def __repr__(self):
            return 'enum' + str(names)

        def __str__(self):
            return 'enum ' + str(constants)

        def index(self, i):
            return names.index(i)

    class EnumValue(object):
        """""" See parent function for explanation """"""

        __slots__ = ('__value')

        def __init__(self, value):
            self.__value = value

        value = property(lambda self: self.__value)

        enumtype = property(lambda self: enumtype)

        def __hash__(self):
            return hash(self.__value)

        def __cmp__(self, other):
            assert self.enumtype is other.enumtype, 'Only values from the same enum are comparable'
            return cmp(self.value, other.value)

        def __invert__(self):
            return constants[maximum - self.value]

        def __nonzero__(self):
            ## return bool(self.value)
            ## Original code led to bool(x[0])==False, not correct
            return True

        def __repr__(self):
            return str(names[self.value])

    maximum = len(names) - 1
    constants = [None] * len(names)
    for i, each in enumerate(names):
        val = EnumValue(i)
        setattr(EnumClass, each, val)
        constants[i] = val
    constants = tuple(constants)
    enumtype = EnumClass()
    return enumtype
</code></pre>
",""
"17470565","2","61517","<p>Late answer but provided for completeness and the benefit of googlers:</p>

<pre><code>def props(x):
    return dict((key, getattr(x, key)) for key in dir(x) if key not in dir(x.__class__))
</code></pre>

<p>This will not show methods defined in the class, but it will still show fields including those assigned to lambdas or those which start with a double underscore.</p>
",""
"17796582","2","36806","<p>try following this tutorial - <a href=""http://singlas.in/5-step-tutorial-for-using-django-with-apache-and-mod_wsgi/"" rel=""nofollow"">http://singlas.in/5-step-tutorial-for-using-django-with-apache-and-mod_wsgi/</a></p>

<p>you are trying to host apache /var/www/ folder and the Django app both at root (/). Since Alias directive takes precedence over WSGIScriptAlias, it is rendering apache directory.</p>

<p>you can try to host the django app at /app. Alternatively host the /var/www/ folder at a different location like /public</p>
",""
"17865871","2","60208","<p>Defining:</p>

<pre><code>def switch1(value, options):
  if value in options:
    options[value]()
</code></pre>

<p>allows you to use a fairly straightforward syntax, with the cases bundled into a map:</p>

<pre><code>def sample1(x):
  local = 'betty'
  switch1(x, {
    'a': lambda: print(""hello""),
    'b': lambda: (
      print(""goodbye,"" + local),
      print(""!"")),
    })
</code></pre>

<p>I kept trying to redefine switch in a way that would let me get rid of the ""lambda:"", but gave up.  Tweaking the definition:</p>

<pre><code>def switch(value, *maps):
  options = {}
  for m in maps:
    options.update(m)
  if value in options:
    options[value]()
  elif None in options:
    options[None]()
</code></pre>

<p>Allowed me to map multiple cases to the same code, and to supply a default option:</p>

<pre><code>def sample(x):
  switch(x, {
    _: lambda: print(""other"") 
    for _ in 'cdef'
    }, {
    'a': lambda: print(""hello""),
    'b': lambda: (
      print(""goodbye,""),
      print(""!"")),
    None: lambda: print(""I dunno"")
    })
</code></pre>

<p>Each replicated case has to be in its own dictionary; switch() consolidates the dictionaries before looking up the value.  It's still uglier than I'd like, but it has the basic efficiency of using a hashed lookup on the expression, rather than a loop through all the keys.</p>
",""
"18259642","2","38056","<p>I use this to get the processes, and the count of the process of the specified name</p>

<pre><code>import os

processname = 'somprocessname'
tmp = os.popen(""ps -Af"").read()
proccount = tmp.count(processname)

if proccount &gt; 0:
    print(proccount, ' processes running of ', processname, 'type')
</code></pre>
",""
"18384843","2","7782772","<pre><code>from BeautifulSoup import BeautifulSoup
soup = BeautifulSoup(urllib.open(url).read())
#findAll should get multiple parsed result
result = soup.findAll(something)
#then iterate result
for line in result:
    #get str value from each line,replace charset with utf-8 or other charset you need
    print line.__str__('charset')
</code></pre>

<p>BTW:BeautifulSoup's version is beautifulsoup-3.2.1</p>
",""
"18627613","2","36932","<p>Didn't see this one in the list of answers, here is the one I whipped up. It allows the use of 'in' keyword and len() method:</p>

<pre><code>class EnumTypeError(TypeError):
    pass

class Enum(object):
    """"""
    Minics enum type from different languages
    Usage:
    Letters = Enum(list('abc'))
    a = Letters.a
    print(a in Letters) # True
    print(54 in Letters) # False
    """"""
    def __init__(self, enums):
        if isinstance(enums, dict):
            self.__dict__.update(enums)
        elif isinstance(enums, list) or isinstance(enums, tuple):
            self.__dict__.update(**dict((v,k) for k,v in enumerate(enums)))
        else:
            raise EnumTypeError

    def __contains__(self, key):
        return key in self.__dict__.values()

    def __len__(self):
        return len(self.__dict__.values())


if __name__ == '__main__':
    print('Using a dictionary to create Enum:')
    Letters = Enum(dict((v,k) for k,v in enumerate(list('abcde'))))
    a = Letters.a
    print('\tIs a in e?', a in Letters)
    print('\tIs 54 in e?', 54 in Letters)
    print('\tLength of Letters enum:', len(Letters))

    print('\nUsing a list to create Enum:')
    Letters = Enum(list('abcde'))
    a = Letters.a
    print('\tIs a in e?', a in Letters)
    print('\tIs 54 in e?', 54 in Letters)
    print('\tLength of Letters enum:', len(Letters))

    try:
        # make sure we raise an exception if we pass an invalid arg
        Failure = Enum('This is a Failure')
        print('Failure')
    except EnumTypeError:
        print('Success!')
</code></pre>

<p>Output:</p>

<pre><code>Using a dictionary to create Enum:
        Is a in e? True
        Is 54 in e? False
        Length of Letters enum: 5

Using a list to create Enum:
        Is a in e? True
        Is 54 in e? False
        Length of Letters enum: 5
Success!
</code></pre>
",""
"18792190","2","35988","<p>Whenever I need an ""instant data object that also behaves like a dictionary"" (I <em>don't</em> think of C structs!), I think of this cute hack:</p>

<pre><code>class Map(dict):
    def __init__(self, **kwargs):
        super(Map, self).__init__(**kwargs)
        self.__dict__ = self
</code></pre>

<p>Now you can just say:</p>

<pre><code>struct = Map(field1='foo', field2='bar', field3=42)

self.assertEquals('bar', struct.field2)
self.assertEquals(42, struct['field3'])
</code></pre>

<p>Perfectly handy for those times when you need a ""data bag that's NOT a class"", and for when namedtuples are incomprehensible...</p>
",""
"18918261","2","13857","<p>For me, ""closures"" are functions which are capable to remember the environment they were created. This functionality, allows you to use variables or methods within the closure wich, in other way,you wouldn't be able to use either because they don't exist anymore or  they are out of reach due to scope. Let's look at this code in ruby:</p>

<pre><code>def makefunction (x)
  def multiply (a,b)
    puts a*b
  end
  return lambda {|n| multiply(n,x)} # =&gt; returning a closure
end

func = makefunction(2) # =&gt; we capture the closure
func.call(6)    # =&gt; Result equal ""12""  
</code></pre>

<p>it works even when both, ""multiply"" method and ""x"" variable,not longer exist. All because the closure capability to remember.</p>
",""
"19100365","2","60649","<p>google protobufs are a really bad idea with you want easy to maintain and debug code. its too easy for people to abuse it and use it to pollute your code.  the proto files are nice, but its basically the same thing as a structure header file, and the code it generates is complete crap making you wonder if it really a covert attack tool to sabotage software projects instead of automating them. After you use it for a while its almost impossible to remove it from your code. you are better off just using a header file of fix format structures that are easily debugged.  </p>

<p>if you really need compression, switch to an address/data mapping of filing structures remotely...
then packets are just a bundle of address/data pairs... also a structure that is very easy to automate with your own perl scripts that produce code that is human readable and debugable </p>
",""
"19330332","2","7781260","<p>Another, less convenient, way to do it is to use <a href=""http://docs.python.org/2/library/decimal.html"" rel=""noreferrer""><code>Decimal</code></a> class:</p>

<pre><code>from decimal import Decimal
pos_inf = Decimal('Infinity')
neg_inf = Decimal('-Infinity')
</code></pre>
",""
"19335626","2","60208","<p>I didn't find the simple answer I was looking for anywhere on Google search. But I figured it out anyway. It's really quite simple. Decided to post it, and maybe prevent a few less scratches on someone else's head. The key is simply ""in"" and tuples. Here is the switch statement behavior with fall-through, including RANDOM fall-through.</p>

<pre><code>l = ['Dog', 'Cat', 'Bird', 'Bigfoot',
     'Dragonfly', 'Snake', 'Bat', 'Loch Ness Monster']

for x in l:
    if x in ('Dog', 'Cat'):
        x += "" has four legs""
    elif x in ('Bat', 'Bird', 'Dragonfly'):
        x += "" has wings.""
    elif x in ('Snake',):
        x += "" has a forked tongue.""
    else:
        x += "" is a big mystery by default.""
    print(x)

print()

for x in range(10):
    if x in (0, 1):
        x = ""Values 0 and 1 caught here.""
    elif x in (2,):
        x = ""Value 2 caught here.""
    elif x in (3, 7, 8):
        x = ""Values 3, 7, 8 caught here.""
    elif x in (4, 6):
        x = ""Values 4 and 6 caught here""
    else:
        x = ""Values 5 and 9 caught in default.""
    print(x)
</code></pre>

<p>Provides:</p>

<pre><code>Dog has four legs
Cat has four legs
Bird has wings.
Bigfoot is a big mystery by default.
Dragonfly has wings.
Snake has a forked tongue.
Bat has wings.
Loch Ness Monster is a big mystery by default.

Values 0 and 1 caught here.
Values 0 and 1 caught here.
Value 2 caught here.
Values 3, 7, 8 caught here.
Values 4 and 6 caught here
Values 5 and 9 caught in default.
Values 4 and 6 caught here
Values 3, 7, 8 caught here.
Values 3, 7, 8 caught here.
Values 5 and 9 caught in default.
</code></pre>
",""
"20077382","2","15585484","<p>Just as an alternative, I ran into exactly the same problem and solved it by using <code>readline(1)</code> and appending that to an internal buffer until readline returned a character that I was interested in tokenizing on (newline, space, etc.).</p>

<p>More detail: I called <code>select()</code> on a file descriptor and then called <code>readline(1)</code> on any file descriptor that was returned by select, appended that char to a buffer, and repeated until readline returned what I wanted. Then I returned my buffer, cleared it and moved on. Incidentally, I also returned a Boolean that let the calling method know if the data that I was returning was empty because of a bad read of just because it wasn't done.</p>

<p>I also implemented a version that would tokenize on a timeout. If I'd been buffering for x ms without finding a newline or EOF, go ahead and return the buffer.</p>

<p>I'm currently trying to find out if there's a way to ask a file descriptor how many bytes it has waiting to be read, then just <code>readline([that many bytes])</code>...</p>

<p>Hope that helps.</p>
",""
"20100900","2","34439","<p>The simplest method is to use dir(objectname). It will display all the methods available for that object. Cool trick.</p>
",""
"20520884","2","36932","<p>From Python 3.4 there will be official support for enums. You can find documentation and examples <a href=""http://docs.python.org/3.4/library/enum.html"" rel=""noreferrer"">here on Python 3.4 documentation page</a>.</p>

<blockquote>
  <p>Enumerations are created using the class syntax, which makes them easy
  to read and write. An alternative creation method is described in
  Functional API. To define an enumeration, subclass Enum as follows:</p>
</blockquote>

<pre><code>from enum import Enum
class Color(Enum):
     red = 1
     green = 2
     blue = 3
</code></pre>
",""
"21242325","2","60805","<h2>this solution will select a single random row</h2>

<p>This solution requires that the primary key is named id, it should be if its not already:   </p>

<pre><code>import random
max_model_id = YourModel.query.order_by(YourModel.id.desc())[0].id
random_id = random.randrange(0,max_model_id)
random_row = YourModel.query.get(random_id)
print random_row
</code></pre>
",""
"21862975","2","13454","<p>use <code>decode('string_escape')</code></p>

<pre><code>cleaned = stringwithslashes.decode('string_escape')
</code></pre>

<p>Using </p>

<blockquote>
  <p><strong>string_escape</strong> : Produce a string that is suitable as string literal in Python source code</p>
</blockquote>

<p>or concatenate the replace() like Wilson´s answer.</p>

<pre><code>cleaned = stringwithslashes.replace(""\\"","""").replace(""\\n"",""\n"").replace(""\\r"",""\n"")
</code></pre>
",""
"22249049","2","62567","<pre><code>import re
if re.match('tEXT', 'text', re.IGNORECASE):
    # is True
</code></pre>
",""
"22461315","2","36932","<p>Here is a nice Python recipe that I found here: <a href=""http://code.activestate.com/recipes/577024-yet-another-enum-for-python/"" rel=""nofollow"">http://code.activestate.com/recipes/577024-yet-another-enum-for-python/</a></p>

<pre><code>def enum(typename, field_names):
    ""Create a new enumeration type""

    if isinstance(field_names, str):
        field_names = field_names.replace(',', ' ').split()
    d = dict((reversed(nv) for nv in enumerate(field_names)), __slots__ = ())
    return type(typename, (object,), d)()
</code></pre>

<p>Example Usage:</p>

<pre><code>STATE = enum('STATE', 'GET_QUIZ, GET_VERSE, TEACH')
</code></pre>

<p>More details can be found on the recipe page.</p>
",""
"22704148","2","61151","<p>From my experience in developing Testing frameworks in Python, I would suggest to put python unit tests in a separate directory. Maintain a symmetric directory structure. This would be helpful in packaging just the core libraries and not package the unit tests. Below is implemented through a schematic diagram. </p>

<pre><code>                              &lt;Main Package&gt;
                               /          \
                              /            \
                            lib           tests
                            /                \
             [module1.py, module2.py,  [ut_module1.py, ut_module2.py,
              module3.py  module4.py,   ut_module3.py, ut_module.py]
              __init__.py]
</code></pre>

<p>In this way when you package these libraries using an rpm, you can just package the main library modules (only). This helps maintainability particularly in agile environment. </p>
",""
"22723724","2","36932","<p>Keep it simple:</p>

<pre><code>class Enum(object): 
    def __init__(self, tupleList):
            self.tupleList = tupleList

    def __getattr__(self, name):
            return self.tupleList.index(name)
</code></pre>

<p>Then:</p>

<pre><code>DIRECTION = Enum(('UP', 'DOWN', 'LEFT', 'RIGHT'))
DIRECTION.DOWN
1
</code></pre>
",""
"23317927","1","","<p>I need to write a function in python that tells me if two numbers (m,n) are amicable or not.
I know that amicable numbers are two different numbers so related that the sum of the proper divisors of each is equal to the other number.</p>

<p>I can't get pass from here</p>

<pre><code>def ami_check(m,n):
</code></pre>

<p>I would appreciate the help.</p>
","<python><python-3.x>"
"23317994","1","","<p>I'd like to use <a href=""http://hylang.org"" rel=""nofollow"">Hy</a>, a dialect of Lisp on top of Python.  However my coworkers all use Python and aren't likely to switch over to a Lisp dialect any time soon.  </p>

<p>How can I package Hy code into a standard Python module?</p>
","<python><lisp><hy>"
"23318012","1","","<p>What is the fastest way to compute the number of occurrences of elements within a Pandas series?</p>

<p>My current fastest solution involves <code>.groupby(columnname).size()</code>.  Is there anything faster within Pandas?  E.g. I want something like the following:</p>

<pre><code>In [42]: df = DataFrame(['a', 'b', 'a'])

In [43]: df.groupby(0).size()
Out[43]: 
0
a    2
b    1
dtype: int64
</code></pre>
","<python><pandas>"
"23318052","2","23317994","<p>Simple! After all your coworkers have done <code>pip install hy</code>, they can include your <code>.hy</code> files as regular Python modules by:</p>

<p>1) Importing <code>hy</code>:</p>

<pre><code>import hy
</code></pre>

<p>2) Importing the name of the module as if it were Python with a <code>.py</code> extension:</p>

<pre><code>import module_name
</code></pre>

<p>(where in this example, <code>module_name</code> would be referring to <code>module_name.hy</code> in the same directory as the Python code)</p>
",""
"23318054","1","","<p>I've been using Python a great deal recently and have been wondering if there are any modern statically typed languages with syntactic support for generators like </p>

<pre><code>def gen():
    for i in range(10):
        yield i &lt;&lt; 100

for big_num in gen():
    print(big_num)
</code></pre>

<p>I thought Scala had them, but it seems this isn't the case.</p>
","<python><static><generator>"
"23318112","1","","<p>I use tweepy to stream tweets filtered by location coordinates. Currently I've been streaming tweets from two different neighborhoods in a city and found out that the tweets are the same despite difference in the coordinates (they are non-overlapping areas).</p>

<p>Is there a resolution of the coordinates up to which the twitter API can filter the tweets?</p>

<p>Here's a sample code for a streamer:</p>

<p>(Code with sample locations)</p>

<pre><code>import handler
from tweepy import Stream
from tweepy import OAuthHandler
from tweepy.streaming import StreamListener
from tweepy import API

ckey = 'blahblah..'
csecret = 'blah blah...'
atoken = 'blah blah...'
asecret = 'blah blah...'


Loc1 = [-70.981963,41.591322,-70.89941601,41.75938768]                
Loc2 = [-70.919537579,41.608616525,-70.905971579,41.617116525]      
Loc3 = [-70.92909611,41.621725545,-70.92084611,41.632153545]     


class listener(StreamListener):

    def on_status(self, status ):
        try:
            x = handler.editor('file.csv', status)        #used to save some data to file
            print x.encode(""utf-8"")
            return True

        except BaseException, e:
            print 'Exception:, ',str(e)

    def on_error(self, status):
        print status

auth = OAuthHandler(ckey, csecret)
auth.set_access_token(atoken, asecret)
twitterStream = Stream(auth,listener())
twitterStream.filter(locations = Loc1)
</code></pre>

<p>I run several instances of this code with different authorization details and locations. In this case Loc2 and Loc3 are neighborhoods in Loc1.</p>
","<python><python-2.7><twitter><tweepy>"
"23318125","2","23318054","<p>Haskell has <a href=""https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/conduit-overview"" rel=""nofollow"">conduits</a> which are somewhat more general, but certainly able to achieve a behaviour very similar to Python's generators:</p>

<pre><code>import Control.Monad
import Data.Bits
import Data.Conduit
import qualified Data.Conduit.List as CL

gen :: (Monad m) =&gt; Source m Integer
gen = forM_ [0..9] $ \i -&gt; 
          yield (i `shiftL` 100)

main = gen $$ CL.mapM_ print
</code></pre>
",""
"23318201","1","","<p>Newbie alert: Trying to use the App-engine Search API on a new project, I have read through the <a href=""https://developers.google.com/appengine/docs/python/search/#Python_Consistency"" rel=""nofollow"">introduction</a>. I hope I am wrong and I do ask that someone corrects me, but here is my understanding:</p>

<p>If I have a bookstore and I want to use the Search API, then it is sensible to have one index that includes all the books so that users can query against my entire inventory. Hence, each book would represent a Document. <strong>Therefore</strong>, my bookstore may not comprise more than 10GB of books?! Please, someone, tell me there is a workaround.</p>

<p>In my case, users must be able to add reviews. So if my users are chatty, as I hope they will be, I may run out of the 10GB very quickly.</p>

<p>I have been thinking of some possible workarounds, but they do not make much sense to me. For instance, I could link documents such that document Book would be</p>

<pre><code>Title -- String
Price -- Number
Reviews -- index //where review is an index of reviews on this book
</code></pre>

<p>so in this case a query on the index of books_index would have to cascade to the set of all review indices (one for each book).</p>

<p>OR I could get all the book documents and iterating through each, search the reviews for each book and from there assemble a final result set.</p>

<p>Clearly I am asking for help because I don't like any of my proposals as they each seem wasteful. Will someone please propose a better workaround? Perhaps someone who has done this before.</p>

<p>My hope is to come up with a model that does not restrict the number of book Documents I may have in my store, such that each Book [document] has an infinite number of reviews (so to speak). Where the invariant must be that a visitor may query against my entire inventory.</p>
","<java><python><google-app-engine><google-search-api>"
"23318219","1","","<p>I am writing a Python script to add diacritical marks (in the U+03XX range) to strings. However, <code>chr()</code> is complaining every time I try to convert a number in that range to a character. (This is Python 3, so no <code>unichr</code>.)</p>

<p>Here is a truncated version of my code:</p>

<pre><code>    strl = list(input())
    args = input().split("" "")
    strl[int(args[0])]+=chr(int(args[1])+0x300) #this is the line that breaks
</code></pre>

<p>It crashes with the following exception:</p>

<pre><code>UnicodeEncodeError: 'charmap' codec can't encode character '\u0300' in position 16: character maps to &lt;undefined&gt;
</code></pre>

<p>So how can I turn an integer into the string representation of a combining diacritic?</p>

<p>(For example, if I put the string <code>""accent marks""</code> in for <code>strl</code>, and <code>""0 0""</code> for <code>args</code>, I want <code>strl</code> to end up as <code>[""à"",""c"",""c"",""e"",""n"",""t"","" "",""m"",""a"",""r"",""k"",""s""]</code></p>

<p>UPDATE: in the comments, delnan explained to me that <code>chr()</code> is working fine, but that the program is refusing to print the string. How can I print strings (already stored in variables) containing characters from this code block?</p>
","<python><python-3.x><unicode>"
"23318231","1","","<p>I have an array in numpy, and in the process of inspecting it, I realize that some of the values in one particular column contain strings of gibberish.</p>

<p>For example, the suspect column is the second column, and it looks something like this:</p>

<pre><code>['Joe', '200.00']
['Fred', 'adfdfddfds']
['Zhu', '5000.00']
['text_ok_here', '10.10']
</code></pre>

<p>(please note that the <code>dtype</code> is string)  </p>

<p>I would like to ultimately have:  </p>

<pre><code>['Joe', '200.00']
['Zhu', '5000.00']
['text_ok_here', '10.10']
</code></pre>

<p>I need to delete any full row that has a string that I can't convert to float, hanging out in my particular column.</p>

<p>Originally, I was thinking I could just iterate through the column, collect the indices that match the offending entries, and use that to subset my original array.  </p>

<p>Something along these lines:</p>

<pre><code>for entry in my particular column:
    if &lt;entry is a string, not a float&gt;
        &lt;delete that whole row of the matrix&gt;
</code></pre>

<p>But this won't work because everything is a string anyways.</p>

<p>I'm stuck with the problem of converting types but I have no straightforward way to test for the gibberish.  Further, even if I did find the correct indices, I'm unsure how to go about the subsetting.  </p>

<p>I feel like this is pretty common stuff -- cleaning up an array, but having a surprisingly difficult time in accomplishing this.  </p>

<p>Any advice/philosophy etc would be greatly appreciated.</p>
","<python><arrays><numpy>"
"23318251","2","23318012","<p>The <code>value_counts()</code> function in pandas does this exactly.</p>

<p>Use that function on the column you want.
i.e.</p>

<pre><code>df['column_i_want'].value_counts()
</code></pre>
",""
"23318329","1","","<p>I am trying to instally bulbs on my Ubuntu 12.04.I have installed the following packages.</p>

<pre><code>sudo apt-get install python2.7-dev
sudo apt-get install libyaml-dev
</code></pre>

<p>I have installed </p>

<pre><code> sudo pip install  https://github.com/espeed/bulbs/tarball/master
</code></pre>

<p>The output is as follows</p>

<pre><code>Downloading/unpacking https://github.com/espeed/bulbs/tarball/master
  Downloading master (unknown size): 177Kb downloaded
  Cannot determine compression type for file /tmp/pip-c436mD-unpack/master
  In the tar file /tmp/pip-c436mD-unpack/master the member espeed-bulbs-71d0cce/docs/social is invalid: ""linkname 'espeed-bulbs-71d0cce/docs//home/james/projects/bulbflow.com/www/root/templates/social.html' not found""
  Running setup.py egg_info for package from https://github.com/espeed/bulbs/tarball/master

    warning: no previously-included files matching '*~' found under directory '.'
    warning: no previously-included files matching '*.pyc' found under directory '.'
    no previously-included directories found matching '*/*/old'
    no previously-included directories found matching '*/old'
Requirement already satisfied (use --upgrade to upgrade): distribute in /usr/lib/python2.7/dist-packages (from bulbs==0.3.29-20140426)
Requirement already satisfied (use --upgrade to upgrade): httplib2&gt;=0.7.2 in /usr/lib/python2.7/dist-packages (from bulbs==0.3.29-20140426)
Requirement already satisfied (use --upgrade to upgrade): pyyaml&gt;=3.10 in /usr/local/lib/python2.7/dist-packages/PyYAML-3.11-py2.7-linux-x86_64.egg (from bulbs==0.3.29-20140426)
Requirement already satisfied (use --upgrade to upgrade): six in /usr/local/lib/python2.7/dist-packages (from bulbs==0.3.29-20140426)
Requirement already satisfied (use --upgrade to upgrade): omnijson in /usr/local/lib/python2.7/dist-packages/omnijson-0.1.2-py2.7.egg (from bulbs==0.3.29-20140426)
Requirement already satisfied (use --upgrade to upgrade): python-dateutil==1.5 in /usr/lib/python2.7/dist-packages (from bulbs==0.3.29-20140426)
Cleaning up...
</code></pre>

<p>Is the line </p>

<pre><code>In the tar file /tmp/pip-c436mD-unpack/master the member espeed-bulbs-71d0cce/docs/social is invalid: ""linkname 'espeed-bulbs-71d0cce/docs//home/james/projects/bulbflow.com/www/root/templates/social.html' not found""
</code></pre>

<p>displayed above an error ? And does it mean that the install of bulbs has not succeeded?</p>
","<python><python-2.7><pip><bulbs>"
"23318362","1","","<p>I am making a minesweeper clone in Python and I am running into issues setting the ""Neighbors""</p>

<p>This is the class:</p>

<pre><code>class Box:
    hasBomb = False
    numBombNeighbors = 0
    clicked = False
    xcoord = 0
    ycoord = 0
    neighbors = [None, None, None, None, None, None, None, None]

    def __init__(self):
        self.hasBomb = False
        self.numBombNeighbors = 0
        self.clicked = False
        self.xcoord = 0
        self.ycoord = 0
        for i in xrange(8):
            self.neighbors[i] = None
</code></pre>

<p>Then I make the board</p>

<pre><code>def getRandomBoard():
    # we will hide 50 random bombs
    result = []
    for i in xrange(BOARDWIDTH):
        result.append([])
        for j in xrange(BOARDHEIGHT):
            new_box = Box()
            new_box.xcoord = i
            new_box.ycoord = j
            result[i].append(new_box)


    # set all the neighbors
    result = setNeighbros(result)

    for i in range(BOARDWIDTH):
        for j in range(BOARDHEIGHT):
            print result[i][j].xcoord
            print result[0][0].neighbors[5].xcoord
</code></pre>

<p>And this is the function to set the Neighbors:</p>

<pre><code>def setNeighbros(board):
    for i in range(len(board)):
        for j in range(len(board[i])-1):
            if j &gt; 0:
                board[i][j].neighbors[0] = board[i][j-1]
            if j &gt; 0 and i &lt; len(board) -1:
                board[i][j].neighbors[1] = board[i+1][j-1]
            if i &lt; len(board) - 1:
                board[i][j].neighbors[2] = board[i+1][j]
            if i &lt; len(board) - 1 and j &lt; len(board[i]) - 1:
                board[i][j].neighbors[3] = board[i+1][j+1]
            if j &lt; len(board[i]) - 1:
                board[i][j].neighbors[4] = board[i][j+1]
            if j &lt; len(board[i]) - 1 and i &gt; 0:
                board[i][j].neighbors[5] = board[i-1][j+1]
            if i &gt;  0:
                board[i][j].neighbors[6] = board[i-1][j]
            if i &gt; 0 and j &gt; 0:
                board[i][j].neighbors[7] = board[i-1][j-1]
    return board
</code></pre>

<p>In the Board making function, I print the xcoord and the xcoord of neighbor 5 to check the problem, and the problem is coming from setting the neighbors.  During the creation of the neighbors they are all pointing to the correct neighbor, but after it finishes they are all pointing to the same neighbor, but I know the array of boxes is all holding different boxes since they have different xcoord.  If someone could tell me why the neighbors are all pointing at the same box, I would appreciate it.</p>
","<python><pygame>"
"23318418","2","23318231","<p>It will be really import to know what <code>dtype</code> your data is in, but if it is <code>float</code> or <code>int</code> or any of the number like <code>dtype</code>s, <code>boolean</code> indexing will be enough</p>

<p>The data file:</p>

<pre><code>&lt;temp.txt&gt;
1 2 3 4 5 6
1 2 3 4 5 6
1 2 3 4 5 bad
1 2 3 4 5 6
1 2 3 4 5 6
1 2 3 4 5 bad
1 2 3 4 5 6
1 2 3 4 5 6
</code></pre>

<p>Solution:</p>

<pre><code>In [9]:

A=np.genfromtxt('temp.txt')
A
Out[9]:
array([[  1.,   2.,   3.,   4.,   5.,   6.],
       [  1.,   2.,   3.,   4.,   5.,   6.],
       [  1.,   2.,   3.,   4.,   5.,  nan],
       [  1.,   2.,   3.,   4.,   5.,   6.],
       [  1.,   2.,   3.,   4.,   5.,   6.],
       [  1.,   2.,   3.,   4.,   5.,  nan],
       [  1.,   2.,   3.,   4.,   5.,   6.],
       [  1.,   2.,   3.,   4.,   5.,   6.]])
In [10]:

np.isfinite(A).all(1) #only TRUE when all the cells in the row are valid number
Out[10]:
array([ True,  True, False,  True,  True, False,  True,  True], dtype=bool)
In [11]:

A[np.isfinite(A).all(1)]
Out[11]:
array([[ 1.,  2.,  3.,  4.,  5.,  6.],
       [ 1.,  2.,  3.,  4.,  5.,  6.],
       [ 1.,  2.,  3.,  4.,  5.,  6.],
       [ 1.,  2.,  3.,  4.,  5.,  6.],
       [ 1.,  2.,  3.,  4.,  5.,  6.],
       [ 1.,  2.,  3.,  4.,  5.,  6.]])
</code></pre>

<h1>Edit</h1>

<p>If the <code>array</code> is already in <code>string</code>, this might be the easiest:</p>

<pre><code>In [40]:

%%file temp.txt
1000.00 200.00
4000.00 adfdfddfds
20.00 5000
text_ok_here 5000
Overwriting temp.txt
In [53]:

A=np.genfromtxt('temp.txt', dtype=str)
B=np.genfromtxt('temp.txt')
In [55]:

A[np.isfinite(B[:,1])]
Out[55]:
array([['1000.00', '200.00'],
       ['20.00', '5000'],
       ['text_ok_here', '5000']], 
      dtype='|S12')
</code></pre>

<p>Basically read the data into <code>A</code> as an <code>array</code> of <code>string</code>s; into <code>B</code> as <code>float</code> and <code>NAN</code> wherever can't be converted to a valid number, then get a slice of <code>A</code> based on <code>B</code>.</p>
",""
"23318422","2","23318201","<p>You need a million reviews before you exceed 10GB - I doubt it will happen quickly. When you do get a million, chances are that Google will increase this limit. If they don't, you can split your data into several indexes - this limit applies per index, not per application.</p>
",""
"23318429","1","","<p>I need to build multiple buttons, but I can't display any button! this is my code of a WPF application with IronPython 2.7..</p>

<p>I've tried this in two different ways, with ""Grid.Children.Add(button)"" and without that but anything displays..</p>

<p>XAML:</p>

<pre><code>&lt;Window xmlns=""http://schemas.microsoft.com/winfx/2006/xaml/presentation""
        xmlns:x=""http://schemas.microsoft.com/winfx/2006/xaml"" xmlns:Forms=""clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"" 
        x:Name=""NewWindow"" Height=""564.22"" Width=""993.2""&gt;

    &lt;Grid x:Name=""grid"" Margin=""0,0,75.2,92.4""&gt;
        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition/&gt;
        &lt;/Grid.ColumnDefinitions&gt;  
        &lt;Button Content=""Create a Button from code"" HorizontalAlignment=""Left""
         Margin=""712,418,0,0"" VerticalAlignment=""Top"" Width=""167"" Height=""61""
         Click=""CreateButtons_Click""/&gt;     
    &lt;/Grid&gt;
&lt;/Window&gt;
</code></pre>

<p>CODE:</p>

<pre><code>import clr
clr.AddReferenceToFileAndPath(""IronPython.Wpf.dll"")
clr.AddReferenceByPartialName(""PresentationCore"")
clr.AddReferenceByPartialName(""PresentationFramework"")
clr.AddReferenceByPartialName(""WindowsBase"")
clr.AddReferenceByPartialName(""IronPython"")
clr.AddReferenceByPartialName(""Microsoft.Scripting"")

import wpf 
from System.Windows import Application, Window, Controls
from System.Windows.Forms import Form, Button

class NewWindow(Window):
    def __init__(self):
        wpf.LoadComponent(self, 'NewWindow.xaml')

    def CreateButtons_Click(self, sender, e):
        self.myButton = Button()
        self.myButton.Name=""boton1""
        self.myButton.Text=""prueba""
        self.myButton.Size = Size(75,23)
        self.myButton.Location = Point(0,0)
        #Add to grid
        self.grid.Children.Add(self.myButton)
</code></pre>

<p>That shows an error: </p>

<blockquote>
  <p>expected UIElement, got Button</p>
</blockquote>

<p>If I skip that error and erase the line <strong>self.grid.Children.Add(self.myButton)</strong>, it doesnt get an error, but doesnt show any button either.</p>

<p>How i can show my button in there by python code? <em>(New at python and wpf)</em></p>
","<python><wpf><button><visual-studio-2013><ironpython>"
"23318436","2","23318362","<p>The problem is that the class-level variables are shared among all instances of the class.</p>

<p>If you are coming from a language like <code>Java</code>, you can imagine the variables declared inside the class are all <code>static</code> variables.</p>

<p>Modify your class to remove all the class-level variables, and do all initialization of instance-level variables inside <code>__init__</code>.</p>

<pre><code>class Box:

    def __init__(self):
        self.hasBomb = False
        self.numBombNeighbors = 0
        self.clicked = False
        self.xcoord = 0
        self.ycoord = 0
        self.neighbors = [None for i in xrange(8)]
</code></pre>
",""
"23318440","1","","<p>I have looked for similar questions, but I haven't found anything concrete enough to actually apply to my situation.</p>

<p>Ok, so I've come up with something that will display the right amount of images, in the right places, except for the Y axis.
Basically, if I have array:</p>

<pre><code>[1,1,1,1,
 0,0,0,0]
</code></pre>

<p>I would want it to display as something like:</p>

<pre><code>####
@@@@
</code></pre>

<p>However, it display as this:</p>

<pre><code>####@@@@
</code></pre>

<p>How do I iterate down in the rows, much more importantly, how do I detect a row-continuation?</p>
","<python><2d><tile>"
"23318449","1","","<p>I need a form that has a dynamically created part and a static part to it. So I'm thinking of subclassing ... but can't figure out how this would work with a dynamically created form.
I am creating my dynamic form in this way:</p>

<p><strong>from views.py</strong></p>

<pre><code>def create_legumes_form_class(legumes):
form_fields={}    
for legume in legumes:
    field_id = 's_{}'.format(legume.id)
    form_fields[field_id] = IntegerField(default=0 , validators = [InputRequired()])
return type('OrderForm', (Form,), form_fields)
</code></pre>

<p>Then instantiating the form in my view function :</p>

<pre><code>legumes = Legumes.query.filter_by(disponible = True).all()
OrderForm = create_legumes_form_class(legumes)
form = OrderForm()
</code></pre>

<p>But to this OrderForm(), I need to add a couple BooleanField(s) that will always be the same (ie. not dynamically created from the Query).</p>

<p>So I am trying to add a (static) form in my <strong>forms.py</strong> and instantiate it like this in the view function:</p>

<pre><code>form=OrderForm(StaticForm)
</code></pre>

<p>But I'm getting</p>

<pre><code>    TypeError: formdata should be a multidict-type wrapper that supports the 'getlist' method
</code></pre>

<p>And I don't know where to take it from here !
What am I doing wrong/not doing ?</p>
","<python><flask><wtforms>"
"23318476","1","","<p>I am trying to mirror a ruby scraper that I wrote but for a python only environment. I've decided to use lxml and requests to get this done. My problem is pagination:</p>

<pre><code>base_url = ""http://example.com/something/?page=%s""  
for url in [base_url % i for i in xrange(10)]:  
    r = requests.get(url)
</code></pre>

<p>I'm new to python and this library so I'm not sure the best way to perform the equivalent ruby code: </p>

<pre><code>last_pg = (page.xpath(""//div[contains(@class, 'b-tabs-utility')]"").text.split('of ')[-1].split(' Results')[0].to_f / 60).ceil
puts ""Current Index: #{last_pg}""
for pg_number in 1..last_pg do
  puts ""Getting links on page #{pg_number}""
</code></pre>
","<python><html><pagination><web-scraping><lxml>"
"23318494","1","","<p>I'm sure this is an extremely simple question, but I cannot seem to figure it out. I'm getting into python and have use a basic 'hello world' router as an example. I wanted to export the majority of the code to expand the app into multiple files. When all of the code is in a single file, it works fine, but when it is moved into 2 separate files, it bombs. Any help is greatly appreciated.</p>

<p>FIRST FILE</p>

<pre><code>import re # first file
from Primer.Core.router import Router // second file, excluded when all code is in 1 file

# second file code here when combined

def application(environ, start_response):
    router = Router(environ, start_response)
    return router.run()
</code></pre>

<p>SECOND FILE</p>

<pre><code>from cgi import escape


class Router:

def __init__(self, environ, start_response):
    self.environ = environ
    self.start_response = start_response

def run(self):
    path = self.environ.get('PATH_INFO', '').lstrip('/')
    if (path == 'hello')
        return 'hello'
    else
        return 'other'
</code></pre>
","<python>"
"23318500","2","23318231","<p>Here is one way to do this.  Iterate through the numerical indices of the rows checking your condition.  If the condition is not met, add the index to the list <code>keep</code> which contains the row indices to keep.  Then you can slice your array with the list <code>keep</code> to obtain an array with only the rows that did not satisfy the condition for elimination.  To slice the array <code>a</code> using the list <code>keep</code>, do <code>a[keep]</code>.  If you wish to overwrite your original array do <code>a = a[keep]</code>.  Here is an example which prints the array before slicing, the list of indices to keep, and the array after slicing.</p>

<pre><code>#!/usr/bin/env python

import numpy

a = numpy.array([['foo', 2, 3], [4, 5, None], [7, 8, 'bar'], [10, None, 12]])
print(a)
keep = []
j = 2
for i in range(0, a.shape[0]) :
    if not(a[i, j] is None or isinstance(a[i, j], basestring)) :
        keep.append(i)
print keep
a2 = a[keep]
print(a2)
</code></pre>
",""
"23318506","1","","<p>I am working through Miguel Grinberg's <a href=""http://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"" rel=""nofollow"">Flask Mega-Tutorial</a> and am unable to run the basic Hello World Flask app in Local Host:</p>

<p>run.py:</p>

<pre><code>#!flask/bin/python
from app import app
app.run(debug = True)
</code></pre>

<p>I am running the following in the Ubuntu terminal:</p>

<pre><code>chmod a+x run.py
./run.py
</code></pre>

<p>Which is generating the following:</p>

<pre><code>bash: ./run.py: flask/bin/python: bad interpreter: No such file or directory
</code></pre>

<p>Appreciate the input.</p>
","<python><linux><flask>"
"23318507","1","","<p>I'm trying to print a text gradually.</p>

<pre><code>import time

print time.sleep(1),'Whats ', time.sleep(1),'your', time.sleep(1),'PROBLEM?'
</code></pre>

<p>No errors occur. but I do get.</p>

<pre><code>None Whats  None your None PROBLEM?
</code></pre>

<p>Is this possible to achive?
If so any better ways to do it or a solution?
Thanks.</p>
","<python><time>"
"23318517","2","23318507","<p>You should put it in a loop:</p>

<pre><code>import time

text = ""What's your PROBLEM?""
text = text.split()            #text is a list now: [""What's"", ""your"", ""PROBLEM?""]

for i in text:
    print i,
    time.sleep(1)

[OUTPUT]
What's (1 sec) your (1 sec) PROBLEM?      #the (1 sec) doesn't actually print
</code></pre>
",""
"23318524","2","23318476","<p>Get the number of results by splitting the <code>b-tabs-utility</code> div into spaces and getting element before last:</p>

<pre><code>base_url = ""http://example.com/something/?page=%d"" 
results_per_page = 60

div = page.xpath(""//div[contains(@class, 'b-tabs-utility')]"")[0].text
last_pg = int(div.split()[-2]) / results_per_page
for i in xrange(last_pg):
    r = requests.get(base_url % i)
</code></pre>

<p>I'm <a href=""https://stackoverflow.com/questions/20981386/capybara-dsl-screen-scraper-working-on-a-single-page-but-fails-without-error-aft"">assuming</a> the <code>div</code> text is in the following format, example: <code>... of 642 Results</code></p>
",""
"23318530","2","23318494","<p>If the two files are in the same directory, you should remove the prefix from the <code>import</code>.</p>

<pre><code>from router import Router
</code></pre>

<p>Also, you need to create an empty file <code>__init__.py</code> in the directory that contains the file that will be imported.</p>
",""
"23318534","1","","<p> I want the user to input 10 unique integers in the set [1, 100]. This is my code so far:</p>

<pre class=""lang-python prettyprint-override""><code>user_list = []
print ""\nChoose any 10 discrete integers in the set [1, 100]. Do not choose duplicates.""

i = 1

while i &lt; 11:
    try:
        number_choice = int(raw_input(""\nNumber %d?\n&gt; "" % i))

        if (0 &lt;= number_choice &lt;= 100) and isinstance(number_choice, int):
            i += 1
            user_list.append(number_choice)
            print ""Your list so far: %r"" % user_list
        elif (number_choice &lt; 0) or (number_choice &gt; 100):
            print ""'I said to keep it in the set [1, 100].'""
            pass
        else:
            pass

    except ValueError:
        print ""'That isn't a discrete integer, is it?'""

print sorted(user_list)
</code></pre>

<p>To prevent duplicates, I wanted to change the first <code>if</code> to read:</p>

<pre class=""lang-python prettyprint-override""><code>if (0 &lt;= number_choice &lt;= 100) and (isinstance(number_choice, int)) and (number_choice not in user_list):
</code></pre>

<p>This would work, except it would just repeat the <code>""Number %d?"" %  i</code> prompt again if the user input a duplicate. How can I modify this code so it first displays a prompt <code>'I said no duplicates.'</code> and then resumes the loop?</p>
","<python><python-2.7><while-loop><try-except>"
"23318550","2","23318534","<p>Before the <code>i += 1</code> line:</p>

<pre><code>if number_choice in user_list:
    print 'No duplicates!'
    continue
</code></pre>
",""
"23318554","2","23318534","<p>Check for duplication first in the if statement, then check for valid integer and add it to the list in the ""if else"".</p>
",""
"23318556","2","23318507","<p><code>time.sleep(1)</code> returns the null value: <code>None</code>. The following code would produce the same output: <code>print None, 'Whats ', None,'your', None,'PROBLEM?'</code>. Though it wouldn't pause.</p>

<p>What you want to do here is loop over the different blocks of text text that you want to print and sleep after each printing (just as sshashank124 recommends).</p>

<pre><code>import time
words = [""What's"", ""your"", ""PROBLEM?""]

for word in words:
  print word,
  time.sleep(1)
</code></pre>
",""
"23318579","2","23318494","<p>For now, I see several errors in the code:</p>

<ol>
<li>The import will fail as a non-Python comment (<code>//</code>) is written after it. You should use <code>#</code> instead.</li>
<li><p>You should check that the structure of your files is correct:</p>

<p><code>
├── Primer
│   ├── Core
│   │   ├── __init__.py
│   │   └── router.py
│   ├── __init__.py
└── index.py
</code></p></li>
<li><p>The <code>if</code> and <code>else</code> in your <code>Router</code> class lack both a colon:</p>

<p><code>
def run(self):
   path = self.environ.get('PATH_INFO', '').lstrip('/')
   if (path == 'hello'):
       return 'hello'
   else:
       return 'other'
</code>
Also, the indentation of the methods within your <code>Router</code> class is not properly set on your example, but I suppose it is OK in your file...</p></li>
</ol>

<p>I'd check that the errors are not due to that first.</p>
",""
"23318597","1","","<p>This is a simulation program, where Hercules fights the Hydra, and it consists of rounds. If lets say Hercules beats Hydra, it should output <code>Result: Hercules defeats Hydra in ""i"" rounds.</code> If it goes for more than 100 rounds then it should output: <code>Hydra defeated Hercules</code>. The next thing is: if the head size after each round is 1, the it passes. If the head size is greater than one, then it adds size of ""headsize//2"" to grow back in its place. This is just a little clue of what the simulation should be like.</p>

<pre><code>from array_heap import*

###################################################################
#Function for the file reader                                     #
###################################################################

def file():
    """"""
    Opens the file and reads it for the simulation
    """"""
    fileName = input(""Enter file name: "") 
    fp = open(fileName)
    line = fp.readline()
    stat = fp.readline()
    stat = stat.strip()
    initHydraHeads = []
    for i in range(len(stat)):
        initHydraHeads.append(int(stat[i]))
    growHydraHead = fp.readline()
    return line, initHydraHeads, growHydraHead


###################################################################
#Starting the simulation                                          #
###################################################################

def HydraHeadStartOfGame(initHydraHeads, line):
    """"""
    Takes 2 arguments:
       initHydraHeads
       line
    Returns an instance of the hydra head initially
    """"""

    if line == ""largest"":
        choise = greater
    else:
        choise = less
    hHead = mkHeap((len(initHydraHeads) + 100), choise)
    for i in range(len(initHydraHeads)):
        add(hHead, initHydraHeads[i])
    return hHead

def HydraHeadGrowBack(headsize, hHead):
    """"""
    HydraHeadGrowBack function makes the head grow twice in size if the headsize is greater than 1
    """"""

    if headsize == 1:
        pass
    else:
        for i in range(2):
            newHeads == headsize//2
            add(hHead, newHeads)
    return hHead

def headGrowbyOne(hHead, i):
    """"""
    Makes the head grow by one after each round
    """"""

    if i == 0:
        pass
    else:
        for i in len(hHead.array):
            hHead.array[i] += 1
    return hHead


def main():
    line, initHydraHeads, growHydraHead = file()
    print(""Hercules' strategy: "", line)
    print(""Initial Hydra Heads: "", initHydraHeads)
    print(""Hydra growth period: "", HydraHeadGrowBack)
    hHead = HydraHeadStartOfGame(initHydraHeads, line)
    #print(removeMin(hHead))

    i = 0
    while i &lt; 100: #100 means 100 rounds
        headGrowbyOne(hHead, i)
        if hHead.size == 0:
            print(""Hercules wins, Hydra is dead!"")
            print(""Result: Hercules slays the hydra after "", i, ""rounds"")
            break;
        else:
            print(""Current size: "", hHead.size)
            severedHead = removeMin(hHead)
            HydraHeadGrowBack(severedHead, hHead)
            print(hHead.array)
        i += 1

main() #run the program
</code></pre>

<p>As an example this is how the output should look like:</p>

<pre><code>Please input name of file to read: hydra.txt
Hercules' strategy: smallest
Initial Heads: [8, 7, 3]
Hydra Growth Period: 10
</code></pre>

<p>The text file is supposed to look like this:</p>

<pre><code>smallest
8 7 3
10
</code></pre>

<p>So i am running the program, and it is giving me an error:</p>

<pre><code>initHydraHeads.append(int(stat[i]))
ValueError: invalid literal for int() with base 10: ' '
</code></pre>

<p>What am i doing wrong in here?</p>
","<python><heap>"
"23318635","2","23318507","<p>You cannot print a function such as <code>time.sleep(1)</code> because it doesn't return anything, therefore, the None. Instead, try the following:</p>

<pre><code>from sys import stdout
from time import sleep

text = ""What's your problem?""
text = text.split()

for k in text:
        stdout.write(k+' ')
        stdout.flush()
        sleep(1)

print '\n'
</code></pre>

<p><strong>Output:</strong></p>

<pre><code>What's $ your $ problem?
</code></pre>

<p>The <code>$</code> signifies the pause of 1 second. If you use the following code:</p>

<pre><code>import time

text = ""What's your PROBLEM?""
text = text.split()            #text is a list now: [""What's"", ""your"", ""PROBLEM?""]

for i in text:
    print i,
    time.sleep(1)
</code></pre>

<p>It prints everything at once after 3 seconds.</p>

<h1>Look <a href=""https://www.youtube.com/watch?v=_nPHw4m7SeE&feature=youtube_gdata_player"" rel=""nofollow"">here</a></h1>
",""
"23318637","2","23318429","<p>I figured it out what was the problem!! (So easy i can't beieve it!)</p>

<p>The error of UIElement was because (I didnt know that there was two kind of buttons, im sorry!) I was importing <strong>Button</strong> from <strong>System.Windows.Forms</strong> and the correct button has to be imported from <strong>System.Windows.Controls</strong></p>

<p>Nice day, everybody!</p>
",""
"23318715","1","","<p>I'm new to python programming and I'm having trouble selecting an option. I have created a menu for example I have : 
Instructions 
Catering 
Packages
add 
When the user selects i, c, a or p each menu will come up. However, if the user selects 'p' before 'a' then I need to set a prompt to select a first.. </p>

<pre><code>INSTRUCTIONS = ""I""
CATERING = ""C""
PACKAGES = ""P"" 


    def menu():
        userInput = True 
        while userInput != False:
            print(""Instructions
                   Catering
                    Packages"")
            userInput = input(""&gt;&gt;&gt;"")

        if userInput == INSTRUCTIONS:
            instructions()
        elif userInput == CATERING:
            Catering()
        elif userInput == PACKAGES:
            Packages()
        else:
             print(""Error"")
</code></pre>

<p>Thank you </p>
","<python>"
"23318717","2","23318449","<p>You can't pass another class to the <code>OrderForm</code> constructor and have it subclass that class. You can, however, provide it when you call <code>type</code>. </p>

<pre><code>return type('OrderForm', (Form, StaticForm), form_fields)
</code></pre>

<p>If <code>StaticForm</code> subclasses <code>Form</code> this can be further simplified. </p>

<pre><code>return type('OrderForm', (StaticForm,), form_fields)
</code></pre>
",""
"23318727","1","","<p>Here's what I have:</p>

<pre><code>r = requests.get(""http://www.cnn.com/"")
htmlelement = lxml.html.fromstring(r.text)
html = lxml.html.tostring(htmlelement)
tree = lxml.etree.fromstring(html)
print tree.xpath('//*[@id=""cnn_maintt1imgbul""]/div/div[2]/div/h1/a')
</code></pre>

<p>I thought xml.html corrected the broken html?</p>

<p>The error is: </p>

<blockquote>
  <p>XMLSyntaxError: Opening and ending tag mismatch: link line 32 and head, line 75, column 8</p>
</blockquote>

<p>Thanks!</p>
","<python><lxml>"
"23318766","2","23318727","<p>I don't understand why you're trying to reparse the content after getting this far:</p>

<pre><code>&gt;&gt;&gt; htmlelement = lxml.html.fromstring(r.text)
</code></pre>

<p>Because at this point you can simply apply your xpath expression:</p>

<pre><code>&gt;&gt;&gt; results = htmlelement.xpath('//*[@id=""cnn_maintt1imgbul""]/div/div[2]/div/h1/a')
&gt;&gt;&gt; results
[&lt;Element a at 0x1113a1f50&gt;]
&gt;&gt;&gt; print lxml.html.tostring(results[0])
'&lt;a href=""/2014/04/26/world/asia/south-korea-ship-sinking/index.html?hpt=hp_t1"" target=""""&gt;SOUTH KOREAN PRIME MINISTER RESIGNS&lt;/a&gt;'
</code></pre>

<p>I believe your problem is that <code>lxml.html.tostring()</code> still generates HTML, which you then try to parse with the XML parser.</p>
",""
"23318787","1","","<p>I need to create a function without the use of <code>itertools</code> which will create a permutation list of tuples with a given set of anything.</p>

<p>Example:</p>

<p><code>perm({1,2,3}, 2)</code> should return <code>[(1, 2), (1, 3), (2, 1), (2, 3), (3, 1), (3, 2)]</code> </p>

<p>This is what i got:</p>

<pre><code>def permutacion(conjunto, k):
    a, b = list(), list()
    for i in conjunto:
        if len(b) &lt; k and i not in b:
            b.append(i)

    b = tuple(b)
    a.append(b)
    return a
</code></pre>

<p>I know this doesn't do anything, it will add the first combination and nothing else.</p>
","<python><permutation>"
"23318813","2","23318597","<p>The chunk</p>

<pre><code>stat = stat.strip()
initHydraHeads = []
for i in range(len(stat)):
    initHydraHeads.append(int(stat[i]))
</code></pre>

<p>is broken. You iterate over string which contain spaces among digits. And tese spaces break <code>int()</code> conversion. It's better to use something like this:</p>

<pre><code>heads = [int(x) for x in stat.split()]
</code></pre>

<p>thus by the way you'll get not only <em>digits</em> but whole <em>numbers</em>.</p>
",""
"23318824","2","23318715","<p>If you are using python2.x, use <code>raw_input()</code> instead of <code>input()</code>.</p>

<pre><code>def menu():
    mybool == True

    userInput = input(""Instructions\nCatering\nPackages\n&gt;&gt;&gt; "")
    b = userInput.lower()[0]
    if b == 'a':
        mybool = True
    elif b == 'i':
        Instructions()
    elif b == 'c':
        Catering()
    elif b == 'p':
        if mybool == True:
            Packages()
        else:
            input('Here is where we display a prompt! ')
    else:
        print(""Error"")
</code></pre>

<p>Basically, this sets a variable to be <code>False</code>, and then gets input. If the input is <code>a</code>, then we set <code>myBool</code> to be <code>True</code>. If the user selects <code>p</code> and <code>myBool</code> is <code>True</code> (<code>a</code> has already been selected), it carries on. Otherwise, it displays a prompt.</p>
",""
"23318853","2","23318506","<p>You may have not created yet the virtual environment called ""flask"" (explained under the <em>Installing Flask</em> section), therefore the shebang line fails. I ran it without and with the virtenv and it works.</p>

<p>Check this topic to see if it helps: <a href=""https://stackoverflow.com/questions/18478030/flask-bin-pip-install-flask-0-9-results-in-no-such-file-or-directory/18478286#18478286"">flask/bin/pip install flask==0.9 results in &#39;no such file or directory&#39;</a>.</p>
",""
"23319190","2","23318715","<p>Here is the Code in a Loop::</p>

<pre><code>def menu():


 while True:
            u_in=raw_input(""Input Here:: "")
            u=u_in.lower()
            if u_in=="""":
                    continue

            elif u==""i"":
                     Instructions()
            elif u==""c"":
                    Catering()
            elif u==""p"":
                    Packages()
</code></pre>
",""
"23319278","2","23317927","<p>You Can Using this Code ::
for check the amicable numbers </p>

<pre><code>def sumPropDiv(n):
    """"""returns sum of proper divisors of n""""""
    dSum = 0
    for x in range(1, n/2 + 1):
        if n % x == 0:
            dSum += x
    return dSum

def amicSum(number):
    """"""finds the sum of all amicable numbers less than number, with number greater than 4.""""""
    answer = 0
    for x in range(4, number):
        if sumPropDiv(x) &gt; 4:
            if sumPropDiv(sumPropDiv(x)) == x and sumPropDiv(x) != x:
                answer += x
                print x, ""and"", sumPropDiv(x), ""are an amicable pair.""
    return answer

print amicSum(10000)
</code></pre>
",""
"23319297","2","23318440","<p>Posting on behalf of the OP who is new to the site and found the answer on their own.</p>

<pre><code>tileX = 0
tileY = 0
tile_dict = {0: pygame.image.load(""C:\Users\Software Development\Desktop\Tile00.png""),    1: pygame.image.load(""C:\Users\Software Development\Desktop\Tile01.png"")}

map00 = [[0,0,0,0],
    [1,1,1,1], [1,0,1,0]]

for x in map00:
for x in x:
    if x == 0:
        screen.blit(tile_dict[0], (tileX, tileY))
        tileX = tileX+16
    if x == 1:
        screen.blit(tile_dict[1], (tileX, tileY))
        tileX = tileX+16
tileX = 0
tileY += 16
</code></pre>
",""
"23319374","2","23318787","<p>As mentioned by @John in the comments, the code for <a href=""https://docs.python.org/2/library/itertools.html#itertools.permutations"" rel=""nofollow""><code>itertools.permutations</code></a> is:</p>

<pre><code>def permutations(iterable, r=None):
    # permutations('ABCD', 2) --&gt; AB AC AD BA BC BD CA CB CD DA DB DC
    # permutations(range(3)) --&gt; 012 021 102 120 201 210
    pool = tuple(iterable)
    n = len(pool)
    r = n if r is None else r
    if r &gt; n:
        return
    indices = range(n)
    cycles = range(n, n-r, -1)
    yield tuple(pool[i] for i in indices[:r])
    while n:
        for i in reversed(range(r)):
            cycles[i] -= 1
            if cycles[i] == 0:
                indices[i:] = indices[i+1:] + indices[i:i+1]
                cycles[i] = n - i
            else:
                j = cycles[i]
                indices[i], indices[-j] = indices[-j], indices[i]
                yield tuple(pool[i] for i in indices[:r])
                break
        else:
            return
</code></pre>

<p>Which works with your example using no external imports or recursive calls:</p>

<pre><code>for x in permutations([1,2,3],2):
    print x

(1, 2)
(1, 3)
(2, 1)
(2, 3)
(3, 1)
(3, 2)
</code></pre>
",""
"23326354","2","23317927","<p>Definition, <code>Amicable Numbers</code> from <a href=""http://en.wikipedia.org/wiki/Amicable_numbers"" rel=""nofollow"">Wikipedia</a>:</p>

<blockquote>
  <p>Amicable numbers are two different numbers so related that the sum of
  the proper divisors of each is equal to the other number. (A proper
  divisor of a number is a positive factor of that number other than the
  number itself.</p>
</blockquote>

<p>Break that down:</p>

<ol>
<li><code>two different numbers</code>   OK</li>
<li><code>the sum of the proper divisors of each</code>    OK</li>
<li><code>is equal to the other number</code> OK</li>
</ol>

<p>Then:</p>

<pre><code>def ami_check(x,y):
    if x==y: return False                              # 1
    sum_x=sum(e for e in range(1, x//2+1) if x%e==0)   # 2
    sum_y=sum(e for e in range(1, y//2+1) if y%e==0)   # 2
    return sum_x==y and sum_y==x                       # 3
</code></pre>
",""
"23328520","1","","<p>I am trying to create a program that takes a user integer input, creates a list and then
using recursion adds the list.  The problem is when I put in 6 it comes up with 15 and the
answer should be (0+1+2+3+4+5+6) = 21.  Why is the math wrong?  I think it must be somewhere in the indexing because if you leave off the 6 you do get 15.</p>

<pre><code>#Program which accepts a number from the user
#take the numbers 0 to the number input 
#and gives a total of the numbers

def main():
#Get the number from the user to define upper end of range
    num = int(input('Enter a non-negative integer: '))

#Create the list of numbers
numbers = list(range(0,num, 1))

#Get the sum of the list of numbers
my_sum = range_sum(numbers, 0, - 1)

#Display the total
print('The sum of 0 to', num, 'is: ', my_sum)

def range_sum(num_list, start, end):
if start &lt; end:
    return 0
else:
    return sum(num_list)
#call the main function
main() 
</code></pre>
","<python><recursion><indexing>"
"23328540","1","","<p>I am trying to upload some pngs as static resources of a Google App Engine application
There is a testImage.png file inside a folder called icons</p>

<p>In the app.yaml file I have specified</p>

<pre><code>- url: /icons/*.png
  static_dir: icons
  mime_type: image/png
</code></pre>

<p>But after the upload, if I try to Get http://.appspot.com/icons/testImage.png</p>

<p>I get a 404</p>
","<python><google-app-engine>"
"23328555","1","","<p>Using Flask, I'm trying to create a simple list of values POSTed from a web page.  The only POSTed data will be the values associated with 1 to as many as 60 checkboxes, all named ""state"". The following code only returns the first value in the list, but all values are required for further processing:</p>

<pre><code>.@app.route('/doCheck', methods = ['POST']) 
def doCheck():    
    d = request.form['state'] 
</code></pre>

<p>I tried using the method .getList() like so:</p>

<pre><code>    d = request.form.getList('state')
    return d
</code></pre>

<p>...but get this error:  AttributeError: 'ImmutableMultiDict' object has no attribute 'getList'</p>

<p>So I tried this instead:</p>

<pre><code>    d = getList(request.form)
    return d
</code></pre>

<p>...and got the error NameError: name 'getList' is not defined.</p>

<p>That seems to indicate I should include a method or class but which one?</p>
","<python><post><flask>"
"23328588","1","","<p>Sory for my bad english. Perhaps issue has been resolved, but unfortunately I have not found a solution for my question.
In general, there was a problem with the task. Can someone help me?
Using scapy and netinfo, I need create functionality which sends ping requests to ""8.8.8.8"" host out of the default network interface in the system (something like 'ethX', where X is number) and verifies that the requests have been
sent by capturing outgoing packets.</p>

<p>with this step, I partly understood:</p>

<pre><code>#!/usr/bin/python

import sys 
from scapy.all import *
import netinfo
class test: 
    host = ""8.8.8.8"" 

    def pingh(self): 
        self.host 
        pkt = Ether()/IP(dst=self.host,ttl=(1,3))/ICMP() 
        ans,unans = srp(pkt,iface=""eth0"",timeout=2) 
        ans.summary(lambda (s,r): r.sprintf(""%Ether.src% %IP.src%"") ) 

r = test()
print ""request from ping "" 
r.pingh() 
</code></pre>

<p>but at the next step I was stuck:</p>

<p>Do the same for 'lo' and 'ethX' interfaces simultaneously (use standard 'threading' module).
Captured results should be collected into dictionary which has the following structure:
{'iface1': list_of_captured_packets, 'iface2': list_of_captured_packets, ...}. Modification of this dictionary should be thread-safe. Modify the test class by adding a test which checks that resulting dictionary contains both - 'lo' and 'ethX' interfaces as keys.
P. S.
Don't let me die a fool :)</p>
","<python><multithreading><dictionary><scapy>"
"23328626","2","23328520","<p>This is a relatively simple function to implement either recursively:</p>

<pre><code>def recursive(n):
    if n == 1:
        return n
    return n + recursive(n - 1)
</code></pre>

<p>or iteratively:</p>

<pre><code>def iterative(n):
    return sum(range(n + 1)) # note n + 1 - range excludes the stop argument
</code></pre>

<p>which is equivalent to:</p>

<pre><code>def iterative_longhand(n):
    total = 0
    for i in range(n + 1):
        total += i
    return total
</code></pre>

<p>or, if a list is a necessity:</p>

<pre><code>def recursive_list_sum(nums):
    if nums:
        return nums[0] + recursive_list_sum(nums[1:])
    return 0

recursive_list_sum(list(range(n + 1)))
</code></pre>

<p>Your title says ""using recursion"", but none of your functions call themselves. You are using recursion neither to build the list nor to add up its contents. This function:</p>

<pre><code>def range_sum(num_list, start, end):
    if start &lt; end:
        return 0
    else:
        return sum(num_list)
</code></pre>

<p>called like:</p>

<pre><code>range_sum(numbers, 0, - 1)
</code></pre>

<p>is just <code>sum(num_list)</code>, as <code>start &gt; end</code>. It is not clear what you are trying to achieve - if it should be recursive, there should be a call to <code>range_sum</code> inside it. </p>
",""
"23328645","2","23328520","<p>Using tail recursion:</p>

<pre><code>def range_sum(nums, sum=0):
    if not nums:
        return sum
    sum += nums.pop()
    return range_sum(nums, sum)
</code></pre>
",""
"23328652","1","","<pre><code>class marcos_artwork(osv.osv):
    def _check_appraisal_price(self, cr, uid, ids, context=None):
        record = self.pool.get('appraisal_price')
        if record&lt;0:
            return False
        return True

    """"""artwork class""""""
    _name = 'marcos.artwork'
    _columns = {
        'name': fields.char('Artwork',size=32,required=True),
        'description': fields.char('Description',size=200),
        'appraisal_price': fields.integer('Appraisal price' ),
        'createArtWork': fields.integer('Year of creation'),
        'award': fields.boolean('Award'),
        'barcode': fields.integer('Barcode'),
        'commission': fields.integer('Commission',size=10),
        'author_ids': fields.many2one('marcos.author', 'Author'),
        'typeartwork_ids': fields.many2one('marcos.artwork_type', 'Artwork Type'),
        'owner_ids': fields.many2one('marcos.owner','Owner'),
        'style_ids': fields.many2one('marcos.style','Style'),
        'lots_ids': fields.many2many('marcos.lots','artworks_lots_form_rel','id_artwork','id_lot','Artworks'),
    }
    _defaults = {
        'award': lambda *a: False,
    }

    _sql_constraints = [
        ('name_uniqe', 'unique(name)', 'only equals name!'),
        ('barcode_uniqe', 'unique(barcode)', 'only equals barcode!')
    ]

    _constraints = [(_check_appraisal_price, 'Error: Length must be Positive', ['appraisal_price'])]

marcos_artwork()
</code></pre>

<p>When I want to install the module, I get shown this error:</p>

<pre><code>-cannot concatenate 'str' and 'function' object...
</code></pre>

<p>My function is for checking that the appraisal price is positive.</p>

<p>Can anybody help me?</p>
","<python><openerp>"
"23328667","2","23328520","<p>There is no recursive call in the code. You are using the sum function, which comes defined in Python.</p>
",""
"23328672","1","","<p>I read an email file in python and i want to do something if file name is utf-8.</p>

<p>I use <strong>part.get_filename()</strong> function and it return something like this [('filename','asci')] it is tuple in a list object.</p>

<p>Is there any function to get Encoding type ?</p>
","<python>"
"23328699","2","23328555","<p>The method is <a href=""http://werkzeug.pocoo.org/docs/datastructures/#werkzeug.datastructures.MultiDict.getlist"" rel=""nofollow""><code>getlist</code></a>, without a capital L:</p>

<pre><code>states = request.form.getlist('state')
</code></pre>
",""
"23328708","1","","<p>I was trying to do this using arrays, but my lack of any programming skills made that difficult. So here's to trying something else.</p>

<p>I have a program:</p>

<pre><code>for x in range (0,N2):
    I=1 #resets the variables
    Q=0
    U=0
    for x in range (0,N):
        theta= 90+randint (-dtheta,dtheta) #random component 
        Q0=Q
        U0=U
        I0=I
        I=(I0*cosh(dTp)+S*sinh(dTp))*exp(-dT) #reuses P from previous run through
        Q=(Ip*cos(2*theta)+Q0)*exp(-dT)
        U=(Ip*sin(2*theta)+U0)*exp(-dT)
        P=100*sqrt(Q**2+U**2)/I
        print 'x=', x, 'P=', P
</code></pre>

<p>So, the program goes through the complicated equations to get a P-value, and loops through those equations <code>N</code> number of times. Then it changes some variables randomly, and goes through the process <code>N2</code> number of times.</p>

<p>What I am trying to do: every <code>N2</code> time it hits a <code>N</code> value, I want the average of those values.</p>

<p>This is what the program (printing <code>x</code> and <code>P</code>) currently prints.</p>

<pre><code>x=0 P= 0.666656790299
x=1 P= 1.33305129414
x=2 P= 1.99135189726
x=3 P= 2.65356540458
x=4 P= 3.31718464722
x=5 P= 3.94383330744
x=6 P= 4.57470649236
x=7 P= 5.22041300059
x=8 P= 5.87783977662
x=9 P= 6.53297448834
x=0 P= 0.666656790299
x=1 P= 1.33244225853
x=2 P= 1.96631331155
x=3 P= 2.6285933052
x=4 P= 3.2901846442
x=5 P= 3.95565476517
x=6 P= 4.61500717059
x=7 P= 5.27548752021
x=8 P= 5.87881617052
x=9 P= 6.53895040683
</code></pre>

<p>where N2=2 and N=10. Do you see how there are two values like .66 (<code>x=0</code>)? And two like 6.5 (<code>x=9</code>)? I want to be able to have the average of all the numbers that have the same N value. So, the average of all the x=0 values (~.66) the x=1 values (~1.33) all the way to x=9 values (~6.65). </p>

<p>The end goal is to graph all these averages versus N. </p>

<p>Any help would be amazing, because I know next to nothing on programming.</p>
","<python><python-2.7><average><nested-loops>"
"23328803","2","23328652","<p>I don't know this specific framework. but I guess from the code It's some kind of ""orm"" style class. mapping some behavior to a db/table of some sort. Really hard to tell without the full stacktrace but I believe that the error is that your are passing the <code>__check_appraisal_price</code> function as reference and not the result of the function - that would be something like <code>_check_appraisal_price(arg,arg2, etc)</code></p>
",""
"23328821","2","23328672","<p>It's returning already the file type so You can handle it like this </p>

<pre><code>file1 = part.get_filename()
fileEncode = file[1]
</code></pre>

<p>so the encoding type will be stored in fileEncode </p>

<p>Hopefully that helps </p>
",""
"23328861","1","","<p>I am making a small program in Python (PyGTK) that prints out a calendar (Gregorian) for a year the user inputs.</p>

<p>Here is my code:</p>

<pre><code>#!/usr/bin/env python

import pygtk, gtk, subprocess
pygtk.require(""2.0"")

class Base:
    def printing(self, widget):
        text = self.textbox.get_text()
        printingit = ""cal -y %s | lpr"" % (text)
        process = subprocess.Popen(printingit.split(), stdout=subprocess.PIPE)
        output = process.communicate()[0]   

    def __init__(self):
            self.win = gtk.Window(gtk.WINDOW_TOPLEVEL)
            self.win.set_position(gtk.WIN_POS_CENTER)
            self.win.set_size_request(350, 200)
        self.win.set_resizable(False)
        self.win.set_title(""Calendar"")
        self.win.connect('destroy',lambda w: gtk.main_quit())

        self.textbox = gtk.Entry()
        self.textbox.set_size_request(70, 30)

        self.lable = gtk.Label(""Year:"")

        self.button = gtk.Button(""Print"")
        self.button.set_size_request(60, 45)
        self.button.connect(""clicked"", self.printing)

        box = gtk.Fixed()
        box.put(self.lable, 160, 25)
        box.put(self.textbox, 140, 40)
        box.put(self.button, 145, 100)

        self.win.add(box)
        self.win.show_all()

    def main(self):
        gtk.main()

if __name__ == ""__main__"":
    base = Base()
    base.main()
</code></pre>

<p>It's not working when actually printing the command <code>cal -y %s | lpr % (text)</code>. I have made it so it replaces the textbox's text with the final command it should get and it changes to what I want it to be <code>cal -y 2015 | lpr</code>. I tried just putting that into terminal and it worked as usual, it's confusing me a lot!</p>

<p>I ran the program in terminal and this is the message I recieve when it tries to print:</p>

<pre><code>Usage: cal [general options] [-hjy] [[month] year]
   cal [general options] [-hj] [-m month] [year]
   ncal [general options] [-bhJjpwySM] [-s country_code] [[month] year]
   ncal [general options] [-bhJeoSM] [year]
General options: [-NC3] [-A months] [-B months]
For debug the highlighting: [-H yyyy-mm-dd] [-d yyyy-mm]
</code></pre>

<p>If anyone understands why this is happening I would be extremely grateful! Thank you in advance =D</p>

<ul>
<li>Harry</li>
</ul>
","<python><subprocess><pygtk><lpr>"
"23328887","2","23328708","<p>I'm still not sure where in the loop you are requesting to average the value.</p>

<p>Put a counter variable outside of that.  Count the times you calculate P.  Then have a sum_p variable to maintains the total values of all P's calculated.</p>

<p>Then average is just sum_p/cnt.</p>

<p>When you want to start tracking a new average, you would set cnt = 0 and sum_p = 0.  We have cnt for free with N.</p>

<pre><code>for x in range (0,N2):
    I=1 #resets the variables
    Q=0
    U=0
    sum_p = 0
    for x in range (0,N):
        theta= 90+randint (-dtheta,dtheta) #random component 
        Q0=Q
        U0=U
        I0=I
        I=(I0*cosh(dTp)+S*sinh(dTp))*exp(-dT) #reuses P from previous run through
        Q=(Ip*cos(2*theta)+Q0)*exp(-dT)
        U=(Ip*sin(2*theta)+U0)*exp(-dT)
        P=100*sqrt(Q**2+U**2)/I
        sum+p += P
        print P
    print 'Avg', sum_p//N
</code></pre>

<p>I'm not sure why you are creating a duplicate copy of Q,U,I.  Instead of just using the previous copy in the calculation.  This is perfectly valid, it uses the old value and sets the new value.</p>

<pre><code>        I=(I*cosh(dTp)+S*sinh(dTp))*exp(-dT) #reuses P from previous run through
        Q=(Ip*cos(2*theta)+Q)*exp(-dT)
        U=(Ip*sin(2*theta)+U)*exp(-dT)
</code></pre>
",""
"23328908","1","","<p>I am trying to modify Brandon Rhodes code <a href=""https://bitbucket.org/brandon/pycon2010-mighty-dictionary/src/ebd9eb16d203182cb366eb7db23bcd4e806da9f3/figures/_dictinfo.py?at=default"" rel=""nofollow"">Routines that examine the internals of a CPython dictionary</a> so that it works for CPython 3.3.</p>

<p>I believe I have translated this struct successfully.</p>

<pre><code>typedef PyDictKeyEntry *(*dict_lookup_func)
    (PyDictObject *mp, PyObject *key, Py_hash_t hash, PyObject ***value_addr);

struct _dictkeysobject {
    Py_ssize_t dk_refcnt;
    Py_ssize_t dk_size;
    dict_lookup_func dk_lookup;
    Py_ssize_t dk_usable;
    PyDictKeyEntry dk_entries[1];
};
</code></pre>

<p>I think the following looks good now:</p>

<pre><code>from ctypes import Structure, c_ulong, POINTER, cast, py_object, CFUNCTYPE

LOOKUPFUNC = CFUNCTYPE(POINTER(PyDictKeyEntry), POINTER(PyDictObject), 
                       py_object, c_ulong, POINTER(POINTER(py_object)))

class PyDictKeysObject(Structure):
""""""A key object""""""
_fields_ = [
    ('dk_refcnt', c_ssize_t),
    ('dk_size', c_ssize_t),
    ('dk_lookup', LOOKUPFUNC),
    ('dk_usable', c_ssize_t),
    ('dk_entries', PyDictKeyEntry * 1),
]

PyDictKeysObject._dk_entries = PyDictKeysObject.dk_entries
PyDictKeysObject.dk_entries = property(lambda s: 
    cast(s._dk_entries, POINTER(PyDictKeyEntry * s.dk_size))[0])
</code></pre>

<p>This line of code now works, where <code>d == {0: 0, 1: 1, 2: 2, 3: 3}</code>:</p>

<pre><code>obj = cast(id(d), POINTER(PyDictObject)).contents  # works!!`
</code></pre>

<p>Here is my translation from the <a href=""http://hg.python.org/cpython/file/3.3/Include/dictobject.h#l23"" rel=""nofollow"">C struct</a> PyDictObject:</p>

<pre><code>class PyDictObject(Structure):  # an incomplete type
    """"""A dictionary object.""""""

def __len__(self):
    """"""Return the number of dictionary entry slots.""""""
    pass

def slot_of(self, key):
    """"""Find and return the slot at which `key` is stored.""""""
    pass

def slot_map(self):
    """"""Return a mapping of keys to their integer slot numbers.""""""
    pass

PyDictObject._fields_ = [
    ('ob_refcnt', c_ssize_t),
    ('ob_type', c_void_p),
    ('ma_used', c_ssize_t),
    ('ma_keys', POINTER(PyDictKeysObject)),
    ('ma_values', POINTER(py_object)),  # points to array of ptrs
]
</code></pre>
","<python><c><python-3.x><dictionary><ctypes>"
"23328912","1","","<p>Wasn't sure how to search for this so just decided to ask here.
How do I get the output list to display the number sets vertically?? I'm in 3.3</p>

<pre><code>ROWS = 5
COLS = 2

def main():
    num1 = int(input('Type a whole number and press ENTER: '))
    values = [[10, 0],
              [13, 0],
              [36, 0],
              [74, 0],
              [22, 0]]

    for row in values:
        row[1] = row[0] + num1

    display(values)

def display(values):
    print(values)

    input('press enter to continue')

main()
</code></pre>
","<python>"
"23328927","2","23328708","<pre><code>sums = [0] * N

for x in range (N2):
    I = 1 #resets the variables
    Q = 0
    U = 0
    for x in range (N):
        theta = 90 + randint(-dtheta, dtheta) #random component 
        #you don't need to copy these variables, they're redundant
        #Q0=Q
        #U0=U
        #I0=I

        #reuse the P-value from previous iteration
        I = (I * cosh(dTp) + S * sinh(dTp)) * exp(-dT)
        Q = (Ip * cos(2 * theta) + Q) * exp(-dT)
        U = (Ip * sin(2 * theta) + U) * exp(-dT)
        P = 100 * sqrt(Q**2 + U**2) / I
        print P

        #add the value of P to the corresponding index at x in sums[]
        sums[x] += P

#this is called a list comprehension
#it is a nicer way of looping over an iterable object (like a list)
avgs = [n / float(N2) for n in sums]
</code></pre>
",""
"23328944","2","23328912","<p>You can iterate through the elements of <code>values</code> (which are lists), and print a new-line on each iteration:</p>

<pre><code>for row in values:
    print(row) # this will print a new-line after printing 'row'
</code></pre>
",""
"23328963","1","","<p>Dear happy Python programmers,</p>

<p>I have just began to use wxpython and I think it is a quite cool tool. My problem is relatively simple. I am trying to plot graphs using matlibplot plot function from a wx.panel window (the button I call ""Plot""). When I press ""Plot"" it should open a new window and make plot inside. It does the right thing, but my original panel is suddenly <strong>inactive</strong> and I can not press or see any buttons. However, when I close the matlibplot window my panel becomes active again and I can make another graph, but this is not the way I want. I want to <strong>keep</strong> all the previous graph windows open and close them only if I want it to. </p>

<p>The code below seems long, but it is very simple: You can either plot a polynomial function or exp function. The graph is in matlibplot Python style. You can try to run it and see for yourself what I mean with inactive window. </p>

<p>Does anybody know how I can keep the main panel active at all times and just keep plotting graphs?</p>

<p>Cheers happy people :-)</p>

<pre><code>import wx
import numpy as np
import matplotlib.pyplot as plt 

class ExamplePanel(wx.Panel):
    def __init__(self, parent):
        wx.Panel.__init__(self, parent)

        # the combobox Control
        self.mytext = wx.StaticText(self, label="""", pos=(20,50))
        self.mytext.SetForegroundColour(wx.BLUE)
        self.funcs = [""y=2x^2+3"",""y=exp(2x+3)""]
        self.sampleList = ['polynomial', 'exponential']
        self.lblhear = wx.StaticText(self, label=""Function"", pos=(20,20))
        self.edithear = wx.ComboBox(self, pos=(100, 20), size=(95, -1), choices=self.sampleList, style=wx.CB_DROPDOWN)
        self.edithear.Bind(wx.EVT_COMBOBOX, self.EvtComboBox)

        # A button
        self.button1 = wx.Button(self, label=""Plot"", pos=(20,80))
        self.button1.Bind(wx.EVT_BUTTON, self.OnClick1)

    def EvtComboBox(self, event): 
        self.data = np.linspace(0,10,100)
        if event.GetString() == self.sampleList[0]:
            self.mytext.SetLabel(self.funcs[0])
            self.yfun=2*self.data**2+3
        elif event.GetString() == self.sampleList[1]:
            self.mytext.SetLabel(self.funcs[1])
            self.yfun=np.exp(2*self.data+3)
        else: 
            return()
        return(self.yfun)

    def OnClick1(self, event):
        plt.figure(1, figsize=(7,5))
        plt.plot(self.data, self.yfun, 'b-')
        plt.tick_params(axis=""both"", labelsize=15)
        plt.xlabel(r'$x$', fontsize=15)
        plt.ylabel(r'$y$', fontsize=15)
        plt.show()

app = wx.App(redirect=True)
frame = wx.Frame(None, title=""A Simple Plotter"", pos=(0, 45), size=(280,120))
ExamplePanel(frame)
frame.Show()
app.MainLoop()
</code></pre>
","<python><wxpython>"
"23329034","1","","<p>Hello I'm trying to run <strong>twisted</strong> along with python but python cannot find <strong>twisted</strong>. </p>

<p>I did run <strong>$pip install twisted</strong> successfully but it is still not available.</p>

<p><em>ImportError: No module named twisted.internet.protocol</em></p>

<p>It seems that most people have <strong>$which python</strong>  at <strong>/usr/local/bin/python</strong> </p>

<p>but I get <strong>/Library/Frameworks/Python.framework/Versions/2.7/bin/python</strong> </p>

<p>May this be the issue? If so, how can I change the PATH env?</p>
","<python><osx><python-2.7><twisted>"
"23329041","1","","<p>This a simple exercise, I think I have it right but maybe some minor syntax misunderstanding. Anyone have better way of doing this. Just want to iterate over the string and for each value change if necessary, then reprint string</p>

<pre><code>    alphabet = ""abcdefghijklmnopqrstuvwxyz""
message = ""g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.""


key = list(alphabet)
message = list(message)


for index, i in enumerate(message):
    if i in key:
        if key.index(i)  == 25:
            message[index] = ""b""

        elif key.index(i)  == 24:
            message[index] = ""a""

        elif key.index(i) &lt; 24:
            set_value = key[key.index(i) + 2]
            message[index] = set_value

for i in message:
    print i,
</code></pre>

<p>I have edited the code to provide the final answer to the problem/riddle.</p>

<p>Output:</p>

<pre><code>i   h o p e   y o u   d i d n t   t r a n s l a t e   i t   b y   h a n d .   t h a t s   w h a t   c o m p u t e r s   a r e   f o r .   d o i n g   i t   i n   b y   h a n d   i s   i n e f f i c i e n t   a n d   t h a t ' s   w h y   t h i s   t e x t   i s   s o   l o n g .   u s i n g   s t r i n g . m a k e t r a n s ( )   i s   r e c o m m e n d e d .   n o w   a p p l y   o n   t h e   u r l .
</code></pre>
","<python><arrays><string><for-loop>"
"23329048","1","","<p>I want to copy the content of a folder recursively without copying files that already exist. Also, the destination Folder already exists and contains files.
I tried to use <a href=""https://docs.python.org/2/library/shutil.html#shutil.copytree"" rel=""nofollow"">shutils.copytree(source_folder, destination_folder)</a>, but it does not do what I want.</p>

<p>I want it to work like this:  </p>

<p><strong>Before:</strong></p>

<ul>
<li>source_folder
<ul>
<li>sub_folder_1
<ul>
<li>foo</li>
<li>bar</li>
</ul></li>
<li>sub_folder_2</li>
</ul></li>
</ul>

<hr>

<ul>
<li>destination_folder
<ul>
<li>folder_that_was_already_there
<ul>
<li>file2.jpeg</li>
</ul></li>
<li>some_file.txt</li>
<li>sub_folder_1
<ul>
<li>foo</li>
</ul></li>
</ul></li>
</ul>

<p><strong>After:</strong></p>

<ul>
<li>destination_folder
<ul>
<li>folder_that_was_already_there
<ul>
<li>file2.jpeg</li>
</ul></li>
<li>some_file.txt</li>
<li>sub_folder_1
<ul>
<li>foo</li>
<li>bar</li>
</ul></li>
<li>sub_folder_2</li>
</ul></li>
</ul>
","<python><file><recursion><copy>"
"23329051","1","","<p>My problem is to classify documents given two training data <code>good_reviews.txt</code> and <code>bad_reviews.txt</code>. So to start I need to load and label my training data where every line is a document itself which corresponds to a review. So my main task is to classify reviews (lines) from a given testing data.</p>

<p>I found a way how to load and label names data as follow:</p>

<pre><code>from nltk.corpus import names
names = ([(name, 'male') for name in names.words('male.txt')] +
         [(name, 'female') for name in names.words('female.txt')])
</code></pre>

<p>So what I want to have is a similar thing which labels <code>lines</code> and not <code>words</code>.
I am expecting that the code would be something like this which of course doesn't work since <code>.lines</code> is an invalid syntax:</p>

<pre><code>reviews = ([(review, 'good_review') for review in reviews.lines('good_reviews.txt')] +
           [(review, 'bad_review') for review in reviews.lines('bad_reviews.txt')])
</code></pre>

<p>and I would like to have a result like this:</p>

<pre><code>&gt;&gt;&gt; reviews[0]
('This shampoo is very good blablabla...', 'good_review')
</code></pre>
","<python><nltk><corpus>"
"23329066","2","23329041","<p>This code:</p>

<pre><code>letters = [] # create empty list

for char in message:
    letters = [char] # replace letters with new list, containing only char
</code></pre>

<p>will leave <code>letters</code> as a list with a single element; the last <code>char</code> in <code>message</code>. If you want the whole of <code>message</code> as a list, the minimal fix is:</p>

<pre><code>for char in message:
    letters.append(char) # adds to the end of the list, rather than replacing it
</code></pre>

<p>or you can simply do:</p>

<pre><code>letters = list(message)
</code></pre>
",""
"23329076","2","23329041","<p>You can just iterate over the string and add a new character to a ""result string"" (with the appropriate changes):</p>

<pre><code>result = """"

for c in message:
    if c == ""k"":
        result += ""m""
    elif c == ""o"":
        result += ""q""
    elif c == ""e"":
        result += ""g""
    else:
        result += c  # don't need changes, concatenate the same character

print result
</code></pre>
",""
"23329086","2","23329041","<p>Or just use replace:</p>

<pre><code>print(message.replace('k','m').replace('o','q').replace('e','g'))
</code></pre>
",""
"23329195","1","","<p>For example, this method:</p>

<pre><code>import pygame
import mapas

class ContenedoresPorCapa():

    def __init__(self, layers[]):
        self.mapasCapas = len(self.mapas.capas)
        for i in range(mapasCapas):
            return layers[i]
</code></pre>
","<python><arrays><init>"
"23329214","1","","<p>I have two programs both with a QTableWidget. I want to synchronize the tables over network automatically. I have no idea how to do this. I have used pyqt with socket it dosen't work. I have read a lot about <a href=""https://stackoverflow.com/questions/9956944/pyqt-socket-simple-chat-like-programming"">simple chat application like this</a>. I think that is not the way I need.</p>

<p>My program without any network code:</p>

<pre><code>import sys
from PyQt4 import QtGui, QtCore

class Window(QtGui.QMainWindow):
    def __init__(self, parent=None):

        QtGui.QMainWindow.__init__(self, parent)

        # Table
        header = [""Name"", ""Date"", ""Club""]

        self.Table = QtGui.QTableWidget(0, len(header))
        self.Table.setHorizontalHeaderLabels(header)
        self.Table.resizeColumnsToContents()

        # Layout
        layout = QtGui.QGridLayout()
        layout.addWidget(self.Table)

        self.tab_widget = QtGui.QTabWidget()
        self.tab_widget.updatesEnabled()

        tabs = [u""Overview""]
        for i,d in enumerate(tabs):
            widget = QtGui.QWidget()
            self.tab_widget.addTab(widget, d)
            print i, d
            if i == 0:
                widget.setLayout(layout)

        self.setCentralWidget(self.tab_widget)
        self.show()

        data = [""Name1"", ""Monday"", ""Club1""]

        self.Table.insertRow(0)

        # insert Data
        for i in range(len(data)):

            t = QtGui.QTableWidgetItem(data[i].decode(""utf8""))
            self.Table.setItem(0, i, t)

        self.Table.resizeColumnsToContents()                    

if __name__ == '__main__':
    app = QtGui.QApplication(sys.argv)
    prog = Window()
    prog.show()
    sys.exit(app.exec_())
</code></pre>
","<python><networking><pyqt>"
"23329222","2","23329195","<p>You don't need the <code>[]</code> in the parameter list:</p>

<pre><code>import pygame
import mapas

class ContenedoresPorCapa:
    def __init__(self, layers):
        self.mapasCapas = len(self.mapas.capas)
        for i in range(mapasCapas):
            return layers[i]
</code></pre>

<p>Also, note that <code>return</code>ing values from <code>__init__</code> methods of classes (constructors) is meaningless (and will produce a runtime <code>TypeError</code>, as Aशwini चhaudhary kindly pointed out).</p>

<p>Also the <code>()</code> at the end of the class definition is redundant.</p>

<p>Furthermore, this for loop will only iterate once and then return immediately:</p>

<pre><code>for i in range(mapasCapas):
    return layers[i]
</code></pre>

<p>Unless you describe what your goal is, it seems impossible to offer you any further guidance (other than strongly recommending to read something like <a href=""http://learnpythonthehardway.org"" rel=""nofollow"">http://learnpythonthehardway.org</a>).</p>
",""
"23329243","1","","<pre><code>grid = 0

if grid == 0:
    grid == 1
    print(""grid 0"")

elif grid == 1:
    print(""grid 1"")
    grid == 2
</code></pre>

<p>When first if statement is true, the second will become true as well.
Is there a <strong>statement</strong>, to skip the whole if structure otherwise i would have to split the if functions which would double the if statements.</p>
","<python>"
"23329280","1","","<p>I have following setup: I have an archer who can shoot arrows, which are always new instances of the class arrow and I have an instance of the class blackMonster. My Question is whether it is even possible or not to detect whether one of my arrow instances had a collision with this black monster instance ? And when it is possible how is it made ? I used to think so often and much about it, but I couldn't find a solution yet and it is getting really frustrating. Here is my code... Please don't judge it too hard I am about to work on it.</p>

<pre><code>from Tkinter import *
from PIL import ImageTk, Image

class App(Frame):
        def __init__(self, master=None):
                Frame.__init__(self, master, height=400, width=400)
                self.master = master
                self.master.bind('&lt;Shift_L&gt;', self.createArrow)
                self.charImg = ImageTk.PhotoImage(Image.open(""./Archer.gif""))
                self.charLabel = Label(self, image = self.charImg)
                self.charLabel.pack()
                self.down = False
                self.right = False
                self.left = False
                self.up = False
                self.x_coord = 200
                self.y_coord = 200
                self.pack_propagate(0)
                self.pack()
                self.monster = blackMonster(self)
                self.monster.createMonster(self.monster, 300, 300)
        def createArrow(self, event):
                self.arrow = Arrow(self)
                self.arrow.moveArrow(self.arrow, self.x_coord, self.y_coord + 15)
        def moveableImage(self):
                self.charLabel.place(y=self.y_coord, x=self.x_coord)
        def keyPressed(self, event):
                if event.keysym == 'Down':
                        self.down = True
                elif event.keysym == 'Right':
                        self.right = True
                elif event.keysym == 'Left':
                        self.left = True
                elif event.keysym == 'Up':
                        self.up = True
        def keyReleased(self, event):
                if event.keysym == 'Down':
                        self.down = False
                elif event.keysym == 'Right':
                        self.right = False
                elif event.keysym == 'Left':
                        self.left = False
                elif event.keysym == 'Up':
                        self.up = False
        def task(self):
                if self.down and self.y_coord &lt; 360:
                        self.y_coord += 10
                elif self.right and self.x_coord &lt; 370:
                        self.x_coord += 10
                elif self.left and self.x_coord &gt; 10:
                        self.x_coord -= 10
                elif self.up and self.y_coord &gt; 10:
                        self.y_coord -= 10
                root.after(20,self.task)
                self.moveableImage()

class Arrow(Frame):
        def __init__(self, master):
                Frame.__init__(self, master)
                self.arrowImage = ImageTk.PhotoImage(Image.open(""./arrow.gif""))
                Label(self, image=self.arrowImage).pack()
                self.damage = 20
        def moveArrow(self, arrow, xCoord, yCoord):
                arrow.place_forget()
                arrow.place(x = xCoord, y = yCoord)
                self.after(10, self.moveArrow, arrow, xCoord+5, yCoord)


class blackMonster(Frame):
        def __init__(self, master):
                Frame.__init__(self, master)
                self.monsterImage = ImageTk.PhotoImage(Image.open(""./monster.gif""))
                Label(self, image=self.monsterImage).pack()
                self.health = 100
        def createMonster(self, monster, x_Coord, y_Coord):
                monster.place(x = x_Coord, y = y_Coord)

root = Tk()
root.title(""Frametitel"")
app = App(master=root)
root.bind_all('&lt;Key&gt;', app.keyPressed)
root.bind_all('&lt;KeyRelease&gt;', app.keyReleased)
root.after(20, app.task)
</code></pre>

<p>app.mainloop()</p>
","<python><tkinter><collision-detection>"
"23329281","2","23329243","<p>The second statement will be skipped alone because you used elif instead of a second if. </p>
",""
"23329291","1","","<p>I'm wondering what kind of options there are for monitoring celery tasks from a browser, after they have been deployed to a worker?  </p>

<p>My current application stack is a flask app running inside twisted, using celery to run dozens to thousands of small background tasks (updating metadata in a repository, creating image derivatives, etc.)  I'm envisioning using ajax long-polling to monitor the status of the celery tasks  initiated by the user.  I'm using redis for the backend broker and results.</p>

<p>I see celery has some command line ways to monitor tasks, or <a href=""http://celery.readthedocs.org/en/latest/userguide/monitoring.html#flower-real-time-celery-web-monitor"" rel=""nofollow"">flower</a> for a web dashboard.  But if I wanted to see more detailed status from a particular task sent to celery, would it make more sense for that task to print / write to a log file, then long-poll that file for changes from the flask front-end?</p>

<p>At this point a user can say, ""update these 10,000 items"", the tasks are sent to celery, and the front-end very quickly says, ""job sent!"".  And the tasks do complete.  But I'd like to have the user navigate to ""/status"" and see the status of those 10,000 small jobs - even a scrolling log file would probably work.  </p>

<p>Any suggestions would be greatly appreciated.  Took a lot of head scratching to make it this far sketching things out, but I'm spinning my wheels figuring out exactly <strong>WHAT</strong> to long-poll from the user front-end.</p>
","<python><redis><flask><celery><long-polling>"
"23329302","2","23328861","<p>If you want to use shell syntax (pipe) in your command, you need to pass the command as as string to the <a href=""https://docs.python.org/2/library/subprocess.html#popen-constructor"" rel=""nofollow""><code>Popen</code></a> constructor, not as list. And you must use <code>shell=True</code>:</p>

<pre><code>output = subprocess.check_output(printingit, shell=True)
</code></pre>

<p>Without that, the executed command would be the same as:</p>

<p><code>cal '-y' 'text' '|' 'lpr'</code></p>

<p>But as you're getting part of the input from a text field, you shouldn't directly pass it tho a shell.</p>

<p>Alternatively, you can create the pipe yourself:</p>

<pre><code>lpr = subprocess.Popen('lpr', stdin=subprocess.PIPE, stdout=subprocess.PIPE)
process = subprocess.Popen(['cal', '-y', text], stdout=lpr.stdin)
output = lpr.communicate()
process.wait()
</code></pre>

<p>By the way, instead of using subprocess to invoke <code>cal</code> you could use the <a href=""https://docs.python.org/2/library/calendar.html"" rel=""nofollow""><code>calendar</code></a> module. <code>cal -y 2012</code> does the same as <code>calendar.calendar(2014)</code>, so you could replace your code with:</p>

<pre><code>cal = calendar.calendar(int(text))
process = subprocess.Popen(['lpr'], stdin=subprocess.PIPE, stdout=subprocess.PIPE)
output = process.communicate(cal)   # cal.encode(locale.getpreferredencoding(False)) for python3
</code></pre>
",""
"23329311","2","23329243","<p>First of all, <code>grid == 1</code> will <em>not</em> change the value of <code>grid</code>; it's only comparing it to <code>1</code>, obtaining a boolean value and then immediately throwing it away by not using it. To change the value of a variable, you need to use the <strong>assignment operator</strong> <code>=</code> (as opposed to the equality comparison operator <code>==</code>): for example <code>grid = 1</code>.</p>

<p>Also, there's nothing bad with using more <code>if</code>-s it it makes sense. In fact, I would recommended making your program work with as simple and straightforward logic as possible first before trying to ""optimize"" it or make it more compact.</p>

<p>Also, I would say modifying the value of a variable WHILE you are in the process of testing that variable using a chain of <code>if-elif-else</code>, is considered bad style because it makes your code more complicated and hard to reason about (to yourself and to others).</p>

<p><strong>And in any case</strong>, if the first <code>if</code> ""fails"", any subsequent <code>elif</code>s will not even be looked at, so basically you're forced to use multiple <code>if</code>s anyway in this case.</p>

<hr>

<p>As a bonus to get you inspired (and maybe even start reading something like <a href=""http://learnpythonthehardway.org"" rel=""nofollow"">http://learnpythonthehardway.org</a>), here's a demonstration of how <code>=</code> and <code>==</code> could also be used together:</p>

<pre><code># set `is_wet` to `True` if `precipitation` is ""raining"", otherwise `False
is_wet = (precipitation == ""raining"")
</code></pre>
",""
"23329314","1","","<p>I want to get name of the client that is trying to connect to server via Django, and I am stuck on this:</p>

<p>views.py</p>

<pre><code>def home(request):
    ime = request.META('REMOTE_HOST')
    return HttpResponse('Welcome, %s.' %ime)
</code></pre>

<p>and error is:</p>

<pre><code>Exception Type: TypeError
Exception Value: 'dict' object is not callable

**Traceback**
8. ime = request.META('REMOTE_HOST')
</code></pre>

<p>So, I don't get what the problem is.
I am still learning Django, btw. </p>
","<python><django><django-views>"
"23329327","2","23328540","<p>I don't think you need the /*.png for the url.  In your static_dir, whatever you put here must match a physical path in your project.  Hence, you must have something like</p>

<pre><code>[project-dir]/icons
</code></pre>

<p>folder that contains your png.</p>

<pre><code>   - url: /icons
     static_dir: icons
     mime_type: image/png
</code></pre>
",""
"23329328","2","23329243","<pre><code>if condition_a:
    statement_a
elif condition_b:
    statement_b:
else:
    default_statement
</code></pre>

<p>Only one of these conditions will EVER activate. In the case of:</p>

<pre><code>if i &gt; 1:
    do_stuff
elif i &gt; 1000:
    do_bigger_stuff
</code></pre>

<p>if <code>i==2000</code>, only the first statement will execute (<code>do_stuff</code>, not <code>do_bigger_stuff</code>)</p>

<p>Be aware in your example that <code>grid == 1</code> will not set <code>grid</code> to <code>1</code>, it will just evaluate <code>False</code> :) </p>
",""
"23329331","1","","<p>I am trying to get a correct way of fitting a beta distribution. It's not a real world problem i am just testing the effects of a few different methods, and in doing this something is puzzling me.</p>

<p>Here is the python code I am working on, in which I tested 3 different approaches:
1>: fit using moments (sample mean and variance).
2>: fit by minimizing the negative log-likelihood (by using scipy.optimize.fmin()).
3>: simply call scipy.stats.beta.fit()</p>

<pre><code>from scipy.optimize import fmin
from scipy.stats import beta
from scipy.special import gamma as gammaf
import matplotlib.pyplot as plt
import numpy


def betaNLL(param,*args):
    '''Negative log likelihood function for beta
    &lt;param&gt;: list for parameters to be fitted.
    &lt;args&gt;: 1-element array containing the sample data.

    Return &lt;nll&gt;: negative log-likelihood to be minimized.
    '''

    a,b=param
    data=args[0]
    pdf=beta.pdf(data,a,b,loc=0,scale=1)
    lg=numpy.log(pdf)
    #-----Replace -inf with 0s------
    lg=numpy.where(lg==-numpy.inf,0,lg)
    nll=-1*numpy.sum(lg)
    return nll

#-------------------Sample data-------------------
data=beta.rvs(5,2,loc=0,scale=1,size=500)

#----------------Normalize to [0,1]----------------
#data=(data-numpy.min(data))/(numpy.max(data)-numpy.min(data))

#----------------Fit using moments----------------
mean=numpy.mean(data)
var=numpy.var(data,ddof=1)
alpha1=mean**2*(1-mean)/var-mean
beta1=alpha1*(1-mean)/mean

#------------------Fit using mle------------------
result=fmin(betaNLL,[1,1],args=(data,))
alpha2,beta2=result

#----------------Fit using beta.fit----------------
alpha3,beta3,xx,yy=beta.fit(data)

print '\n# alpha,beta from moments:',alpha1,beta1
print '# alpha,beta from mle:',alpha2,beta2
print '# alpha,beta from beta.fit:',alpha3,beta3

#-----------------------Plot-----------------------
plt.hist(data,bins=30,normed=True)
fitted=lambda x,a,b:gammaf(a+b)/gammaf(a)/gammaf(b)*x**(a-1)*(1-x)**(b-1) #pdf of beta

xx=numpy.linspace(0,max(data),len(data))
plt.plot(xx,fitted(xx,alpha1,beta1),'g')
plt.plot(xx,fitted(xx,alpha2,beta2),'b')
plt.plot(xx,fitted(xx,alpha3,beta3),'r')

plt.show()
</code></pre>

<p>The problem I have is about the normalization process (<code>z=(x-a)/(b-a)</code>) where <code>a</code> and <code>b</code> are the min and max of the sample, respectively.</p>

<p>When I don't do the normalization, everything works Ok, there are slight differences among different fitting methods, by reasonably good.</p>

<p>But when I did the normalization, here is the result plot I got.</p>

<p><img src=""https://i.stack.imgur.com/Tw9RX.jpg"" alt=""Plot""></p>

<p>Only the moment method (green line) looks Ok.</p>

<p>The scipy.stats.beta.fit() method (red line) is uniform always, no matter what parameters I use to generate the random numbers.</p>

<p>And the MLE (blue line) fails.</p>

<p>So it seems like the normalization is creating these issues. But I think it is legal to have <code>x=0</code> and <code>x=1</code> in the beta distribution. And if given a real world problem, isn't it the 1st step to normalize the sample observations to make it in between [0,1] ? In that case, how should I fit the curve?</p>
","<python><curve-fitting><beta-distribution>"
"23329359","2","23329314","<p><code>request.META</code> is a dictionary, so you need to access the <code>REMOTE_HOST</code> value with its key.</p>

<p>Change to:</p>

<pre><code>ime = request.META['REMOTE_HOST'] # Note brackets not parens
</code></pre>
",""
"23329362","1","","<p>I am loading my Image file using Image.open(""image.tif""). Then i am using Image.load() to generate a pixelMap of the image. Then i am storing each pixel into an array. The following code describes this process. Then I want to create the ascii value of each pixel and store it in a string. So I going through each pixel in my pixel array and then change the pixel value to ascii value. However I am having an error because I am getting some pixel values greater than 250. How is this possible. Also, it is b/w image. What am I doing wrong?</p>

<pre><code>self.filename = filename
self.im = Image.open(filename)
self.pixelmap = self.im.load() #Loads the image as a map of pixels
self.arr = []
for i in range(self.im.size[0]):
    for j in range(self.im.size[1]):
    mypixel = self.pixelmap[i, j]
    self.arr.append(mypixel)


for i in msgFile.arr:
    self.message += str(unichr(int(i)))
</code></pre>
","<python><image><python-imaging-library><pixel><image-load>"
"23329380","1","","<p>I'm writing a program for a dice game (Pig). In the game, the player will roll a d6 until they decide to hold their score (passing to the computer) or until they roll a 1, which will automatically make it the computer's turn.</p>

<p>The issue I'm having is that I need the function for the computer's turn to loop ten times. I want the computer to roll the die ten times, where it will either roll a one and pass back to the player or it will hold after ten rolls. How do I get the computer to roll the die ten times without using a loop inside of Tk?</p>

<p>Here's the code:</p>

<pre><code>from Tkinter import *
from random import *

class App(Tk):
    def __init__(self):
        Tk.__init__(self)

        self.headerFont = (""courier new"", ""16"", ""bold"")

        self.title(""Pig, The Dice Game"")
        self.headers()
        self.rollDie()

    def headers(self):
        Label(self, text = ""Instructions"", font = self.headerFont).grid(columnspan = 4)
        Label(self, text = ""Text"", font = self.headerFont).grid(row = 1, columnspan = 4)

        Label(self).grid(row = 1, columnspan = 4)
        Label(self, text = ""The Game of Pig"", font = self.headerFont).grid(row = 2, columnspan = 4)

    def rollDie(self):
        self.btnRoll = Button(self, text = ""Roll The Die"")
        self.btnRoll[""state""] = 'active'
        self.btnRoll.grid(row = 3, columnspan = 4)
        self.btnRoll[""command""] = self.playerTurn

        self.btnHold = Button(self, text = ""Hold"")
        self.btnHold[""state""]= 'active'
        self.btnHold.grid(row = 4, columnspan = 4)
        self.btnHold[""command""] = self.compTurn

        self.btnPass = Button(self, text = ""Pass"")
        self.btnPass.grid(row = 5, columnspan = 4)
        self.btnPass[""command""] = self.compTurn

        Label(self, text = ""You Rolled:"").grid(row = 6, column = 0)
        self.lblYouRolled = Label(self, bg = ""#fff"", anchor = ""w"", relief = ""groove"")
        self.lblYouRolled.grid(row = 6, column = 1, columnspan = 1, sticky = ""we"")

        Label(self, text = ""Options:"").grid(row = 7, column = 0)
        self.lblOptions = Label(self, bg = ""#fff"", anchor = ""w"", relief = ""groove"")
        self.lblOptions.grid(row = 7, column = 1, sticky = ""we"")

        Label(self, text = ""Player One Turn Score:"").grid(row = 8, column = 0)
        self.lblPlayerOneTurnScore = Label(self, bg = ""#fff"", anchor = ""w"", relief = ""groove"")
        self.lblPlayerOneTurnScore.grid(row = 8, column = 1, sticky = ""we"")


    def playerTurn(self):
        self.oneTurnTotal = [0]
        self.oneRoll = randint(1,6)
        self.btnHold[""state""] = 'active'

        self.lblYouRolled[""text""] = self.oneRoll

        if self.oneRoll != 1:
            self.oneTurnTotal.append(self.oneRoll)
            self.lblOptions[""text""] = ""Roll again, or hold and pass the dice to Player Two.""
        else:
            self.lblOptions[""text""] = ""You rolled a 1! Click 'Pass' to pass your turn to the computer.""
            self.oneTurnTotal = [0]
            self.btnRoll[""state""] = 'disabled'
            self.btnHold[""state""] = 'disabled'


    def calculatePlayerOneTurnScore(self):
        turnScore = sum(self.oneTurnTotal)
        self.lblPlayerOneTurnScore[""text""] = turnScore



    def compTurn(self):

        self.compTurnTotal = [0]
        self.compRoll = randint(1,6)

        self.lblYouRolled[""text""] = self.compRoll

        if self.compRoll != 1:
            self.compTurnTotal.append(self.compRoll)
            self.lblOptions[""text""] = ""The computer will roll again.""

        else:
            self.lblOptions[""text""] = ""The computer rolled a 1! Its turn has ended.""
            self.compTurnTotal = [0]
            self.btnRoll[""state""] = 'active'

    def calculatePlayerTwoTurnScore(self):
        turnScore = sum(self.twoTurnTotal)
        self.lblPlayerTwoTurnScore[""text""] = turnScore


def main():
  app = App()
  app.mainloop()

if __name__ == ""__main__"":
  main()
</code></pre>
","<python><user-interface><tkinter><tk><dice>"
"23329409","2","23329291","<p>Try Jobstatic, which is extending Celery.</p>

<p>From project description:</p>

<p><a href=""http://policystat.github.io/jobtastic/"" rel=""nofollow"">Jobtastic</a> gives you goodies like:</p>

<ul>
<li>Easy progress estimation/reporting</li>
<li>Job status feedback</li>
<li>Helper methods for gracefully handling a dead task broker (delay_or_eager and delay_or_fail)</li>
<li>Super-easy result caching</li>
<li>Thundering herd avoidance</li>
<li>Integration with a celery <strong>jQuery plugin for easy client-side progress display</strong></li>
<li>Memory leak detection in a task run</li>
</ul>
",""
"23329450","1","","<pre><code>def pairwise(iterable):
    ""s -&gt; (s0,s1), (s1,s2), (s2, s3), ...""
    a, b = tee(iterable)
    next(b, None)
    return izip(a, b)
</code></pre>

<p>Given this, how would you get:</p>

<p>s -> (s0,s1,s2), (s1,s2,s3), (s2, s3,s4), ...</p>
","<python>"
"23329514","2","23329450","<pre><code>def triwise(iterable):
    a, b = tee(iterable)
    a, c = tee(iterable)
    next(b, None)
    next(c, None)
    next(c, None)
    return izip(a, b, c)
</code></pre>

<p>Should do what you want. At some point it probably makes sense to properly generalize this, but I leave that as an exercise to the reader:</p>

<pre><code>&gt;&gt;&gt; list(triwise(xrange(5)))
[(0, 1, 2), (1, 2, 3), (2, 3, 4)]
</code></pre>
",""
"23329525","1","","<p>This is extremely likely to be a duplicate of something, but my serach foo is failing me.</p>

<p>It is known that tuples are immutable, so you can't really change them. Sometimes, however, it comes in handy to do something to the effect of changing, say, <code>(1, 2, ""three"")</code> to <code>(1, 2, 3)</code>, perhaps in a similar vein to the <a href=""https://stackoverflow.com/a/5864399/13992"">Haskell record update syntax.</a> You wouldn't actually change the original tuple, but you'd get a <em>new</em> one that differs in just one (or more) elements.</p>

<p>A way to go about doing this would be:</p>

<pre><code>elements = list(old_tuple)
elements[-1] = do_things_to(elements[-1])
new_tuple = tuple(elements)
</code></pre>

<p>I feel that changing a tuple to a list however kind of defeats the purpose of using the tuple type for <code>old_tuple</code> to begin with: if you were using a list instead, you wouldn't have had to build a throw-away list copy of the tuple in memory per operation.</p>

<p>If you were to change, say, just the 3rd element of a tuple, you could also do this:</p>

<pre><code>def update_third_element(a, b, c, *others):
  c = do_things_to(c)
  return tuple(a, b, c, *others)

new_tuple = update_third_element(*old_tuple)
</code></pre>

<p>This would resist changes in the number of elements in the tuple better than the naive approach:</p>

<pre><code>a, b, c, d, e, f, g, h, i, j = old_tuple
c = do_things_to(c)
new_tuple = (a, b, c, d, e, f, g, h, j, j) # whoops
</code></pre>

<p>...but it doesn't work if what you wanted to change was the last, or the <em>n</em>-th to last element. It also creates a throw away list (<code>others</code>). It also forces you to name all elements up to the <em>n</em>-th.</p>

<p>Is there a better way?</p>
","<python><tuples>"
"23329557","2","23329525","<p>I would use <code>collections.namedtuple</code> instead:</p>

<pre><code>&gt;&gt;&gt; from collections import namedtuple

&gt;&gt;&gt; class Foo(namedtuple(""Foo"", [""a"", ""b"", ""c""])):
        pass

&gt;&gt;&gt; f = Foo(1, 2, 3)  # or Foo(a=1, b=2, c=3)
&gt;&gt;&gt; f._replace(a = 5)
Foo(a=5, b=2, c=3)
</code></pre>

<p><code>namedtuple</code>s also support indexing so you can use them in place of plain tuples.</p>

<p>If you must use a plain tuple, just use a helper function:</p>

<pre><code>&gt;&gt;&gt; def updated(tpl, i, val):
        return tpl[:i] + (val,) + tpl[i + 1:]

&gt;&gt;&gt; tpl = (1, 2, 3)
&gt;&gt;&gt; updated(tpl, 1, 5)
(1, 5, 3)
</code></pre>
",""
"23329589","1","","<p>I want to add a UDP receiver:</p>

<pre><code>from twisted.internet.protocol import DatagramProtocol
from twisted.internet import reactor

class UDP(DatagramProtocol):

    def datagramReceived(self, data, (host, port)):
    #Receive a string ""X Y"" and add to plot.    
    print ""Received %r from %s:%d"" % (data, host, port)

reactor.listenUDP(9999, UDP())
reactor.run()
</code></pre>

<p>To my existing matplotlib code that uses a GTKReactor:</p>

<pre><code>from matplotlib import use
use('GTK')
from matplotlib import pyplot
from matplotlib.backends import backend_gtk
from twisted.internet import gtk2reactor
gtk2reactor.install()

from twisted.internet import reactor, task

class TwistedGtkShow(backend_gtk.Show):
    running = False
    def mainloop(self):
        if not self.running:
            self.running = True
            reactor.run()

def onclick(event):
  print 'Clicked: %d, X=%d, Y=%d, Xdata=%f, Ydata=%f' % (event.button, event.x, event.y, event.xdata, event.ydata)

def onpress(event):
  print ""Pressed: "", event.key


def main():
    fig = pyplot.figure()
    pyplot.plot([1,2,3,4])
    pyplot.ylabel('Numbers')

    cid = fig.canvas.mpl_connect('button_press_event', onclick)
    cid = fig.canvas.mpl_connect('key_press_event', onpress)

    def proof():
        print 'Twisted!'
    task.LoopingCall(proof).start(3)

    TwistedGtkShow()()

if __name__ == '__main__':
    main()
</code></pre>

<p>But they are both none blocking? How can I run both of them and update the plot as well as respond to click events and potentially send UDP packets back?</p>
","<python><gtk><twisted>"
"23329630","1","","<p>Suppose all that need to be considered are only user defined functions and system modules.</p>

<p>I've created 2 modules based on it's logical structure, then I'm not sure what's next.</p>

<p>Say I put 10 functions in <code>fm1.py</code> and 8 functions in <code>fm2.py</code>. Functions in both <code>fm1.py</code> and <code>fm2.py</code> would need some system modules <code>m1</code> and <code>m2</code>, as long as some other user defined functions <code>f1()</code>, <code>f2()</code>.</p>

<p>What I do now is create another file <code>i1.py</code>, it imports system modules <code>m1</code> and <code>m2</code> and the definition of <code>f1()</code> and <code>f2()</code> are also included in this file. Then both <code>fm1.py</code> and <code>fm2.py</code> import <code>i1.py1</code> and finally a <code>main.py</code> imports <code>fm1.py</code> and <code>fm2.py</code>.</p>

<p>I ran <code>main.py</code> and no error occurred, however, I wonder the way I designed the dependency may not be the suggested way.</p>

<p>So, is there any suggestions or standards of module dependency design?</p>
","<python>"
"23329633","2","23329051","<p>If you're reading your own textfile, then there's nothing much to do with <code>NLTK</code>, you can simply use <code>file.readlines()</code>:</p>

<pre><code>good_reviews = """"""This is great!
Wow, it amazes me...
An hour of show, a lifetime of enlightment
""""""
bad_reviews = """"""Comme si, Comme sa.
I just wasted my foo bar on this.
An hour of s**t, ****.
""""""
with open('/tmp/good_reviews.txt', 'w') as fout:
    fout.write(good_reviews)
with open('/tmp/bad_reviews.txt', 'w') as fout:
    fout.write(bad_reviews)

reviews = []
with open('/tmp/good_reviews.txt', 'r') as fingood, open('/tmp/bad_reviews.txt', 'r') as finbad:
    reviews = ([(review, 'good_review') for review in fingood.readlines()] + [(review, 'bad_review') for review in finbad.readlines()])

print reviews
</code></pre>

<p>[out]:</p>

<pre><code>[('This is great!\n', 'good_review'), ('Wow, it amazes me...\n', 'good_review'), ('An hour of show, a lifetime of enlightment\n', 'good_review'), ('Comme si, Comme sa.\n', 'bad_review'), ('I just wasted my foo bar on this.\n', 'bad_review'), ('An hour of s**t, ****.\n', 'bad_review')]
</code></pre>

<p>If you're going to use the NLTK movie review corpus, see <a href=""https://stackoverflow.com/questions/21107075/classification-using-movie-review-corpus-in-nltk-python"">Classification using movie review corpus in NLTK/Python</a></p>
",""
"23329663","1","","<p>I have a ctypes Structure with dynamic allocated arrays i.e.:</p>

<pre><code>array_1d_double=npct.ndpointer(dtype=np.double,ndim=1,
                               flags='CONTIGUOUS')
class Test(Structure):
    _fields_ = (""x"", array_1d_double, ..)

test = Test()
do_some_init_in_c(  for example malloc)
</code></pre>

<p>If I print  test.x I get the following output:</p>

<pre><code>&lt;ndpointer_&lt;f8_1d_CONTIGUOUS object at 0x7f104dc0c3b0&gt;
</code></pre>

<p>The c structure looks roughly like this, </p>

<pre><code>structure Test_s{
    double *x;....
};
</code></pre>

<p>How is it possible to access this element like an numpy array?
Is it maybe necessary to allocate the arrays as np.arrays instead of using malloc? What would be the proper way to do this ? </p>
","<python><numpy><ctypes>"
"23329743","1","","<p>I am having problem with empty answer, code is here: </p>

<p>views.py</p>

<pre><code>def home(request):
    ime = request.META['REMOTE_HOST']
    return HttpResponse('Welcome, %s.' %ime)
</code></pre>

<p>and I am getting:</p>

<pre><code>Welcome, .
</code></pre>

<p>for answer. What seems to be the problem here?</p>
","<python><django><django-views>"
"23329781","2","23329743","<p><code>REMOTE_HOST</code> header is not mandatory. Try printing your <code>request.META</code> dictionary to see actually what's being passed on the HTTP headers. Or you can use a browser in development mode to see that.</p>
",""
"23329833","2","23329280","<p>You're using labels and place to represent the monster and arrow? The coding would be much easier if you used a canvas rather than labels. The canvas has methods to easily get the coordinates of objects that have been draw. Then it's it's nothing more than a little math. You get the current coordinates of the arrow, and you get the coordinates of the monster, then check if the coordinate of the tip of the arrow is inside the space taken up by the monster. You can get the coordinates of ana object using the <a href=""http://effbot.org/tkinterbook/canvas.htm#Tkinter.Canvas.bbox-method"" rel=""nofollow"">bbox</a> method. </p>
",""
"23329839","2","23329034","<p>By the path your giving for OS X python I'm guessing your a rev-or-so old on your OS X (leopard?) so I can't directly compare with my machine.</p>

<p>But, adding packages to the base OS X install is always a touchy thing, one check I would recommend is the permissions on any packages you add.  Do a <code>ls -l /Library/Python/2.7/site-packages/</code> and make sure everything has <code>r</code> rights (and <code>x</code> rights for directories) (I.E. <code>-rwxr-xr-x</code> or <code>drwxr-xr-x</code>).</p>

<p>I had a recent case where a <code>sudo pip</code> wouldn't set user read rights on installed packages, and I believe ""No module"" was the error I was getting when I tried to use them</p>

<p>Because adding packages is so touchy on OS X, there are tons of guide on the net to doing hand installs of python.  The first one I matched on a google is <a href=""http://wolfpaulus.com/jounal/mac/installing_python_osx/"" rel=""nofollow"">Installing / Updateing Python on OS X</a> (use at your own risk, I personally haven't followed that guide)</p>

<p>(... the 3rd part install system <a href=""http://brew.sh"" rel=""nofollow"">Brew</a> is a very common method for people to do automated installs of python as well)</p>
",""
"23329856","1","","<p>In the TCP client example:</p>

<pre><code>from twisted.internet import reactor, protocol


# a client protocol

class EchoClient(protocol.Protocol):
    """"""Once connected, send a message, then print the result.""""""

    def connectionMade(self):
        self.transport.write(""hello, world!"")

    def dataReceived(self, data):
        ""As soon as any data is received, write it back.""
        print ""Server said:"", data
        self.transport.loseConnection()

    def connectionLost(self, reason):
        print ""connection lost""

class EchoFactory(protocol.ClientFactory):
    protocol = EchoClient

    def clientConnectionFailed(self, connector, reason):
        print ""Connection failed - goodbye!""
        reactor.stop()

    def clientConnectionLost(self, connector, reason):
        print ""Connection lost - goodbye!""
        reactor.stop()


# this connects the protocol to a server runing on port 8000
def main():
    f = EchoFactory()
    reactor.connectTCP(""localhost"", 8000, f)
    reactor.run()

# this only runs if the module was *not* imported
if __name__ == '__main__':
    main()
</code></pre>

<p>I have a periodic task that needs to send data to the server. All the logic for the task is outside the Protocol and Factory. Is it bad form to pass around <code>f</code> and use <code>f.protocol.transport.write(""Something?"")</code>? </p>
","<python><twisted>"
"23329867","1","","<p>I made a program in python 2.7. I set up py2exe and made my program in to an executable file. I can run the .exe file perfectly fine. When I upload it on file hosting sites and people download it they aren't able to run it. The program closes instantly after the user clicks run. How can I fix this? All help is much appreciated. </p>

<p>Here is what my setup file looks like </p>

<pre><code>from distutils.core import setup
import py2exe


setup(console=['mole calc.py']) 
</code></pre>

<p>I tried it with import time as well </p>

<p>Here is the beginning of the program   </p>

<pre><code>from __future__ import division
while True:
    value= raw_input(""Welcome, chose the type of function you would like to use : Y = Moles to Particles, X = Particles to Moles, Z = Moles to Mass in Grams, C = Mass in Grams to Moles, V = Moles to Liters, B = Liters to moles "")


    if value in ['y', 'Y']:
            x= input (""Enter value of mole "")
            y=x*6.02*10**23
            print y
</code></pre>
","<python><python-2.7><cmd>"
"23329911","1","","<p>I have a text file with the format:</p>

<pre><code>356693

2013 46,  2013 67,  2013 47,  2013 63,  2013 59,  2013 76

Course Codes: MECN1001, MECN1003, CHEM1033, MATH1014, PHYS1014, PHYS1015

522021

2009 45,  2009 49,  2009 67,  2009 54,  2009 67,  2009 83,  2010 46,  2010 91,  2010 42,  2010 60,  2010 52,  2011 61,  2011 65,  2011 56,  2012 53,  2012 54,  2012 45,  2012 45,  2012 43,  2012 63,  2013 66,  2013 62,  2013 50,  2013 83,  2013 69,  2013 74,  2013 100

Course Codes: MECN1001, MECN1003, CHEM1033, MATH1014, PHYS1014, PHYS1015, MECN1001, MECN1003, MECN2011, ELEN2000, MATH2011, MECN1001, MECN2006, MECN2011, MECN2000, MECN2005, MECN2010, MECN2012, MECN2013, MECN2014, MECN2010, MECN2012, MECN2013, MECN3002, MECN3010, MECN3028, MATH3026

605417

2013 69,  2009 65,  2009 58

Course Codes: MECN1001, MECN1003, CHEM1033
</code></pre>

<p>Now I want to extract just the Course Codes lines and store them in a list. The problem I'm having is that my code is only printing the very last line. Here is my code:</p>

<pre><code>with open(""Test.txt"", ""r"") as textfile:
    for line in textfile:
        if len(line.strip()) &gt; 6:
            Courses = line.split()
    print(Courses)  
</code></pre>
","<python><python-3.x>"
"23329946","1","","<p>I want to add ""watchers"" to some variables used by a library.
They are of type <code>collections.deque</code>, <code>dict</code>, <code>weakref.WeakSet</code>,
and <code>list</code>.</p>

<p>Anytime that an item is added/appended or popped to/from them I'd like to generate
a log message.</p>

<p>I'd like to minimize the changes to the original code:</p>

<ul>
<li><p>I don't want to add log messages in all of the places where the
variables are accessed and modified.</p></li>
<li><p>I don't want to create my own classes that inherit from the original
classes (e.g. <code>class InstrumentedDeque(collections.deque): ...</code>)</p></li>
</ul>

<p>Instead, and this is the question, is it possible to create a single
generic class (or wrapper/decorator) that works for all of the collection
objects above, so that the only place where changes are needed is where
the objects are originally created. If this is the original code, with 2
vars to ""watch"": <code>self.scheduled</code> and <code>self.ready</code>...</p>

<pre><code>def __init__(self):
    self.scheduled = []
    self.ready = collections.deque()
</code></pre>

<p>then the only changes required would be something like...</p>

<pre><code>def __init__(self):
    self.scheduled = MyLogger([], var_name='scheduled')
    self.ready = MyLogger(collections.deque(), var_name='ready')
</code></pre>

<h1>without instrumentation</h1>

<pre><code>test = Test()

test.add(1)
test.add(2)
test.pop()
</code></pre>

<h1>after instrumentation changes</h1>

<pre><code>test = Test()

test.add(1)
***instrumentation output. scheduled: [1]
***instrumentation output. ready: deque([1])

test.add(2)
***instrumentation output. scheduled: [1, 2]
***instrumentation output. ready = deque([1, 2])

test.pop()
***instrumentation output. scheduled: [2]
***instrumentation output. ready: deque([2])
</code></pre>

<p>where the example <code>add()</code> and <code>pop()</code> would look something like this...</p>

<pre><code>    def add(self, val):
        heapq.heappush(self.scheduled, val)
        self.ready.append(val)

    def pop(self):
        heapq.heappop(self.scheduled)
        self.ready.popleft()
</code></pre>

<p>I've tried creating a ""wrapper"" class and played with
<code>__new__</code>, <code>__init__</code>, <code>__getattr__</code> but haven't been able
to get this to work. Something like this...</p>

<pre><code>class MyLooger:
    def __new__(cls):
        # what to do?

    def __init__(self):
        # what to do?

    def __getattr__(self, name):
        # what to do?
</code></pre>

<p>Any help is greatly appreciated.</p>
","<python><logging><collections><proxy><tracing>"
"23329954","2","23329867","<p>You need to distribute the entire ""dist"" directory, not just the exe file.
See <a href=""http://www.py2exe.org/index.cgi/FAQ"" rel=""nofollow"">http://www.py2exe.org/index.cgi/FAQ</a> (Section: ""What are all those files?"")</p>
",""
"23329988","1","","<p>Say I group a Pandas dataframe around some column</p>

<pre><code>df.groupby(cols)
</code></pre>

<p>Are groups sorted according to any criteria?</p>

<p>One way to retrieve a group is:</p>

<pre><code>ix = 0
grouped.get_group(grouped.groups.keys()[ix])
</code></pre>

<p>but it is a bit verbose, and it's not clear that <code>keys()</code> above will give the groups in order. </p>

<p>Another way:</p>

<pre><code>df = df.set_index(col)
df.loc[idx[df.index.levels[0][0],:],:]
</code></pre>

<p>but again, that's really verbose.</p>

<p>Is there another way to get a group by its integer index?</p>
","<python><pandas>"
"23330007","2","23329034","<p>Okay well in the terminal I finally found out:</p>

<p>open .bash_profile located at your user root (simply do a <code>$cd</code> in terminal to go there) and add where the path is the location of twisted</p>

<pre><code>PYTHONPATH=""/usr/local/lib/python2.7/site-packages:$PYTHONPATH"" 
export PYTHONPATH
</code></pre>
",""
"23330013","1","","<p>I have a list of let's say 500,000 entries, with each being a tuple such as <code>(val1, val2)</code>.</p>

<p>Currently, I am looping through the list and inside the loop, I have a condition such as:</p>

<pre><code>if val2 == someval:
    do_something()
    break
</code></pre>

<p>However, I was wondering if there was a faster way to loop through elements on a certain condition, such as only looping through items where <code>val2 == someval</code>, rather than the entire list THEN doing the check.</p>
","<python><loops>"
"23330014","1","","<p>My python files are fun by fcgi without a problem, but my static content is producing 404 errors.</p>

<p>My fastcgi.conf:</p>

<pre><code>server.modules += ( ""mod_fastcgi"" )
fastcgi.server = (""/"" =&gt;
    ((  
        ""socket"" =&gt; ""/tmp/webxyz-fcgi.sock"",
        ""bin-path"" =&gt; ""/opt/local/www/xyz/webxyz.fcgi"",
        ""check-local"" =&gt; ""disable"",
        ""max-procs"" =&gt; 1
    ))  
)

alias.url = ( 
    ""/static"" =&gt; ""/opt/local/www/xyz/app/static""
)

url.rewrite-once = ( 
    #""^(/static($|/.*))$"" =&gt; ""$1"",
    ""^(/static.*)$"" =&gt; ""$1"",
    ""^(/.*)$"" =&gt; ""/webxyz.fcgi$1""
)
</code></pre>

<p>I have some debugging turned on:</p>

<pre><code>debug.log-request-handling        = ""enable""
debug.log-request-header-on-error = ""enable""
debug.log-file-not-found          = ""enable""
</code></pre>

<p>(though oddly file not found doesn't seem to do anything...)</p>

<p>Here's what I see in the error.log for one of the static files - all the others produce similar output (the ellipses below are a bunch more uninformative condition blocks that vary only in line number):</p>

<pre><code>2014-04-27 15:20:24: (response.c.340) Request-URI     :  /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js 
2014-04-27 15:20:24: (response.c.341) URI-scheme      :  http 
2014-04-27 15:20:24: (response.c.342) URI-authority   :  75.101.102.25:8080 
2014-04-27 15:20:24: (response.c.343) URI-path (raw)  :  /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js 
2014-04-27 15:20:24: (response.c.344) URI-path (clean):  /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js 
2014-04-27 15:20:24: (response.c.345) URI-query       :   
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (response.c.249) run condition 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.273) 2 global/HTTPurl=~\.pdf$ nej 
2014-04-27 15:20:24: (configfile-glue.c.530) 1 (uncached) result: unknown 
...
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.467) HTTP[""url""] ( /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js ) compare to  \.pdf$ 
2014-04-27 15:20:24: (configfile-glue.c.530) 1 (uncached) result: false 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (response.c.339) -- splitting Request-URI 
2014-04-27 15:20:24: (response.c.340) Request-URI     :  /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js 
2014-04-27 15:20:24: (response.c.341) URI-scheme      :  http 
2014-04-27 15:20:24: (response.c.342) URI-authority   :  75.101.102.25:8080 
2014-04-27 15:20:24: (response.c.343) URI-path (raw)  :  /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js 
2014-04-27 15:20:24: (response.c.344) URI-path (clean):  /static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js 
2014-04-27 15:20:24: (response.c.345) URI-query       :   
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (mod_access.c.135) -- mod_access_uri_handler called 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (mod_fastcgi.c.3626) handling it in mod_fastcgi 
2014-04-27 15:20:24: (response.c.473) -- before doc_root 
2014-04-27 15:20:24: (response.c.474) Doc-Root     : /opt/local/www/htdocs 
2014-04-27 15:20:24: (response.c.475) Rel-Path     : /static 
2014-04-27 15:20:24: (response.c.476) Path         :  
2014-04-27 15:20:24: (response.c.524) -- after doc_root 
2014-04-27 15:20:24: (response.c.525) Doc-Root     : /opt/local/www/htdocs 
2014-04-27 15:20:24: (response.c.526) Rel-Path     : /static 
2014-04-27 15:20:24: (response.c.527) Path         : /opt/local/www/htdocs/static 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (response.c.544) -- logical -&gt; physical 
2014-04-27 15:20:24: (response.c.545) Doc-Root     : /opt/local/www/htdocs 
2014-04-27 15:20:24: (response.c.546) Basedir      : /opt/local/www/xyz/app/static 
2014-04-27 15:20:24: (response.c.547) Rel-Path     : /static 
2014-04-27 15:20:24: (response.c.548) Path         : /opt/local/www/xyz/app/static 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.537) 1 (cached) result: false 
2014-04-27 15:20:24: (response.c.249) run condition 
2014-04-27 15:20:24: (configfile-glue.c.579) === start of condition block === 
2014-04-27 15:20:24: (configfile-glue.c.273) 2 global/HTTPurl=~\.pdf$ nej 
...
</code></pre>

<p>The last path it's looking at, /opt/local/www/xyz/app/static is my static directory, and contains bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js </p>

<p>I'm not sure why it's not being found - the permissions are fine:</p>

<pre><code>sudo -u www cat /opt/local/www/xyz/app/static/bower_components/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js
</code></pre>

<p>works as expected.</p>

<p>Any guidance or suggestions appreciated.</p>
","<python><lighttpd><fastcgi>"
"23330017","2","23329946","<p><strong>Note:</strong> the following abstraction <em>does not</em> work with C extension code that goes directly into the low-level internals of the wrapped object (such as <code>heapq.heappush</code>, both on CPython as well as PyPy); there's nothing that can be done to alleviate that at the Python level. You <em>might</em> see if you can ""patch the leak"" at the C level, but then you'll have to get your hands dirty with writing C and a Python extension.</p>

<p><strong>Solution:</strong> You don't need to go as far as <code>__new__</code>. The following will work generically on all objects. It will also make <code>isinstance</code> work on the wrapper as if it were called on the wrapped object.</p>

<pre><code>from functools import wraps

class Logged(object):
    def __init__(self, obj, obj_name):
        self.obj = obj
        self.obj_name = obj_name

    def __getattribute__(self, attr_name):
        obj = object.__getattribute__(self, 'obj')
        obj_name = object.__getattribute__(self, 'obj_name')

        attr = getattr(obj, attr_name)
        # this is not 100% generic, mathematically speaking,
        # but covers all methods and the `__class__` attribute:
        if not callable(attr) or isinstance(attr, type):
            return attr

        @wraps(attr)
        def fn(*args, **kwargs):
            print ""%s called on %s with: %s and %s"" % (attr_name, obj_name, args, kwargs)
            return attr(*args, **kwargs)

        return fn

    def __repr__(self):
        return repr(object.__getattribute__(self, 'obj'))
</code></pre>

<p>And then just:</p>

<pre><code>&gt;&gt;&gt; scheduled = Logged([], obj_name=""scheduled"")

&gt;&gt;&gt; scheduled.append
&lt;function append&gt;

&gt;&gt;&gt; scheduled.append(3)
append called on scheduled with: (3,) and {}

&gt;&gt;&gt; scheduled.extend([1,2])
extend called on scheduled with: ([1, 2],) and {}

&gt;&gt;&gt; isinstance(scheduled, list)
True

&gt;&gt;&gt; scheduled
[3, 1, 2]
</code></pre>
",""
"23330019","2","23329867","<p>Looking at your file on mediafire, it looks like you did not provide nor explain to end users that they will need the Microsoft Visual C runtime DLL to run.</p>

<p>Re-read step 5 of the py2exe tutorial (<a href=""http://www.py2exe.org/index.cgi/Tutorial#Step5"" rel=""nofollow"">http://www.py2exe.org/index.cgi/Tutorial#Step5</a>)</p>
",""
"23330038","2","23329911","<p>You need to store your results somewhere and account for the <code>Course Codes:</code> string at the beginning of the relevant lines. Try something like this instead:</p>

<pre><code>prefix = 'Course Codes:'
courses = []
with open(""Test.txt"") as textfile:
    for line in textfile:
        if line.startswith(prefix):
            codes = line[len(prefix) + 1:]
            courses += codes.split(',')  # build in some flexibility in case a space is missing
    else:  # after the for-loop finishes
        courses = [course.strip() for course in courses]  # now remove spaces
    print(courses)

['MECN1001', 'MECN1003', 'CHEM1033', 'MATH1014', 'PHYS1014', 'PHYS1015', 'MECN1001', 'MECN1003', 'CHEM1033', 'MATH1014', 'PHYS1014', 'PHYS1015', 'MECN1001', 'MECN1003', 'MECN2011', 'ELEN2000', 'MATH2011', 'MECN1001', 'MECN2006', 'MECN2011', 'MECN2000', 'MECN2005', 'MECN2010', 'MECN2012', 'MECN2013', 'MECN2014', 'MECN2010', 'MECN2012', 'MECN2013', 'MECN3002', 'MECN3010', 'MECN3028', 'MATH3026', 'MECN1001', 'MECN1003', 'CHEM1033']
</code></pre>
",""
"23330045","1","","<p>I need to display data from two files (with equal sizes) to be able to visually compare them. For this, I made a new Tk widget consisting of four Text widgets. The first widget contains characters representing bytes from the first file, the second one contains hexadecimal values of the bytes in the left widget, and the same goes for the third and four one respective (containing data/hex values for the second file). The input data to be displayed are two bytearrays.</p>

<p>To fill the Text widgets, I have to process the input data (bytearrays), because</p>

<ul>
<li>I have to get rid of unprintable characters and some characters that caused misalignment of the respective lines in the four widgets,</li>
<li>I have to fill the second/fourth widgets with hex values of the bytes, therefore I have to convert the byte values to hex numbers.</li>
</ul>

<p>The code I used does the functionality described, and it works quite well for small files (several hundreds of kilobytes). However when I try to load bigger files (several megabytes), the time it takes to process and load the data is unacceptable (tens of seconds).</p>

<p>An example of my widget for displaying the data can be seen here: </p>

<p><img src=""https://i.stack.imgur.com/QsJqj.png"" alt=""data-display widget""></p>

<p>To process the input data, I use the following code. <code>_ldata</code> and <code>_rdata</code> are bytearrays with the input data, <code>ldata</code> and <code>rdata</code> are strings to be loaded in the first and third Text widgets, <code>lhexdata</code> and <code>rhexdata</code> are strings with the hexadecimal values to be loaded in the second and fourth Text widget. <code>wrap</code> is an integer determining how many bytes will be represented on one line. The <code>print_chars</code> function replaces all the characters that caused misalignment or couldn't be selected in the Text widgets.</p>

<pre class=""lang-py prettyprint-override""><code>def print_chars(self, byte):
    if (byte &lt; 0x20 or
        (byte &gt; 0x7E and byte &lt; 0xB1)):
        return 0x07
    else:
        return byte
</code></pre>

<p>...</p>

<pre class=""lang-py prettyprint-override""><code>ldata = ""\n"".join(["""".join(map(chr,
                               map(self.print_chars, _ldata[i:i+wrap])))
                   for i in range(0, len(_ldata), wrap)])
rdata = ""\n"".join(["""".join(map(chr,
                               map(self.print_chars, _rdata[i:i+wrap])))
                   for i in range(0, len(_rdata), wrap)])

lhexdata = ""\n"".join(["" "".join(map(""{0:02X}"".format, _ldata[i:i+wrap]))
                      for i in range(0, len(_ldata), wrap)])
rhexdata = ""\n"".join(["" "".join(map(""{0:02X}"".format, _rdata[i:i+wrap]))
                      for i in range(0, len(_rdata), wrap)])
</code></pre>

<p>I think there is a way to speed things up, but can't figure out any. Before I implemented the list comprehension, I had used for cycles for the data processing, and it was a real pain in the neck even for very short inputs. The list comprehensions vere a big improvement in performance, yet not sufficient. Thanks for any advices.</p>
","<python><performance><text><hex>"
"23330047","2","23330013","<p>I'm not so sure there is a faster way. As I see it, you have to first find ""val2"" in the list, which in my experience requires a loop.</p>
",""
"23330054","1","","<p>I have this segment of code:</p>

<pre><code>count_words = input(""Put in your favorite word, and then press the hidden button(SPOILER: IT'S ENTER!):"")
split_Geonotes = Geonotes.replace (""\n"", "" ""). split(""."")
print ("" Total number of words:"", len (Geonotes.split() ) )

print(""Total number of sentences:"", len (Geonotes.split(""."") ) )
print(""Total number of periods:"", Geonotes.count(""."") )
print(""you typed:"", count_words)
print(""There are:"", Geonotes.count(count_words), ""instances of"", count_words)
split_Geonotes.sort()
print(split_Geonotes)
print(""The number of elements in the HTML code:"", len (split_Geonotes) )

for i in range(10):
    print(i)
    print(split_Geonotes(i) )
</code></pre>

<p>that begets the error shown in the title.
According to the full error it happens at print(i)
Can someone explain to me what's wrong?
thank you.</p>
","<python><html><tags><typeerror><python-3.3>"
"23330062","2","23330054","<p>It looks like you are trying to index the list <code>split_Geonotes</code> on the last line.  You need to use square brackets <code>[...]</code> for this:</p>

<pre><code>print(split_Geonotes[i])
</code></pre>

<p>Parenthesis <code>(...)</code> are for calling a function; when you place them after <code>split_Geonotes</code>, Python will try to call the list:</p>

<pre><code>&gt;&gt;&gt; lst = [1, 2, 3]
&gt;&gt;&gt; lst(0)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: 'list' object is not callable
&gt;&gt;&gt; lst[0]
1
&gt;&gt;&gt;
</code></pre>
",""
"23330082","2","23329380","<p>You could make the dicerolling a toplevel widget and then have your root ""wait_window"" for the rolling widget to complete.  Create a function inside the toplevel widget that generates the roll and call it ten times</p>

<p>EXAMPLE</p>

<pre><code>from Tkinter import *

yourscorevalue=12
cpuscorevalue=10

class dice:
    def __init__(self,parent):
        rollcount=0
        top=self.top=Toplevel(parent)
        while 1:
            roll=self.diceroll()
            rollcount+=1
            if rollcount==10 or roll==1:
                break

    def diceroll(self):
        #Random Dice Roll code

class dicegame:
    def __init__(self):
        self.root=Tk()
        self.root.title('Dicerolling Game')
        Label(self.root, text='Your Score').grid(column=0,row=0,sticky='ew')
        Label(self.root, text=yourscorevalue, background='black',foreground='red').grid(column=1,row=0,sticky='ew')
        Label(self.root, text='Computer Score').grid(column=0,row=1,sticky='ew')
        Label(self.root, text=cpuscorevalue, background='black',foreground='red').grid(column=1,row=1,sticky='ew')
        b=Button(self.root, text='Roll The Dice', command=self.roll).grid(column=0,row=2,sticky='ew')
        c=Button(self.root, text=""Done"", command=self.root.destroy).grid(column=1,row=2,sticky='ew')

        mainloop()

    def roll(self):
        d=dice(self.root)
        self.root.wait_window(d.top)
</code></pre>
",""
"23330145","2","23329630","<p>The correct way to do this would be to <strong>pass</strong> the functions <code>f1()</code> and <code>f2()</code> to whatever function needs them in <code>fm1.py</code> and <code>fm2.py</code>. For example, if you originally had something like</p>

<pre><code>def length(a,b):
    return metric(a,b)
</code></pre>

<p>where you defined <code>metric()</code> in <code>i1.py</code>. You could instead do it like</p>

<pre><code>def length(a,b,metric):
    return metric(a,b)
</code></pre>

<p>Then, if someone wanted to use the function they could import your module and call it like this:</p>

<pre><code>from foo import length

def metric(a,b):
    return a[0]*b[0] - sum(x*y for x, y in zip(a[1:],b[1:]))

norm = length(a,b,metric)
</code></pre>
",""
"23330148","2","23329856","<p>I'm new-ish to the Twisted world too, so take me with a grain of salt, but I say its acceptable form.</p>

<p>See the following SO were I gave an example of how to hook parts of twisted together: <a href=""https://stackoverflow.com/questions/23265609/persistent-connection-in-twisted/23274411#23274411"">Persistent connections in twisted</a>. (as it happens that answer talks about periodic tasks too...)</p>

<p><strong>EDIT</strong></p>

<p>Ooops, wait.  You have a factory in there.</p>

<p>The factory is making a new instance of the the protocol each time there is a connection, so your <code>f.protocol.transport.write</code> won't work (the <code>protocol</code> will point to the class, not a connected instance of the class).  Try running my code sample from the <a href=""https://stackoverflow.com/questions/23265609/persistent-connection-in-twisted/23274411#23274411"">Persistent connections</a> question, I make a connection list (the <code>self.clients</code> in the factory), using that structure you can use the <code>.write</code> of the various connections by iterating through the connection list</p>
",""
"23330175","2","23330013","<p>You seem to be asking two different questions. One in which the first time you see something equal to someval you break, the other where you only look through those that are equal to someval. For the latter, i.e.:</p>

<p>""However, I was wondering if there was a faster way to loop through elements on a certain condition, such as only looping through items where val2 == someval, rather than the entire list THEN doing the check.""</p>

<p>You can do:</p>

<pre><code>for i in filter(lambda t: t[1] == someval, val_list):
    stuff
</code></pre>

<p>Or via list comprehension:</p>

<pre><code>for i in [x for x in val_list if x[1] == someval]:
    stuff
</code></pre>

<p>My guess is that one of these is faster.</p>
",""
"23330199","2","23330013","<p>You have to ""see"" all the elements in the list to able to decide if at any point <code>val2 == someval</code> and your list isn't sorted on the second value in the tuple, so looping over all the elements can't be avoided.</p>

<p>However, you can make sure the method you use to loop over the list is as efficient as possible. For instance, instead of using a <a href=""https://docs.python.org/3.4/tutorial/controlflow.html#for-statements"" rel=""nofollow""><code>for statement</code></a>, you <em>may</em> use <a href=""https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions"" rel=""nofollow"">list comprehensions</a> to filter out the values that satisfy <code>val2 == someval</code> and then <code>do something</code> if the returned list isn't empty. I say ""<em>may</em>"" because it really depends on the distribution of your data; whether it's useful to you to have all values for which <code>val2 == someval</code> holds true and performing some action etc.</p>

<p>If you're using Python 3.x then <a href=""http://python-history.blogspot.co.uk/2010/06/from-list-comprehensions-to-generator.html"" rel=""nofollow"">""list comprehensions and generator expressions in Python 3 are actually faster than they were in Python 2""</a>.</p>
",""
"23330201","2","23330013","<p>What about taking it from the other side:</p>

<pre><code>if someval in lst:
  my_action(somewal)
</code></pre>

<p>The test of somewal membership in lst also requires a loop, but this runs in more optimized code in C, so it might be faster.</p>

<pre><code>In [49]: x = 3

In [50]: %timeit x in [1, 2, 3]
10000000 loops, best of 3: 53.8 ns per loop

In [51]: %timeit x == 1 or x == 2 or x == 3
10000000 loops, best of 3: 85.5 ns per loop

In [52]: x = 1

In [53]: %timeit x in [1, 2, 3]
10000000 loops, best of 3: 38.5 ns per loop

In [54]: %timeit x == 1 or x == 2 or x == 3
10000000 loops, best of 3: 38.4 ns per loop
</code></pre>

<p>Here you can see, that for numbers, which are ""soon"" in the test, the time difference is neglectable, but for ""later on"" it is faster to test membership.</p>

<p>More realistic measurements case: having range of 500000 numbers, testing presence of a number in the middle:</p>

<pre><code>In [64] lst = range(500000)

In [65]: %%timeit
250000 in lst
   ....: 
100 loops, best of 3: 2.66 ms per loop

In [66]: %%timeit
for i in lst:
  if i == 250000:
    break
   ....: 
100 loops, best of 3: 6.6 ms per loop
</code></pre>

<p>The time needed drops down to 40% with membership test <code>x in lst</code></p>
",""
"23330229","2","23330013","<ol>
<li><p>there is no way to avoid the loop or the <code>if</code>; the answers suggesting there is a faster way are mistaken; <code>filter</code> and list comprehensions will <em>not</em> improve matters a single bit; in fact, unless you use generator expressions (which are lazily evaluated), comprehensions (as well as <code>filter</code>) will make this (potentially much) slower and memory consuming. And generator expressions will not improve the performance either.</p></li>
<li><p>there is no way to make it faster other than rewriting in a language such as C or Java or using PyPy or Cython. <code>for x in ...: if x ...: do_smth()</code> is already the fastest possible way. Of course depending on your data, you can actually build the data structure (that has 500 000 items) in a way that is always sorted, so you could potentially have to loop over only the beginning of the list. Or possibly collecting the items satisfying a certain condition into a separate list/set/whatnot, which will yield very good results later by completely avoiding the filtering and a full loop iteration.</p></li>
</ol>
",""
"23330369","2","23329663","<p>One way to do what you are talking about would be to just straight up allocate the numpy array on the python side and behave like it is a straight forward double array on the C side.</p>

<pre><code>import numpy as np
import ctypes as C

# allocate this as a normal numpy array with specified dtype
array_1d_double = np.array([1,2,3,4,5],dtype=""float64"")

# set the structure to contain a C double pointer
class Test(C.Structure):
    _fields_ = [(""x"", C.POINTER(C.c_double))]

# Instantiate the structure so it can be passed to the C code
test = Test(np.ctypeslib.as_ctypes(array_1d_double))

# You can also do:
# test = Test()
# test.x = np.ctypeslib.as_ctypes(array_1d_double)

print test.x
# outputs: &lt;__main__.LP_c_double object at 0x1014aa320&gt;
</code></pre>

<p>You should now be able to use the struct's <code>x</code> member as a normal double array in the C code.</p>

<p><strong>EDIT:</strong></p>

<p>To clarify: If you instantiate a <code>Structure</code> with no arguments, it provides <code>NULL</code> pointers for all its members. </p>

<pre><code>class Test(C.Structure):
    _fields_ = [(""x"", C.POINTER(C.c_double)),
                (""y"", C.POINTER(C.c_int))]

test = Test()
print test.x
# outputs: &lt;__main__.LP_c_double object at 0x1014aa320&gt;

print test.y
# outputs: &lt;__main__.LP_c_int object at 0x101429320&gt;

print test.x[0]
# raises ValueError: NULL pointer access

print test.y[0]
# raises ValueError: NULL pointer access
</code></pre>

<p>If you instantiate the Structure with N arguments, those arguments will be assigned to the first N members of the Structure.</p>

<pre><code>test = Test(np.ctypeslib.as_ctypes(array_1d_double))

print text.x[0]
# outputs: 1.0

print test.y[0]
# raises ValueError: NULL pointer access
</code></pre>

<p><strong>EDIT2</strong></p>

<p>If you want to tie the numpy arrays to your struct permanently, you can override the <code>__init__</code> method:</p>

<pre><code>class MyDualArrayStruct(C.Structure):
    _fields_ = [(""c_x"", C.POINTER(C.c_double)),
                (""c_y"", C.POINTER(C.c_int))]

    def __init__(self,*args,**kwargs):
        super(MyDualArrayStruct,self).__init__(*args,**kwargs)
        self.np_x = np.array([1,2,3,4,5],dtype=""float64"")
        self.c_x = np.ctypeslib.as_ctypes(self.np_x)
        self.np_y = np.array([5,4,3,2,1],dtype=""int32"")
        self.c_y = np.ctypeslib.as_ctypes(self.np_y)

test = MyDualArrayStruct()

print test.np_x
print test.c_x[:5]

# Note that here c_x and np_x both contain the same data. Thus modifying one of them
# (inplace) modifies the other. You can use this to do easy inplace modification of 
# numpy arrays in C functions.
# This implies that test.np_x.sum() is also the sum of test.c_x
test.np_x[:] = 1

print test.np_x
print test.c_x[:5]
</code></pre>

<p>This outputs:</p>

<pre><code>[ 1.  2.  3.  4.  5.]
[1.0, 2.0, 3.0, 4.0, 5.0]
[ 1.  1.  1.  1.  1.]
[1.0, 1.0, 1.0, 1.0, 1.0]
</code></pre>
",""
"23330531","2","23329331","<p>The problem is that <code>beta.pdf()</code> sometimes returns <code>0</code> <strong>and</strong> <code>inf</code> for <code>0</code> and <code>1</code>. For example:</p>

<pre><code>&gt;&gt;&gt; from scipy.stats import beta
&gt;&gt;&gt; beta.pdf(1,1.05,0.95)
/usr/lib64/python2.6/site-packages/scipy/stats/distributions.py:1165: RuntimeWarning: divide by zero encountered in power
  Px = (1.0-x)**(b-1.0) * x**(a-1.0)
inf
&gt;&gt;&gt; beta.pdf(0,1.05,0.95)
0.0
</code></pre>

<p>You're guaranteeing that you will have one data sample at <code>0</code> and <code>1</code> by your normalization process. Although you ""correct"" for values at which the pdf is <code>0</code>, you are not correcting for those which return <code>inf</code>. To account for this you can just remove all the values which are not finite:</p>

<pre><code>def betaNLL(param,*args):
    """"""
    Negative log likelihood function for beta
    &lt;param&gt;: list for parameters to be fitted.
    &lt;args&gt;: 1-element array containing the sample data.

    Return &lt;nll&gt;: negative log-likelihood to be minimized.
    """"""

    a, b = param
    data = args[0]
    pdf = beta.pdf(data,a,b,loc=0,scale=1)
    lg = np.log(pdf)
    mask = np.isfinite(lg)
    nll = -lg[mask].sum()
    return nll
</code></pre>

<p><img src=""https://i.stack.imgur.com/lVLlc.png"" alt=""beta fit""></p>

<p>Really you shouldn't be normalizing like this though, because you are essentially throwing two data points out of the fit.</p>
",""
"23330879","2","23329988","<p>How about:</p>

<pre><code>key, df2 = iter(grouped).next()
</code></pre>
",""
"23331037","2","23329589","<p>Add it.</p>

<p>All you have to be careful to do is not call <code>reactor.run()</code> twice.  <code>reactor.run()</code> is the blocking API in Twisted (it blocks until your program is over).</p>
",""
"23331068","2","23329856","<p>You can restructure your code and take advantage of some new-ish APIs to avoid having to do extra work in the factory to accomplish your goals.  Mike Lutz's answer is perfectly correct and what I used to suggest to people before endpoints.  Now that we have endpoints, I suggest that people use those instead.</p>

<p>The endpoint APIs let you write a main function that looks more like this:</p>

<pre><code>def main():
    e = HostnameEndpoint(reactor, ""localhost"", 8000)
    f = EchoFactory()
    d = e.connect(f)
    d.addCallback(connected)
    return d

def connected(protocol):
    # protocol is an instance of EchoClient and is connected
    return LoopingCall(doStuff, protocol).start(3)
</code></pre>

<p>You might also consider adapting this to use <code>twisted.internet.task.react</code> which will take care of some of the reactor bookkeeping for you.</p>
",""
"23331719","2","23329988","<p><code>groupby</code> has a <code>sort</code> parameter which is <code>True</code> by default, thus the groups are sorted. As for getting the <code>n</code>th group, it looks like you'd have to define a function, and use an internal API:</p>

<pre><code>In [123]: df = DataFrame({'a': [1,1,1,1,2,2,3,3,3,3], 'b': randn(10)})

In [124]: df
Out[124]:
   a       b
0  1  1.5665
1  1 -0.2558
2  1  0.0756
3  1 -0.2821
4  2  0.8670
5  2 -2.0043
6  3 -1.3393
7  3  0.3898
8  3 -0.3392
9  3  1.2198

[10 rows x 2 columns]

In [125]: gb = df.groupby('a')

In [126]: def nth_group(gb, n):
   .....:     keys = gb.grouper._get_group_keys()
   .....:     return gb.get_group(keys[n])
   .....:

In [127]: nth_group(gb, 0)
Out[127]:
   a       b
0  1  1.5665
1  1 -0.2558
2  1  0.0756
3  1 -0.2821

[4 rows x 2 columns]
</code></pre>
",""
"23332010","2","23330045","<p>I think your first two lines can be improved by using <code>bytearray.translate</code> with an appropriate translation table rather than using your own escaping and converting system. Then you can turn it into a string with <code>bytearray.decode</code>. You still need an additional step to split the text into lines and recombine it, but I suspect that it will be faster if you've done the translation work already.</p>

<pre><code>table = bytearray.maketrans(bytes(range(0x20))+bytes(range(0x7f, 0xb1)),
                            b""\x07""*(0x20+0xb1-0x7f))

ldata_string = _ldata.translate(table).decode(""latin-1"") # pick some 8-bit encoding
ldata = ""\n"".join(ldata_string[i:i+wrap] for i in range(0, len(ldata), wrap))
</code></pre>

<p>You can do something similar for the hex output, using the <code>b16encode</code> function from the <code>base64</code> module to convert to hex, then <code>decode</code> to make the <code>bytes</code> output into a string. The splitting and rejoining gets a bit more complicated due to the need for spaces between each pair of hex digits, but I suspect it will still be faster than encoding each byte separately.</p>

<pre><code>import base64

lhexdata_string = base64.b16encode(_ldata).decode(""ascii"") # hex will always be ASCII
lhexdata = ""\n"".join("" "".join(hexdata_string[i+j:i+j+2] for i in range(0, 2*wrap, 2))
                     for j in range(0, len(lhexdata_string), 2*wrap))
</code></pre>

<p>Note that the code above assumes that you're using Python 3. If you're using Python 2 you'll need to change a few things (such as working around the lack of <code>maketrans</code> and not needing to <code>decode</code>).</p>
",""
"23332321","2","23329214","<p>I'd recommend changing the QTable to work with a model instead of items. Refer to <a href=""https://stackoverflow.com/questions/11736560/edit-table-in-pyqt-using-qabstracttablemodel"">here</a> for an example that is based on a list-of-lists which should be easy to change to list-of-dictionaries (should you choose).</p>

<p>The code below uses JSON and <a href=""https://pypi.python.org/pypi/pyzmq/"" rel=""nofollow noreferrer"">ZeroMQ</a> to JSON-serialise dictionaries and push them to listeners to update the dictionary on that end.</p>

<pre><code>import json
import time
import threading
import zmq

class push_to(object):
    def __init__(self, address, *args, **kwargs):
        context = zmq.Context()

        # Socket to send messages to
        self.sender = context.socket(zmq.PAIR)
        self.sender.connect(address)

    def __call__(self, send_str, *args, **kwargs):
        self.sender.send_string(send_str)

class own_listener(threading.Thread):
    def __init__(self, parent, address, *args, **kwargs):
        self.parent = parent

        context = zmq.Context()

        # Socket to receive messages from
        self.receiver = context.socket(zmq.PAIR)
        self.receiver.bind(address)
        super(own_listener, self).__init__(*args, **kwargs)
        self.daemon = True

    def run(self):
        while True:
            message = self.receiver.recv()
            self.parent.change_receive(message)

class pub_sub_dict(dict):
    def __init__(self, address, *args, **kwargs):
        self.address   = address
        self.listeners = []
        self.is_listen = False
        super(pub_sub_dict, self).__init__(*args, **kwargs)
        self.own_listener = own_listener(self, address)
        self.own_listener.start()

    def __setitem__(self, key, value, *args, **kwargs):
        if not self.is_listen:
            self.change_send({key : value})
        super(pub_sub_dict, self).__setitem__(key, value, *args, **kwargs)

    def update(self, value, *args, **kwargs):
        if not self.is_listen:
            self.change_send(value)
        super(pub_sub_dict, self).update(value, *args, **kwargs)

    def change_send(self, idict):
        json_str = json.JSONEncoder().encode(idict)
        for listener in self.listeners:
            listener(json_str)

    def change_receive(self, json_str):
        self.is_listen = True
        state = json.JSONDecoder().decode(json_str)
        self.update(state)
        self.is_listen = False

a = pub_sub_dict(""tcp://127.0.0.1:5556"")
b = pub_sub_dict(""tcp://127.0.0.1:5557"")
c = pub_sub_dict(""tcp://127.0.0.1:5558"")

a.listeners.append(push_to(b.address))
a.listeners.append(push_to(c.address))
b.listeners.append(push_to(a.address))

print ""a:"", a
print ""b:"", b
print ""c:"", c
time.sleep(1)
a[""test""] = ""test string 1""
print ""a:"", a
print ""b:"", b
print ""c:"", c
time.sleep(1)
b[""test""] = ""test string 2""
print ""a:"", a
print ""b:"", b
print ""c:"", c
time.sleep(1)
</code></pre>
",""
"23332919","2","23329048","<p>I found the answer with the help of <a href=""https://stackoverflow.com/users/642070/tdelaney"">tdelaney</a>:<br>
source_folder is the path to the source and destination_folder the path to the destination. </p>

<pre><code>import os
import shutil

def copyrecursively(source_folder, destination_folder):
for root, dirs, files in os.walk(source_folder):
    for item in files:
        src_path = os.path.join(root, item)
        dst_path = os.path.join(destination_folder, src_path.replace(source_folder, """"))
        if os.path.exists(dst_path):
            if os.stat(src_path).st_mtime &gt; os.stat(dst_path).st_mtime:
                shutil.copy2(src_path, dst_path)
        else:
            shutil.copy2(src_path, dst_path)
    for item in dirs:
        src_path = os.path.join(root, item)
        dst_path = os.path.join(destination_folder, src_path.replace(source_folder, """"))
        if not os.path.exists(dst_path):
            os.mkdir(dst_path)
</code></pre>
",""
"23337102","2","23328652","<p>your price checking won't work this way. the big problem here is the line</p>

<pre><code>record = self.pool.get('appraisal_price')
</code></pre>

<p>that's not correct. <code>self.pool.get</code> will get you instances of your ""business models"" like your <code>'marcos.artwork'</code> but you want some field values to check.</p>

<p>in this case you don't even need <code>self.pool.get</code>, because you're already on this model and can use <code>self</code> instead.</p>

<p>so here is the code you need (you will find so many examples in the addons):</p>

<pre><code>def _check_appraisal_price(self, cr, uid, ids, context=None):
    for artwork in self.browse(cr, uid, ids, context):
        if artwork.appraisal_price &lt; 0:
            return False
    return True
</code></pre>
",""
"23341566","1","","<p>I'd like to create a basic High Pass FIR Filter by Windowing within Python.</p>

<p>My code is below and is intentionally idiomatic - I'm aware you can (most likely) complete this with a single line of code in Python but I'm learning. I have used a basic a sinc function with a rectangular window: My output works for signals that are additive (f1+f2) but not multiplicative (f1*f2), where f1=25kHz and f2=1MHz.</p>

<p>My questions are: Have I misunderstood something fundamental or is my code wrong? 
In summary, I'd like to extract just the high pass signal (f2=1MHz) and filter everything else out. I've also included screen shots of what is generated for (f1+f2) and (f1*f2):</p>

<p><img src=""https://i.stack.imgur.com/DKtvx.png"" alt=""enter image description here""></p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt

# create an array of 1024 points sampled at 40MHz
# [each sample is 25ns apart]
Fs = 40e6
T  = 1/Fs
t  = np.arange(0,(1024*T),T)

# create an ip signal sampled at Fs, using two frequencies 
F_low  = 25e3 #  25kHz
F_high = 1e6  #  1MHz
ip = np.sin(2*np.pi*F_low*t) + np.sin(2*np.pi*F_high*t)
#ip = np.sin(2*np.pi*F_low*t) * np.sin(2*np.pi*F_high*t)
op = [0]*len(ip)


# Define -
# Fsample = 40MHz
# Fcutoff = 900kHz,
# this gives the normalised transition freq, Ft
Fc = 0.9e6
Ft = Fc/Fs
Length       = 101
M            = Length - 1
Weight       = []
for n in range(0, Length):
    if( n != (M/2) ):
        Weight.append( -np.sin(2*np.pi*Ft*(n-(M/2))) / (np.pi*(n-(M/2))) )
    else:
        Weight.append( 1-2*Ft )




for n in range(len(Weight), len(ip)):
    y = 0
    for i in range(0, len(Weight)):
        y += Weight[i]*ip[n-i]
    op[n] = y


plt.subplot(311)
plt.plot(Weight,'ro', linewidth=3)
plt.xlabel( 'weight number' )
plt.ylabel( 'weight value' )
plt.grid()

plt.subplot(312)
plt.plot( ip,'r-', linewidth=2)
plt.xlabel( 'sample length' )
plt.ylabel( 'ip value' )
plt.grid()

plt.subplot(313)
plt.plot( op,'k-', linewidth=2)
plt.xlabel( 'sample length' )
plt.ylabel( 'op value' )
plt.grid()
plt.show()
</code></pre>
","<python><filter><windowing>"
"23341660","1","","<p>I have to create a listening server that will receive HTTP POST / XML alert traffic from a network sensor and parse out the received XML.  Being a beginner to Python, and having a tough time understanding classes, I wanted to get advice on if I'm implementing the classes and functionality I'm trying to achieve correctly, and if there's a better or ""more Pythonic"" way of doing it.  I'm forcing myself to use classes in hopes that I better grasp the concept, I know I can just use regular functions.</p>

<p>The script so far:</p>

<p>I'm using the BaseHTTPServer and SocketServer module to create a threaded HTTP server, and xml.dom.minidom class for parsing the XML data.  So far I have two classes set up - one to setup the threading (ThreadedHTTPServer) and another with everything else (ThreadedHTTPRequestHandler).  The ""everything else"" class is currently managing the sessions and manipulating the data.  I'm thinking I need three classes, breaking out the data manipulation into the third and leaving the second just to managing the inbound connections.  Would this be correct?  How would I pass the connection data from the ThreadedHTTPRequestHandler class to the new class that will be parsing and manipulating the XML data?</p>

<p>Any help for this newbie would be appreciated.  Code is below, and it's currently working.  All it does at this time is accept incoming connections and prints the XML of a specific tag I'm interested in.</p>

<pre><code>import cgi
from xml.dom.minidom import parseString
from BaseHTTPServer import BaseHTTPRequestHandler, HTTPServer
from SocketServer import ThreadingMixIn

# Server settings
HOST = ''
PORT = 5000
BUFF = 2048

class ThreadedHTTPServer(ThreadingMixIn, HTTPServer):
    """"""
    This class sets up multi-threading for the server
    """"""
    pass

class ThreadedHTTPRequestHandler(BaseHTTPRequestHandler):
    '''
    This class is the overall request handler.
    This class contains functions to manage client connections and manipulate data.
    '''

    def do_POST(self):
        '''
        This method handles the inbound HTTP POST data
        '''

        print 'Connection from: ', self.client_address[0], self.client_address[1]

        ctype = self.headers.getheader('content-type')
        content_len = int(self.headers.getheader('content-length'))

        if ctype == 'multipart/form-data':
            self.post_body = cgi.parse_multipart(self.rfile)
        elif ctype == 'application/x-www-form-urlencoded':
            self.post_body = self.rfile.read(content_len)
        else:
            self.post_body = """"

        self.done(200)
        self.handleXML()

    def done(self, code):
        '''
        Send back an HTTP 200 OK and close the connection
        '''

        try:
            self.send_response(code)
            self.end_headers()
        except:
            pass

        print 'Connection from: ', self.client_address[0], self.client_address[1], ' closed.'

#class XMLHandler():
    def handleXML(self):
        '''
        This method parses and manipulates the XML alert data
        '''

        xml_dom = parseString(self.post_body)
        xmlTag = xml_dom.getElementsByTagName('malware')[0].toxml()
        #print out the xml tag and data in this format: &lt;tag&gt;data&lt;/tag&gt;
        print xmlTag

if __name__ == ""__main__"":
    try:
        server = ThreadedHTTPServer((HOST, PORT), ThreadedHTTPRequestHandler).serve_forever()
        print
    except KeyboardInterrupt:
        pass
</code></pre>
","<python><xml><class><httpserver>"
"23341675","1","","<p>I am struggling with callback objects, I am a newbie please be nice:</p>

<p>I am using the win32com package to interact with a windows application (The application is not important). </p>

<p>In short what I am trying to achieve is a subscription to a table that updates. </p>

<p>I have successfully implemented a callback that receives the returned data on an update to the table but what I need now is to act on the data received. </p>

<p>This problem would be very easy to solve if I could instantiate the callback object with additional arguments (see code below) But I am at a loss as to how to do this.</p>

<hr>

<h2>CallBack Class:</h2>

<pre><code>class callBackEvents(object):
    """""" Callback Object for win32com
    """"""

    def OnNewData(self, XMLData):
        logging.info(""Subscription returned information"")
        print ""HERE : {}"".format(XMLData))

        # Would like to use some argument to access logic
        # For how to use the new data  

    def OnActionResult(self, job, msg):
        return True

    def OnServerDisconnect(self):
        logging.debug(""Server Disconnected"")

    def OnServerConnect(self):
        logging.debug(""Trader Connected To Server"")
</code></pre>

<hr>

<h2>Instantiate the Callback Object:</h2>

<pre><code># Instantiate API com object
self.app = win32com.client.DispatchWithEvents(""WindowsApplication"" callBackEvents)
# I would like to give the callback object extra arguments e.g. callBackEvents(params)
</code></pre>

<hr>

<p><strong><em>EDIT</em></strong></p>

<h2>Instantiate the Callback Objects:</h2>

<pre><code># Instatiate two com objects
self.com1 = win32com.client.DispatchWithEvents(""WindowsApplication"" callBackEvents)
self.com2 = win32com.client.DispatchWithEvents(""WindowsApplication"" callBackEvents)

# Create multiple subscriptions (Note these are asynchronous)
# Pushing the subscribed info is not a problem and done elsewhere
self.com1.Subscribe(&lt;subscription info&gt;)
self.com2.Subscribe(&lt;subscription info&gt;)
</code></pre>

<p>Now when subscription info hits the callback object I have no idea which com object set up the subscription (I could guess based on the information returned but this is going to cause problems when identical subscriptions are setup)</p>
","<python><callback><arguments><win32com>"
"23341784","1","","<p>I a currently trying to understand the code of a python program which in essence is a pacman game. While I was reading the code I found a strange loop which seems to reset a list to ""empty"" followed by appending a value to this list. Here is what I mean:</p>

<pre><code>def drawFood(self, foodMatrix ):
    foodImages = []    


    color = FOOD_COLOR 
    for xNum, x in enumerate(foodMatrix):                                                                   
        if self.capture and (xNum * 2) &lt;= foodMatrix.width: color = TEAM_COLORS[0]   
        if self.capture and (xNum * 2) &gt; foodMatrix.width: color = TEAM_COLORS[1]


        imageRow = []                                               
        foodImages.append(imageRow)                                                                          
        for yNum, cell in enumerate(x):                             
            if cell: # There's food here

                screen = self.to_screen((xNum, yNum ))                                                  

                dot = circle( screen,                                                                                 
                              FOOD_SIZE * self.gridSize,
                              outlineColor = color, fillColor = color,
                              width = 1)                                                                                
                imageRow.append(dot)                                                                                             
            else:
                imageRow.append(None)
    print('foodimages' + str(foodImages))            
    return foodImages 
</code></pre>

<p>Although <code>foodImages = []</code> and <code>imageRow = []</code> are both reset to empty in every iteration of the loop, the foodImages list seems to continue growing.</p>

<p>Is it possible that the because we append dot to <code>imageRow</code> and <code>imageRow</code> to the list <code>foodImages</code> that the <code>foodImages</code> list continues to grow although <code>imageRow</code> was set to empty? </p>
","<python>"
"23341970","2","23341784","<p>The code can be a little confusing.</p>

<pre><code>imageRow = []                                               
foodImages.append(imageRow) 
...
imageRow.append(""something"")
</code></pre>

<p><code>foodImages</code> is only set to an empty list at the start.
Even though you add an empty <code>imageRow</code> to the <code>foodImages</code> here, you are still working on the same <code>imageRow</code> object later. So when you further down in the code add something to <code>imageRow</code> it will be reflected the <code>foodImages</code> list (which contains the <code>imageRow</code> object). </p>
",""
"23342080","1","","<p>I am building several Python packages and would like to upload them only if all the packages have been successfully built. I have a separate stage for each Python package, whose <code>sdist</code> is carried to the last stage where all collected <code>sdist</code>s should be uploaded (if the build reaches the final stage, then all packages were built successfully).</p>

<p>Now, is there a way to execute <code>python setup.py sdist</code>, then <code>python setup.py upload [path]</code> in order to achieve what I need? Or is there a better way for this?</p>

<p>P.S.: I am using Bamboo, if it helps.</p>
","<python><distutils><sdist>"
"23342148","1","","<p>So I have a dataset with two columns, one a string variable with names of products, and the other interval values.</p>

<pre><code>Affiliate_ID          Average ""A"" Level
store X                      7.0
store Y                      4.3
store Z                      5.6
</code></pre>

<p>I am curious if it is possible in python to compute and sum all possible pairwise differences, without repeats.</p>

<pre><code>Sum = |7.0 - 4.3| + |4.3 - 5.6| + |7.0 - 5.6|
</code></pre>

<p>I don't know what format is best for python to do such an operation, but I have the data in a csv file and in an excel file. I use pandas to get the data into a dataframe. One of the things I've tried is to grab a particular column from the dataframe</p>

<pre><code>df = pd.DataFrame.from_csv(infile_path + ""mp_viewed_item_AGG_affiliate_item_TOP_10.csv"", sep=',')
i = 0
for i in df:
    x = df[i]
</code></pre>

<p>But this feels incorrect - like it is going nowhere (not that I'd know!)</p>

<p>Someone suggested that I make use of something called itertools, and provided me with a sample</p>

<pre><code>sum([args[i] - args[j] for i,j in itertools.permutations(range(len(args)
</code></pre>

<p>but I really don't know how to make this work.</p>

<p>If anyone could provide me with some insight into my problem, I would be very grateful. I'm a newbie to python; I know basics, have written a couple very simple programs but am not a developer at all.</p>
","<python><dataset><analysis>"
"23342212","1","","<p>I am beginner to python and I am stuck with this error. It would be of great help if you could tell me where I went wrong. Here is my code:</p>

<pre><code>import math
import nltk
import json
import pymongo
#import sys
import nltk.corpus

from funcs import get_name_entity
from funcs import sentiment_analysis
from funcs import get_wordlist
from funcs import get_pos_tag

def get_post(count):
    data = ()
    client = pymongo.MongoClient(""localhost"", 27017)        #take data from database Mongo
    db = client.News_Updated                                #accessing the database News_Updated
    db.News_Updated.find()
    temp = []
    #print count
    if count == 0:
       data = db.ndtv
    elif count == 1 :
       data = db.timesofindia
    elif count == 2 :
       data = db.hindustantimes
    elif count == 3 :
       data = db.asianetnews
    elif count == 4 :
       data = db.khabarndtv
    #print data.find()

    for post in data.find():
        temp.append(post)
    return temp

if __name__ == '__main__':
    count = 0
    limit = -1
    while count &lt; 5:
        data = get_post(count)
        count += 1
        for text in data.index(2):
            print text          
</code></pre>

<p>However I am getting an output as: </p>

<blockquote>
  <p>Traceback (most recent call last):
    File ""main.py"", line 43, in 
      for text in data.index(2):
  ValueError: 2 is not in list</p>
</blockquote>

<p>here is a sample of data from mongodb.</p>

<blockquote>
  <p>{u'url': u'62-year-old-woman-murdered-in-tamil-nadu-s-salem-510469', u'_id': ObjectId('53551ebf39b71c444a991341'), u'data': u""Salem, Tamil Nadu:In a daring daylight murder, a 62-year-old woman was killed by two youths for a gold chain in a busy commercial locality in Salem, Tamil Nadu, police said.Dhanlakshmi was behind the counter of her husband's small shop on Arunachalaachari street in his absence when the assailants slit her throat with a knife and fled away taking the gold chain she was wearing, they said.Arunachalaachari street, dotted with jewellery, vessels and textile shops, is considered a busy commercial locality of the district. The incident sent shock waves among the locals.Deputy Commissioner of Police A G Babu visited the spot.""}</p>
</blockquote>

<p>Any help is greatly appreciated. </p>
","<python><list><mongodb>"
"23342275","1","","<p>Is it possible to use a list created in one function in a separate function?</p>

<p>I've created a list of discs in this function:</p>

<pre><code>def create_discs():

    disc_list=['disc0', 'disc1', 'disc2']
</code></pre>

<p>I would then like to use this list in a different function</p>

<pre><code>def move_discs

    cmds.move(disc_list[1], 0, 0, 5)
</code></pre>

<p>I get this error when trying to do so: </p>

<pre><code>NameError: file &lt;maya console&gt; line 48: global name 'disc_list' is not defined #
</code></pre>

<p>I'm using Autodesk Maya</p>
","<python><list><function><maya>"
"23342280","1","","<p>I am using <code>ElementTree</code> to create, parse and modify XML files and object. I am creating the tree like this:</p>

<pre><code>import xml.etree.ElementTree as etree
foo = etree.Element(""root"")
etree.SubElement(foo, ""extra"", { ""id"": ""50"" })
</code></pre>

<p>then, I want to write this to a file. According to the <a href=""https://docs.python.org/3.3/library/xml.etree.elementtree.html#xml.etree.ElementTree.ElementTree.write"" rel=""nofollow"">documentation</a>, I should use an <code>ElementTree</code> object for that, but how to create that from the <code>Element</code>?</p>

<p>I tried</p>

<pre><code>e = etree.ElementTree(foo)
e.write(filename)
</code></pre>

<p>but that doesn't work:</p>

<blockquote>
  <p>TypeError: must be str, not bytes</p>
</blockquote>
","<python><xml><elementtree>"
"23342324","2","23342212","<p>As pointed <a href=""https://docs.python.org/2/tutorial/datastructures.html"" rel=""nofollow"">in the docs</a>, <code>index()</code> retrieves the list index of the given element. In your case, that is <code>2</code>. The error you see is because there is no such element as <code>2</code> in your sequence (<code>data</code>).</p>

<p>Perhaps you wanted to use <code>data[2]</code>? It is not very clear from your question.</p>
",""
"23342329","1","","<pre><code>class A(object):

    def a(self, b=1):
        print 'Up'
    d = {1 : a}

    def b( self ):
        print self.d[1]
        print self.b
        print self.d[1].__get__( self, A )()
        # print self.d[1]()

class B( object ):


    def a( self ):
        print 'here??'
        return 10000
    d = {1 : a}
    def b( self ):
        print 'hurray'

o = A()
o.b()

b = B()
type( o ).__dict__['b'].__get__( b, type( b ) )()
</code></pre>

<p>Hi Folks,</p>

<p>I was going through <a href=""https://stackoverflow.com/questions/1015307/python-bind-an-unbound-method"">Python: Bind an Unbound Method?</a> and <a href=""http://users.rcn.com/python/download/Descriptor.htm"" rel=""nofollow noreferrer"">http://users.rcn.com/python/download/Descriptor.htm</a> and trying to experiment on my learning.</p>

<p>But, I have hit some new doubts now:-</p>

<ol>
<li>In the last line of my code, I'm able to use <code>__get__</code> with <code>b</code> object and instance: <code>type(b)</code>. This only works if method <code>b</code> is defined in <code>class B</code>. Why is it so?</li>
<li>Even though the last line requires me to provide a method <code>b</code> in <code>class B</code>, still the method <code>b</code> in <code>class A</code> gets called. Why is it so?</li>
<li>To my utter surprise, after the above step, I notice that the method <code>a</code> of <code>class A</code> is not called by the code of method <code>b</code> of <code>class A</code>; instead, it calls the method <code>a</code> of <code>class B</code>. Why is it so?</li>
</ol>

<p>I'm quite confused after seeing this behaviour. I might also need to learn more on descriptors. But, it would be a great help if you could answer my doubts</p>
","<python><object><descriptor>"
"23342330","1","","<p>I have the following database structure:</p>

<pre><code>class Book(models.Model):
    id = models.AutoField(primary_key=True, db_column='id')
    name = models.CharField(max_length=255, db_column='name')
    author = models.ForeignKey('Author', to_field='id', db_column='author_id')


class Author(models.Model):
    id = models.AutoField(primary_key=True, db_column='id')
    fio = models.CharField(max_length=255, db_column='fio')

    def __unicode__(self):
        return self.name
</code></pre>

<p>And this Admin class for Book:</p>

<pre><code>class BookAdmin(admin.ModelAdmin):
    list_display = ('id', 'name',)
    fields = ('id', 'name', 'author',)
    readonly_fields = ('id',)
    raw_id_fields = ('author',)
</code></pre>

<p>Everything works fine when It's 500-1000 book records, but on 1-2 million books page freeze for few minutes before shows something. Profiler show me that django join books with authors and then cut last 100 records.</p>

<pre><code>SELECT ••• FROM `books` INNER JOIN `authors` ON ( `books`.`author_id` = `authors`.`id` ) ORDER BY `books`.`id` DESC LIMIT 100
</code></pre>

<p>How can I optimize django to join authors after select books from database? Or use something like that</p>

<pre><code>select * from (SELECT * FROM books ORDER BY books.id DESC LIMIT 100) t, authors a where t.author_id = a.id
</code></pre>
","<python><mysql><sql><django>"
"23342434","2","23342275","<p>You just need to return that list in your first function:</p>

<pre>
>>> def create_discs():
    disc_list=['disc0', 'disc1', 'disc2']
    return disc_list


>>> def move_discs():
    l = create_discs()
    print(l)
>>> move_discs()
['disc0', 'disc1', 'disc2']
</pre>  
",""
"23342435","2","23342148","<pre><code>import itertools
column = [3, 1, 7, 2, 9, 4]
</code></pre>

<p>You can make a set of pairs like this</p>

<pre><code># You can use set() instead of list() if you want to remove duplicates
list(itertools.combinations(column,2))
</code></pre>

<p>Output</p>

<pre><code>[(3, 1), (3, 7), (3, 2), (3, 9), (3, 4),
 (1, 7), (1, 2), (1, 9), (1, 4),
 (7, 2), (7, 9), (7, 4),
 (2, 9), (2, 4),
 (9, 4)]
</code></pre>

<p>Then you can get the sum of differences using a list comprehension</p>

<pre><code>sum([abs(pair[1] - pair[0]) for pair in itertools.combinations(column,2)])
</code></pre>

<p>Output</p>

<blockquote>
  <p>56</p>
</blockquote>
",""
"23342449","2","23342275","<p>you can make the first function return the wanted list and then use it anywhere you like:</p>

<pre><code>def create_discs():
    disc_list = ['disc0', 'disc1', 'disc2']
    return disc_list

def move_discs():
    disc_list = create_discs()
    cmds.move(disc_list[1], 0, 0, 5)
</code></pre>

<p>hope this helps.</p>
",""
"23342461","2","23342275","<p>If you don't want to use Classes to maintain state, then you may want to have a <code>global</code> variable or you can return the list from <code>create_list()</code>.</p>

<p><strong>Using global variable</strong>:</p>

<pre><code>disc_list = []

def create_list():
    global disc_list

    disc_list = ['disc0', 'disc1', 'disc2']

def move_discs
    cmds.move(disc_list[1], 0, 0, 5)
</code></pre>

<p>Note that using global variables is not encouraged.</p>

<p><strong>Returning list from <code>create_list()</code></strong>:</p>

<pre><code>def create_list():
    return ['disc0', 'disc1', 'disc2']

def move_discs():
    disc_list = create_list()
    cmds.move(disc_list[1], 0, 0, 5)
</code></pre>

<p>But I don't think this will of much help to you as you probably need to keep the state of your list throughout the program.</p>
",""
"23342525","1","","<p>I'm am calling a REST Flask server from an AngularJs client.
In one call, one of my ids (key) can contain a forward slash</p>

<p>If not, the call works fine.
If there's a slash, I receive a 404 not found error</p>

<p>I've tried to encode the key (encodeURIComponent), escape the key (escape)... but still have a 404 error.</p>

<p>My code in flask</p>

<pre><code>@app.route('/user/&lt;string:uid&gt;/subuser/&lt;string:subuser&gt;/key/&lt;string:key&gt;', methods=['DELETE'])
def deleteSubuserKey(uid, subuser, key):
    Log.err(""deleteSubuserKey"")
    return ...
</code></pre>

<p>My code in AngularJS</p>

<pre><code>$scope.uri = ctrlURL+""S3/user/""+user_id+""/subuser/""+subuser+""/key/""+key;
$http({method: ""delete"", url: $scope.uri }).
     success(function (data, status) {
                ...
            }).
     error(function (data, status) {
                ...
            });
</code></pre>

<p>Does anyone have an idea?</p>
","<javascript><python><angularjs><rest><flask>"
"23342532","1","","<p>Say, for the sake of an example, that I have several columns encoding different types of rates (<code>""annual rate""</code>, <code>""1/2 annual rate""</code>, etc.). I want to use <code>query</code> on my dataframe to find entries where <strong>any</strong> of these rates is above <code>1</code>.</p>

<p>First I find the columns that I want to use in my query:</p>

<pre><code>cols = [x for ix, x in enumerate(df.columns) if 'rate' in x]
</code></pre>

<p>where, say, <code>cols</code> contains:</p>

<pre><code>[""annual rate"", ""1/2 annual rate"", ""monthly rate""]
</code></pre>

<p>I then want to do something like:</p>

<pre><code>df.query('any of my cols &gt; 1')
</code></pre>

<p>How can I format this for <code>query</code>?</p>
","<python><pandas>"
"23342540","2","23342280","<p>Your opened file should be opened with <code>b</code> (binary) flag:</p>

<pre><code>import xml.etree.ElementTree as etree

foo = etree.Element(""root"")
etree.SubElement(foo, ""extra"", { ""id"": ""50"" })
e = etree.ElementTree(foo)
with open('test.xml', 'wb') as f:
    e.write(f)
</code></pre>

<p>or just pass a filename/path to <code>write()</code>:</p>

<pre><code>e.write('test.xml')
</code></pre>
",""
"23342591","1","","<p>How should i do real escaping in Python for SQLite3?</p>

<p>If i google for it (or search stackoverflow) there are tons of questions for this and every time the response is something like:</p>

<pre><code>dbcursor.execute(""SELECT * FROM `foo` WHERE `bar` like ?"", [""foobar""])
</code></pre>

<p>This helps against SQL-Injections, and is enough if i would do just comperations with ""="" but it doesn't stripe Wildcards of course.</p>

<p>So if i do </p>

<pre><code>cursor.execute(u""UPDATE `cookies` set `count`=? WHERE `nickname` ilike ?"", (cookies, name))
</code></pre>

<p>some user could supply ""%"" for a nickname and would replace all of the cookie-entries with one line.
I could filter it myself (ugh… i probably will forget one of those lesser-known wildcards anyway), i could use lowercase on nick and nickname and replace ""ilike"" with ""="", but what i would really like to do would be something along the lines of:</p>

<pre><code>foo = sqlescape(nick)+""%""
cursor.execute(u""UPDATE `cookies` set `count`=? WHERE `nickname` ilike ?"", (cookies, foo))
</code></pre>
","<python><sql><sqlite3><escaping><like>"
"23342611","2","23329362","<p>something like this?</p>

<pre><code>from PIL import Image
import numpy as np

image = np.asarray(Image.open('image.jpg'))
_y, _x, _z = image.shape
str_array = [str(image[y][x]) for y in range(_y) for x in range(_x)]
</code></pre>
",""
"23342643","2","23341660","<p>You don't necessarily need a third class. What you need is a freestanding function,</p>

<pre><code>def handle_xml(post_body):
    # work
</code></pre>

<p>so that you no longer need to store the <code>post_body</code> on the <code>ThreadedHTTPRequestHandler</code>.</p>

<p>Class hierarchies are a good fit for some problems, and a bad fit for most. Don't use them if you don't need to, they'll just complicate your code.</p>
",""
"23342730","2","23341784","<p>Python seems to treat <code>list</code> not as <code>int</code> or <code>str</code>. See the example below. <code>list</code> is like reference or pointer in C programming language.</p>

<pre><code>#example 1
&gt;&gt;&gt; a = []
&gt;&gt;&gt; x = 1
&gt;&gt;&gt; a.append(x)
&gt;&gt;&gt; a
[1]
&gt;&gt;&gt; x = 2
&gt;&gt;&gt; a
[1]

#example 2
&gt;&gt;&gt; a = []
&gt;&gt;&gt; x = ""hoge""
&gt;&gt;&gt; a.append(x)
&gt;&gt;&gt; a
['hoge']
&gt;&gt;&gt; x = ""fuga""
&gt;&gt;&gt; a
['hoge']

#example 3(your problem)
&gt;&gt;&gt; a = []
&gt;&gt;&gt; x = [1]
&gt;&gt;&gt; a.append(x)
&gt;&gt;&gt; a
[[1]]
&gt;&gt;&gt; x[0] = 2
&gt;&gt;&gt; a
[[2]]
</code></pre>
",""
"23342737","2","23342532","<p>something like this should do the trick</p>

<pre><code>df.query('|'.join('(%s &gt; 1)' % col for col in cols))
</code></pre>

<p>i'm not sure how to deal with spaces in column names though, so you might have to rename them.</p>
",""
"23342797","1","","<p><strong>UPDATE</strong>: <br>
<a href=""https://stackoverflow.com/questions/14918574/libsvm-on-pybrain-on-osx-for-an-svm?rq=1"">This</a> seems pertinent:<br></p>

<p><em>libsvm (which svmtrainer needs to import) doesnt support <code>cross_validation</code> anymore.</em> <br>
Though im still not sure why i cant install libsvm to the non homebrewed python.</p>

<hr>

<p><br></p>

<p>My python installation (which is at /Library/Frameworks..)
cannot seem to recognise <code>libsvm</code> no matter what i try.<br>
But my brew install at usr/local/bin/brew has it installed fine.
How do i get the former to see the latter version? </p>

<p>I am trying to get it installed so i can use it in PyBrain in PyCharm.
Currently trying to test <a href=""https://github.com/pybrain/pybrain/blob/master/examples/supervised/neuralnets%2Bsvm/example_svm.py"" rel=""nofollow noreferrer"">this svm code</a> so that i can run a multi-class SVM classification.
But my Python cant find it:</p>

<pre><code>    raise ImportError(""Cannot find LIBSVM installation. Make sure svm.py and svmc.* are in the PYTHONPATH!"")
ImportError: Cannot find LIBSVM installation. Make sure svm.py and svmc.* are in the PYTHONPATH!
</code></pre>

<p>So I tried <a href=""http://codexpython.blogspot.com.au/2011/02/installing-libsvm-30-for-python-on-osx.html"" rel=""nofollow noreferrer"">this</a> but it didnt work..</p>

<p>If i just download the source for libsvm and then try to <code>make</code> i get <br></p>

<pre><code>make -C .. lib
if [ ""Darwin"" = ""Darwin"" ]; then \
        SHARED_LIB_FLAG=""-dynamiclib -Wl,-install_name,libsvm.so.2""; \
    else \
        SHARED_LIB_FLAG=""-shared -Wl,-soname,libsvm.so.2""; \
    fi; \
    c++ ${SHARED_LIB_FLAG} svm.o -o libsvm.so.2
</code></pre>

<p>I also tried <a href=""https://stackoverflow.com/questions/15755130/how-to-setup-libsvm-for-python"">installing scikit-learn</a> but the installation failed. <br>
I also have a package installed at collective.recipe.libsvm but im not sure how to import it.<br>
Any ideas how to get my Python to recognise libsvm?</p>
","<python><pycharm><homebrew><libsvm>"
"23342903","1","","<p>I have the following list:</p>

<pre><code>data_items = ['abc','123data','dataxyz','456','344','666','777','888','888', 'abc', 'xyz']
</code></pre>

<p>And I have a list of search items:</p>

<pre><code>search = ['abc','123','xyz','456']
</code></pre>

<p>I want to iterate over the data_items for a match using the search list and build a basic structure that provides a count for each match. e.g.</p>

<pre><code>counts = ['abc':'2', '123':'1', 'xyz':'2'.........]
</code></pre>

<p>What the best way to do this? </p>
","<python><list><search>"
"23342968","2","23342903","<pre><code>counts={}
for s in search:
    lower_s=s.lower()  
    counts[lower_s]=str(data_items.count(lower_s))
</code></pre>

<p>That's if you are ok with using a dictionary (since you said structure, it's a better choice).</p>
",""
"23343026","2","23342797","<p>This was the issue:</p>

<p><a href=""https://stackoverflow.com/questions/14918574/libsvm-on-pybrain-on-osx-for-an-svm?rq=1"">This</a> seems pertinent:<br></p>

<p><em>libsvm (which svmtrainer needs to import) doesnt support <code>cross_validation</code> anymore.</em> <br>
Though im still not sure why i cant install libsvm to the non homebrewed python.
<br><br>
I am able to import libsvm from svmutil in other scripts.</p>
",""
"23343046","2","23342275","<p>There are a couple ways to do what you're trying to do.</p>

<p>If you want to merely create the list using <code>create_discs</code> once in order for it be used in <code>move_discs</code>, you can modify <code>create_discs</code> to return the list it creates, and then call <code>create_discs</code> within <code>move_discs</code>:</p>

<pre><code>def create_discs():
    return ['disc0', 'disc1', 'disc2']

def move_discs():
    cmds.move(create_discs()[1], 0, 0, 5)

move_discs()
</code></pre>

<p>If you want to have the created list saved so that it can be used throughout the program, you can again have <code>create_discs</code> return its list, and have it save to a variable. This variable can then be accessed by <code>moved_discs</code> or any other function:</p>

<pre><code>def create_discs():
    return ['disc0', 'disc1', 'disc2']

def move_discs():
    cmds.move(saved_list[1], 0, 0, 5)

saved_list = create_discs()
</code></pre>

<p>I'm not sure if you have researched function arguments yet, but they are a feature of functions which support the very behavior you're trying to achieve:</p>

<pre><code>def create_discs():
    return ['disc0', 'disc1', 'disc2']

def move_discs(list):
    print(list[1])

saved_list = create_discs()
move_discs(saved_list)  # This will output 'disc1'

saved_list = ['new0', 'new1', 'new2']
moved_discs(saved_list)  # This will now output 'new1'
</code></pre>
",""
"23343103","1","","<p>I am trying to understand the ""yield"". </p>

<p>First, the code that I can't understand is below.</p>

<pre><code>def permutations(seq):
    if len(seq) &lt;= 1: yield seq
    else:
        for perm in permutations(seq[1:]):
            for i in range(len(perm)+1):
                yield perm[i:] + seq[0:1] + perm[:i]

print list(permutations(['police', 'buffalo', 'fish']))
</code></pre>

<p>The result is as below:</p>

<pre><code>[['fish', 'buffalo', 'police'], ['buffalo', 'police', 'fish'], ['police', 'fish', 'buffalo'], ['buffalo', 'fish', 'police'], ['fish', 'police', 'buffalo'], ['police', 'buffalo', 'fish']]
</code></pre>

<p>My undertanding level about ""yield"" is just it is used for generater. And I can understand the code below. </p>

<pre><code>def reverse(data):
    for index in range(len(data) -1, -1, -1):
        yield data[index]

for char in reverse('golf'):
    print(char)

f
l
o
g
</code></pre>

<p>My level is just understanding above.. but with recursion, I can't understand... please explain. Thanks </p>
","<python><recursion>"
"23343137","1","","<p>I installed Light Table and it seemed to work with my current set up Python.  However, once I set up Julia by modifying the <code>Settings: User behaviors</code> it no longer seems to work for me and give me the error.</p>

<p><code>Looks like there was an issue trying to connect to the project. Here's what we got:
python: can't open file '""C:\Program Files\LightTable\plugins\python\py-src\ltmain.py""': [Errno 22] Invalid argument</code></p>

<p>I have checked and the file <code>ltmain.py</code> does exist.  </p>

<p>The only reason I think there might be a connection with Julia is because this is the only change in the setting that I made to light table.</p>

<pre><code>Settings: User behaviors
 :app [(:lt.objs.style/set-skin ""dark"")

       (:lt.objs.langs.julia/julia-path ""C:\\Program Files\\Julia 0.3.0-prerelease\\bin\\julia.exe"")

       ]
</code></pre>

<p>I know there is likely not a connection with Julia, but any help that could be provided would be very much appreciated.</p>
","<python><julia-lang><lighttable>"
"23343195","2","23342903","<p>Looks like you need a partial match too. Code below is intuitive but may not be efficient. And also assumes you're ok with dict result.</p>

<pre>
>>> data_items = ['abc','123data','dataxyz','456','344','666','777','888','888', 'abc', 'xyz']
>>> search = ['abc','123','xyz','456']
>>> result = {k:0 for k in search}
>>> for item in data_items:
        for search_item in search:
            if search_item in item:
                result[search_item]+=1
>>> result
{'123': 1, 'abc': 2, 'xyz': 2, '456': 1}
</pre>
",""
"23343229","2","23329041","<p>The answer to the riddle gives you a hint for a more compact implementation - use <code>maketrans</code>.</p>

<pre><code>message = ""g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.""

rot2 = str.maketrans('abcdefghijklmnopqrstuvwxyz',
                     'cdefghijklmnopqrstuvwxyzab')
print(message.translate(rot2))
</code></pre>

<p>This is for python 3 - python 2 is left as an exercise to the reader :-)</p>
",""
"23343246","1","","<p>In this piece of code I am looking for a input:</p>

<pre><code>mode = input(""Generate S1(0) or S2(1)?\n"")
if mode == ""0"":
    mode = ""S1""
elif mode == ""1"":
    mode = ""S2""
else:
    print(""Mode not recogised!"")
</code></pre>

<p>for being able to handle error better (mode>1), i.e. when if hit the else condition, I want the code to ask the input again. </p>

<p>Any idea how i can do that or which function I am looking for? </p>
","<python><python-3.x><error-handling>"
"23343254","1","","<p>I need to redirect back to an external url after completing an action in my flask application.
The code looks like this</p>

<pre><code>if form.next.data is not None:
    return redirect(form.next.data)
</code></pre>

<p>where <code>form.next.data</code> can be an absolute url for an external domain like ""www.google.com"". However on passing the next value as an external url, this redirect is instead redirecting to <code>http://mysitename/www.google.com</code> and failing with a 404.</p>

<p>How do I specify that the redirect is to an external domain and stop Flask from appending it to my domain root?</p>
","<python><flask>"
"23343256","1","","<p>I have a function in my main python file that does some multiprocessing, which works fine;</p>

<pre><code>    if __name__ == '__main__':
    pool = multiprocessing.Pool(processes=len(directories))
    pool.map(worker, directories)        
</code></pre>

<p>However, I imported a .py file from an other directory, in which I try to do exactly the same; </p>

<pre><code># Main file    
import multiprocessing       
read_DataFiles.test(os.getcwd())

# Imported file
directories=[""x"", ""x"", ""x""]
def worker(sample):
    File=open('test'+sample+'.bat', 'w')
    File.close()
    1 == 1

def test(path):
    if __name__ == 'read_DataFiles':
        pool = multiprocessing.Pool(processes=8)
        print pool.map(worker, directories)  
</code></pre>

<p>which doesn't stop working, it continues to create new processes. Anyone sees what I'm doing wrong?</p>
","<python><multiprocessing><pool><infinite>"
"23343264","2","23342330","<p>You are experiencing a known issue: <a href=""https://code.djangoproject.com/ticket/22438"" rel=""nofollow noreferrer"">Slow INNER JOIN in MySQL can be fixed in Django ORM, but should it?</a></p>

<p>There is a project called <a href=""https://pypi.python.org/pypi/django-mysql-fix"" rel=""nofollow noreferrer""><code>django-mysql-fix</code></a> that was started on PyCon 2014 sprints that introduced a custom mysql database backend for fixing <code>INNER JOIN</code> issues specifically:</p>

<blockquote>
  <p>This project contains optimizations (hacks) for MySQL for Django ORM.</p>
  
  <p>There are two very simple ways to cacth INNER JOIN bug:</p>
  
  <ul>
  <li><p>Once you specify field from foreign table in list_display in your Django Admin model; </p></li>
  <li><p>Once you try to sort (order) by field from foreign table.</p></li>
  </ul>
</blockquote>

<p>As far as I understand, under the hood it replaces all <code>INNER JOIN</code>s with <code>STRAIGHT_JOIN</code>s, quote from <a href=""http://dev.mysql.com/doc/refman/5.0/en/join.html"" rel=""nofollow noreferrer"">mysql docs</a>:</p>

<blockquote>
  <p>STRAIGHT_JOIN is similar to JOIN, except that the left table is always
  read before the right table. This can be used for those (few) cases
  for which the join optimizer puts the tables in the wrong order.</p>
</blockquote>

<p>Also see:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/15959083/django-admin-mysql-slow-inner-join"">Django admin MySQL slow INNER JOIN</a></li>
<li><a href=""https://stackoverflow.com/questions/512294/when-to-use-straight-join-with-mysql"">When to use STRAIGHT_JOIN with MySQL</a></li>
</ul>
",""
"23343278","2","23342903","<p>You could use <code>re.search</code> and a <code>collections.Counter</code>, eg:</p>

<pre><code>import re
from collections import Counter

data_items = ['abc','123data','dataxyz','456','344','666','777','888','888', 'abc', 'xyz']
search = ['abc','123','xyz','456']

to_search = re.compile('|'.join(sorted(search, key=len, reverse=True)))
matches = (to_search.search(el) for el in data_items)
counts = Counter(match.group() for match in matches if match)
# Counter({'abc': 2, 'xyz': 2, '123': 1, '456': 1})
</code></pre>
",""
"23343325","2","23343246","<pre><code>mode = None
while not mode:
    answer = input(""Generate S1(0) or S2(1)?\n"")
    if answer == ""0"":
        mode = ""S1""
    elif answer == ""1"":
        mode = ""S2""
    else:
        print(""Mode not recogised!"")
</code></pre>
",""
"23343370","1","","<p>I've visited the documenation at <a href=""https://docs.djangoproject.com/en/1.6/ref/templates/builtins/#std%3atemplatetag-url"" rel=""nofollow"">https://docs.djangoproject.com/en/1.6/ref/templates/builtins/#std:templatetag-url</a> several times and i cant seem to get this syntax to work anywhere:</p>

<pre><code>{% url 'view' obj.id %}
</code></pre>

<p>I have a view that takes one parameter so this should work but im only getting NoReverseMatch exception for some strange reason.</p>

<p>When doing it like this:</p>

<pre><code>{% url 'view' obj.id as test %}
&lt;a href=""{{ test }}""&gt;test&lt;/a&gt;
</code></pre>

<p>..im getting the correct url returned back and the link address displays correctly, but when using the above mentioned syntax without setting is as a variable it doesnt work, when i for example use it directly in an element.</p>

<p>When trying to do this which im trying to do:</p>

<pre><code>{% url 'view' obj.id as test %}
&lt;input type=""hidden"" value=""{{ test }}""&gt;
</code></pre>

<p>im not getting any error but it doesnt seem like im getting any value in the value field because if there were a value in the field the code would do something, and when replacing the variable with a hard-coded string it does work.</p>

<p>When doing this:</p>

<pre><code>{% url 'view' obj.id as test %}
{{ test }}
</code></pre>

<p>just to try to print the value it doesnt return anything which i find strange because when using it with the a element in html as shown at the first code line above it displays the correct url.</p>

<p>So basically, im only getting the {% url 'view' obj.id %} syntax to work with the a element of html and only if i define it as a variable.</p>

<p>I would like to use the {% url 'view' obj.id %} syntax in order to have a DRY code. According to the documenation this should work, does anyone have a clue about why this isnt working ? If you need more information then please let me know and i will update the question with the necessary information.</p>

<p>UPDATE:
I'm currently using django 1.6.
The typo in the second snippet has been corrected.
The exact line from urls.py is (im at this page, using the comment system at /comment/ which should do a reverse to the display_story view (it works without problems when hardcoding the value attribute of the input html tag but not with the url function):</p>

<pre><code>url(r'^story/display/(?P&lt;specific_story&gt;\d+)/$', 'base.views.display_story', name='display_story'),
url(r'^comments/', include(""django.contrib.comments.urls""))
</code></pre>

<p>I have also tried the url function just on the application i have created without going through the comments application but i get the same problem.</p>

<p>This is the error message:</p>

<pre><code>NoReverseMatch at /story/display/1/
Reverse for 'display_story' with arguments '(1,)' and keyword arguments '{}' not found.
</code></pre>

<p>Even though i know that the view exists and takes one argument.</p>

<p>This is the html code:</p>

<pre><code>&lt;input type=""hidden"" name=""next"" value=""{% url 'display_story' story_details.id %}""&gt;
</code></pre>

<p>I have named views with the name argument and i apply the namespace when necessary.</p>

<p>The django docs says:
exception NoReverseMatch
The NoReverseMatch exception is raised by django.core.urlresolvers when a matching URL in your URLconf cannot be identified based on the parameters supplied.</p>

<p>but that doesnt seem to be the case.</p>

<p>This urls.py:</p>

<pre><code>url(r'^story/display/(?P&lt;specific_story&gt;\d+)/$', 'base.views.display_story', name='display_story')
</code></pre>

<p>should match this view code:</p>

<pre><code>def display_story(request, specific_story):
    """""" Display details for a specific story. """"""
    story_details = Story.objects.get(id=specific_story)

    return render(request, ""base/story/display_story.html"", {
                    'story_details': story_details,
        })
</code></pre>

<p>but for some reason django doesnt think the parameter sent is the the one the function receives when it clearly is stated so in the code.</p>

<p>Update 2:
When giving a keyword argument instead of a positional argument i get this error:</p>

<pre><code>NoReverseMatch at /story/display/1/
Reverse for 'display_story' with arguments '()' and keyword arguments '{u'specific_story': 1}' not found.
</code></pre>

<p>This code is used:</p>

<pre><code>{% url 'display_story' specific_story=story_details.id %}
</code></pre>

<p>Update 3:
I will update the question with the values of the local vars for the reverse function.</p>

<p>To add some additional infor i ran some code in the python shell:</p>

<pre><code>&gt;&gt;&gt; import base.views
&gt;&gt;&gt; from django.core.urlresolvers import reverse
&gt;&gt;&gt;
&gt;&gt;&gt; test=1
&gt;&gt;&gt; reverse(""display_story"", kwargs={'test': test})
Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
  File ""/Users/exceed/code/projects/python-2.7/lib/python2.7/site-packages/django/core/urlresolvers.py"", line 496, in reverse
    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))
  File ""/Users/exceed/code/projects/python-2.7/lib/python2.7/site-packages/django/core/urlresolvers.py"", line 416, in _reverse_with_prefix
    ""arguments '%s' not found."" % (lookup_view_s, args, kwargs))
NoReverseMatch: Reverse for 'display_story' with arguments '()' and keyword arguments '{'test': 1}' not found.
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; reverse(""display_story"", args=[1])
Traceback (most recent call last):
  File ""&lt;console&gt;"", line 1, in &lt;module&gt;
  File ""/Users/exceed/code/projects/python-2.7/lib/python2.7/site-packages/django/core/urlresolvers.py"", line 496, in reverse
    return iri_to_uri(resolver._reverse_with_prefix(view, prefix, *args, **kwargs))
  File ""/Users/exceed/code/projects/python-2.7/lib/python2.7/site-packages/django/core/urlresolvers.py"", line 416, in _reverse_with_prefix
    ""arguments '%s' not found."" % (lookup_view_s, args, kwargs))
NoReverseMatch: Reverse for 'display_story' with arguments '(1,)' and keyword arguments '{}' not found.
</code></pre>
","<python><django>"
"23343391","2","23342148","<p>Use <code>itertools.combinations</code> like this.</p>

<pre><code>import pandas as pd
import itertools

d = {'Affiliate_ID': pd.Series(['store X', 'store Y', 'store Z']), 'Average ""A"" Level': pd.Series([7.0, 4.3, 5.6])}
df = pd.DataFrame(d)

print sum(abs(x - y) for x, y in itertools.combinations(df['Average ""A"" Level'], 2))
</code></pre>
",""
"23343450","1","","<p>Dependencies:
BeautifulSoup==3.2.1</p>

<pre><code>In: from BeautifulSoup import BeautifulSoup
In: BeautifulSoup('&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;')
Out: &lt;p&gt;&lt;/p&gt;&lt;p&gt;123&lt;/p&gt;
</code></pre>

<p>Why are the two adjacent tags not in the output?</p>
","<python><beautifulsoup>"
"23343469","2","23342532","<p><code>query</code> performs a full parse of a Python <em>expression</em> (with some limits, e.g., you can't use <code>lambda</code> expressions or ternary <code>if</code>/<code>else</code> expressions). This means that any columns that you refer to in your query string <strong>must</strong> be a valid Python identifier (a more formal word for ""variable name""). One way to check this is to use the <code>Name</code> pattern lurking in the <code>tokenize</code> module:</p>

<pre><code>In [156]: tokenize.Name
Out[156]: '[a-zA-Z_]\\w*'

In [157]: def isidentifier(x):
   .....:     return re.match(tokenize.Name, x) is not None
   .....:

In [158]: isidentifier('adsf')
Out[158]: True

In [159]: isidentifier('1adsf')
Out[159]: False
</code></pre>

<p>Now since your column names have spaces, each word separated by spaces will be evaluated as separate identifier so you'll have something like</p>

<pre><code>df.query(""annual rate &gt; 1"")
</code></pre>

<p>which is invalid Python syntax. Try typing <code>annual rate</code> into a Python interpreter and you'll get a <code>SyntaxError</code> exception.</p>

<p>Take home message: rename your columns to be valid variable names. You won't be able to do this programmatically (at least, easily) unless your columns follow some kind of structure. In your case you could do</p>

<pre><code>In [166]: cols
Out[166]: ['annual rate', '1/2 annual rate', 'monthly rate']

In [167]: list(map(lambda x: '_'.join(x.split()).replace('1/2', 'half'), cols))
Out[167]: ['annual_rate', 'half_annual_rate', 'monthly_rate']
</code></pre>

<p>Then you can format the query string similar to @acushner's example</p>

<pre><code>In [173]: newcols
Out[173]: ['annual_rate', 'half_annual_rate', 'monthly_rate']

In [174]: ' or '.join('%s &gt; 1' % c for c in newcols)
Out[174]: 'annual_rate &gt; 1 or half_annual_rate &gt; 1 or monthly_rate &gt; 1'
</code></pre>

<h3>Note: You don't actually <em>need</em> to use <code>query</code> here:</h3>

<pre><code>In [180]: df = DataFrame(randn(10, 3), columns=cols)

In [181]: df
Out[181]:
   annual rate  1/2 annual rate  monthly rate
0      -0.6980           0.6322        2.5695
1      -0.1413          -0.3285       -0.9856
2       0.8189           0.7166       -1.4302
3       1.3300          -0.9596       -0.8934
4      -1.7545          -0.9635        2.8515
5      -1.1389           0.1055        0.5423
6       0.2788          -1.3973       -0.9073
7      -1.8570           1.3781        0.0501
8      -0.6842          -0.2012       -0.5083
9      -0.3270          -1.5280        0.2251

[10 rows x 3 columns]

In [182]: df.gt(1).any(1)
Out[182]:
0     True
1    False
2    False
3     True
4     True
5    False
6    False
7     True
8    False
9    False
dtype: bool

In [183]: df[df.gt(1).any(1)]
Out[183]:
   annual rate  1/2 annual rate  monthly rate
0      -0.6980           0.6322        2.5695
3       1.3300          -0.9596       -0.8934
4      -1.7545          -0.9635        2.8515
7      -1.8570           1.3781        0.0501

[4 rows x 3 columns]
</code></pre>

<p>As @Jeff noted in the comments you <em>can</em> refer to non-identifier column names, albeit in a clunky way:</p>

<pre><code>pd.eval('df[df[""annual rate""]&gt;0]')
</code></pre>

<p>I wouldn't recommended writing code like this if you want to save the lives of kittens.</p>
",""
"23343562","2","23343103","<p>Yes, yield is for generators.  That implies that when called, they return iterators.  Generators can be recursive: they will call themselves, get an iterator and the iterate over it, on each Iteration they can yield up as many or few of their own elements as they like.</p>

<p>In your example <code>permutations</code> is a generator which always returns an iterator over lists.</p>

<pre><code>if len(seq) &lt;= 1: yield seq
</code></pre>

<p>Is simple enough: in the trivial case, just generate one list, <code>seq</code> itself.</p>

<pre><code>for perm in permutations(seq[1:]):
        ...
</code></pre>

<p>Means ""now iterate over different sequence-of-lists"", in this case that is the sequence of all permutations of the elements after the first.  In each iteration we have a nested loop that inserts the first element into each position of the permutation and yields the result.</p>

<p>I hope that helps.  It's a little hard for me because I don't know exactly what you are confused about.</p>

<p><strong><em>Update:</em></strong> the OP wants to know why the first result is in reverse order.  Consider the line:</p>

<pre><code>yield perm[i:] + seq[0:1] + perm[:i]
</code></pre>

<p>For the first result <em>(i=0)</em> this is equivalent to <code>yield perm + seq[0:1]</code> -- the first element is sent to the <em>end</em> of the yielded list.  By induction, this result is the reverse of <code>seq</code>.   If you want the first result to be <code>['police', 'buffalo', 'fish']</code> then you can do:</p>

<pre><code>yield perm[:i] + seq[0:1] + perm[i:]
</code></pre>
",""
"23343575","2","23343450","<p>That is just BS3's parser fixing your <a href=""http://www.w3.org/TR/html401/struct/text.html#h-9.3.1"" rel=""nofollow"">broken html</a>.</p>

<blockquote>
  <p>The P element represents a paragraph. It cannot contain block-level
  elements (including P itself).</p>
</blockquote>
",""
"23343585","2","23343450","<p>This</p>

<pre><code>&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;
</code></pre>

<p>is not valid HTML. <code>p</code>s can't be nested. BS tries to clean it up.</p>

<p>When BS encounters the second <code>&lt;p&gt;</code> it thinks the first <code>p</code> is finished, so it inserts a closing <code>&lt;/p&gt;</code>. The second  <code>&lt;/p&gt;</code> in your input then does not match an opening <code>&lt;p&gt;</code> so it is removed.</p>
",""
"23343652","2","23343254","<p>I think you need to append a prefix <code>http://</code> or <code>https://</code> to <code>""www.google.com""</code>. Otherwise Flask is treating that as a relative url inside app.
So below will be a 404 as it's going to ""localhost:5000/www.google.com""</p>

<pre>
@app.route('/test')
def test():
    return redirect(""www.google.com"")
</pre>

<p>But if you try with <code>http://</code>, it should work fine.</p>

<pre>
@app.route('/test')
def test():
    return redirect(""http://www.google.com"")
</pre>
",""
"23343666","2","23343450","<p>This is because <code>BeautifulSoup</code> has this <a href=""http://www.crummy.com/software/BeautifulSoup/bs3/documentation.html#Customizing%20the%20Parser"" rel=""nofollow""><code>NESTABLE_TAGS</code></a> concept/setting:</p>

<blockquote>
  <p>When Beautiful Soup is parsing a document, it keeps a stack of open
  tags. Whenever it sees a new start tag, it tosses that tag on top of
  the stack. But before it does, it might close some of the open tags
  and remove them from the stack. Which tags it closes depends on the
  qualities of tag it just found, and the qualities of the tags in the
  stack.</p>
  
  <p>So when Beautiful Soup encounters a <code>&lt;P&gt;</code> tag, it closes and pops all
  the tags up to and including the previously encountered tag of the
  same type. This is the default behavior, and this is how
  BeautifulStoneSoup treats every tag. It's what you get when a tag is
  not mentioned in either NESTABLE_TAGS or RESET_NESTING_TAGS. It's also
  what you get when a tag shows up in RESET_NESTING_TAGS but has no
  entry in NESTABLE_TAGS, the way the <code>&lt;P&gt;</code> tag does.</p>
</blockquote>

<pre><code>&gt;&gt;&gt; pprint(BeautifulSoup.NESTABLE_TAGS)
{'bdo': [],
 'blockquote': [],
 'center': [],
 'dd': ['dl'],
 'del': [],
 'div': [],
 'dl': [],
 'dt': ['dl'],
 'fieldset': [],
 'font': [],
 'ins': [],
 'li': ['ul', 'ol'],
 'object': [],
 'ol': [],
 'q': [],
 'span': [],
 'sub': [],
 'sup': [],
 'table': [],
 'tbody': ['table'],
 'td': ['tr'],
 'tfoot': ['table'],
 'th': ['tr'],
 'thead': ['table'],
 'tr': ['table', 'tbody', 'tfoot', 'thead'],
 'ul': []}
</code></pre>

<p>As a workaround, you can allow <code>p</code> tag to be inside <code>p</code>:</p>

<pre><code>&gt;&gt;&gt; from BeautifulSoup import BeautifulSoup
&gt;&gt;&gt; BeautifulSoup.NESTABLE_TAGS['p'] = ['p']
&gt;&gt;&gt; BeautifulSoup('&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;')
&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;
</code></pre>

<p>Also, <code>BeautifulSoup</code> 3rd version is no longer maintained - you should switch to <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/"" rel=""nofollow""><code>BeautifulSoup4</code></a>.</p>

<p>When using <code>BeautifulSoup4</code>, you can change the underlying <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-a-parser"" rel=""nofollow"">parser</a> to change the behavior:</p>

<pre><code>&gt;&gt;&gt; from bs4 import BeautifulSoup
&gt;&gt;&gt; BeautifulSoup('&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;')
&lt;html&gt;&lt;body&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
&gt;&gt;&gt; BeautifulSoup('&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;', 'html.parser')
&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;
&gt;&gt;&gt; BeautifulSoup('&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;', 'xml')
&lt;?xml version=""1.0"" encoding=""utf-8""?&gt;
&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;
&gt;&gt;&gt; BeautifulSoup('&lt;p&gt;&lt;p&gt;123&lt;/p&gt;&lt;/p&gt;', 'html5lib')
&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;123&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
</code></pre>
",""
"23343709","1","","<p>Say I have a list of strings and a dictionary specifying replacements:</p>

<p>E.g. </p>

<pre><code>my_replacements = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}
</code></pre>

<p>and a list of strings, where each string can possibly include keys from the above dictionary, e.g:</p>

<pre><code>['I own 1/2 bottle', 'Give me 3/4 of the profit']
</code></pre>

<p>How can I apply the replacements to the list? What would be a Pythonic way to do this?</p>
","<python>"
"23343729","2","23343370","<p>Unless your view is named 'view' in the urlconf, you should use the full python dotted import path in the tag. For example:</p>

<pre><code>{% url 'my_app.views.my_view' obj.id %}
</code></pre>

<p>If you want to test it properly, you can also use the django shell</p>

<pre><code>python manage.py shell
</code></pre>

<p>and try the 'reverse' function:</p>

<pre><code>from django.core.urlresolvers import reverse
reverse('my_app.views.my_view' args=[1])

&gt;&gt; '/my/awesome/url/1'
</code></pre>

<p>edit: also make sure that you didn't namespace your urls, if you did, you should include the namespace in the url tag:</p>

<pre><code>{% url 'namespace:view' obj.id %}
</code></pre>

<p>another edit, because I have a feeling this might be it. I apologise for abusing the answer system instead of comments, but since I'm only starting out my reputation is too low.</p>

<p>Can you post the full urlconfig from your root urls.py up until the 'misbehaving' url? I have had cases where an url captured a group (say, an ID) and then included a bunch of other urls, leading to two required arguments for the reverse function.</p>
",""
"23343753","2","23343254","<p>Make sure you append ""http://"" in front of the url before passing it in redirect.</p>

<pre><code>s = form.next.data
if s is not None:
    if s.find(""http://"") != 0 and s.find(""https://"") != 0:
        s = ""http://"" + s
    return redirect(s)
</code></pre>
",""
"23343767","1","","<p>I've made this little calculator which I tried compliling with cx_freeze. It calculates something and gives you the answer in messagebox. Works all fine when I run it from IDLE, but when I run it from .exe, it opens the GUI created with Tkinter, but if I press my calculate button, which should pop up the messagebox, it gives me following error in dos shell:</p>

<p>'Exception in Tkinter callback
Traceback (most recent call last):
  File ""C:\Python32\lib\tkinter__init__.py"", line 1399, in <strong>call</strong>
    return self.func(*args)
  File ""calculator1.pyw"", line 46, in energyKinetic
NameError: global name 'messagebox' is not defined'</p>

<p>I use the following 'setup.py':</p>

<pre><code>from cx_Freeze import setup, Executable


setup(
    name = 'Kinetic Energy Calculator',
    version = '0.1',
    description = 'Calculate',
    executables = [Executable('calculator1.pyw')],
)
</code></pre>

<p>and run it with 'C:\Python32>python setup.py build' from cmd.</p>

<p>The code for calculator itself is just siple Tkinter GUI, with buttons, labels, entries, and messageboxes, so I don't see a reson for posting it here, unless of course someone will find it necessery for me to do so.
So, is there anything important I didn't put in the setup.py for it to compile correctly?</p>
","<python><python-3.x><compilation><tkinter><cx-freeze>"
"23343788","2","23343709","<pre><code>a = ['I own 1/2 bottle', 'Give me 3/4 of the profit']
b = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}

def replace(x):
    for what, new in b.items(): # or iteritems in Python 2
        x = x.replace(what, new)
    return x

print(list(map(replace, a)))
</code></pre>

<p>Output:</p>

<pre><code>['I own half bottle', 'Give me three quarters of the profit']
</code></pre>
",""
"23343844","2","23343709","<p>I'd use something like this:</p>

<pre><code>def replace_all(replacements, s):
    for old, new in replacements.items():
        s = s.replace(old, new)
    return s

my_replacements = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}
strings = ['I own 1/2 bottle', 'Give me 3/4 of the profit']

print "", "".join(replace_all(my_replacements, x) for x in strings)
</code></pre>

<p><strong>Output:</strong></p>

<pre><code>I own half bottle, Give me three quarters of the profit
</code></pre>
",""
"23343864","1","","<p>I have a project where different threads and functions are logging to the same <code>StreamHandler()</code> log in the console using different loglevels some of which are custom. </p>

<p>My log is formatted to do:</p>

<pre><code>streamformatter = logging.Formatter(fmt='%(levelname)s:\t%(threadName)s:\t%(funcName)s:\t\t%(message)s', datefmt='%H:%M:%S')
</code></pre>

<p>This makes my log by default look garbled like this where it isnt really pretty to look at or easy to see when what function is being called and from which thread.</p>

<pre><code>INFO:   COM14-fwcif-listener :  _receive_v32:       my_success: Sending 24 lines to formatter
DB_TRACE:   COM14-fwcif-listener :  _format_and_log_v32:        {""prompt"": ""undef-COM14"", ""x_type"": ""tracelogentry"", ""y_time"": 1392695506.044583, ""z_msg"": ""....""}
INFO:   COM13-fwutil-listener:  _receive_v32:       my_success: Sending 10 lines to formatter
DB_TRACE:   COM13-fwutil-listener:  _format_and_log_v32:        {""prompt"": ""undef-COM13"", ""x_type"": ""tracelogentry"", ""y_time"": 1392695507.356714, ""z_msg"": ""....""}
INFO:   MainThread: _parse:     my_resolve after 4.9784979820251465 seconds and 29 vs 8 attempts
MY_INFO:    MainThread: _parse:     my_success for cmd ""trig"" =&gt;&gt; ""not ready"". COM12.ISREADY now set to True
INFO:   MainThread: send:       my_success. Lock being released: &lt;_thread.RLock owner=7512 count=1&gt; with cmd ""format c:"" and state COM12.ISREADY = False
INFO:   COM12-fwmain-listener:  _receive_v32:       my_success: Number of lines split by S65 is 2 of 16 total lines
INFO:   COM12-fwmain-listener:  _format_and_log_v32:        my_resolve ""S65&gt;"" added as COM12.lastlinefragment
INFO:   COM12-fwmain-listener:  _format_and_log_v32:        my_success: 575 chars written to log.   Prompt and type detected is ""S65&gt;"" and ""replylogentry: format""
DB_REPLY:   COM12-fwmain-listener:  _format_and_log_v32:        {""prompt"": ""S65&gt;"", ""x_type"": ""replylogentry: format"", ""y_time"": 1392695510.41302, ""z_msg"": ""...""}
INFO:   MainThread: _parse:     my_resolve  searching for ""format""=&gt;""Unknown command"" in string ""...""
</code></pre>
","<python><logging><string-formatting>"
"23343865","2","23343864","<p>The width of each token can be specified in the <code>streamformatter</code> in this way to produce a log output in fixed colons:</p>

<pre><code>streamformatter = logging.Formatter(fmt='%(levelname)-10s:  %(threadName)-20s: %(funcName)-20s:  %(message)s', datefmt='%H:%M:%S')
</code></pre>
",""
"23343873","2","23343246","<p>This is bit tricky. But you can do like this.</p>

<pre><code>while 1:
    mode = input(""Generate S1(0) or S2(1)?\n"")
    if mode == ""0"":
        mode = ""S1""
    elif mode == ""1"":
        mode = ""S2""
    else:
        print(""Mode not recogised!"")
        continue
    break
</code></pre>
",""
"23343919","1","","<p>I am attempting to merge two CSV files based on a specific field in each file. </p>

<p><strong>file1.csv</strong></p>

<pre><code>id,attr1,attr2,attr3
1,True,7,""Purple""
2,False,19.8,""Cucumber""
3,False,-0.5,""A string with a comma, because it has one""
4,True,2,""Nope""
5,True,4.0,""Tuesday""
6,False,1,""Failure""
</code></pre>

<p><strong>file2.csv</strong></p>

<pre><code>id,attr4,attr5,attr6
2,""python"",500000.12,False
5,""program"",3,True
3,""Another string"",-5,False
</code></pre>

<p>This is the code I am using:</p>

<pre><code>import csv
from collections import OrderedDict

with open('file2.csv','r') as f2:
    reader = csv.reader(f2)
    fields2 = next(reader,None) # Skip headers
    dict2 = {row[0]: row[1:] for row in reader}

with open('file1.csv','r') as f1:
    reader = csv.reader(f1)
    fields1 = next(reader,None) # Skip headers
    dict1 = OrderedDict((row[0], row[1:]) for row in reader)

result = OrderedDict()
for d in (dict1, dict2):
    for key, value in d.iteritems():
        result.setdefault(key, []).extend(value)

with open('merged.csv', 'wb') as f:
    w = csv.writer(f)
    for key, value in result.iteritems():
        w.writerow([key] + value)
</code></pre>

<p>I get output like this, which merges appropriately, but does not have the same number of attributes for all rows:</p>

<pre><code>1,True,7,Purple
2,False,19.8,Cucumber,python,500000.12,False
3,False,-0.5,""A string with a comma, because it has one"",Another string,-5,False
4,True,2,Nope
5,True,4.0,Tuesday,program,3,True
6,False,1,Failure
</code></pre>

<p><code>file2</code> will not have a record for every <code>id</code> in <code>file1</code>. I'd like the output to have empty fields from <code>file2</code> in the merged file. For example, <code>id</code> 1 would look like this:</p>

<pre><code>1,True,7,Purple,,,
</code></pre>

<p>How can I add the empty fields to records that don't have data in <code>file2</code> so that all of my records in the merged CSV have the same number of attributes?</p>
","<python><csv><merge>"
"23343923","1","","<p>I have looked in PyCharms FILE-SETTINGS-FILE STRUCTURE and I can see only a small directory which houses all my .py files.  The indexer appears however to dance around a large proportion of the file system and is now taking sometimes 15 minutes at a time to complete.</p>

<p>I was wonder firstly what purpose has indexing, and secondly how can I limit the PyCharms indexing list.</p>
","<python><python-3.x><indexing><pycharm>"
"23343957","2","23343103","<p>The code you've given works according to this algorithm:</p>

<ol>
<li>If the sequence has one item or is empty, the only permutation is the sequence itself</li>
<li>Separate the sequence into its first element, and the list of all its remaining elements</li>
<li>Consider all the permutations of the remainder of the sequence, according to this same algorithm. For each permutation:
<ol>
<li>For each position in the permutation: 
<ol>
<li>Split the permutation at that position</li>
<li>Insert the first element of the original sequence in that split. This is a new permutation of the original sequence.</li>
</ol></li>
</ol></li>
<li>Done.</li>
</ol>

<p>The original code is slightly strange in how it achieves point 3.1.2. We can make it this a little bit clearer by using more variables to show the relationship to the algorithm more clearly - this assumes you're using Python 3:</p>

<pre><code>def permutations(seq):
    if len(seq) &lt;= 1: 
        yield seq 
    else:
        first, *rest = seq
        for perm in permutations(rest):
            for i in range(len(perm)+1):
                before = perm[:i]
                after = perm[i:]
                yield after + [first] + before
</code></pre>

<p>As you can see, the final line switches the start and end of the permutation for no real reason. It could just as easily do <code>before + [first] + after</code>, but the author decided not to. This doesn't affect how the algorithm works - it will find <em>all</em> the orderings, including the mirrored ones - but it means the order it produces them in might be a little strange.</p>

<hr>

<p>You can use a similar recursive generator to implement <code>reverse</code> as well. In this case, the algorithm is:</p>

<ol>
<li>If the sequence only has one item or is empty, it is its own reverse</li>
<li>Split the sequence into its first element and the list of all remaining elements</li>
<li>Use this algorithm to reverse the remaining elements</li>
<li>Yield each item of the result of the last step</li>
<li>Yield the first element of the original sequence</li>
</ol>

<p>In Python, it looks like this:</p>

<p>def reverse(seq):
      if len(seq) &lt;= 1:
          return seq</p>

<pre><code>  first, *rest = seq
  for item in reverse(rest):
       yield item
  # Or you could use:
  #  yield from reverse(rest)
  # Instead of the above loop
  yield first
</code></pre>
",""
"23344009","2","23343709","<p>I have used <strong>Dictionary-Based Formatting Expressions</strong>.</p>

<p><strong>Docs:</strong> <a href=""https://docs.python.org/2/library/string.html#format-examples"" rel=""nofollow"">https://docs.python.org/2/library/string.html#format-examples</a></p>

<pre><code>my_replacements = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}
c = 'I own %(1/2)s bottle, Give me %(3/4)s of the profit' % my_replacements
print(c)
# I own half bottle, Give me three quarters of the profit
</code></pre>
",""
"23344122","2","23343709","<p>O(n) solution:</p>

<pre><code>reps = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}
li = ['I own 1/2 bottle', 'Give me 3/4 of the profit']

map(lambda s: ' '.join([reps.get(w,w) for w in s.split()]),li)
Out[6]: ['I own half bottle', 'Give me three quarters of the profit']

#for those who don't like `map`, the list comp version:
[' '.join([reps.get(w,w) for w in sentence.split()]) for sentence in li]
Out[9]: ['I own half bottle', 'Give me three quarters of the profit']
</code></pre>

<p>The issue with making lots of <code>replace</code> calls in a loop is that it makes your algorithm O(n**2).  Not a big deal when you have a replacement dict of length 3, but when it gets large, suddenly you have a really slow algorithm that doesn't need to be.</p>

<p>As noted in comments, this approach fundamentally depends on being able to tokenize based on spaces - thus, if you have any whitespace in your replacement keys (say, you want to replace a series of words) this approach will not work.  However being able to replace only-words is a far more frequent operation than needing to replace groupings-of-words, so I disagree with the commenters who believe that this approach isn't generic enough.</p>
",""
"23344282","2","23343709","<p>Use <code>re.sub</code>.</p>

<pre><code>import re

my_replacements = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}
strings = ['I own 1/2 bottle', 'Give me 3/4 of the profit']

print [re.sub(r'\d/\d', lambda x: my_replacements[x.group()], string) for string in strings]
</code></pre>

<p>output:</p>

<pre><code>['I own half bottle', 'Give me three quarters of the profit']
</code></pre>
",""
"23344295","2","23343767","<p>You will have to create custom messageboxes with tkinter windows, as the actual ones somehow don't exist when trying to launch a program other than hitting the F5 button. In other words, you can't resolve it. You have to create new windows.</p>
",""
"23344716","2","23343767","<p>You also forgot to add the base option:</p>

<pre><code>    setup(
        name = 'Kinetic Energy Calculator',
        version = '0.1',
        description = 'Calculate',
        executables = [Executable('calculator1.pyw', base=""Win32GUI"")]
        )
</code></pre>

<p>Although it still won't work, tkinter will now be recognized.</p>
",""
"23344804","2","23343923","<p>Indexing considers all the directories in the <code>PYTHONPATH</code>. You can have an idea of what these are printing <code>sys.path</code>:</p>

<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.path
['', '/usr/lib/python2.7', '/usr/lib/python2.7/plat-x86_64-linux-gnu', '/usr/lib/python2.7/lib-tk', '/usr/lib/python2.7/lib-old', '/usr/lib/python2.7/lib-dynload', '/usr/local/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages', '/usr/lib/python2.7/dist-packages/PILcompat', '/usr/lib/python2.7/dist-packages/gtk-2.0', '/usr/lib/pymodules/python2.7', '/usr/lib/python2.7/dist-packages/ubuntu-sso-client']
</code></pre>

<p>As you can see there are a few directories in the path by default. These depend on the OS and python version.</p>

<p>In particular there are system-wide <code>dist-packages</code> (previously called <code>site-packages</code>) directories (<code>/usr/lib/python2.7/dist-packages</code>) in this example. That's where most packages are installed.</p>

<p>PyCharm will look into these directories, parse all the contents of the packages/modules it finds in order to obtain information about their structure and everything they define. This allows to implement autocompletion for them when you write code inside the editor, or things like jumping to the declaration/usage of something.</p>

<p>You can find a list of these directories in the projects settings under <em>Python Interpreters</em>. On the bottom there is a tabbed view that has a <em>Paths</em> tab which lists these directories.</p>

<p>As far as I know it's not possible to avoid indexing (at least searching <em>indexing</em> in the settings doesn't turn out anything useful from this point of view). However you could use <em>fresh</em> virtual environments for your projects which wouldn't require a system-wide scan.
Also using an environment that contains <em>only</em> the dependencies that your project needs can help you in understanding its structure and it avoids errors such as wrongly uninstall a package that was required.</p>

<p>In the <em>Python Interpreters</em> page, at the very bottom, there's a <em>create new VirtualEnv</em> that allows you to create a virtual environment from inside PyCharm.</p>

<hr>

<p>Note that <em>not</em> doing indexing means that all the features of PyCharm that relates to looking up sources (e.g. autocompletion, jump to declaration, show usages etc) will not work for the not-indexed packages/modules.</p>
",""
"23345216","2","23343919","<p>You can use <a href=""http://pandas.pydata.org/"" rel=""nofollow""><code>pandas</code></a> to do this:</p>

<pre><code>import pandas

csv1 = pandas.read_csv('filea1.csv')
csv2 = pandas.read_csv('file2.csv')
merged = csv1.merge(csv2, on='id')
merged.to_csv(""output.csv"", index=False)
</code></pre>

<p>I haven't tested this yet but it should put you on the right track until I can try it out. The code is quite self-explanatory; first you import the <code>pandas</code> library so that you can use it. Then using <code>pandas.read_csv</code> you read the 2 csv files and use the <code>merge</code> method to merge them. The <code>on</code> parameter specifies which column should be used as the ""key"". Finally, the merged csv is written to <code>output.csv</code>.</p>
",""
"23345244","2","23341566","<p>You've misunderstood something fundamental. The windowed sinc filter is designed to separate linearly combined frequencies; i.e. frequencies combined through addition, not frequencies combined through multiplication. See <a href=""http://www.dspguide.com/ch5.htm"" rel=""nofollow noreferrer"">chapter 5</a> of The Scientist and Engineer's Guide to
Digital Signal Processing for more details. </p>

<p>Code based on scipy.signal will provide similar results to your code:</p>

<pre><code>from pylab import *
import scipy.signal as signal

# create an array of 1024 points sampled at 40MHz
# [each sample is 25ns apart]
Fs = 40e6
nyq = Fs / 2
T  = 1/Fs
t  = np.arange(0,(1024*T),T)

# create an ip signal sampled at Fs, using two frequencies 
F_low  = 25e3 #  25kHz
F_high = 1e6  #  1MHz
ip_1 = np.sin(2*np.pi*F_low*t) + np.sin(2*np.pi*F_high*t)
ip_2 = np.sin(2*np.pi*F_low*t) * np.sin(2*np.pi*F_high*t)

Fc = 0.9e6
Length = 101

# create a low pass digital filter
a = signal.firwin(Length, cutoff = F_high / nyq, window=""hann"")

# create a high pass filter via signal inversion
a = -a
a[Length/2] = a[Length/2] + 1

figure()
plot(a, 'ro')

# apply the high pass filter to the two input signals
op_1 = signal.lfilter(a, 1, ip_1)
op_2 = signal.lfilter(a, 1, ip_2)

figure()
plot(ip_1)
figure()
plot(op_1)
figure()
plot(ip_2)
figure()
plot(op_2)
</code></pre>

<p>Impulse Response:</p>

<p><img src=""https://i.stack.imgur.com/548qN.png"" alt=""Impulse Response""></p>

<p>Linearly Combined Input:</p>

<p><img src=""https://i.stack.imgur.com/sZKsM.png"" alt=""Linearly Combined Input""></p>

<p>Filtered Output:</p>

<p><img src=""https://i.stack.imgur.com/1MZmF.png"" alt=""Linearly Combined Output""></p>

<p>Non-linearly Combined Input:</p>

<p><img src=""https://i.stack.imgur.com/bPSQ6.png"" alt=""Non-linearly Combined Input""></p>

<p>Filtered Output:</p>

<p><img src=""https://i.stack.imgur.com/Zus7i.png"" alt=""Non-linearly Combined Output""></p>
",""
"23345276","2","23343919","<p>If we're not using <code>pandas</code>, I'd refactor to something like</p>

<pre><code>import csv
from collections import OrderedDict

filenames = ""file1.csv"", ""file2.csv""
data = OrderedDict()
fieldnames = []
for filename in filenames:
    with open(filename, ""rb"") as fp: # python 2
        reader = csv.DictReader(fp)
        fieldnames.extend(reader.fieldnames)
        for row in reader:
            data.setdefault(row[""id""], {}).update(row)

fieldnames = list(OrderedDict.fromkeys(fieldnames))
with open(""merged.csv"", ""wb"") as fp:
    writer = csv.writer(fp)
    writer.writerow(fieldnames)
    for row in data.itervalues():
        writer.writerow([row.get(field, '') for field in fieldnames])
</code></pre>

<p>which gives</p>

<pre><code>id,attr1,attr2,attr3,attr4,attr5,attr6
1,True,7,Purple,,,
2,False,19.8,Cucumber,python,500000.12,False
3,False,-0.5,""A string with a comma, because it has one"",Another string,-5,False
4,True,2,Nope,,,
5,True,4.0,Tuesday,program,3,True
6,False,1,Failure,,,
</code></pre>

<p>For comparison, the <code>pandas</code> equivalent would be something like</p>

<pre><code>df1 = pd.read_csv(""file1.csv"")
df2 = pd.read_csv(""file2.csv"")
merged = df1.merge(df2, on=""id"", how=""outer"").fillna("""")
merged.to_csv(""merged.csv"", index=False)
</code></pre>

<p>which is much simpler to my eyes, and means you can spend more time dealing with your data and less time reinventing wheels.</p>
",""
"23345962","2","23341675","<p>Since you likely have only one app instance and therefore one <code>DispatchWithEvents</code>, you could simply make the params a member of the class:</p>

<pre><code>class callBackEvents(object):
    """""" Callback Object for win32com
    """"""

    params = None

    def OnNewData(...

    ...

# populate the params field
callBackEvents.params = yourParams

self.app = win32com.client.DispatchWithEvents(""WindowsApplication"", callBackEvents)
</code></pre>

<p>You could of course make params a global but you should use globals only as a last resort or for constants.</p>
",""
"23346507","2","23343919","<p>Use dict of dict then update it. Like this:</p>

<pre><code>import csv
from collections import OrderedDict

with open('file2.csv','r') as f2:
    reader = csv.reader(f2)
    lines2 = list(reader)

with open('file1.csv','r') as f1:
    reader = csv.reader(f1)
    lines1 = list(reader)

dict1 = {row[0]: dict(zip(lines1[0][1:], row[1:])) for row in lines1[1:]}
dict2 = {row[0]: dict(zip(lines2[0][1:], row[1:])) for row in lines2[1:]}

#merge
updatedDict = OrderedDict()
mergedAttrs = OrderedDict.fromkeys(lines1[0][1:] + lines2[0][1:], ""?"")
for id, attrs in dict1.iteritems():
    d = mergedAttrs.copy()
    d.update(attrs)
    updatedDict[id] = d

for id, attrs in dict2.iteritems():
    updatedDict[id].update(attrs)

#out
with open('merged.csv', 'wb') as f:
    w = csv.writer(f)
    for id, rest in sorted(updatedDict.iteritems()):
        w.writerow([id] + rest.values())
</code></pre>
",""
"23347166","2","23342275","<p>Lists are persistent objects on their own. If you return the list from one function you can manipulate it in others:</p>

<pre><code>def get_list():
    return [1,2,3,4]


def remove_last_item( the_list):
    the_list.remove(the_list[-1]) #  remove the last entry


def insert_something(the_list, item):
    the_list.insert(item, 0)

my_list = get_list()
print my_list
# [1,2,3,4]

remove_last_item(my_list)
print my_list
# [1,2,3]

insert_something(my_list, 0)
print my_list
# [0,1,2,3]
</code></pre>
",""
"23347987","2","23343256","<p>The difference is around the <code>if __name__ == ...</code>.  On Windows, multiprocessing is a hack that works by creating new processes and re-importing the code in each of them.  I'm sure that you call <code>test(path)</code> from the top-level of another module.  The check in this function, <code>if __name__ == 'read_DataFiles':</code>, is pointless: this is always true, which means it will always start a new pool.  What you want instead is to use <code>if __name__ == '__main__'</code> from the main script, and only call <code>test(path)</code> if that is the case.</p>
",""
"23355220","1","","<p>When I try posting data to my CGI file, my CGI file says the actual post data is invalid. I am using HTML/JavaScript for the front end and Python for the backend. </p>

<p>Works:</p>

<pre><code>&lt;form name=""login"" action=""/cgi-bin/register.py"" method=""POST""&gt;
Username:&lt;input type=""text"" name=""username""&gt;&lt;br&gt;
Password:&lt;input type=""password"" name=""password""&gt;&lt;br&gt;
Confirm password:&lt;input type=""password"" name=""confirmpassword""&gt;&lt;br&gt;
&lt;/form&gt;
</code></pre>

<p>However, this causes the page to refresh. I am trying to avoid this and have text display within the same page(without reloading). Hence, I have chosen to use an XMLHTTPRequest to asynchronously process this event.</p>

<p>This is what I want to achieve:</p>

<pre><code>&lt;script&gt;
function validateLogin()
{
var username = document.getElementById(""username"").value;
var password = document.getElementById(""password"").value;

if (username.length &lt;= 0 || password.length &lt;= 0)
  {
  document.alert(""The username or password cannot be blank"");
  return;
  }

var xmlhttp;

    if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
        xmlhttp=new XMLHttpRequest();
  } else {// code for IE6, IE5
        xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP"");
  }

xmlhttp.onreadystatechange=function()
    {
        if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)
        {
            document.getElementById(""resultText"").innerHTML=xmlhttp.responseText;
        }else if (xmlhttp.readyState==4) {
            document.write(xmlhttp.status + xmlhttp.statusText);
        }
}

xmlhttp.open(""POST"",""/cgi-bin/login.cgi"",true);
xmlhttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded; charset=UTF-8')
xmlhttp.send(""username="" + username + ""&amp;password="" + password);
}
&lt;/script&gt;
</code></pre>

<p>CGI File:</p>

<pre><code>#!/usr/bin/python

import cgi
from dbmanager import openConnection
from passlib.hash import sha256_crypt

s = ""Content-type: text/html\n\n\n""

form = cgi.FieldStorage()

username = form[""username""].value
password = form[""password""].value
message = None
</code></pre>

<p>I am getting an error in python stating <code>Bad header=FieldStorage(None, None,</code></p>

<p>I don't get this error when I do it the first way, but the second way is giving me this error. I <strong>need</strong> it to work the second way.</p>
","<javascript><python><html><cgi>"
"23355253","1","","<p>Using the following example:</p>

<pre><code>arrays = [['one','one','one','two','two','two'],[1,2,3,1,2,3]]
df = pd.DataFrame(np.random.randn(6,2),index=pd.MultiIndex.from_tuples(zip(*arrays)),columns=['A','B'])
</code></pre>

<p>As expected this apply works over the groupby object:</p>

<pre><code>df.groupby(level=0).apply(lambda x: pd.rolling_mean(x, window=3, center=True))
</code></pre>

<p>However, when specifying options for apply it throws up an error:</p>

<pre><code>df.groupby(level=0).apply(lambda x: pd.rolling_mean(x, window=3, center=True), raw=True)    
TypeError: &lt;lambda&gt;() got an unexpected keyword argument 'raw'
</code></pre>

<p>I can't figure out where I have gone wrong. </p>

<p>Note: It seems to work fine for non MultiIndex objects</p>

<p><a href=""https://stackoverflow.com/questions/23100450/pandas-timing-difference-between-function-and-apply-to-series"">Pandas: Timing difference between Function and Apply to Series</a></p>
","<python><pandas>"
"23355422","2","23355253","<p>There are different <code>apply</code> methods for <code>DataFrame</code>s and <code>GroupBy</code> objects. Only <code>DataFrame.apply</code> has a <code>raw</code> argument:</p>

<pre><code>help(df.apply)
# Output:
Help on method apply in module pandas.core.frame:

apply(self, func, axis=0, broadcast=False, raw=False, reduce=None, args=(), **kwds) method of pandas.core.frame.DataFrame instance
    Applies function along input axis of DataFrame.
...
</code></pre>

<p>Whereas for the groupby:</p>

<pre><code>grouped = df.groupby(level=0)
help(grouped.apply)
# Output:
Help on method apply in module pandas.core.groupby:

apply(self, func, *args, **kwargs) method of pandas.core.groupby.DataFrameGroupBy instance
</code></pre>
",""
"23364364","2","23342329","<blockquote>
  <p>In the last line of my code, I'm able to use <code>__get__</code> with b object and instance: <code>type(b)</code>. This only works if method <code>b</code> is defined in <code>class B</code>. Why is it so?</p>
</blockquote>

<p>You have to define a method <code>b</code> in class <code>B</code>, because in <code>A.b</code> you have <code>print self.b</code>. Here, <code>self</code> is an instance of the B class, so <code>self.b</code> means ""the <code>b</code> method belonging to this <code>B</code>"", not ""the <code>b</code> method belonging to the class that this method exists in"". If you delete <code>print self.b</code>, then the code will work even if <code>B</code> has no <code>b</code>.</p>

<blockquote>
  <p>Even though the last line requires me to provide a method <code>b</code> in <code>class B</code>, still the method <code>b</code> in <code>class A</code> gets called. Why is it so?</p>
</blockquote>

<p><code>A.b</code> is being called because you are explicitly accessing it with <code>type( o ).__dict__['b']</code>. Whether you bind that method to an A instance or a B instance doesn't matter; it's still <code>A.b</code>.</p>

<blockquote>
  <p>To my utter surprise, after the above step, I notice that the method <code>a</code> of <code>class A</code> is not called by the code of method <code>b</code> of <code>class A</code>; instead, it calls the method <code>a</code> of <code>class B</code>. Why is it so?</p>
</blockquote>

<p>Even though <code>b</code> belongs to the class <code>A</code>, the <code>self</code> you pass to it is still an instance of the <code>B</code> class. Any attributes you access on that <code>self</code> will be <code>B</code> attributes, and any methods you call on it will be <code>B</code> methods.</p>
",""
"23369561","2","23318329","<p>Don't worry about that message -- that's not an error -- from the output above, it looks like Bulbs is installed. Start up Rexster and and then try it out...</p>

<pre><code>&gt;&gt;&gt; from bulbs.rexster import Graph
&gt;&gt;&gt; g = Graph()
&gt;&gt;&gt; james = g.vertices.create(name=""James"")
&gt;&gt;&gt; julie = g.vertices.create(name=""Julie"")
&gt;&gt;&gt; g.edges.create(james, ""knows"", julie)
</code></pre>
",""
"23370556","1","","<p>I need to record 24-bit audio (because it's the archival standard for audio digitization). However, the wave library seems to only go up to 16-bit.</p>

<p>It looks like pyaudio can work with 24-bit audio but every example I've found shows pyaudio using the wave library, meaning it has to save 16-bit.</p>

<p>Is it possible to record and playback 24-bit audio with pyaudio?</p>
","<python><audio><pyaudio>"
"23372062","2","23342591","<p><code>?</code> parameters are intended to avoid formatting problems for SQL strings (and other problematic data types like floating-point numbers and blobs).</p>

<p>LIKE/GLOB wildcards work on a different level; they are always part of the string itself.
SQL allows to escape them, but there is no default escape character; you have to choose some with the <a href=""http://www.sqlite.org/lang_expr.html#like"" rel=""nofollow"">ESCAPE clause</a>:</p>

<pre><code>escaped_foo = my_like_escape(foo, ""\\"")
c.execute(""UPDATE cookies SET count = ? WHERE nickname LIKE ? ESCAPE '\',
          (cookies, escaped_foo))
</code></pre>

<p>(And you have to write your own <code>my_like_escape</code> function for <code>%</code> and <code>_</code> (LIKE) or <code>*</code> and <code>?</code> (GLOB).)</p>
",""
"23373630","2","23328963","<p>Your matplotlib is probably using a GUI backend other than wxPython, so whatever it is using will have its own equivallent to the MainLoop() call.  That means that control does not return to the wx MainLoop until the plot window is closed, so none of the wx event handlers can be called.</p>

<p>To resolve this you can tell matplotlib to use its ""wxagg"" backend instead of whatever it is defaulting to.  Something like this:</p>

<pre><code>import wx
import matplotlib
matplotlib.use('wxagg')
</code></pre>
",""
"23380978","2","23342080","<p>Currently, upload will only push files that are created by a distutils sdist/bdist command run from the same command line than upload, e.g. <code>python setup.py sdist upload</code>.  If you run <code>sdist</code>, check the result, and then do <code>sdist upload</code>, the second sdist should be exactly the same, unless your setup.py is buggy, you made changes to your files or you have a computer problem.  (I agree that’s a lot of unless).</p>

<p>A trick can be used to avoid the second sdist to redo all its work: Fist you run <code>python setup.py sdist --keep-temp</code>, then you check the sdist, and to upload you call <code>python setup.py sdist --dry-run upload</code>.</p>

<p>There is an open enhancement request to improve this in the next feature release: <a href=""http://bugs.python.org/issue12944"" rel=""nofollow"">http://bugs.python.org/issue12944</a></p>

<p>In the meantime, you can use <a href=""https://pypi.python.org/pypi/twine/"" rel=""nofollow"" title=""twine"">twine</a>.</p>
",""
"23382803","2","23342525","<p>Thanks to Brian's comment, I solved my issue.
My call was rejected directly by Apache when the slash was encoded.</p>

<p>I've added <a href=""http://httpd.apache.org/docs/2.2/mod/core.html#allowencodedslashes"" rel=""nofollow"">AllowEncodedSlashes</a> Directive in my apache conf:</p>

<pre><code>AllowEncodedSlashes NoDecode
</code></pre>

<p>With the key encoded with :</p>

<pre><code>encodeURIComponent(key)
</code></pre>

<p>It works.</p>
",""
"23386287","2","61151","<h2>Only 1 test file</h2>

<p>If doesn't have many test files, putting it in a top-level directory is nice (I think this is a pythonic (recommended) way):</p>

<pre><code>module/
  lib/
    __init__.py
    module.py
  test.py
</code></pre>

<h2>Many test files</h2>

<p>If has many test files, put it in a <code>tests</code> folder:</p>

<pre><code>module/
  lib/
    __init__.py
    module.py
  tests/
    test_module.py
    test_module2.py
</code></pre>

<p>but if you put the tests in <code>tests</code> folder, test can't <code>import ..lib</code> in CLI because <code>__main__</code>  can't import relative modules, so instead we can use <a href=""https://nose.readthedocs.org/en/latest/"" rel=""nofollow noreferrer""><kbd>nose</kbd></a>, or we can add a parent directory to the python import path, and for that I will create a</p>

<h3>env.py</h3>

<pre><code>import sys
import os

# append module root directory to sys.path
sys.path.append(
    os.path.dirname(
        os.path.dirname(
            os.path.abspath(__file__)
        )
    )
)
</code></pre>

<p>in</p>

<pre><code>module/
  tests/
    test_module.py
    env.py
</code></pre>

<p>and <code>import env</code> before test import module</p>

<h3>test_module.py</h3>

<pre><code>import unittest
# append parent directory to import path
import env
# now we can import the lib module
from lib import module

if __name__ == '__main__':
    unittest.main()
</code></pre>
",""
"23398982","2","23330014","<p>Ok.</p>

<p>So reading <a href=""http://redmine.lighttpd.net/boards/2/topics/1420"" rel=""nofollow"">this</a> post, I see that my use of the werkzeug.contrib.fixers.CGIRootFix has led me to define the scope of my fcgi as ""/"", which takes precedence over the url and rewrite rules for ""/static"".  Wrapping the fcgi server in a condition to exclude requests for urls beginning with ""/static"" fixes the problem with no static content being served.</p>

<p>Here's the working fastcgi.conf:</p>

<pre><code>server.modules += ( ""mod_fastcgi"" )
$HTTP[""url""] !~ ""^/static"" {
    fastcgi.server = (""/"" =&gt;
        ((  
            ""socket"" =&gt; ""/tmp/webpdb-fcgi.sock"",
            ""bin-path"" =&gt; ""/opt/local/www/xyz/webxyz.fcgi"",
            ""check-local"" =&gt; ""disable"",
            ""max-procs"" =&gt; 1
        ))  
    )   
}

alias.url = ( 
    ""/static"" =&gt; ""/opt/local/www/xyz/app/static""
)

url.rewrite-once = ( 
    #""^(/static($|/.*))$"" =&gt; ""$1"",
    ""^(/static.*)$"" =&gt; ""$1"",
    ""^(/.*)$"" =&gt; ""/webxyz.fcgi$1""
)
</code></pre>
",""
"23410684","2","23370556","<p>Yes it is possible. You just have to take the <a href=""http://people.csail.mit.edu/hubert/pyaudio/#examples"" rel=""nofollow"">record example</a> of PyAudio and replace <code>pyaudio.paInt16</code> by <code>pyaudio.paInt24</code>.</p>

<pre><code>import pyaudio
import wave

CHUNK = 1024
FORMAT = pyaudio.paInt24
CHANNELS = 2
RATE = 44100
RECORD_SECONDS = 5
WAVE_OUTPUT_FILENAME = ""output.wav""

p = pyaudio.PyAudio()

stream = p.open(format=FORMAT,
                channels=CHANNELS,
                rate=RATE,
                input=True,
                frames_per_buffer=CHUNK)

print(""* recording"")

frames = []

for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
    data = stream.read(CHUNK)
    frames.append(data)

print(""* done recording"")

stream.stop_stream()
stream.close()
p.terminate()

wf = wave.open(WAVE_OUTPUT_FILENAME, 'wb')
wf.setnchannels(CHANNELS)
wf.setsampwidth(p.get_sample_size(FORMAT))
wf.setframerate(RATE)
wf.writeframes(b''.join(frames))
wf.close()
</code></pre>
",""
"23411609","2","23343709","<p>If you expect the strings in the list to have many matches and are doing the replacements for <code>my_replacements</code> for a large size list or on many lists, then it might make sense to construct a pattern and use <code>re.sub</code>. The following solution, unlike user2931409 doesn't require any special structure to the replacements, and it should perform at least as well as roippi's solution, because it doesn't make multiple passes over the input strings either:</p>

<pre><code>import re

my_replacements = {'1/2': 'half', '1/4': 'quarter', '3/4': 'three quarters'}

l = ['I own 1/2 bottle', 'Give me 3/4 of the profit']

def do_replacement(match):
    return my_replacements[match.group(0)]

r = re.compile('|'.join('(?:%s)' % (re.escape(k)) for k in my_replacements.keys()))

[r.sub(s, do_replacement) for s in l]
</code></pre>
",""
"23452830","2","23328908","<p>My problem was to access the C struct underlying a python dictionary implemented in Cpython 3.3. I started with the C structs provided in cpython/Objects/dictobject.c and Include/dictobject.h . Three C structs are involved in defining the dictionary: PyDictObject, PyDictKeysObject, and PyDictKeyEntry. The correct translation of each C struct into python is as follows. The comments indicate where I needed to make fixes. Thank you to @eryksun for guiding me along the way!!</p>

<pre><code>class PyDictKeyEntry(Structure):
""""""An entry in a dictionary.""""""
    _fields_ = [
        ('me_hash', c_ulong),
        ('me_key', py_object),
        ('me_value', py_object),
    ]

class PyDictObject(Structure):
    """"""A dictionary object.""""""
    pass

LOOKUPFUNC = CFUNCTYPE(POINTER(PyDictKeyEntry), POINTER(PyDictObject), py_object, c_ulong, POINTER(POINTER(py_object)))

class PyDictKeysObject(Structure):
""""""An object of key entries.""""""
    _fields_ = [
        ('dk_refcnt', c_ssize_t),
        ('dk_size', c_ssize_t),
        ('dk_lookup', LOOKUPFUNC),  # a function prototype per docs 
        ('dk_usable', c_ssize_t),
        ('dk_entries', PyDictKeyEntry * 1),  # an array of size 1; size grows as keys are inserted into dictionary; this variable-sized field was the trickiest part to translate into python
    ]   

PyDictObject._fields_ = [
    ('ob_refcnt', c_ssize_t),  # Py_ssize_t translates to c_ssize_t per ctypes docs
    ('ob_type', c_void_p),     # could not find this in the docs
    ('ma_used', c_ssize_t),
    ('ma_keys', POINTER(PyDictKeysObject)),
    ('ma_values', POINTER(py_object)),  # Py_Object* translates to py_object per ctypes docs
]

PyDictKeysObject._dk_entries = PyDictKeysObject.dk_entries
PyDictKeysObject.dk_entries = property(lambda s: cast(s._dk_entries, POINTER(PyDictKeyEntry * s.dk_size))[0])  # this line is called every time the attribute dk_entries is accessed by a PyDictKeyEntry instance; it returns an array of size dk_size starting at address _dk_entries. (POINTER creates a pointer to the entire array; the pointer is dereferenced (using [0]) to return the entire array); the code then accesses the ith element of the array)
</code></pre>

<p>The following function provides access to the PyDictObject underlying the python dictionary:</p>

<pre><code>def dictobject(d):
    """"""Return the PyDictObject lying behind the Python dict `d`.""""""
    if not isinstance(d, dict):
        raise TypeError('cannot create a dictobject from %r' % (d,))
    return cast(id(d), POINTER(PyDictObject)).contents
</code></pre>

<p>If d is a python dictionary with key-value pairs, then obj is the PyDictObject instance that contains the key-value pairs:</p>

<pre><code>obj = cast(id(d), POINTER(PyDictObject)).contents
</code></pre>

<p>An instance of the PyDictKeysObject is:</p>

<pre><code>key_obj = obj.ma_keys.contents
</code></pre>

<p>A pointer to the key stored in slot 0 of the dictionary is:</p>

<pre><code>key_obj.dk_entries[0].me_key
</code></pre>

<p>The program that uses these classes, together with routines that probe the hash collisions of each key inserted into a dictionary, is located <a href=""https://gist.github.com/LeslieK/11196050"" rel=""nofollow"">here</a>. My code is a modification of code written by Brandon Rhodes for python 2.x. His code is <a href=""https://bitbucket.org/brandon/pycon2010-mighty-dictionary/src/f432ae61c5df/figures/_dictinfo.py"" rel=""nofollow"">here</a>.</p>
",""
"23457291","2","23329291","<p>Jobtastic was a great idea, but not quite what worked for us.  In the end, decided to create an incrementing job number (stored in Redis alongside results and broker), push all celery task id's associated with that job number into a python object, then pickle and store that in redis.  We can then use that later to see if the entire ""job"" is complete, or the status thereof.  For our purposes, works just lovely.</p>
",""
"23477798","2","15585493","<p>Consider using <a href=""https://pythonhosted.org/joblib/memory.html"" rel=""nofollow"">joblib.Memory</a> for persistent caching to the disk.</p>

<p>Since the disk is enormous, there's no need for an LRU caching scheme.</p>
",""
"23480334","2","23317994","<p>You have three basic options.</p>

<ol>
<li><p>have your coworkers import hy as dg123 wrote.</p></li>
<li><p>use a python package and import hy yourself in your packages __init __.py file. Your coworkers can then just import your modules.</p></li>
<li><p>compile your module using hyc and deploy the .pyc file which your coworkers can import as normal python module.</p></li>
</ol>
",""
"23564883","1","","<p>I am a matlab coder and have dabbled in and out of Python for various things.  One very basic concept/thing in python which I have not got to the bottom of relates to the from and import statements.  </p>

<p>When i import bitarray from the bitarray module (am I correct saying this?) using example 1) I just call it's methods when I want to use them in the script that follows.  However, when i import numpy I cannot use the code shown in 2) as it throws an error, i have to use the statement in 3) then type np. before using any of its methods, which makes sense.  I can also import bitarray using similer syntax which i have shown in 4) below.......  why does 2) not work when 1) does? I am praying for a simple explanation :) .....   </p>

<p>1)</p>

<pre><code>from bitarray import bitarray
</code></pre>

<p>2)</p>

<pre><code>from numpy import numpy
</code></pre>

<p>3)</p>

<pre><code>import numpy as np
</code></pre>

<p>4)</p>

<pre><code>import bitarray as pp
</code></pre>
","<python><matlab><python-2.7><numpy>"
"23565013","2","23564883","<p>1) If <code>bitarray</code> is a <em>function</em> or <em>class</em> name in the <em>library</em> <code>bitarray</code> then it is perfectly valid. </p>

<p>2) This doesn't make sense because <code>numpy</code> doesn't have a function named <code>numpy</code>. </p>

<p>3) This is fine because you are importing a library and assigning it an alias. </p>

<p>4) This is fine as well because again you are simply importing under an alias.</p>
",""
"23565016","2","23564883","<p>This is due to the different package structures between <code>bitarray</code> and <code>numpy</code>; specifically, one contains an object with the same name as the module itself, the other doesn't. </p>

<p>The <code>bitarray</code> module contains a class called <code>bitarray</code>, (similarly, for the example, the <code>datetime</code> module in the standard library contains the <code>datetime</code> class) . Hence the following are equivalent:</p>

<pre><code>from bitarray import bitarray
ba = bitarray(...)
</code></pre>

<p>and</p>

<pre><code>import bitarray
ba = bitarray.bitarray(...)
</code></pre>

<p>In the former we <code>import</code> the <em>class</em> <code>bitarray</code> directly into the current namespace from the module; in the latter we import the <em>whole module</em> as <code>bitarray</code> and need to access the class by specifying the module namespace.</p>

<p>By contrast, <code>numpy</code> does not contain an object named <code>numpy</code>, so</p>

<pre><code>from numpy import numpy 
</code></pre>

<p>doesn't work.</p>

<hr>

<p>The <code>as</code> is separate; that simply allows you to provide an alias for whatever you're importing, so any of the following will work fine:</p>

<pre><code>import numpy as np
a = np.array(...)

from bitarray import bitarray as pp
b = pp(...)

import bitarray as pp
b = pp.bitarray(...)
</code></pre>

<hr>

<p>As <code>mauve</code> comments above, you can use the <code>*</code> ""wildcard import"" to import everything, so:</p>

<pre><code>from numpy import *
from bitarray import *
</code></pre>

<p>will import every top-level name in both modules into the current namespace. Afterwards, e.g.</p>

<pre><code>a = array(...)
b = bitarray(...)
</code></pre>

<p>will both work fine. However, this is <a href=""http://legacy.python.org/dev/peps/pep-0008/#imports"" rel=""nofollow noreferrer"">not recommended</a> as it is generally a bad idea - for example, <a href=""https://stackoverflow.com/questions/23562849/how-to-use-a-built-in-function-if-its-name-is-used-by-another-module""><code>numpy</code> contains a definition of <code>all</code></a> which will shadow the built-in function of the same name if you import everything. </p>

<p>Also, it makes it much more difficult for anyone reading your code (including a later version of you!) to figure out where the classes and functions being used have come from. Compare:</p>

<pre><code>from numpy import *
from random import *

a = choice([1, 2, 3]) # which module did choice come from?
b = all(x == y for x in l) # is this numpy's all or the built-in?
</code></pre>

<p>with the much clearer:</p>

<pre><code>import numpy as np
import random

a = random.choice([1, 2, 3]) # clearly from random
b = all(x == y for x in l) # must be the built-in, not np.all()
</code></pre>
",""
"23705104","2","23318219","<p>The problem here is not with <code>chr()</code>; the problem is simply that the Windows console cannot display the characters in question. Thank you to all who helped me figure this out in the comments.</p>
",""
"23937693","2","61517","<p>I think the easiest way is to create a <strong>getitem</strong> attribute for the class. If you need to write to the object, you can create a custom <strong>setattr</strong> . Here is an example for <strong>getitem</strong>:</p>

<pre><code>&gt;&gt;&gt; class A(object):
...     def __init__(self):
...         self.b = 1
...         self.c = 2
...     def __getitem__(self, item):
...         return self.__dict__[item]
... 
&gt;&gt;&gt; a = A()
&gt;&gt;&gt; a.__getitem__('b')
</code></pre>

<p><strong>dict</strong> generates the objects attributes into a dictionary and the dictionary object can be used to get the item you need.</p>
",""
"24003603","2","23328588","<p>The following uses the <code>threading</code> module to do two parallel <code>ping</code> tests, one on each of two interfaces.  For future work, use the <a href=""https://docs.python.org/2/library/multiprocessing.html"" rel=""nofollow"">multiprocessing</a> module with <code>Pool()</code> and <code>imap_unordered()</code> -- it's a lot easier.</p>

<pre><code># INSTALL:
#   sudo apt-get install python-scapy
# RUN:
#   sudo /usr/bin/python ./pping.py

import sys, Queue, threading
from scapy import all as S

IFACE_LIST = 'wlan0','lo'


# pylint:disable=E1101
def run_ping(iface, out_q):
    host = '8.8.8.8'
    pkt = S.Ether()/S.IP(dst=host, ttl=(1,3))/S.ICMP() 
    ans,_unans = S.srp(pkt, iface=iface, timeout=2) 
    out_q.put( (iface,ans) )


result_q = Queue.Queue()
for iface in IFACE_LIST:
    threading.Thread(
        target=run_ping, args=(iface, result_q)
    ).start()

for t in threading.enumerate():
    if t != threading.current_thread():
        t.join()

print 'result:', dict( [
    result_q.get()
    for _ in range(result_q.qsize())
    ] )
</code></pre>

<p>Output:</p>

<pre><code>Begin emission:
Begin emission:
..Finished to send 3 packets.
*Finished to send 3 packets.
...**
Received 5 packets, got 3 answers, remaining 0 packets
....................
Received 23 packets, got 0 answers, remaining 3 packets
result: {'lo': &lt;Results: TCP:0 UDP:0 ICMP:0 Other:0&gt;, 'wlan0': &lt;Results: TCP:0 UDP:0 ICMP:3 Other:0&gt;}
</code></pre>
",""
"24021549","1","","<p>In python, it's very easy to get the count of a particular item in a list:</p>

<pre><code>&gt;&gt;&gt; L = [1,1,1,2,3,4]
&gt;&gt;&gt; print(L.count(1))
3
</code></pre>

<p>Is this method O(N)? Is it advisable to use this method, or are there better ways of quickly getting the count of an arbitrary number of elements in a list (i.e. a way to avoid O(mN), where m is the number of records for which a call to <code>count</code> is required).</p>
","<python><performance>"
"24021568","2","24021549","<p>Yes, use <a href=""https://docs.python.org/2/library/collections.html#counter-objects"" rel=""nofollow""><code>collections.Counter</code></a> if you need to count more than one time through the iterable.  Then you will only have to iterate once.</p>

<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; counter = Counter('hellooo i am a potato!!!!!')
&gt;&gt;&gt; counter.most_common(2)
[('o', 5), ('!', 5)]
</code></pre>
",""
"24021579","1","","<p>I am trying to draw text using PIL into an image with arbitrary resolution. My current code is a result of consulting the following two questions <a href=""https://stackoverflow.com/questions/8257147/wrap-text-in-pil"">here</a> and <a href=""https://stackoverflow.com/questions/7698231/python-pil-draw-multiline-text-on-image"">here</a>. In both of these answers, the width value for <code>textwrap.wrap</code> was set as such: <code>width=40</code>. However, with arbitrarily changing parameters <code>size_x</code> and <code>size_y</code> this results in overfitting or underfitting the scope of image. Ideally, I would need a way to convert the size of the font into height and width pixel values in PIL but I am unsure how to do it. Here is the code as I have it now:</p>

<pre><code>from PIL import Image
from PIL import ImageFont
from PIL import ImageDraw 
import textwrap

size_x = 946 #This value can arbitrarily change
size_y = 300 #This value can arbitrarily change
font_size = 16 #This value can be adjusted to fit parameters of image if necessary

my_text = ['Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam scelerisque sapien convallis nisl facilisis, sed facilisis odio accumsan. Maecenas vel leo eu turpis porta dictum at vel neque. Donec sagittis felis non tellus lacinia facilisis. Vivamus vel nisi ullamcorper, feugiat lorem sagittis, pellentesque dolor. Curabitur est magna, feugiat ut nibh quis, blandit vestibulum nisl. Sed pulvinar condimentum purus et rutrum. Proin magna arcu, scelerisque at gravida ut, convallis quis orci. Mauris ipsum tortor, laoreet et leo ac, lacinia euismod tellus. Curabitur volutpat nisi a metus faucibus, vel iaculis nisl fermentum. Curabitur et orci id sapien porttitor dignissim at ac dolor. Donec nec mattis nisi. ']

tx = Image.new('RGB', (size_x, size_y),color=(255,255,255))
draw = ImageDraw.Draw(tx)

my_font = ImageFont.truetype('/Windows/Fonts/arial.ttf',size=font_size)
lines = textwrap.wrap(my_text[0], width = 130) #This width value needs to be set automatically
y_text = 0
for line in lines:
    width, height = my_font.getsize(line)
    draw.text((0, y_text), line, font = my_font, fill = (0,0,0))
    y_text += height

tx.show()
</code></pre>

<p>Example image with <code>width=130</code> which is filling fairly well.</p>

<p><img src=""https://i.stack.imgur.com/Mo0RW.png"" alt=""width = 130""></p>

<p>Example image with <code>width=200</code> which is overfilling.</p>

<p><img src=""https://i.stack.imgur.com/BgqWB.png"" alt=""width = 200""></p>
","<python><python-3.x><python-imaging-library>"
"24028185","2","60848","<p>What you can do is insert the values with a key representing the order inputted, and then call <code>sorted()</code> on the items.</p>

<pre><code>&gt;&gt;&gt; obj = {}
&gt;&gt;&gt; obj[1] = 'Bob'
&gt;&gt;&gt; obj[2] = 'Sally'
&gt;&gt;&gt; obj[3] = 'Joe'
&gt;&gt;&gt; for k, v in sorted(obj.items()):
...     print v
... 
Bob
Sally
Joe
&gt;&gt;&gt; 
</code></pre>
",""
"24042323","2","24021579","<p>PIL's <code>textwrap.wrap()</code>'s takes a <code>width</code> which specifies the maximum number of <em>characters</em> in a line. In my opinion this is poor library design, as it's more useful to specify a maximum number of <em>pixels</em>, or <em>inches</em>. This matters because you probably have a bounding box in pixels, and variable-width fonts mean that a character count is somewhat useless.</p>

<p>One option is to use a fixed-width font. Then the character count is a simple division.</p>

<p>Another is to search for the maximum <code>width</code> that does not overflow your box. I'd set this up like a binary search, <code>start=1</code>, <code>end=len(string)</code>. <code>pivot=(end+start)/2</code>.
Do the wrapping with <code>width=pivot</code>, then find the <code>max(font.getsize(line) for line in wrapping)</code>.</p>

<ul>
<li>If that <code>max</code> is bigger than the bounding box, recurse left. (<code>end=pivot</code>)</li>
<li>Else, repeat for <code>width=pivot+1</code>. If that overflows, you found your maximum <code>width</code>.</li>
<li>If it doesn't, recurse right. (<code>start=pivot</code>)</li>
</ul>

<p>This isn't optimal in general because individual lines might need different wrapping widths (and hence why I think this API is terrible), but if you're doing paragraphs then it should be pretty decent.</p>
",""
"24072395","2","23343137","<p>See this issue in the Light Table issue tracker: <a href=""https://github.com/LightTable/Python/issues/16"" rel=""nofollow"">https://github.com/LightTable/Python/issues/16</a></p>

<p>One solution recommended there:</p>

<ol>
<li>Open C:\Program Files\LightTable\plugins\python\python_compiled.js</li>
<li>On line 96 replace <code>lt.plugins.python.escape_spaces.call(null,lt.plugins.python.py_path)</code> with <code>lt.plugins.python.py_path</code></li>
<li>Save file and restart Light Table</li>
</ol>

<p><sub>Credit to GitHub user gpiancastelli for finding this solution.</sub></p>
",""
"24090402","2","111954","<p>I happen to be stuck with an FTP server (Rackspace Cloud Sites virtual server) that doesn't seem to support MLSD. Yet I need several fields of file information, such as size and timestamp, not just the filename, so I have to use the DIR command. On this server, the output of DIR looks very much like the OP's. In case it helps anyone, here's a little Python class that parses a line of such output to obtain the filename, size and timestamp.</p>

<p>import datetime</p>

<pre><code>class FtpDir:
    def parse_dir_line(self, line):
        words = line.split()
        self.filename = words[8]
        self.size = int(words[4])
        t = words[7].split(':')
        ts = words[5] + '-' + words[6] + '-' + datetime.datetime.now().strftime('%Y') + ' ' + t[0] + ':' + t[1]
        self.timestamp = datetime.datetime.strptime(ts, '%b-%d-%Y %H:%M')
</code></pre>

<p>Not very portable, I know, but easy to extend or modify to deal with various different FTP servers.</p>
",""
"24175755","1","","<p>I'm trying to make a HTTPS web server.  Here is my code...</p>

<pre><code>import tornado.escape
import tornado.ioloop
import tornado.web
import tornado.httpserver
import settings
import os
import ssl

class Application(tornado.web.Application):
    def __init__(self):
        handlers = [
            (r'/login', LoginPage),
        ]
        args = {
            'template_path': settings.TEMPLATE_PATH,
            'static_path': settings.STATIC_PATH,
            'debug': True,
            'cookie_secret': settings.COOKIE_SECRET,
            'login_url': settings.LOGIN_URL,
        }

        tornado.web.Application.__init__(self, handlers, **args)

class LoginPage(tornado.web.RequestHandler):
    def get(self):
        self.write(""SSL. Yay!"")


if __name__ == '__main__':
    applicaton = Application()
    ssl_options = {'certfile': os.path.join(settings.SSL_PATH, 'certificate.crt'),
                   'keyfile': os.path.join(settings.SSL_PATH, 'privateKey.key'),
    }
    http_server = tornado.httpserver.HTTPServer(applicaton, ssl_options=ssl_options)
    http_server.listen(8888)
    tornado.ioloop.IOLoop.instance().start()
</code></pre>

<p>I generated my certificate.crt and privateKey.key using the following command...</p>

<pre><code>openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout privateKey.key -out certificate.crt
</code></pre>

<p>When I run the server and go to localhost:8888/login I get the following error...</p>

<pre><code>/usr/bin/python2 /home/user/dev/sslserver/main.py
WARNING:root:SSL Error on 9 ('127.0.0.1', 55303): [Errno 1] _ssl.c:509: error:1407609C:SSL routines:SSL23_GET_CLIENT_HELLO:http request
WARNING:root:SSL Error on 10 ('127.0.0.1', 55304): [Errno 1] _ssl.c:509: error:1407609C:SSL routines:SSL23_GET_CLIENT_HELLO:http request
WARNING:root:SSL Error on 9 ('127.0.0.1', 55305): [Errno 1] _ssl.c:509: error:1407609C:SSL routines:SSL23_GET_CLIENT_HELLO:http request
</code></pre>

<p>If I remove the ssl_options=ssl_options the webpage displays fine.  Am I missing an argument for ssl_options?  I'm new to certificates and ssl so any advice on how to get this working would be greatly appreciated.  Thanks!</p>
","<python><ssl><certificate><tornado>"
"24175785","1","","<p>In JavaScript, a module's default object can be set using ""module.exports"":</p>

<pre><code>MyCache = require(""./MyCache"");
cache = new MyCache();
</code></pre>

<p>Similar behavior can be achieved in Python with:</p>

<pre><code>from MyCache import Create as MyCache
cache = MyCache()
</code></pre>

<p>...but is it possible to set a default object in Python?</p>

<pre><code>import MyCache
cache = MyCache()
</code></pre>
","<python><module>"
"24175789","2","24175755","<p>You should not use SSL to a <code>localhost</code> hostname connection. SSL + HTTPS use a certificate with your domain name, and use this to provide authentication.</p>

<p>Since you are connecting to <code>localhost</code>, your hostname (localhost) will not match the hostname on the certificate and you will receive a certificate error.</p>

<p>There are some ways to hack around this, but I would just non-SSL (regular HTTP) on your local machine, and then when you push to your server (with your proper domain name), you can enable SSL.</p>
",""
"24175863","2","24175785","<p>No.  When you import a module, you import a module.  You can't make a module masquerade as something else.  If you want to import a class, you can already do that very simply using <code>from module import SomeClass</code> as in your example.</p>
",""
"24186051","2","24175755","<p>You need to explicitly go to <code>https://localhost:8888</code> (not just <code>localhost:8888</code>).  Without the https:// prefix, the browser is sending unencrypted http; that's what the ""http request"" error message from openssl means.  You can't serve http and https on the same port, but you can start up a second HTTPServer without ssl_options on a different port.</p>
",""
"24587109","2","23355220","<p>JavaScript doesn't post the right values because of wrong HTML elements properties.</p>

<p>Try changing the <code>name</code> property of elements <code>username</code> and <code>password</code> into <code>id</code> property as requested by your JavaScript code.</p>

<p>The result will be something like this:</p>

<p><code>&lt;form name=""login"" action=""/cgi-bin/register.py"" method=""POST""&gt;
Username:&lt;input type=""text"" id=""username""&gt;&lt;br&gt;
Password:&lt;input type=""password"" id=""password""&gt;&lt;br&gt;
Confirm password:&lt;input type=""password"" id=""confirmpassword""&gt;&lt;br&gt;
&lt;/form&gt;</code></p>
",""
"24623323","1","","<p>My question is I generated a function to store the 10-fold cross-validation scores for each of the stepwise models within each classifier. For example, for Naive Bayes, I have two models, one only use one variable but others use two. The similar to decision tree model. The function is something like</p>

<pre><code>def crossV(clf):
    cvOutcome=pd.DataFrame()
    index=pd.DataFrame()
    classifier=pd.DataFrame()
    for i in range(4)[2:]:
        tt=array(tuple(x[1:i] for x in modelDataFullnew))
        qq=array(tuple(x[0] for x in modelDataFullnew))
        scores=cross_validation.cross_val_score(clf, tt, qq, cv=10)*100
        index_i=list(np.repeat(i-1,10))
        classifier_i=list(np.repeat(str(clf)[:-2],10))
        scores=list(scores)
        cvOutcome=cvOutcome.append(scores)
        index=index.append(index_i)
        classifier=classifier.append(classifier_i)
    merge=pd.concat([index,cvOutcome,classifier],axis=1)
    merge.columns=['model','rate','classifier']
    return(merge)

from sklearn.naive_bayes import GaussianNB as gnb
clf_nb=gnb()
from sklearn import tree
clf_dt=tree.DecisionTreeClassifier()
</code></pre>

<p>If I do <code>crossV(clf_nb)</code> it will give me the result as </p>

<pre><code>    model   rate    classifier
   1     92.558679   GaussianNB
   1     92.558381   GaussianNB
   1     92.558381   GaussianNB
   1     92.558381   GaussianNB
   1     92.558381   GaussianNB
</code></pre>

<p>My question is how can I apply this function to several classifiers and append their result as a long data frame like</p>

<pre><code>    model   rate    classifier
   1     92.558679   GaussianNB
   1     92.558381   GaussianNB
   1     92.558381   GaussianNB
   1     92.558381   GaussianNB
   1     92.558381   GaussianNB
   1     93.25       DecisionTree
   1     93.25       DecisionTree
</code></pre>

<p>i tried this code but it does not work:</p>

<pre><code>hhh=[clf_nb,clf_dt]

g=pd.DataFrame()
while i in hhh:
    g=g.append(crossV(i))
</code></pre>

<p>I also tried map function in array like </p>

<pre><code>map(crossV,(clf_nb,clf_dt)) 
</code></pre>

<p>It works but just give me a larger list and I don't know how to transform it to data frame.</p>
","<python><pandas><append><scikit-learn>"
"24623955","2","24623323","<pre><code>clf = [clf_nb, clf_dt]

cross_clf = [ crossV(x) for x in clf ]

df = pd.concat( cross_clf )
</code></pre>

<hr>

<p><strong>EDIT:</strong></p>

<p>Example to your question in comment:</p>

<p>I need <code>i = clf_nb</code> or <code>i = clf_nb</code> to starts <code>while</code></p>

<pre><code>hhh = [clf_nb, clf_dt]

g = pd.DataFrame()

i = clf_nb

while i in hhh: # if `clf_nb` is still on the list `hhh` then ...
    g.append( crossV(i) ) # append `clf_nb` to the `g`
</code></pre>

<p>but <code>i</code> is all the time equils <code>clf_nb</code> and <code>clf_nb</code> is all the time on list <code>hhh</code> so you have endless loop which always add <code>clf_nb</code> to <code>g</code></p>
",""
"24645517","2","23330013","<p>This code for example will iterate the loop and will print val1
only if val2 == someval.</p>

<pre><code>for val1, val2 in some_list:
    if val2 != someval:
        continue
    print val1
</code></pre>
",""
"24816814","2","13857","<p>In Python, a closure is an instance of a function that has variables bound to it immutably.</p>

<p>In fact, the <a href=""https://docs.python.org/3.3/reference/datamodel.html#the-standard-type-hierarchy"" rel=""nofollow"">data model explains this</a> in its description of functions' <code>__closure__</code> attribute: </p>

<blockquote>
  <p>None or a <strong>tuple of cells</strong> that contain bindings for the function’s free variables. Read-only</p>
</blockquote>

<p>To demonstrate this:</p>

<pre><code>def enclosure(foo):
    def closure(bar):
        print(foo, bar)
    return closure

closure_instance = enclosure('foo')
</code></pre>

<p>Clearly, we know that we now have a function pointed at from the variable name <code>closure_instance</code>. Ostensibly, if we call it with an object, <code>bar</code>, it should print the string, <code>'foo'</code> and whatever the string representation of <code>bar</code> is.</p>

<p>In fact, the string 'foo' <em>is</em> bound to the instance of the function, and we can directly read it here, by accessing the <code>cell_contents</code> attribute of the first (and only) cell in the tuple of the <code>__closure__</code> attribute:</p>

<pre><code>&gt;&gt;&gt; closure_instance.__closure__[0].cell_contents
'foo'
</code></pre>

<p>As an aside, cell objects are described in the C API documentation:</p>

<blockquote>
  <p><a href=""https://docs.python.org/2/c-api/cell.html"" rel=""nofollow"">""Cell"" objects are used to implement variables referenced by multiple
  scopes</a></p>
</blockquote>

<p>And we can demonstrate our closure's usage, noting that <code>'foo'</code> is stuck in the function and doesn't change:</p>

<pre><code>&gt;&gt;&gt; closure_instance('bar')
foo bar
&gt;&gt;&gt; closure_instance('baz')
foo baz
&gt;&gt;&gt; closure_instance('quux')
foo quux
</code></pre>

<p>And nothing can change it:</p>

<pre><code>&gt;&gt;&gt; closure_instance.__closure__ = None
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: readonly attribute
</code></pre>

<h3>Partial Functions</h3>

<p>The example given uses the closure as a partial function, but if this is our only goal, the same goal can be accomplished with <code>functools.partial</code></p>

<pre><code>&gt;&gt;&gt; from __future__ import print_function # use this if you're in Python 2.
&gt;&gt;&gt; partial_function = functools.partial(print, 'foo')
&gt;&gt;&gt; partial_function('bar')
foo bar
&gt;&gt;&gt; partial_function('baz')
foo baz
&gt;&gt;&gt; partial_function('quux')
foo quux
</code></pre>

<p>There are more complicated closures as well that would not fit the partial function example, and I'll demonstrate them further as time allows.</p>
",""
"24948797","2","15586721","<p>As in the source code of nltk.corpus.reader.wordnet (<a href=""http://www.nltk.org/_modules/nltk/corpus/reader/wordnet.html"" rel=""nofollow"">http://www.nltk.org/_modules/nltk/corpus/reader/wordnet.html</a>)</p>

<pre><code>#{ Part-of-speech constants
 ADJ, ADJ_SAT, ADV, NOUN, VERB = 'a', 's', 'r', 'n', 'v'
#}
POS_LIST = [NOUN, VERB, ADJ, ADV]
</code></pre>
",""
"25034401","2","60649","<p>If you want a portable, easy to use, multi-language and <a href=""http://zeromq.org/intro:commercial-support"" rel=""nofollow noreferrer"">LGPL</a>ed solution, I would recommend you <a href=""http://zeromq.org/"" rel=""nofollow noreferrer"">ZeroMQ</a>:</p>

<ul>
<li>Amazingly fast, almost linear scaleable and still simple.</li>
<li>Suitable for simple and complex systems/architectures.</li>
<li>Very powerful communication patterns available: REP-REP, PUSH-PULL, PUB-SUB, PAIR-PAIR.</li>
<li>You can configure the transport protocol to make it more efficient if you are passing messages between threads (<strong><code>inproc://</code></strong>), processes (<strong><code>ipc://</code></strong>) or machines (<strong><code>{tcp|pgm|epgm}://</code></strong>), with a smart option to shave off some part of the protocol overheads in case of connections are running between VMware virtual machines (<strong><code>vmci://</code></strong>).</li>
</ul>

<p>For serialization I would suggest <a href=""http://msgpack.org/index.html"" rel=""nofollow noreferrer"">MessagePack</a> or Protocol Buffers (which other have already mentioned as well), depending on your needs.</p>
",""
"25124099","2","15600707","<p>@Emily's solution is fine, but there's another way to solve this problem without importing that class.</p>

<p>You just need to give the full name space of the exception class you want to catch:</p>

<pre><code>except urllib2.HTTPError:
</code></pre>

<p>This way you need fewer <code>import</code> clauses in your code, and it's easier for you to tell afterwards which module raised the exception. </p>
",""
"25572580","2","23329331","<p>Without a docstring for <code>beta.fit</code>, it was a little tricky to find, but if you know the upper and lower limits you want to force upon <code>beta.fit</code>, you can use the kwargs <code>floc</code> and <code>fscale</code>.</p>

<p>I ran your code only using the <code>beta.fit</code> method, but with and without the floc and fscale kwargs. Also, I checked it with the arguments as ints and floats to make sure that wouldn't affect your answer. It didn't (on this test. I can't say if it never would.)</p>

<pre><code>&gt;&gt;&gt; from scipy.stats import beta
&gt;&gt;&gt; import numpy
&gt;&gt;&gt; def betaNLL(param,*args):
    '''Negative log likelihood function for beta
    &lt;param&gt;: list for parameters to be fitted.
    &lt;args&gt;: 1-element array containing the sample data.

    Return &lt;nll&gt;: negative log-likelihood to be minimized.
    '''

    a,b=param
    data=args[0]
    pdf=beta.pdf(data,a,b,loc=0,scale=1)
    lg=numpy.log(pdf)
    #-----Replace -inf with 0s------
    lg=numpy.where(lg==-numpy.inf,0,lg)
    nll=-1*numpy.sum(lg)
    return nll

&gt;&gt;&gt; data=beta.rvs(5,2,loc=0,scale=1,size=500)
&gt;&gt;&gt; beta.fit(data)
(5.696963536654355, 2.0005252702837009, -0.060443307228404922, 1.0580278414086459)
&gt;&gt;&gt; beta.fit(data,floc=0,fscale=1)
(5.0952451826831462, 1.9546341057106007, 0, 1)
&gt;&gt;&gt; beta.fit(data,floc=0.,fscale=1.)
(5.0952451826831462, 1.9546341057106007, 0.0, 1.0)
</code></pre>

<p>In conclusion, it seems this doesn't change your data (through normalization) or throw out data. I just think it should be noted that care should be taken when using this. In your case, you knew the limits were 0 and 1 because you got data out of a defined distribution that was between 0 and 1. In other cases, limits might be known, but if they are not known, <code>beta.fit</code> will provide them. In this case, without specifying the limits of 0 and 1, <code>beta.fit</code> calculated them to be <code>loc=-0.06</code> and <code>scale=1.058</code>.</p>
",""
"25739539","2","23318112","<p>I think the resolution is in increments of 0.1 degree. <a href=""https://dev.twitter.com/docs/api/1.1/post/statuses/filter"" rel=""nofollow"">https://dev.twitter.com/docs/api/1.1/post/statuses/filter</a></p>

<p>You will have to take all tweets of the region and filter by yourself for those that have the coordenades.</p>
",""
"26045274","2","111945","<p>You can use the requests library, it simplifies things a lot in comparison to taking the urllib2 approach. First install it from pip:</p>

<pre><code>pip install requests
</code></pre>

<p>More on <a href=""http://docs.python-requests.org/en/latest/user/install/"" rel=""nofollow"">installing requests</a>.</p>

<p>Then setup the put request:</p>

<pre><code>import requests
import json
url = 'https://api.github.com/some/endpoint'
payload = {'some': 'data'}

# Create your header as required
headers = {""content-type"": ""application/json"", ""Authorization"": ""&lt;auth-key&gt;"" }

r = requests.put(url, data=json.dumps(payload), headers=headers)
</code></pre>

<p>See the <a href=""http://docs.python-requests.org/en/latest/user/quickstart/"" rel=""nofollow"">quickstart for requests library</a>.  I think this is a lot simpler than urllib2 but does require this additional package to be installed and imported.</p>
",""
"26354620","2","38238","<p>I was asking myself the same question few times. And even though the guys here tried hard to explain it, IMHO the best answer (and simplest) answer I have found is the <a href=""https://docs.python.org/3/library/functions.html?highlight=classmethod#classmethod"" rel=""nofollow"">description</a> of the Class method in the Python Documentation.</p>

<p>There is also reference to the Static method. And in case someone already know instance methods (which I assume), this answer might be the final piece to put it all together...</p>

<p>Further and deeper elaboration on this topic can be found also in the documentation:
<a href=""https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy"" rel=""nofollow"">The standard type hierarchy</a> (scroll down to <em>Instance methods</em> section)</p>
",""
"26365795","2","36901","<blockquote>
  <h1>What does <code>**</code> (double star) and <code>*</code> (star) do for parameters</h1>
</blockquote>

<p>They allow for <strong>functions to be defined to accept</strong> and for <strong>users to pass</strong> any number of arguments, positional (<code>*</code>) and keyword (<code>**</code>).</p>

<h2>Defining Functions</h2>

<p><code>*args</code> allows for any number of optional positional arguments (parameters), which will be assigned to a tuple named <code>args</code>. </p>

<p><code>**kwargs</code> allows for any number of optional keyword arguments (parameters), which will be in a dict named <code>kwargs</code>.</p>

<p>You can (and should) choose any appropriate name, but if the intention is for the arguments to be of non-specific semantics, <code>args</code> and <code>kwargs</code> are standard names.</p>

<h2>Expansion, Passing any number of arguments</h2>

<p>You can also use <code>*args</code> and <code>**kwargs</code> to pass in parameters from lists (or any iterable) and dicts (or any mapping), respectively.</p>

<p>The function recieving the parameters does not have to know that they are being expanded. </p>

<p>For example, Python 2's xrange does not explicitly expect <code>*args</code>, but since it takes 3 integers as arguments:</p>

<pre><code>&gt;&gt;&gt; x = xrange(3) # create our *args - an iterable of 3 integers
&gt;&gt;&gt; xrange(*x)    # expand here
xrange(0, 2, 2)
</code></pre>

<p>As another example, we can use dict expansion in <code>str.format</code>:</p>

<pre><code>&gt;&gt;&gt; foo = 'FOO'
&gt;&gt;&gt; bar = 'BAR'
&gt;&gt;&gt; 'this is foo, {foo} and bar, {bar}'.format(**locals())
'this is foo, FOO and bar, BAR'
</code></pre>

<h2>New in Python 3: Defining functions with keyword only arguments</h2>

<p>You can have <a href=""https://www.python.org/dev/peps/pep-3102/"" rel=""noreferrer"">keyword only arguments</a> after the <code>*args</code> - for example, here, <code>kwarg2</code> must be given as a keyword argument - not positionally:</p>

<pre><code>def foo(arg, kwarg=None, *args, kwarg2=None, **kwargs): 
    return arg, kwarg, args, kwarg2, kwargs
</code></pre>

<p>Usage:</p>

<pre><code>&gt;&gt;&gt; foo(1,2,3,4,5,kwarg2='kwarg2', bar='bar', baz='baz')
(1, 2, (3, 4, 5), 'kwarg2', {'bar': 'bar', 'baz': 'baz'})
</code></pre>

<p>Also, <code>*</code> can be used by itself  to indicate that keyword only arguments follow, without allowing for unlimited positional arguments.</p>

<pre><code>def foo(arg, kwarg=None, *, kwarg2=None, **kwargs): 
    return arg, kwarg, kwarg2, kwargs
</code></pre>

<p>Here, <code>kwarg2</code> again must be an explicitly named, keyword argument:</p>

<pre><code>&gt;&gt;&gt; foo(1,2,kwarg2='kwarg2', foo='foo', bar='bar')
(1, 2, 'kwarg2', {'foo': 'foo', 'bar': 'bar'})
</code></pre>

<p>And we can no longer accept unlimited positional arguments because we don't have <code>*args*</code>:</p>

<pre><code>&gt;&gt;&gt; foo(1,2,3,4,5, kwarg2='kwarg2', foo='foo', bar='bar')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: foo() takes from 1 to 2 positional arguments 
    but 5 positional arguments (and 1 keyword-only argument) were given
</code></pre>

<p>Again, more simply, here we require <code>kwarg</code> to be given by name, not positionally:</p>

<pre><code>def bar(*, kwarg=None): 
    return kwarg
</code></pre>

<p>In this example, we see that if we try to pass <code>kwarg</code> positionally, we get an error:</p>

<pre><code>&gt;&gt;&gt; bar('kwarg')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: bar() takes 0 positional arguments but 1 was given
</code></pre>

<p>We must explicitly pass the <code>kwarg</code> parameter as a keyword argument.</p>

<pre><code>&gt;&gt;&gt; bar(kwarg='kwarg')
'kwarg'
</code></pre>

<h2>Python 2 compatible demos</h2>

<p><code>*args</code> (typically said ""star-args"") and <code>**kwargs</code> (stars can be implied by saying ""kwargs"", but be explicit with ""double-star kwargs"") are common idioms of Python for using the <code>*</code> and <code>**</code> notation. These specific variable names aren't required (e.g. you could use <code>*foos</code> and <code>**bars</code>), but a departure from convention is likely to enrage your fellow Python coders. </p>

<p>We typically use these when we don't know what our function is going to receive or how many arguments we may be passing, and sometimes even when naming every variable separately would get very messy and redundant (but this is a case where usually explicit is better than implicit).</p>

<p><strong>Example 1</strong></p>

<p>The following function describes how they can be used, and demonstrates behavior. Note the named <code>b</code> argument will be consumed by the second positional argument before :</p>

<pre><code>def foo(a, b=10, *args, **kwargs):
    '''
    this function takes required argument a, not required keyword argument b
    and any number of unknown positional arguments and keyword arguments after
    '''
    print('a is a required argument, and its value is {0}'.format(a))
    print('b not required, its default value is 10, actual value: {0}'.format(b))
    # we can inspect the unknown arguments we were passed:
    #  - args:
    print('args is of type {0} and length {1}'.format(type(args), len(args)))
    for arg in args:
        print('unknown arg: {0}'.format(arg))
    #  - kwargs:
    print('kwargs is of type {0} and length {1}'.format(type(kwargs),
                                                        len(kwargs)))
    for kw, arg in kwargs.items():
        print('unknown kwarg - kw: {0}, arg: {1}'.format(kw, arg))
    # But we don't have to know anything about them 
    # to pass them to other functions.
    print('Args or kwargs can be passed without knowing what they are.')
    # max can take two or more positional args: max(a, b, c...)
    print('e.g. max(a, b, *args) \n{0}'.format(
      max(a, b, *args))) 
    kweg = 'dict({0})'.format( # named args same as unknown kwargs
      ', '.join('{k}={v}'.format(k=k, v=v) 
                             for k, v in sorted(kwargs.items())))
    print('e.g. dict(**kwargs) (same as {kweg}) returns: \n{0}'.format(
      dict(**kwargs), kweg=kweg))
</code></pre>

<p>We can check the online help for the function's signature, with <code>help(foo)</code>, which tells us </p>

<pre><code>foo(a, b=10, *args, **kwargs)
</code></pre>

<p>Let's call this function with <code>foo(1, 2, 3, 4, e=5, f=6, g=7)</code> </p>

<p>which prints:</p>

<pre><code>a is a required argument, and its value is 1
b not required, its default value is 10, actual value: 2
args is of type &lt;type 'tuple'&gt; and length 2
unknown arg: 3
unknown arg: 4
kwargs is of type &lt;type 'dict'&gt; and length 3
unknown kwarg - kw: e, arg: 5
unknown kwarg - kw: g, arg: 7
unknown kwarg - kw: f, arg: 6
Args or kwargs can be passed without knowing what they are.
e.g. max(a, b, *args) 
4
e.g. dict(**kwargs) (same as dict(e=5, f=6, g=7)) returns: 
{'e': 5, 'g': 7, 'f': 6}
</code></pre>

<p><strong>Example 2</strong></p>

<p>We can also call it using another function, into which we just provide <code>a</code>:</p>

<pre><code>def bar(a):
    b, c, d, e, f = 2, 3, 4, 5, 6
    # dumping every local variable into foo as a keyword argument 
    # by expanding the locals dict:
    foo(**locals()) 
</code></pre>

<p><code>bar(100)</code> prints:</p>

<pre><code>a is a required argument, and its value is 100
b not required, its default value is 10, actual value: 2
args is of type &lt;type 'tuple'&gt; and length 0
kwargs is of type &lt;type 'dict'&gt; and length 4
unknown kwarg - kw: c, arg: 3
unknown kwarg - kw: e, arg: 5
unknown kwarg - kw: d, arg: 4
unknown kwarg - kw: f, arg: 6
Args or kwargs can be passed without knowing what they are.
e.g. max(a, b, *args) 
100
e.g. dict(**kwargs) (same as dict(c=3, d=4, e=5, f=6)) returns: 
{'c': 3, 'e': 5, 'd': 4, 'f': 6}
</code></pre>

<p><strong>Example 3: practical usage in decorators</strong></p>

<p>OK, so maybe we're not seeing the utility yet. So imagine you have several functions with redundant code before and/or after the differentiating code. The following named functions are just pseudo-code for illustrative purposes.</p>

<pre><code>def foo(a, b, c, d=0, e=100):
    # imagine this is much more code than a simple function call
    preprocess() 
    differentiating_process_foo(a,b,c,d,e)
    # imagine this is much more code than a simple function call
    postprocess()

def bar(a, b, c=None, d=0, e=100, f=None):
    preprocess()
    differentiating_process_bar(a,b,c,d,e,f)
    postprocess()

def baz(a, b, c, d, e, f):
    ... and so on
</code></pre>

<p>We might be able to handle this differently, but we can certainly extract the redundancy with a decorator, and so our below example demonstrates how <code>*args</code> and <code>**kwargs</code> can be very useful:</p>

<pre><code>def decorator(function):
    '''function to wrap other functions with a pre- and postprocess'''
    @functools.wraps(function) # applies module, name, and docstring to wrapper
    def wrapper(*args, **kwargs):
        # again, imagine this is complicated, but we only write it once!
        preprocess()
        function(*args, **kwargs)
        postprocess()
    return wrapper
</code></pre>

<p>And now every wrapped function can be written much more succinctly, as we've factored out the redundancy:</p>

<pre><code>@decorator
def foo(a, b, c, d=0, e=100):
    differentiating_process_foo(a,b,c,d,e)

@decorator
def bar(a, b, c=None, d=0, e=100, f=None):
    differentiating_process_bar(a,b,c,d,e,f)

@decorator
def baz(a, b, c=None, d=0, e=100, f=None, g=None):
    differentiating_process_baz(a,b,c,d,e,f, g)

@decorator
def quux(a, b, c=None, d=0, e=100, f=None, g=None, h=None):
    differentiating_process_quux(a,b,c,d,e,f,g,h)
</code></pre>

<p>And by factoring out our code, which <code>*args</code> and <code>**kwargs</code> allows us to do, we reduce lines of code, improve readability and maintainability, and have sole canonical locations for the logic in our program. If we need to change any part of this structure, we have one place in which to make each change.</p>
",""
"26587002","2","15599639","<p>You can use below code snippet to read line by line, till end of file</p>

<pre><code>line = obj.readline()
while(line != ''):

    # Do Something

    line = obj.readline()
</code></pre>
",""
"26635939","2","245792","<p><strong>Use a list instead of a generator when:</strong></p>

<p>1) You need to access the data <strong>multiple</strong> times (i.e. cache the results instead of recomputing them):</p>

<pre><code>for i in outer:           # used once, okay to be a generator or return a list
    for j in inner:       # used multiple times, reusing a list is better
         ...
</code></pre>

<p>2) You need <strong>random access</strong> (or any access other than forward sequential order):</p>

<pre><code>for i in reversed(data): ...     # generators aren't reversible

s[i], s[j] = s[j], s[i]          # generators aren't indexable
</code></pre>

<p>3) You need to <strong>join</strong> strings (which requires two passes over the data):</p>

<pre><code>s = ''.join(data)                # lists are faster than generators in this use case
</code></pre>

<p>4) You are using <strong>PyPy</strong> which sometimes can't optimize generator code as much as it can with normal function calls and list manipulations.</p>
",""
"26637218","2","60848","<p>Use OrderedDict(), available since version 2.7</p>

<p>Just a matter of curiosity: <br /></p>

<pre><code>from collections import OrderedDict
a = {}
b = OrderedDict()
c = OredredDict()

a['key1'] = 'value1'
a['key2'] = 'value2'

b['key1'] = 'value1'
b['key2'] = 'value2'

c['key2'] = 'value2'
c['key1'] = 'value1'

print a == b #True
print a == c #True
print b == c #False
</code></pre>
",""
"26815934","2","7781260","<p>In python2.x there was a dirty hack that served this purpose (NEVER use it unless absolutely necessary):</p>

<pre><code>None &lt; any integer &lt; any string
</code></pre>

<p>Thus the check <code>i &lt; ''</code> holds <code>True</code> for any integer <code>i</code>.</p>

<p>It has been reasonably deprecated in python3. Now such comparisons end up with</p>

<pre><code>TypeError: unorderable types: str() &lt; int()
</code></pre>
",""
"26826089","2","35988","<p>You access C-Style struct in python in following way.</p>

<pre><code>class cstruct:
    var_i = 0
    var_f = 0.0
    var_str = """"
</code></pre>

<h1>if you just want use object of cstruct</h1>

<pre><code>obj = cstruct()
obj.var_i = 50
obj.var_f = 50.00
obj.var_str = ""fifty""
print ""cstruct: obj i=%d f=%f s=%s"" %(obj.var_i, obj.var_f, obj.var_str)
</code></pre>

<h1>if you want to create an array of objects of cstruct</h1>

<pre><code>obj_array = [cstruct() for i in range(10)]
obj_array[0].var_i = 10
obj_array[0].var_f = 10.00
obj_array[0].var_str = ""ten""

#go ahead and fill rest of array instaces of struct

#print all the value
for i in range(10):
    print ""cstruct: obj_array i=%d f=%f s=%s"" %(obj_array[i].var_i, obj_array[i].var_f, obj_array[i].var_str)
</code></pre>

<p>Note:
instead of 'cstruct' name, please use your struct name
instead of var_i, var_f, var_str, please define your structure's member variable. </p>
",""
"26861507","2","36932","<pre><code>def enum(*sequential, **named):
    enums = dict(zip(sequential, [object() for _ in range(len(sequential))]), **named)
    return type('Enum', (), enums)
</code></pre>

<p>If you name it, is your problem, but if not creating objects instead of values allows you to do this:</p>

<pre><code>&gt;&gt;&gt; DOG = enum('BARK', 'WALK', 'SIT')
&gt;&gt;&gt; CAT = enum('MEOW', 'WALK', 'SIT')
&gt;&gt;&gt; DOG.WALK == CAT.WALK
False
</code></pre>

<p>When using other implementations sited here (also when using named instances in my example) you must be sure you never try to compare objects from different enums. For here's a possible pitfall:</p>

<pre><code>&gt;&gt;&gt; DOG = enum('BARK'=1, 'WALK'=2, 'SIT'=3)
&gt;&gt;&gt; CAT = enum('WALK'=1, 'SIT'=2)
&gt;&gt;&gt; pet1_state = DOG.BARK
&gt;&gt;&gt; pet2_state = CAT.WALK
&gt;&gt;&gt; pet1_state == pet2_state
True
</code></pre>

<p>Yikes!</p>
",""
"27212138","2","60208","<p>I liked <a href=""https://stackoverflow.com/a/60215/1766716"">Mark Bies's answer</a></p>

<p>Since the <code>x</code> variable must used twice, I modified the lambda functions to parameterless.</p>

<p>I have to run with  <code>results[value](value)</code></p>

<pre><code>In [2]: result = {
    ...:   'a': lambda x: 'A',
    ...:   'b': lambda x: 'B',
    ...:   'c': lambda x: 'C'
    ...: }
    ...: result['a']('a')
    ...: 
Out[2]: 'A'

In [3]: result = {
    ...:   'a': lambda : 'A',
    ...:   'b': lambda : 'B',
    ...:   'c': lambda : 'C',
    ...:   None: lambda : 'Nothing else matters'

    ...: }
    ...: result['a']()
    ...: 
Out[3]: 'A'
</code></pre>

<p><strong>Edit:</strong> I noticed that I can use <code>None</code> type with with dictionaries. So this would emulate <code>switch ; case else</code></p>
",""
"27380776","2","34439","<p>The problem with all methods indicated here is that you CAN'T be sure that a method doesn't exist.</p>

<p>In Python you can intercept the dot calling thru <code>__getattr__</code> and <code>__getattribute__</code>, making it possible to create method ""at runtime""</p>

<p>Exemple:</p>

<pre><code>class MoreMethod(object):
    def some_method(self, x):
        return x
    def __getattr__(self, *args):
        return lambda x: x*2
</code></pre>

<p>If you execute it, you can call method non existing in the object dictionary...</p>

<pre><code>&gt;&gt;&gt; o = MoreMethod()
&gt;&gt;&gt; o.some_method(5)
5
&gt;&gt;&gt; dir(o)
['__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattr__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'some_method']
&gt;&gt;&gt; o.i_dont_care_of_the_name(5)
10
</code></pre>

<p>And it's why you use the <a href=""https://docs.python.org/2/glossary.html#term-eafp"" rel=""nofollow"">Easier to ask for forgiveness than permission</a> paradigms in Python.</p>
",""
"27746465","2","60208","<p>I found that a common switch structure:</p>

<pre><code>switch ...parameter...
case p1: v1; break;
case p2: v2; break;
default: v3;
</code></pre>

<p>can be expressed in Python as follows:</p>

<pre><code>(lambda x: v1 if p1(x) else v2 if p2(x) else v3)
</code></pre>

<p>or formatted in a clearer way:</p>

<pre><code>(lambda x:
     v1 if p1(x) else
     v2 if p2(x) else
     v3)
</code></pre>

<p>Instead of being a statement, the python version is an expression, which evaluates to a value.</p>
",""
"28220562","2","34439","<p>If you specifically want <strong>methods</strong>, you should use <a href=""https://docs.python.org/2/library/inspect.html#inspect.ismethod"" rel=""nofollow noreferrer"">inspect.ismethod</a>.</p>

<p>For method names:</p>

<pre><code>import inspect
method_names = [attr for attr in dir(self) if inspect.ismethod(getattr(self, attr))]
</code></pre>

<p>For the methods themselves:</p>

<pre><code>import inspect
methods = [member for member in [getattr(self, attr) for attr in dir(self)] if inspect.ismethod(member)]
</code></pre>

<p>Sometimes <a href=""https://docs.python.org/3/library/inspect.html#inspect.isroutine"" rel=""nofollow noreferrer""><code>inspect.isroutine</code></a> can be useful too (for built-ins, C extensions, Cython without the ""binding"" compiler directive).</p>
",""
"28928947","2","15599639","<p>You can use the following code snippet.  readlines() reads in the whole file at once and splits it by line.</p>

<pre><code>line = obj.readlines()
</code></pre>
",""
"29190699","2","23329048","<p>Have you looked at <a href=""https://docs.python.org/2/distutils/apiref.html#distutils.dir_util.copy_tree"" rel=""nofollow""><code>distutils.dir_util.copy_tree()</code></a>? The <code>update</code> parameter is defaulted to <code>0</code> but it seems like you'd want <code>1</code>, which would only copy if files don't exist at the destination or are older. I don't see any requirement in your question that <code>copy_tree()</code> won't cover.</p>
",""
"29212925","2","35988","<p>This might be a bit late but I made a solution using Python Meta-Classes (decorator version below too).</p>

<p>When <code>__init__</code> is called during run time, it grabs each of the arguments and their value and assigns them as instance variables to your class. This way you can make a struct-like class without having to assign every value manually.</p>

<p>My example has no error checking so it is easier to follow.</p>

<pre><code>class MyStruct(type):
    def __call__(cls, *args, **kwargs):
        names = cls.__init__.func_code.co_varnames[1:]

        self = type.__call__(cls, *args, **kwargs)

        for name, value in zip(names, args):
            setattr(self , name, value)

        for name, value in kwargs.iteritems():
            setattr(self , name, value)
        return self 
</code></pre>

<p>Here it is in action.</p>

<pre><code>&gt;&gt;&gt; class MyClass(object):
    __metaclass__ = MyStruct
    def __init__(self, a, b, c):
        pass


&gt;&gt;&gt; my_instance = MyClass(1, 2, 3)
&gt;&gt;&gt; my_instance.a
1
&gt;&gt;&gt; 
</code></pre>

<p>I <a href=""http://www.reddit.com/r/Python/comments/300psq/i_made_a_cstyle_struct_using_a_metaclass_to_save/"" rel=""nofollow"">posted it on reddit</a> and <a href=""http://www.reddit.com/user/matchu"" rel=""nofollow"">/u/matchu</a> posted a decorator version which is cleaner. I'd encourage you to use it unless you want to expand the metaclass version.</p>

<pre><code>&gt;&gt;&gt; def init_all_args(fn):
    @wraps(fn)
    def wrapped_init(self, *args, **kwargs):
        names = fn.func_code.co_varnames[1:]

        for name, value in zip(names, args):
            setattr(self, name, value)

        for name, value in kwargs.iteritems():
            setattr(self, name, value)

    return wrapped_init

&gt;&gt;&gt; class Test(object):
    @init_all_args
    def __init__(self, a, b):
        pass


&gt;&gt;&gt; a = Test(1, 2)
&gt;&gt;&gt; a.a
1
&gt;&gt;&gt; 
</code></pre>
",""
"29243668","2","7782046","<p>Additionally, for those using a catch all route constructed with variables: Flask will correctly create the url path if <code>url_for</code> is passed a dictionary containing the variables.</p>

<p>For example...</p>

<p>app.py:</p>

<pre><code>app.route('/&lt;path:pattern1&gt;')
app.route('/&lt;path:pattern1&gt;/&lt;path:pattern2&gt;')
def catch_all(pattern1, pattern2=None):
    return render_template('template.html', p1=pattern1, p2=pattern2)

app.route('/test')
def test_routing:
    args = {'pattern1': 'Posts', 'pattern2': 'create'}
    return render_template('test.html', args=args)
</code></pre>

<p>test.html:</p>

<pre><code>&lt;a href=""{{url_for('catch_all', **args)}}""&gt;click here&lt;/a&gt;
</code></pre>

<p>When you click on the 'click here' link, you will be directed to the 'Posts/create' route.</p>
",""
"29333136","2","61517","<p>I thought I'd take some time to show you how you can translate an object to dict via <code>dict(obj)</code>.</p>

<pre class=""lang-py prettyprint-override""><code>class A(object):
    d = '4'
    e = '5'
    f = '6'

    def __init__(self):
        self.a = '1'
        self.b = '2'
        self.c = '3'

    def __iter__(self):
        # first start by grabbing the Class items
        iters = dict((x,y) for x,y in A.__dict__.items() if x[:2] != '__')

        # then update the class items with the instance items
        iters.update(self.__dict__)

        # now 'yield' through the items
        for x,y in iters.items():
            yield x,y

a = A()
print(dict(a)) 
# prints ""{'a': '1', 'c': '3', 'b': '2', 'e': '5', 'd': '4', 'f': '6'}""
</code></pre>

<p>The key section of this code is the <code>__iter__</code> function. </p>

<p>As the comments explain, the first thing we do is grab the Class items and prevent anything that starts with '__'.</p>

<p>Once you've created that <code>dict</code>, then you can use the <code>update</code> dict function and pass in the instance <code>__dict__</code>.</p>

<p>These will give you a complete class+instance dictionary of members. Now all that's left is to iterate over them and yield the returns.</p>

<p>Also, if you plan on using this a lot, you can create an <code>@iterable</code> class decorator.</p>

<pre class=""lang-py prettyprint-override""><code>def iterable(cls):
    def iterfn(self):
        iters = dict((x,y) for x,y in cls.__dict__.items() if x[:2] != '__')
        iters.update(self.__dict__)

        for x,y in iters.items():
            yield x,y

    cls.__iter__ = iterfn
    return cls

@iterable
class B(object):
    d = 'd'
    e = 'e'
    f = 'f'

    def __init__(self):
        self.a = 'a'
        self.b = 'b'
        self.c = 'c'

b = B()
print(dict(b))
</code></pre>
",""
"29597408","2","35817","<p><strong>Notice</strong>: This is an answer for Python 2.7.x.</p>

<p>According to the <a href=""https://hg.python.org/cpython/file/2.7/Lib/pipes.py#l262"" rel=""nofollow"">source</a>, <code>pipes.quote()</code> is a way to ""<em>Reliably quote a string as a single argument for <strong>/bin/sh</em></strong>"". (Although it is <a href=""https://docs.python.org/2/library/pipes.html#pipes.quote"" rel=""nofollow"">deprecated since version 2.7</a> and finally exposed publicly in Python 3.3 as the <code>shelx.quote()</code> function.)</p>

<p>On <a href=""https://hg.python.org/cpython/file/2.7/Lib/subprocess.py#l577"" rel=""nofollow"">the other hand</a>, <code>subprocess.list2cmdline()</code> is a way to ""<em>Translate a sequence of arguments into a command line string, using the same rules as the <strong>MS C runtime</em></strong>"".</p>

<p>Here we are, the platform independent way of quoting strings for command lines.</p>

<pre><code>import sys
mswindows = (sys.platform == ""win32"")

if mswindows:
    from subprocess import list2cmdline
    quote_args = list2cmdline
else:
    # POSIX
    from pipes import quote

    def quote_args(seq):
        return ' '.join(quote(arg) for arg in seq)
</code></pre>

<p>Usage:</p>

<pre><code># Quote a single argument
print quote_args(['my argument'])

# Quote multiple arguments
my_args = ['This', 'is', 'my arguments']
print quote_args(my_args)
</code></pre>
",""
"29604797","2","7780998","<p>A version without <code>functools</code>:</p>

<pre><code>for i in iter(lambda: sys.stdin.read(1), '\n'):
</code></pre>
",""
"29788081","2","15575826","<p>You can do this in one request:</p>

<pre><code>app.control.revoke([
    uuid
    for uuid, _ in
    celery.events.state.State().tasks_by_type(task_name)
])
</code></pre>
",""
"29851741","2","34439","<p>One can create a <code>getAttrs</code> function that will return an object's callable property names</p>

<pre><code>def getAttrs(object):
  return filter(lambda m: callable(getattr(object, m)), dir(object))

print getAttrs('Foo bar'.split(' '))
</code></pre>

<p>That'd return</p>

<pre><code>['__add__', '__class__', '__contains__', '__delattr__', '__delitem__',
 '__delslice__', '__eq__', '__format__', '__ge__', '__getattribute__', 
 '__getitem__', '__getslice__', '__gt__', '__iadd__', '__imul__', '__init__', 
 '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', 
 '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', 
 '__setattr__', '__setitem__', '__setslice__', '__sizeof__', '__str__', 
 '__subclasshook__', 'append', 'count', 'extend', 'index', 'insert', 'pop', 
 'remove', 'reverse', 'sort']
</code></pre>
",""
"29989593","2","7769981","<p>I have identified two decent ways of doing this. </p>

<p><strong>Method 1: using the wavefile module</strong></p>

<p>Use this method if you don't mind installing some extra libraries which involved a bit of messing around on my Mac but which was easy on my Ubuntu server. </p>

<p><a href=""https://github.com/vokimon/python-wavefile"" rel=""nofollow"">https://github.com/vokimon/python-wavefile</a></p>

<pre><code>import wavefile

# returns the contents of the wav file as a double precision float array
def wav_to_floats(filename = 'file1.wav'):
    w = wavefile.load(filename)
    return w[1][0]

signal = wav_to_floats(sys.argv[1])
print ""read ""+str(len(signal))+"" frames""
print  ""in the range ""+str(min(signal))+"" to ""+str(min(signal))
</code></pre>

<p><strong>Method 2: using the wave module</strong></p>

<p>Use this method if you want less module install hassles. </p>

<p>Reads a wav file from the filesystem and converts it into floats in the range -1 to 1. It works with 16 bit files and if they are > 1 channel, will interleave the samples in the same way they are found in the file. For other bit depths, change the 'h' in the argument to struct.unpack according to the table at the bottom of this page:</p>

<p><a href=""https://docs.python.org/2/library/struct.html"" rel=""nofollow"">https://docs.python.org/2/library/struct.html</a></p>

<p>It will not work for 24 bit files as there is no data type that is 24 bit, so there is no way to tell struct.unpack what to do. </p>

<pre><code>import wave
import struct
import sys

def wav_to_floats(wave_file):
    w = wave.open(wave_file)
    astr = w.readframes(w.getnframes())
    # convert binary chunks to short 
    a = struct.unpack(""%ih"" % (w.getnframes()* w.getnchannels()), astr)
    a = [float(val) / pow(2, 15) for val in a]
    return a

# read the wav file specified as first command line arg
signal = wav_to_floats(sys.argv[1])
print ""read ""+str(len(signal))+"" frames""
print  ""in the range ""+str(min(signal))+"" to ""+str(min(signal))
</code></pre>
",""
"30012053","2","60208","<pre><code>class Switch:
    def __init__(self, value): self._val = value
    def __enter__(self): return self
    def __exit__(self, type, value, traceback): return False # Allows traceback to occur
    def __call__(self, cond, *mconds): return self._val in (cond,)+mconds

from datetime import datetime
with Switch(datetime.today().weekday()) as case:
    if case(0):
        # Basic usage of switch
        print(""I hate mondays so much."")
        # Note there is no break needed here
    elif case(1,2):
        # This switch also supports multiple conditions (in one line)
        print(""When is the weekend going to be here?"")
    elif case(3,4): print(""The weekend is near."")
    else:
        # Default would occur here
        print(""Let's go have fun!"") # Didn't use case for example purposes
</code></pre>
",""
"30157018","2","7781260","<p>Since Python 3.5 you can use <code>math.inf</code>:</p>

<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; math.inf
inf
</code></pre>
",""
"30881320","2","60208","<p>My favorite Python recipe for switch/case is:</p>

<pre><code>choices = {'a': 1, 'b': 2}
result = choices.get(key, 'default')
</code></pre>

<p>Short and simple for simple scenarios. </p>

<p>Compare to 11+ lines of C code:</p>

<pre><code>// C Language version of a simple 'switch/case'.
switch( key ) 
{
    case 'a' :
        result = 1;
        break;
    case 'b' :
        result = 2;
        break;
    default :
        result = -1;
}
</code></pre>

<p>You can even assign multiple variables by using tuples:</p>

<pre><code>choices = {'a': (1, 2, 3), 'b': (4, 5, 6)}
(result1, result2, result3) = choices.get(key, ('default1', 'default2', 'default3'))
</code></pre>
",""
"31062511","1","","<p>I need to calculate the number of seconds since the epoch from a well-formed string, such as <code>u'Wed Jun 24 20:19:10 PDT 2015'</code>. The following code does that:</p>

<pre><code>def seconds_from_epoch(date, date_pattern='%a %b %d %H:%M:%S %Z %Y'):
    epoch = int(time.mktime(time.strptime(date, date_pattern)))
    return epoch

&gt;&gt;&gt; d=u'Wed Jun 24 20:19:10 PDT 2015'
&gt;&gt;&gt; s=seconds_from_epoch(d)
&gt;&gt;&gt; s
1435202350
</code></pre>

<p>The problem is that the strings come from an unpredictable variety of time zones, and the solution above only works if the timezone is the same as that of the running Python script itself (or apparently GMT/UTC, which does not help).</p>

<p>So what I need is something that does exactly the same as the code above, but for all time zones.</p>
","<python>"
"31062513","1","","<p>I've read a few postings regarding Python writing to text files but I could not find a solution to my problem.  Here it is in a nutshell.</p>

<p>The requirement: to write values delimited by thorn characters (u00FE; and surronding the text values) and the pilcrow character (u00B6; after each column) to a UTF-16LE text file with BOM (FF FE).</p>

<p>The issue:  The written-to text file has whitespace between each column that I did not script for.  Also, it's not showing up right in UltraEdit.  Only the first value (""mom"") shows.  I welcome any insight or advice.</p>

<p>The script (simplified to ease troubleshooting; the actual script uses a third-party API to obtain the list of values):</p>

<pre><code>import os
import codecs
import shutil
import sys
import codecs

first = u''
textdel = u'\u00FE'.encode('utf_16_le')   #thorn
fielddel = u'\u00B6'.encode('utf_16_le')  #pilcrow
list1 = ['mom', 'dad', 'son']
num = len(list1)  #pretend this is from the metadata profile

f = codecs.open('c:/myFile.txt', 'w', 'utf_16_le')
f.write(u'\uFEFF')
for item in list1:
  mytext2 = u''
  i = 0
  i = i + 1
  mytext2 = mytext2 + item + textdel
  if i &lt; (num - 1):
    mytext2 = mytext2 + fielddel
  f.write(mytext2 + u'\n')

f.close()
</code></pre>
","<python><file-writing>"
"31062545","1","","<p>Have a terrible time trying to get this working.  Spent way too many hours doing searches only to come up with the same examples which are not helping.</p>

<p>Made myself a GUI that starts a Thread to read the serial ports and parse some GPS data into NMEA sentences.</p>

<p>I take the data and want to write it to a database instead of a text file just to make it cleaner.  However, when I write to the DB it throws an error saying that: </p>

<pre><code>'type' object has no attribute '__getitem__'
</code></pre>

<p>As I have zero experience dealing with databases and python I'm at an impass as to what is wrong.</p>

<p>I know its the cur.execute INSERT line tossing the exception, I just don't know how to fix it.</p>

<p>Anyone care to walk me through it?  I'm guessing it might be syntax?  I'm using the pynmea2 module for GPS parsing and the pypyodbc module to make the MDB file.
If I write hard-coded-data it works fine.  It's when I use variables that it craps out.</p>

<pre><code>                        try:
                            print (""Attempt to Execute..."")
                            Ndx=ID;Tod=str(gps_msg.timestamp);Lat=str(gps_msg.latitude);Lon=str(gps_msg.longitude);TmpLat='0';TmpLon='0';Alt=str(gps_msg.altitude);Flags='0';SystemID=str(gps_msg.ref_station_id);NumSat=str(gps_msg.num_sats);dop='0';Ch1_RSSI=str(rssi_dB)
                            cur.execute(""INSERT INTO LogFile(Ndx,Tod,Lat,Lon,TmpLat,TmpLon,Alt,Flags,SystemID,NumSat,dop,Ch1_RSSI) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)"",([Ndx],[Tod],[Lat],[Lon],[TmpLat],[TmpLon],[Alt],[Flags],[SystemID],[NumSat],[dop],[Ch1_RSSI]))
                            print (""Attempting to commit..."")                            
                            conn.commit()
                            print (""Commit succeeded.."")


                           ID = ID + 1


                        except Exception as e:
                           errorLog.writelines('File Write Failure: {0}'.format(e)+""\n"")
</code></pre>
","<python><database><pypyodbc>"
"31062555","1","","<p>I have the below models (for a booking service)</p>

<pre><code>from sqlalchemy_utils import ArrowType

class User:
    id = db.Column(db.Integer, primary_key=True)
    name = Column(db.String(80))

class Service:
    desc = Column(db.String(100))
    provider_id = Column(db.Integer, db.ForeignKey('user.id')
    provider = relationship('User', backref='services')

class TimeSlot:
    start = Column(ArrowType)
    owner_id = Column(db.Integer, db.ForeignKey('user.id')
    owner = relationship('User', backref ='timeslots')
</code></pre>

<p>I am trying to perform a join, starting from the <strong><em>User</em></strong>,</p>

<pre><code>users = (
    db.session.query(User)
        .join(Service)
        .join(TimeSlot)
        .options(contains_eager(User.services, User.timeslots)
                 )
        .filter(Service.desc == 'Fun')
        .filter(TimeSlot.start == arrow.get('2015-06-15T19:00:00+00:00'))
        .all()
    )

# would like to list the results in a 'nested' way.
for u in users:
    print(u)
    for ts in u.timeslots:
       print(' ', ts)
    for svc in u.services:
       print(' ', svc)
</code></pre>

<p>However, I am getting the below error,</p>

<blockquote>
  <p>Attribute 'User.timeslots' does not link from element
  'Mapper|Service|service'</p>
</blockquote>

<p>I understand as much that it is because of the order of the .join() and thaat Service and TimeSlot are not joined.</p>

<p>How should I go about achieving getting a list of users and their timeslots + services?</p>

<p>Thanks</p>
","<python><sqlalchemy>"
"31062620","1","","<p>Is there any way to determine where a class is coming from in python (especially sklearn)?  I want to determine if a class is from sklearn.linear_models or sklearn.ensemble.  </p>

<p>As an example, I would like to be able to determine if Ridge() is a member of sklearn.linear_model.</p>

<p>The fit function is a bit different depending on the model so formulas fed to each via patsy need to be different.  </p>
","<python><scikit-learn>"
"31062623","1","","<p>Can you suggest a python script for percent change raster from ""begin year""(Inras1) to ""end year"" (Inras2) Vegetation Net Primary Production rasters? Example: That is a given raster cell increased by 25% compared to ""begin year""</p>

<p>`</p>
","<python><raster>"
"31062636","1","","<p>I have the below JSON currently in a dict called returned_data- I would like to get the account ID out, but it looks like it is not recognizing any keys deeper than the 2nd level. eg:</p>

<pre><code>returned_data[""command1""][""customers""]
</code></pre>

<p>works</p>

<pre><code>returned_data[""command1""][""customers""][""acctid""]
</code></pre>

<p>does not work.</p>

<pre><code>returned_data[""command1""][""customers""].keys() 
</code></pre>

<p>does not display any keys.</p>

<p>What do I need to do to be able to reference the acctid?</p>

<pre><code>{
""command1"": {

        ""customers"": [{
            ""city"": ""none"",
            ""cust_id"": 204567,
            ""name_first"": ""John"",
            ""name_last"": ""Smith"",
            ""zip"": ""39199"",
            ""street_addr_1"": ""1 Bat St"",

            ""phones"": [
                {""phone_number"": ""(01) 5555555"",
                ""phone_type"": ""Mobile"",
                ""phone_code"": ""C""
                },
                {""phone_number"": ""(01) 5555555"",
                ""phone_type"": ""Home"",
                ""phone_code"": ""E""
                }
                    ],

            ""email_addr"": ""test@test.com"",
            ""acctid"": 123456,
            ""state"": ""WA"",
            ""add_user"": ""JR"",
            ""country"": ""AUS"",
            ""acct_type"": ""P"",
                }
                ],
        ""ref"": ""123456"",
        ""result"": 0
            },

""header"": {""src_sys_type"": 2,
    ""ver"": 1,
    ""result"": 0}

 }
</code></pre>
","<python><json>"
"31062637","2","31062511","<pre><code>def total_seconds(dt): #just in case you are using a python that the datetime library does not provide this automagically
    print dt.days*24*60+dt.seconds

from dateutil.parser import parse as date_parse

print total_seconds(date_parse(date_string))
</code></pre>

<p>you will need to <code>
pip install python-dateutil</code></p>
",""
"31062641","2","31062620","<p>Use the <code>__module__</code> attribute, i.e.: <code>Ridge.__module__</code></p>

<p>If you want to know it from an instance of the class: <code>inst.__class__.__module__</code></p>

<p>If you need the module object (not just the name as string): <code>sys.modules[Ridge.__module__]</code></p>
",""
"31062644","2","31062511","<p>See <a href=""https://stackoverflow.com/questions/3305413/python-strptime-and-timezones"">Python strptime() and timezones?</a> particularly answer of Joe Shaw, </p>

<p>I would use <a href=""https://dateutil.readthedocs.org/en/latest/"" rel=""nofollow noreferrer"">https://dateutil.readthedocs.org/en/latest/</a> , dateutil library already takes care of timezones. The reason why you won't get timezoned date from strptime is that it does not support timezones. </p>

<blockquote>
  <p>A naive object does not contain enough information to unambiguously locate itself relative to other date/time objects. Whether a naive object represents Coordinated Universal Time (UTC), local time, or time in some other timezone is purely up to the program, just like it’s up to the program whether a particular number represents metres, miles, or mass. Naive objects are easy to understand and to work with, at the cost of ignoring some aspects of reality.</p>
</blockquote>

<p>see <a href=""https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime</a></p>
",""
"31062667","2","35988","<p>You can subclass the C structure that is available in the standard library. The <a href=""https://docs.python.org/2/library/ctypes.html"">ctypes</a> module provides a <a href=""https://docs.python.org/2/library/ctypes.html#structures-and-unions"">Structure class</a>. The example from the docs:</p>

<pre><code>&gt;&gt;&gt; from ctypes import *
&gt;&gt;&gt; class POINT(Structure):
...     _fields_ = [(""x"", c_int),
...                 (""y"", c_int)]
...
&gt;&gt;&gt; point = POINT(10, 20)
&gt;&gt;&gt; print point.x, point.y
10 20
&gt;&gt;&gt; point = POINT(y=5)
&gt;&gt;&gt; print point.x, point.y
0 5
&gt;&gt;&gt; POINT(1, 2, 3)
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in ?
ValueError: too many initializers
&gt;&gt;&gt;
&gt;&gt;&gt; class RECT(Structure):
...     _fields_ = [(""upperleft"", POINT),
...                 (""lowerright"", POINT)]
...
&gt;&gt;&gt; rc = RECT(point)
&gt;&gt;&gt; print rc.upperleft.x, rc.upperleft.y
0 5
&gt;&gt;&gt; print rc.lowerright.x, rc.lowerright.y
0 0
&gt;&gt;&gt;
</code></pre>
",""
"31062677","2","31062511","<p>The <code>dateutil</code> parser can convert almost any string to a <code>datetime</code> object, so you can even loosen the well-formed constraint; but anyway, <code>datetime</code> objects in Python 3 have the convenient <code>timestamp</code> method:</p>

<pre><code>&gt;&gt;&gt; d = dateutil.parser.parse('Wed Jun 24 20:19:10 PDT 2015')
&gt;&gt;&gt; d.timestamp()
1435166350.0
&gt;&gt;&gt; d = dateutil.parser.parse('Wed Jun 24 20:19:10 UTC 2015')
&gt;&gt;&gt; d.timestamp()
1435177150.0
</code></pre>

<p>Since you're probably using Python 2, here's a manual calculation:</p>

<pre><code>&gt;&gt;&gt; d = dateutil.parser.parse('Wed Jun 24 20:19:10 PDT 2015')
&gt;&gt;&gt; (d - datetime.datetime(1970, 1, 1)).total_seconds()
Traceback (most recent call last):
    ...
TypeError: cant subtract offset-naive and offset-aware datetimes
&gt;&gt;&gt; # :(
&gt;&gt;&gt; (d - datetime.datetime(1970, 1, 1, tzinfo=d.tzinfo)).total_seconds()
1435177150.0 # UTC
&gt;&gt;&gt; ((d - datetime.datetime(1970, 1, 1, tzinfo=d.tzinfo)) - d.utcoffset()).total_seconds()
1435166350.0 # The original timezone
</code></pre>
",""
"31062689","2","31062636","<p>This is what you'll need.</p>

<pre><code>['command1']['customers'][0]['acctid']
</code></pre>

<p>You're probably getting an index error. The <code>[0]</code> is needed because of the bracket after <code>'customers'</code>. As the comment said, it's a list, not a json.</p>
",""
"31062741","2","31062623","<pre><code> # Name: Minus_Ex_02.py
 # Description: Modification of ESRI's Subtracts the value of the second                      input raster from the Value of the first input raster on a cell-by-cell basis
  # Requirements: Spatial Analyst Extension
  # Author: ESRI

  # Import system modules
  import arcpy
  from arcpy import env
  from arcpy.sa import *

  # Set environment settings
  env.workspace = ""C:/Users/Kaleab/Desktop/MOD17A3/Mosaic/Clip""

  # Set local variables
  inRaster1 = ""2000clip.tif""
  inRaster2 = ""2010clip.tif""

  # Check out the ArcGIS Spatial Analyst extension license
  arcpy.CheckOutExtension(""Spatial"")

 # Execute Minus
 outMinus = Minus(inRaster1, inRaster2)
 changeras = outMinus/inRaster1
 # Save the output 
 changeras.save(""C:/Users/Kaleab/Desktop/MOD17A3/Mosaic/Clip/Change.tif"")
</code></pre>
",""
"31062745","2","31062513","<p>You're double-encoding your strings.  You've already opened your file as UTF-16-LE, so leave your <code>textdel</code> and <code>fielddel</code> strings unencoded.  They will get encoded at write time along with every line written to the file.</p>

<p>Or put another way, <code>textdel = u'\u00FE'</code> sets <code>textdel</code> to the ""thorn"" character, while <code>textdel = u'\u00FE'.encode('utf-16-le')</code> sets <code>textdel</code> to a particular serialized form of that character, a sequence of <em>bytes</em> according to that codec; it is no longer a sequence of <em>characters</em>:</p>

<pre><code>textdel = u'\u00FE'
len(textdel)                      # -&gt; 1
type(textdel)                     # -&gt; unicode
len(textdel.encode('utf-16-le'))  # -&gt; 2
type(textdel.encode('utf-16-le')) # -&gt; str
</code></pre>
",""
"31062785","1","","<p>I am using django 1.8, and REST 3.0 with an angular frontend.</p>

<p>I had set unique_together on the meta class for two fields on my model.
It did not work well because it would not allow for multiple cases where field1 and field2 were null. 
I need these fields to be both optional
or if one has a value then the other must have a value as well.
Together, they should be unique (unique_together)</p>

<p>What I have so far is ridiculous and ugly. I do not know how to write it any better or more efficiently, but would love to learn how to do this in a more Pythonic way.</p>

<pre><code>data = json.loads(request.body)
#field1 and field2 are nested in an array that is only POSTed if it exists. 

if 'key' in 'data':
    field1 = data[key].get(field1,"""")
    field2 = data[key].get(field2,"""")

elif 'key' not in 'data':
   field1 = """" 
   field2 = """"

if field1=="""" and field2=="""":
   field1 = None
   field2 = None

elif (field1 == """") and (field2 != """"):
   data.errors += 'You added field 2 but did not add field 1.'

elif (field1 !="""") and (field2 ==""""):
   data.errors += 'You added field 1 but did not add field 2.'

elif (field1 = """") and (country_code!=""""):
   try:
       field1Db = [model].objects.get(field1=field1)
   except [model].DoesNotExist:
       valid_field1 = True
   else:
       if field1Db and ((field1Db.field2)) == (field2):
       data.errors += Field 1 + 'and' + Field 2 + 'should form a unique set if both are submitted.'
else:
   data.errors = False
   data.success = True
   return Response(data)
</code></pre>

<p>It seems to work, just ugly.</p>

<p>After this, I send data to a serializer.
Anyway, If anyone knows how to do this more effectively, I would really be appreciative to learn how. Thank you.</p>
","<python><django><rest>"
"31062789","1","","<p>So I'd like to open chrome with its default profile using pythons webdriver. I've tried everything I could find but I still couldn't get it to work. Thanks for the help!</p>
","<python><selenium-chromedriver>"
"31062876","1","","<p>Is there a <a href=""https://twistedmatrix.com/"" rel=""nofollow"">twisted</a> library for <a href=""http://www.aerospike.com/"" rel=""nofollow"">Aerospike</a>? Has anyone used both in combination - or is Aerospike so fast that the <a href=""http://www.aerospike.com/docs/client/python/"" rel=""nofollow"">standard python client</a> is enough?</p>
","<python><twisted><aerospike>"
"31062886","1","","<p>Write a program named readfile.py that uses a loop to read and process mynumbers.txt. The program should output all of the integers, one per line, with no blank lines between each line. This program should also output the largest random number that was on file. </p>

<p>I have this so far:</p>

<pre><code>infile = open('mynumbers.txt','r')

for line in infile:

  print(line,end='')
infile.close()

print('The largest random number that was on file is')
</code></pre>

<p>Everything works but it wont give me largest random number that was on file. Other site said this was broken but its not. It will pull all the integers from the text file. At the end it also needs to print 'The largest random number that was on file is' but I need that number to show.</p>
","<python>"
"31062899","1","","<p>I'm making a Pizza menu and I need an error message to pop up if there are numbers enetered for the customers name and so on</p>
","<python>"
"31062946","1","","<p>I'd like to have a child class' <code>__str__</code> implementation add to the base implementation:</p>

<pre><code>class A:
    def __str__(self):
        return ""this""

class B(A):
    def __str__(self):
        return super(B, self) + "" + that""
</code></pre>

<p>This, however, produces a type error:</p>

<blockquote>
  <p>TypeError: unsupported operand type(s) for +: 'super' and 'str'</p>
</blockquote>

<p>Is there any way to get <code>str(B())</code> return <code>""this + that""</code>?</p>
","<python><inheritance>"
"31062975","1","","<p>I'm doing the following query on Rethinkdb:</p>

<pre><code>r.table('skydata').filter(r.row(""DeviceID"").eq(""JBAnFrdlbkcO"").and(r.row(""TS"").ge(0)).and(r.row(""TS"").le(143556949)) ).orderBy(""TS"")
</code></pre>

<p>It worked perfect when run directly on Data Explorer on their website and returned me results. When I make the same query in my Python program, however, I got nothing. The query I wrote is:</p>

<pre><code>records = rdb.table('skydata').filter( (rdb.row['DeviceID'] == 'JBAnFrdlbkcO') &amp; (rdb.row['TS'] &gt;= '0') &amp; (rdb.row['TS'] &lt;= '143556949') ).order_by('TS').run(conn)
</code></pre>

<p>Here <code>records</code> returned is empty. I think these two are equivalent. I also tried to send JS commands to the server directly:</p>

<pre><code>records = rdb.js(""r.table('skydata').filter(r.row('DeviceID').eq(%s).and(r.row('TS').ge(%s)).and(r.row('TS').le(%s)) ).orderBy('TS')"" % (deviceid, time_start, time_end) ).run(conn)
</code></pre>

<p>But it says: <code>r is not defined</code> I really have no idea why it is like this. I would really appreciate it if someone could help. Thanks.</p>
","<python><rethinkdb><rethinkdb-python><reql>"
"31062988","2","31062946","<p>You need to do <code>super(B, self).__str__()</code>.  <code>super</code> refers to the parent class; you are not calling any methods.</p>
",""
"31063021","2","31062899","<p>Provided you have the name in a variable, you could do the following:</p>

<pre><code>#defining a name ...
name = 'Bill Joe'
if name.isalpha():
    #do what you want ...
else:
    #return or print an error ...
</code></pre>

<p>You should look through </p>

<p><a href=""https://docs.python.org/3/library/stdtypes.html?highlight=isalpha#str.isalpha"" rel=""nofollow"">https://docs.python.org/3/library/stdtypes.html?highlight=isalpha#str.isalpha</a></p>
",""
"31063036","1","","<p>I am trying to load a .mmdb file in Pig to then pass it into a python script.  However I get the error message: ""Invalid scalar projection: db: A column needs to be projected from a relation for it to be used as a scalar"".  My code is:</p>

<pre><code>REGISTER 'py_pigscript.py' USING jython AS myudf;
log = LOAD 'test.txt' USING PigStorage(',') AS (x:int);
db = LOAD 'data.mmdb';
result = FOREACH log GENERATE myudf.function(x,db);
</code></pre>

<p>Any help would be appreciated.  Thank you!</p>

<p>-edit:</p>

<p>The goal of this script is to extract a value from each row in 'test.txt' and pass them to 'data.mmdb' to return additional data.</p>
","<python><apache-pig><geoip><udf>"
"31063056","1","","<p>I have this code already put into a larger chunk of code, but I've narrowed it down to this as the error. I know that the error is that I am attempting to add a variable to something in a dictionary. Is there any way that I could add it to the actual stat itself?</p>

<pre><code>smallGuns = 5
bigGuns = 2
unarmed = 3
meleeWeapons = 20
throwing = 4
firstAid = 2
sneak = 5
lockpick = 10
steal = 3
science = 4
repair = 3
speech = 5

choice = raw_input(""Which stat do you want to add points to?"")
skillPoints = 5

statlist = ['small guns', 'big guns', 'unarmed', 'melee weapons', 'throwing', 'first aid' 'sneak', 'lockpick', 'steal', 'science', 'repair', 'speech']

if choice in statlist:
pointDeduction = input(""How many points do you wish to add to %s? (Up to %s points)"" %(choice, skillPoints))
if pointDeduction &lt;= choice:
        choice += pointDeduction
        skillPoints -= pointDeduction
else:
        print ""You do not have that many points to distribute to %s."" %(choice)

print steal
</code></pre>

<p>My error message is</p>

<pre><code>Traceback (most recent call last): File ""F:/TARG/temp.py"", line 22, in &lt;module&gt; choice += pointDeduction TypeError: cannot concatenate 'str' and 'int' objects
</code></pre>
","<python><python-2.7>"
"31063080","2","31062886","<p>As stated, since this appears to be a homework problem we will just lead you on the correct path.</p>

<p>You correctly opened the file, looped through it, printed each line, and closed the file.</p>

<p>(If the problem wants you to print each number on a new line then you might want to review your code regarding the print function)</p>

<p>However, you did not keep track of the size of the numbers that you are iterating through in any way.</p>

<p>*Hint: Use conditional statements, comparison operators, and a variable or use a list.</p>

<p>Conditional Statements: <a href=""https://docs.python.org/3/tutorial/controlflow.html#if-statements"" rel=""nofollow"">https://docs.python.org/3/tutorial/controlflow.html#if-statements</a></p>

<p>Comparison Operators: <a href=""https://docs.python.org/3/library/stdtypes.html#comparisons"" rel=""nofollow"">https://docs.python.org/3/library/stdtypes.html#comparisons</a></p>

<p>Lists: <a href=""https://docs.python.org/3/tutorial/introduction.html#lists"" rel=""nofollow"">https://docs.python.org/3/tutorial/introduction.html#lists</a></p>

<p>You'll have to go from here.</p>

<p>*Note: Look into the With statement: <a href=""http://www.pythonforbeginners.com/files/with-statement-in-python"" rel=""nofollow"">http://www.pythonforbeginners.com/files/with-statement-in-python</a></p>
",""
"31063099","2","31062946","<p>Lack of reputation does not allow me to comment.</p>

<p>class B should be:</p>

<pre><code>class B(A):
def __str__(self):
    return super(B, self).__str__() + ' + that
</code></pre>
",""
"31063104","2","31062789","<p>This is what finally got it working for me.</p>

<pre><code>from selenium import webdriver
from selenium.webdriver.chrome.options import Options

options = webdriver.ChromeOptions() 
options.add_argument(""user-data-dir=C:\\Path"") #Path to your chrome profile
w = webdriver.Chrome(executable_path=""C:\\Users\\chromedriver.exe"", chrome_options=options)
</code></pre>

<p>To find path to your chrome profile data you need to type <code>chrome://version/</code> into address bar . For ex. mine is displayed as <code>C:\Users\pc\AppData\Local\Google\Chrome\User Data\Default</code>, to use it in the script I had to exclude <code>\Default\</code> so we end up  with only <code>C:\Users\pc\AppData\Local\Google\Chrome\User Data</code>.</p>

<p>Also if you want to have separate profile just for selenium: replace the path with any other path and if it doesn't exist on start up chrome will create new profile and directory for it.</p>
",""
"31063117","2","31063056","<p>Your example currently has no dictionaries. You have initizlied it wrong. It should be as follows:</p>

<pre><code>statlist = {""attribute_name"" : attribute_value, REPEAT}
</code></pre>

<p>Once you have the correct dictionary initalization</p>

<pre><code>statlist = {'small guns' : 5, 'big guns' : 2, 'unarmed' : 3} # you do the rest
choice = raw_input(""Which stat do you want to add points to?"")
if choice in statlist:
    pointDeduction = input(""How many points do you wish to add to %s? (Up to %s points)"" %(choice, skillPoints))
    if pointDeduction &lt;= statlist[choice]:
        statlist[choice] -= pointDeduction
        skillPoints -= pointDeduction
else:
    print ""You do not have that many points to distribute to %s."" %(choice)
</code></pre>

<p>You also have some logic issues when distributing points, but you can figure that out on your own.</p>
",""
"31063122","1","","<p>I've been playing around with filters using scipy, trying to filter a signal. After reading the documentation and going through a few examples, I thought I got it, but it seems like I'm doing something wrong and can't get it to work. </p>

<p>Using a bandstop filter below, I'd expect the variable fy to be pretty much constant, but I see can see no difference between the data and filtered sine wave.</p>

<pre><code>import pylab as plt
import numpy as np
import scipy

numsamples=1000
f0=1/10
x=np.linspace(0,100,numsamples)
y=np.sin(2*np.pi*f0*x)
fs=numsamples/(max(x)-min(x))
nyquist=0.5*fs
fstart=(3/4)*f0/nyquist
fstop=(4/3)*f0/nyquist
a,b  = scipy.signal.butter(2,[fstart,fstop],'bandstop', analog=True)
fy = scipy.signal.lfilter(a,b,y, axis=-1, zi=None)
plt.plot(y)
plt.plot(fy)
plt.show()
</code></pre>

<p>Thanks for your help,</p>

<p>Mike</p>
","<python><filter><scipy>"
"31063136","2","31062946","<p>Here is some working code. What you needed was to </p>

<p>1) subclass object, so that super works as expected, and </p>

<p>2) Use <code>__str__()</code> when concatenating your string.</p>

<pre><code>class A(object):
  def __str__(self):
    return ""this""


class B(A):

  def __str__(self):
    return super(B, self).__str__() + "" + that""

print B()
</code></pre>

<p>Note: <code>print B()</code> calls <code>b.__str__()</code> under the hood.</p>
",""
"31063156","2","31063056","<p>I'm guessing from your code that <code>statlist</code> is intended to be a dictionary of <code>stat</code> keys with <code>stat value</code> values. Right now you have a list, so essentially you're saying ""if the item is in the list, concatenate a number to the end of it"" (albeit incorrectly).</p>

<p>What you want to do is add dictionaries to the question. The first part, where you declare variables, is not exactly necessary, you could accomplish it like so:</p>

<pre><code>statlist = {'small guns' : 5, 'big guns' : 2, ...}
</code></pre>

<p>For each value. And then, to change stats:</p>

<pre><code>if choice in statlist:
    pointDeduction = input(""How many points do you wish to add to %s? (Up to %s points)"" %(choice, skillPoints))
    if pointDeduction &lt;= statlist[choice]:
        statlist[choice] += pointDeduction
        skillPoints -= pointDeduction
else:
    print ""You do not have that many points to distribute to %s."" %(choice)
</code></pre>
",""
"31063163","1","","<p>I'm working through Zed's Learnpythonthehardway HTML version. I'm currently on Exercise #43 but I've stripped away some of the scenes from a game and I'm having an issue. </p>

<p>I'm getting the error: <code>""object() takes no parameters"" at the line 'a_map = Map('empty_scene')</code></p>

<p>Here's my code:</p>

<pre><code>from sys import exit

class Scene(object):

def enter(self):
    print ""This scene is not yet configured. Subclass it and implement\
enter().""
    exit(1)

class Engine(object):

def _init_(self, scene_map):
    self.scene_map = scene_map

def play(self):
    current_scene = self.scene_map.opening_scene()
    last_scene = self.scene_map.next_scene('finished')

    while current_scene != last_scene:
        next_scene_name = current_scene.enter()
        current_scene = self.scene_map.next_scene(next_scene_name)

        current_scene.enter()   

class EmptyScene(Scene):

def enter(self):
    pass

class FinishScene(Scene):

def enter(self):
    pass

class Map(object): 

scenes = {
    'empty_scene': EmptyScene(),
    'finished': FinishScene(),
}

def _init_(self, start_scene):
    self.start_scene = start_scene

def next_scene(self, scene_name):
    val = Map.scenes.get(scene_name)
    return val

def opening_scene(self):
    return self.next_scene(self.start_scene)    

a_map = Map('empty_scene')
a_game = Engine(a_map)
a_game.play()
</code></pre>
","<python>"
"31063168","1","","<p>I am using python 2.7. I am trying to write a regex which can match something like the following string:
_targetString = '[6152: 2152] * $ Total Time To Complete 1 Job: 4586.12 [Sec]'</p>

<p>The issue I am facing is that whenever the reported time as float my regex doesn't work. However, if I take the part of regex used to match the float and test it outside my original regex it works fine.</p>

<p>For example:
<strong>Case 1</strong></p>

<pre><code>_targetString = '[6152: 2152] * $ Total Time To Complete 1 Jobs: 4586.12 [Sec]'
_myRe = re.compile(""\[\d+: \d\] \* \$ Total Time To Complete \d+ Jobs: \d+\.\d+ \[Sec\]"")
_result = _myRe.match(targetString)
</code></pre>

<p>For this case the match doesn't work. I suspect that the issue is with <em>""\d+.\d+ [Sec]</em>"" portion, as the regex worked for integers. The only thing I added to integer regex was <em>"".\d+""</em> to handle floats.</p>

<p><strong>Case 2</strong></p>

<pre><code>_targetString = "" Jobs: 4586.12 [Sec]""
myRe = re.compile(' Jobs: \d+\.\d+ \[Sec\]')
_result = _myRe.match(targetString)
</code></pre>

<p>This works fine.</p>

<p>What am I missing here?</p>

<p>Thanks in advance for your help!</p>
","<python><regex>"
"31063169","2","31062886","<p>Hints</p>

<ul>
<li>Run your code.. does it generate an error?</li>
<li>Read this documentation: <a href=""https://docs.python.org/2/library/functions.html"" rel=""nofollow"">python built-in functions</a></li>
<li>Is there a function that can do it for you?</li>
</ul>

<p>You cannot just simply use pure english and do <code>for line in file</code>, you must use this code:</p>

<pre><code>infile = open('mynumbers.txt','r')
lines = infile.readlines()
for line in lines:
    ...
</code></pre>

<p><code>.readlines()</code> turns all the lines into a list so you can iterate over them.</p>

<p>Extra hint if you've <strong>read the documentation and cannot figure it out</strong>:</p>

<p><a href=""http://freetexthost.com/y422jtddfl"" rel=""nofollow"">http://freetexthost.com/y422jtddfl</a></p>

<p>Answer here:</p>

<p><a href=""http://freetexthost.com/biylxaqt2y"" rel=""nofollow"">http://freetexthost.com/biylxaqt2y</a></p>

<p>EDIT: improved answer in URL. Old answer here: <a href=""http://freetexthost.com/12yermhmfn"" rel=""nofollow"">http://freetexthost.com/12yermhmfn</a></p>
",""
"31063188","1","","<p>I'm a newbie in Python Programming and I am facing following issue:
Objective: I need to scrap Freelancers website and store the list of theusers along with their attributes (score, ratings,reviews,details, rate,etc) 
into a file. I have following codes but I am not able to get all the users.</p>

<p>Also, sometimes I run the program, the output changes.</p>

<pre><code>import requests
from bs4 import BeautifulSoup

pages = 1
fileWriter =open('freelancers.txt','w')
url = 'https://www.freelancer.com/freelancers/skills/all/'+str(pages)+'/'
r = requests.get(url)

#gets the html contents and stores them into soup object

soup = BeautifulSoup(r.content)
links = soup.findAll(""a"")

#Finds the freelancer-details nodes and stores the html content into c_data

c_data = soup.findAll(""div"", {""class"":""freelancer-details""})
for item in c_data:
    print item.text 
    fileWriter.write('Freelancers Details:'+item.text+'\t')
#Writes the result into text file
</code></pre>

<p>I need to get the user details under specific users. But so far, the output looks dispersed. </p>

<p>Sample Output:
   Freelancers Details:</p>

<pre><code>thetechie13
507 Reviews




$20 USD/hr

Top Skills:

       Website Design, 


       HTML, 


       PHP, 


       eCommerce, 


       Volusion

Dear Customer - We are a team of 75 Most Creative People and proud to be
Preferred Freelancer on  Freelancer.com. We offer wide range of web
solutions and IT services that are bespoke in nature, can best fit our
clients' business needs and provide them cost benefits.
</code></pre>
","<python><html><python-2.7><web-scraping><beautifulsoup>"
"31063190","2","31063056","<p>Collect your stats in a dict and use like so.</p>

<pre><code>choice = raw_input(""Which stat do you want to add points to?"")
skillPoints = 5

statlist = {'small guns': 5, 'big guns': 2, 'unarmed': 3, 'melee weapons': 20, 'throwing':4, 'first aid':2, 'sneak': 5, 'lockpick': 10, 'steal': 3, 'science': 4, 'repair': 3, 'speech': 5}

if choice in statlist:
    pointDeduction = int(raw_input(""How many points do you wish to add to %s? (Up to %d points)"" %(statlist[choice], skillPoints)))

    if pointDeduction &lt;= skillPoints:
        statlist[choice] += pointDeduction
        skillPoints -= pointDeduction
    else:
        print ""You do not have that many points to distribute to %s."" %(choice)

    print statlist[choice]
else:
    print 'you entered an invalid choice'
</code></pre>

<p>To print values you can do the following</p>

<pre><code># print an individual entry
print 'My small guns points are %d' % statlist['small guns']

# print all entries in a loop
print 'My points inventory is'
for key, value in statlist.iteritems():
    print '%s = %d' % (key, value)
</code></pre>
",""
"31063195","2","31063163","<p>Your indents look way off.</p>

<pre><code>class EmptyScene(Scene):

def enter(self):
    pass
</code></pre>

<p>should be:</p>

<pre><code>class EmptyScene(Scene):

    def enter(self):
        pass
</code></pre>

<p>Map isn't really associated with _init_, which should be __init__</p>

<pre><code>def _init_(self, start_scene):
    self.start_scene = start_scene
</code></pre>

<p>So, instead of calling Map._init_, your Map(xxx) ends up calling object.__init__, which does not have a parameter and your own function definition isn't taken into consideration.</p>

<p>try:</p>

<pre><code>class Map(object): 

    scenes = {
        'empty_scene': EmptyScene(),
        'finished': FinishScene(),
    }

    def __init__(self, start_scene):
        self.start_scene = start_scene
</code></pre>

<p>and while you are at it, indent all your def that have a self (meaning methods), 4 spaces to be under the classes because your whole code has that problem.</p>

<p>remember: indent 4 spaces and double underscores to the __init__ method.</p>

<p>Good luck</p>
",""
"31063213","1","","<p>Is there a way to filter data before or while read into a data frame? </p>

<p>For example, I have the following csv datafile:</p>

<pre><code> time       Event    price     Volume
00:00:00.000, B,    920.5,    57
00:00:00.000, A,    920.75,   128
00:00:00.898, T,    920.75,   1
00:00:00.898, T,    920.75,   19
00:00:00.906, B,    920.5,    60
00:00:41.284, T,    920.75,   5
00:00:57.589, B,    920.5,    53
00:01:06.745, T,    920.75,   3
00:01:06.762, T,    920.75,   2
</code></pre>

<p>I would like to read rows of data where <code>'Event'=='T'</code> and <code>'Volume'&gt;=100</code> only.
It is very easy to accomplish if we read the entire dataset in and then filter out the data (and that is what I am doing right now). </p>

<p>Each of the file I have is 10MB and there are thousands of them (about 15 GB data in total), this procedure will take forever. So I am wondering if there is a way to filter the data while reading in, or some other methods to speed things up a little. Maybe use a database instead?</p>
","<python><sql><pandas><dataframe>"
"31063222","2","31063168","<p>Try replacing <code>\d+.\d+</code> with something less restrictive like <code>\d+([.]\d*)?</code> ""6152"" won't match as ""digits dot digits.""</p>
",""
"31063280","2","31062899","<p>You should use isalpha() to ensure the name is entered in as all characters. There are other checks you can perform to make sure the input is exactly as you want it, but as a start, just make sure everything is text. </p>

<p>Example:</p>

<p><code>Customer_Name = input(""Please enter your name: "")
if Customer_Name.isalpha():
    #start your program here if the input is text
else:
    Customer_Name = input(""Please enter a valid name: "")</code></p>

<p>You can wrap this in a loop to give them a shot at trying a few times before you quit on them as well! </p>
",""
"31063308","1","","<p>The site I am trying to crawl is <a href=""http://www.boxofficemojo.com/yearly/chart/?yr=2013&amp;p=.htm"" rel=""nofollow"">http://www.boxofficemojo.com/yearly/chart/?yr=2013&amp;p=.htm</a>. The specific page I'm focusing on now is <a href=""http://www.boxofficemojo.com/movies/?id=catchingfire.htm"" rel=""nofollow"">http://www.boxofficemojo.com/movies/?id=catchingfire.htm</a>. </p>

<p>I need to get the ""Foreign gross"" amount (under Total Lifetime Grosses), but for some reason I'm not able to get it through a loop so that it goes through for all the movies, but it works with a single link that I type in. </p>

<p>This is my function to get this amount for each movie.</p>

<pre><code>def getForeign(item_url):
    s = urlopen(item_url).read()
    soup = BeautifulSoup(s)
    return soup.find(text=""Foreign:"").find_parent(""td"").find_next_sibling(""td"").get_text(strip = True)
</code></pre>

<p>This is the function to loop through each link</p>

<pre><code>def spider(max_pages):
    page = 1
    while page &lt;= max_pages:
        url = 'http://www.boxofficemojo.com/yearly/chart/?page=' + str(page) + '&amp;view=releasedate&amp;view2=domestic&amp;yr=2013&amp;p=.htm'
        source_code = requests.get(url)
        plain_text = source_code.text
        soup = BeautifulSoup(plain_text)
        for link in soup.select('td &gt; b &gt; font &gt; a[href^=/movies/?]'):
            href = 'http://www.boxofficemojo.com' + link.get('href')
            details(href)
            listOfDirectors.append(getDirectors(href))
            str(listOfDirectors).replace('[','').replace(']','')
            #getActors(href)
            title = link.string
            listOfTitles.append(title)
        page += 1
</code></pre>

<p>I have a list called listOfForeign = [] that I want to append every movie's foreign gross amount to.
The problem is, if I call getForeign(item_url) using a single full link that I type in such as:</p>

<pre><code>print listOfForeign.append(getForeign(http://www.boxofficemojo.com/movies/?id=catchingfire.htm))
</code></pre>

<p>and then later</p>

<pre><code>print listOfForeign
</code></pre>

<p>it prints out the one correct amount.</p>

<p>But when I run the function spider(max_pages), and add:</p>

<pre><code>listOfForeign.append(getForeign(href)) 
</code></pre>

<p>inside the for loop, and later try to print the listOfForeign out, I get an error </p>

<pre><code>AttributeError: 'NoneType' object has no attribute 'find_parent'
</code></pre>

<p>Why am I not able to successfully add this amount for each movie inside the spider function? In the spider(max_pages) function I get each of the movie's links in the variable ""href"", and essentially doing the same thing as adding each individual link separately. </p>

<p>Complete code:</p>

<pre><code>import requests
from bs4 import BeautifulSoup
from urllib import urlopen
import xlwt
import csv
from tempfile import TemporaryFile

listOfTitles = []
listOfGenre = []
listOfRuntime = []
listOfRatings = []
listOfBudget = []
listOfDirectors = []
listOfActors = []
listOfForeign = []
resultFile = open(""movies.csv"",'wb')
wr = csv.writer(resultFile, dialect='excel')

def spider(max_pages):
    page = 1
    while page &lt;= max_pages:
        url = 'http://www.boxofficemojo.com/yearly/chart/?page=' + str(page) + '&amp;view=releasedate&amp;view2=domestic&amp;yr=2013&amp;p=.htm'
        source_code = requests.get(url)
        plain_text = source_code.text
        soup = BeautifulSoup(plain_text)
        for link in soup.select('td &gt; b &gt; font &gt; a[href^=/movies/?]'):
            href = 'http://www.boxofficemojo.com' + link.get('href')
            details(href)
            listOfForeign.append(getForeign(href))
            listOfDirectors.append(getDirectors(href))
            str(listOfDirectors).replace('[','').replace(']','')
            #getActors(href)
            title = link.string
            listOfTitles.append(title)
        page += 1


def getDirectors(item_url):
    source_code = requests.get(item_url)
    plain_text = source_code.text
    soup = BeautifulSoup(plain_text)
    tempDirector = []
    for director in soup.select('td &gt; font &gt; a[href^=/people/chart/?view=Director]'):
        tempDirector.append(str(director.string))
    return tempDirector

def getActors(item_url):
    source_code = requests.get(item_url)
    plain_text = source_code.text
    soup = BeautifulSoup(plain_text)
    tempActors = []
    print soup.find(text=""Actors:"").find_parent(""tr"").text[7:]



def details(href):
    response = requests.get(href)
    soup = BeautifulSoup(response.content)
    genre = soup.find(text=""Genre: "").next_sibling.text
    rating = soup.find(text='MPAA Rating: ').next_sibling.text
    runtime = soup.find(text='Runtime: ').next_sibling.text
    budget = soup.find(text='Production Budget: ').next_sibling.text

    listOfGenre.append(genre)
    listOfRuntime.append(runtime)
    listOfRatings.append(rating)
    listOfBudget.append(budget)


def getForeign(item_url):
    s = urlopen(item_url).read()
    soup = BeautifulSoup(s)
    try:
        return     soup.find(text=""Foreign:"").find_parent(""td"").find_next_sibling(""td"").get_text(strip = True)
    except AttributeError:
        return ""$0""

spider(1)

print listOfForeign
wr.writerow(listOfTitles)
wr.writerow(listOfGenre)
wr.writerow(listOfRuntime)
wr.writerow(listOfRatings)
wr.writerow(listOfBudget)
for item in listOfDirectors:
    wr.writerow(item)
</code></pre>
","<python><web-scraping><beautifulsoup><web-crawler><html-parsing>"
"31063328","2","31062886","<p>If you want to also print the largest number in your file, you just have to add this to your code under your other <code>print</code>:</p>

<pre><code>print max(infile)#Python2
print (max(infile))#Python3
</code></pre>

<p>That is if you only have numbers in your file.</p>
",""
"31063349","2","31062876","<p>The Aerospike C client is very fast, but wrapping standard Python around it slows things down, mainly due to memory allocations and type casting.</p>

<p>I don't know of a project combining Twisted with the Aerospike client. Async functions are being considered but Python has different approaches to it from Twisted to gevent. We'd be happy to support such a project.</p>
",""
"31063351","2","31063168","<p>Use this regex expr:</p>

<pre><code>_myRe = re.compile(""\[\d+: \d+\] \* \$ Total Time To Complete \d+ Jobs: \d+\.\d+ \[Sec\]"")
</code></pre>
",""
"31063359","1","","<p>I am needing to sort a list that contains tuples inside. I can sort them using <code>key=lambda</code>. The list is larger than 1000 elements.</p>

<pre><code>&gt;&gt;&gt; a = [(&lt;object&gt;, 4), (&lt;object&gt;, 5), (&lt;object&gt;, -2)....]
&gt;&gt;&gt; b = sorted(a, key=lambda tup: tup[1])
</code></pre>

<p>Is there a faster way to accomplish this?</p>
","<python><sorting><lambda>"
"31063363","1","","<p>I am trying to define a supporting function <code>getMean(alist)</code> to calculate the average that will be printed out from another function <code>getStats(city_populations)</code>.</p>

<p>My code:</p>

<pre><code>def getMean(alist):
    alist = sum(city_population,0.0)/len(city_population)


def getStats(city_populations):
    city_populations.sort(key=int)
    print ""The population data in asecending order is:"", city_populations
    city_populations.sort(reverse=True)
    print ""The population data in descending order is:"", city_populations
    print ""The max value of the population data is"", max(city_populations)
    print ""The min value of the populatioon data is"", min(city_populations)
    average = getMean(alist)
    print ""The mean of the collected data is"",average
</code></pre>

<p>Error: </p>

<blockquote>
  <p>NameError: name 'alist' is not defined</p>
</blockquote>

<p>How can I enable <code>getStats</code> to use the value from <code>getMean</code>?</p>
","<python><python-2.7>"
"31063372","1","","<p>Does anyone know, how I could skip the parenthesis from a text file I trying to read using <code>numpy.genfromtxt</code>
My data file is of the format </p>

<pre><code>1.466 ((5.68 3.3 45.7)(4.5 6.7 9.5))
</code></pre>
","<python><numpy><genfromtxt>"
"31063375","2","31063363","<pre><code># You passed in the wrong variable
average = getMean(city_population)

# The variable you passed is now called 'alist'
# And by returning the average, your function getStats now has access to it
def getmean(alist):
    return sum(alist,0.0)/len(alist)
</code></pre>
",""
"31063384","1","","<p>I am a Python beginner and have a puzzle.
When I write code like this:</p>

<pre><code>lst = [1, 2, 3, 4]
</code></pre>

<p>Pycharm give me a prompt that is ""this list creation could be rewritten as a list literal"".
But if it's replaced by</p>

<pre><code>lst = list([1, 2, 3, 4])
</code></pre>

<p>Pycharm doesn't say anything. Who could tell me why?</p>

<p>Is this code like <code>lst = [1, 2, 3, 4]</code> legal in Python? Can I ignore prompt?</p>
","<python><list><pycharm>"
"31063398","1","","<p>Python: How to graph $y^2=x^3-7+3$?</p>

<p>I have been searching online but I can't find a way to do it.</p>
","<python><graph>"
"31063399","2","31063359","<p>You can use <a href=""https://docs.python.org/2/library/operator.html"" rel=""nofollow"">itemgetter</a></p>

<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; a = [(None, 4), (None, 5), (None, -2)]
&gt;&gt;&gt; b = sorted(a, key=itemgetter(1))
&gt;&gt;&gt; b
[(None, -2), (None, 4), (None, 5)]
</code></pre>

<p>Now if you want to look at the performance, here is itemgetter:</p>

<pre><code>In [3]: %timeit sorted(a, key=itemgetter(1))
1000000 loops, best of 3: 732 ns per loop

In [4]: %timeit sorted(a, key=lambda tup: tup[1])
1000000 loops, best of 3: 804 ns per loop
</code></pre>

<p>So, not too dramatic for a small list. Let's upscale this:</p>

<pre><code>In [1]: import random
In [2]: a = [(i, random.randint(0, 100)) for i in range(100000)]
In [3]: %timeit sorted(a, key=itemgetter(1))
10 loops, best of 3: 30.5 ms per loop
In [4]: %timeit sorted(a, key=lambda tup: tup[1])
10 loops, best of 3: 35.6 ms per loop
</code></pre>

<p>So still a slightly faster approach even after upscaling. However, I use itemgetter because it's clean code, not because it's faster. Write clean code over performance, and optimize if necessary. 1000 elements is nothing: it's better you know what you're doing.</p>

<p>Just remember, premature [or unnecessary] optimization is the root of all <a href=""http://c2.com/cgi/wiki?PrematureOptimization"" rel=""nofollow"">evil</a>. Especially for such a small data set, where it takes milliseconds to complete the entire task. </p>
",""
"31063448","2","31063213","<p>I don't believe there is a way to filter what you want read in a csv file.</p>

<p>Try using HDFStore. It offers vastly better performance for reading and writing. You could read all your data once from CSV and save it to H5 files and they use these H5 files as your database. Some comparisons results are on this page,</p>

<p><a href=""http://pandas.pydata.org/pandas-docs/dev/io.html"" rel=""nofollow"">http://pandas.pydata.org/pandas-docs/dev/io.html</a></p>

<p>I am copying the results here for comparision,</p>

<p>Write Performance, </p>

<pre><code>In [15]: %timeit test_hdf_fixed_write(df)
1 loops, best of 3: 237 ms per loop

In [26]: %timeit test_hdf_fixed_write_compress(df)
1 loops, best of 3: 245 ms per loop

In [16]: %timeit test_hdf_table_write(df)
1 loops, best of 3: 901 ms per loop

In [27]: %timeit test_hdf_table_write_compress(df)
1 loops, best of 3: 952 ms per loop

In [17]: %timeit test_csv_write(df)
1 loops, best of 3: 3.44 s per loop
</code></pre>

<p>Read Performance, </p>

<pre><code>In [19]: %timeit test_hdf_fixed_read()
10 loops, best of 3: 19.1 ms per loop

In [28]: %timeit test_hdf_fixed_read_compress()
10 loops, best of 3: 36.3 ms per loop

In [20]: %timeit test_hdf_table_read()
10 loops, best of 3: 39 ms per loop

In [29]: %timeit test_hdf_table_read_compress()
10 loops, best of 3: 60.6 ms per loop

In [22]: %timeit test_csv_read()
1 loops, best of 3: 620 ms per loop
</code></pre>
",""
"31063459","2","31063398","<p>With <code>matplotlib</code> and <code>numpy</code>:</p>

<pre><code>import matplolib.pyplot as plt
import numpy as np
from math import sqrt

x = np.arange(10,100) # You have to choose the domain you are looking to plot
y = [sqrt(i**3 - 7 + 3) for i in x]

plt.plot(x,y)
plt.show()
</code></pre>

<p>Well, actually you have to be careful with the domain of the function, in order to choose <code>+sqrt</code> or <code>-sqrt</code>.</p>
",""
"31063464","2","31063308","<p>The code fails once it hits a movie page <em>without a foreign income</em>, as e.g. <a href=""http://www.boxofficemojo.com/movies/?id=42.htm"" rel=""nofollow"">42</a>. You should handle cases like this. For example, catch the exception and set it to <code>$0</code>.</p>

<p>You are also experiencing the <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/#differences-between-parsers"" rel=""nofollow"">differences between parsers</a> - <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/#specifying-the-parser-to-use"" rel=""nofollow"">specify the <code>lxml</code> or <code>html5lib</code> parser explicitly</a> (you would need to have <code>lxml</code> or <code>html5lib</code> <a href=""http://www.crummy.com/software/BeautifulSoup/bs4/doc/#installing-a-parser"" rel=""nofollow"">installed</a>).</p>

<p>Also, why don't use <code>requests</code> to parse the movie page too:</p>

<pre><code>def getForeign(item_url):
    response = requests.get(item_url)
    soup = BeautifulSoup(response.content, ""lxml"")  # or BeautifulSoup(response.content, ""html5lib"")
    try:
        return soup.find(text=""Foreign:"").find_parent(""td"").find_next_sibling(""td"").get_text(strip = True)
    except AttributeError:
        return ""$0""
</code></pre>

<hr>

<p>As a side note, overall the code you have is getting pretty complex and slow, due to the <em>blocking nature</em> of the script, the requests are sent one-by-one sequentially. It might be a good idea to switch to the <a href=""http://scrapy.org/"" rel=""nofollow""><code>Scrapy</code> web-scraping framework</a>, that, aside from making the code a lot faster, would help to organize it into logical groups - you would have a spider with the scraping logic inside, item class defining your extraction data model, a pipeline for writing the extracted data to a database, if needed and much more.</p>
",""
"31063498","1","","<p>I have just started teaching myself Python and is currently still learning. I have very little experience in programming. In order to teach myself, I came up with the following problem. The problem is as follow...</p>

<p>I have 3 sellers that work in multiple regions selling stuff. I would like to know how much they are selling per region and what the total is for each person per region as well as what grand total for all of them.  </p>

<p>I have the following data, I'm reading in from a txt file
name, region, amount</p>

<p>The file is sorted on name, but not on region.</p>

<ul>
<li>The name can be any one of 3 values John, Peter or Paul.</li>
<li>The file may contain only one or all of them.</li>
<li>For each person he may have sold stuff in 1 to x regions</li>
<li>For each region he may have sold 1 to x items</li>
</ul>

<p>At this stage I'm think that I should:
Read each line and...</p>

<p>Check if its a new name i.e. first line or going from John to Peter for example.
For each name start totalling the total of all transactions while also checking the region and adding to the regional total as well as the grand total. This is were its starts going astray, as I can have Peter with 5 sales in 3 regions:</p>

<p>i.e. </p>

<pre><code>Peter r1 10
Peter r2 10
Peter r3 10
Peter r2 11
Peter R2 13
Peter R3 1
</code></pre>

<p>How do I keep track of what region I'm in, whiles also keeping track of the regional totals per sales person? </p>

<p>Do I use dictionary lists?</p>
","<python>"
"31063502","2","31063398","<p><a href=""http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.contour"" rel=""nofollow noreferrer"">Matplotlib's <code>contour</code> function</a> can be used to plot the solution to implicit equations:</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt
fig, ax = plt.subplots()

y, x = np.ogrid[-4:4:1000j, -6:6:1000j]
plt.contour(
    x.ravel(), y.ravel(), y**2 - x**3 + 7*x -3, [0])
plt.show()
</code></pre>

<p>yields</p>

<p><img src=""https://i.stack.imgur.com/6Ngvg.png"" alt=""enter image description here""></p>
",""
"31063528","2","31062899","<pre><code>if customer[0] ==""p"":
    customer.append(input(""Customer Name:""))
if customer[0] ==""d"":
    customer.append(input(""Customer Name:""))
    customer.append(input(""Address:""))
    customer.append(input(""Phone No:""))
</code></pre>

<p>If anything but p or d are entered I need an error message to pop up saying 'Input Error' or something</p>
",""
"31063541","1","","<p>I'm parsing an XML document that we will receive from a vendor everyday and it uses namespaces heavily.  I've minimized the problem to a tiny subset here:</p>

<p>There are some elements I need to parse, and they are all children of another element that has a specific attribute in it.<br>
I am able to use <code>lxml.etree.Element.findall(TAG, root.nsmap)</code> to find the candidate nodes whose attribute i need to check.</p>

<p>I'm then trying to check the attribute of each of these Elements via the name I know it uses : which concretely here is <code>ss:Name</code>. If the value of that attribute is what I want I'm going to dive deeper into said Element to continue doing other things.</p>

<p>How can I do this?</p>

<p>The XML I'm parsing is roughly</p>

<pre><code>&lt;FOO xmlns=""SOME_REALLY_LONG_STRING""
 some gorp declaring a bunch of namespaces one of which is 
 xmlns:ss=""THE_VERY_SAME_REALLY_LONG_STRING_AS_ROOT""
&gt;
    &lt;child_of_foo&gt;
        ....
    &lt;/child_of_foo&gt;
    ...
    &lt;SomethingIWant ss:Name=""bar"" OTHER_ATTRIB_I_DONT_WANT&gt;
        ....
        &lt;MoreThingsToLookAtLater&gt;
            ....
        &lt;/MoreThingsToLookAtLater&gt;
        ....
    &lt;/SomethingIWant&gt;
    ...
&lt;/FOO&gt;
</code></pre>

<p>I found the first Element I wanted <code>SomethingIWant</code> like so (ultimately i want them all so I did find all)</p>

<pre><code>import lxml
from lxml import etree

tree = etree.parse(myfilename)
root = tree.getroot()
# i want just the first one for now
my_sheet = root.findall('ss:RecordSet', root.nsmap)[0]
</code></pre>

<p>Now I want to get the <code>ss:Name</code> attribute from this element, to check it, but I'm not sure how.</p>

<p>I know that <code>my_sheet.attrib</code> will display me the raw URI followed by the attribute name, but I don't want that. I need to check if it has a specific value for a specifc namespaced attribute. (Because if it's wrong I can skip this element from further processing entirely).</p>

<p>I tried using <code>lxml.etree.ElementTree.attrib.get()</code> but I don't seem to obtain anything useful.</p>

<p>Any ideas?</p>
","<python><xml><xml-parsing><lxml>"
"31063563","2","31063384","<p>Check your code to make sure you don't have <code>lst</code> somewhere else as <code>lst=[]</code>. </p>

<p>If you type the following:</p>

<pre><code>lst= []
# more code
lst = [1, 2, 3, 4]
</code></pre>

<p>You'll receive the prompt you got. You won't run into problems if you keep it that way but it's bad practice.</p>

<p>In those two cases you are using a function to change the variable: <code>list()</code> and <code>append()</code>. In the previous one where you're just redefining the variable explicitly. </p>

<p>Another improper example: </p>

<pre><code>a = 7
# some code that has nothing to do with ""a"" or uses it
a = 8
</code></pre>

<p>Just set <code>a = 8</code> to begin with. No need to store <code>a = 7</code>.</p>
",""
"31063663","2","31063541","<p>I'm pretty sure this is a horribly NON-PYTHONIC non ideal way to do it; and it seems like there must be a better way... but I discovered I could do this:  </p>

<p><code>SS_REAL = ""{%s}"" % root.nsmap.get('ss')</code></p>

<p>and then I could do:
<code>my_sheet.get( SS_REAL + ""NAME"" )</code></p>

<p>It gets me what I want.. but this can't possibly be the <em>right</em> way to do this.. </p>
",""
"31063741","2","31063122","<p>I think you should drop the ""analog=True"" from your call to scipy.signal.butter and use the default digital filter. When I did this with your data, it worked pretty well.</p>

<p>From the <a href=""http://docs.scipy.org/doc/scipy-0.14.0/reference/generated/scipy.signal.butter.html"" rel=""nofollow noreferrer"">docs</a>:</p>

<blockquote>
  <p>A scalar or length-2 sequence giving the critical frequencies. For a
  Butterworth filter, this is the point at which the gain drops to
  1/sqrt(2) that of the passband (the “-3 dB point”). <strong>For digital
  filters, Wn is normalized from 0 to 1, where 1 is the Nyquist
  frequency, pi radians/sample. (Wn is thus in half-cycles / sample.)
  For analog filters, Wn is an angular frequency (e.g. rad/s).</strong></p>
</blockquote>

<p>Because you requested an analog filter, you shouldn't have normalized the start and stop frequencies to the nyquist rate. That's only appropriate for a digital filter.</p>

<p>Is there a reason you want to use an analog filter here? I always use digital filters.</p>

<p>Also, consider using <code>scipy.signal.filtfilt</code> instead of <code>scipy.signal.lfilter</code>. Refs:</p>

<p><a href=""https://stackoverflow.com/questions/13740348/how-to-apply-a-filter-to-a-signal-in-python/13740532#13740532"">How To apply a filter to a signal in python</a></p>

<p><a href=""https://dsp.stackexchange.com/questions/19084/applying-filter-in-scipy-signal-use-lfilter-or-filtfilt"">https://dsp.stackexchange.com/questions/19084/applying-filter-in-scipy-signal-use-lfilter-or-filtfilt</a></p>
",""
"31063804","2","31063372","<p>np.genfromtxt can accept iterators:</p>

<pre><code>import numpy as np
import re

with open('data', 'r') as f:
    lines = (line.replace('(',' ').replace(')',' ') for line in f)
    arr = np.genfromtxt(lines)
print(arr)
</code></pre>

<p>yields</p>

<pre><code>[  1.466   5.68    3.3    45.7     4.5     6.7     9.5  ]
</code></pre>

<hr>

<p>Alternatively, you could use (in Python2) the <code>str.translate</code> or (in Python3) the <code>bytes.translate</code> method, which is a bit faster:</p>

<pre><code>import numpy as np
import re

try:
    # Python2
    import string
    table = string.maketrans('()','  ')
except AttributeError:
    # Python3
    table = bytes.maketrans(b'()',b'  ')

with open('data', 'rb') as f:
    lines = (line.translate(table) for line in f)
    arr = np.genfromtxt(lines)
print(arr)
</code></pre>
",""
"31063840","2","31063498","<p>Just to clarify, <a href=""https://docs.python.org/2/tutorial/datastructures.html#dictionaries"" rel=""nofollow"">dictionaries</a> and <a href=""https://docs.python.org/2/tutorial/introduction.html#lists"" rel=""nofollow"">lists</a> are two separate things.  A dictionary is a mapping of keys to values (it's a hashmap under the hood) that provides fast lookup of value by key, whereas a list is just an ordered list of arbitrary items (e.g. an arraylist)</p>

<p>If you want just a basic data structure to store the inventory, there a couple ways to do it, but you could use a nested dictionary, e.g. a dictionary of dictionaries where the outer dictionary maps names to a dictionary of regions and each dictionary of regions is a mapping between the region names for that person and the amount sold for that region for that person, e.g.</p>

<pre><code>{'John': {'r2': 55}, 'Peter': {'r1': 10, 'r2': 34, 'r3': 11}}
</code></pre>

<p>A more object-oriented approach might be to create separate objects for each person and region, etc. but that would probably be overkill for what you are trying to do.</p>

<p>In terms of what the code to read in the transactions and populate these data structures might look like, you could do something like this:</p>

<pre><code># read in the transactions
with open('blah.txt') as file_obj:
    raw_data = file_obj.readlines()

inventory = {} # initialize your outer dictionary

# parse the transactions and update the inventory
for line in raw_data:
    if not line.strip():
        continue
    name, region, amount = line.strip().split()

    # is r2 the same as R2?
    region = region.lower()
    # we'd like to manipulate amount as a number not a string
    amount = float(amount) 

    # create a new inner dictionary for this name, if not one already
    if not name in inventory:
        inventory[name] = {}

    # update the total for that region for that name
    inventory[name][region] = inventory[name].get(region, 0) + amount

# with the data stored this way, you can easily query 
# or calculate any totals you want, e.g.
def total_per_person_per_region(inv, name, region):
    return inv[name][region]

def total_per_person(inv, name):
    return sum(inv[name].values())

def grand_total(inv):
    return sum(total_per_person(inv, name) for name in inv)
</code></pre>
",""
"31063900","2","31063541","<p>One of advantages of <code>lxml</code> over standard python XML parser is <code>lxml</code>'s full-support of XPath 1.0 specfication via <code>xpath()</code> method. So I would go with <code>xpath()</code> method most of the time. Working example for your current case :</p>

<pre><code>from lxml import etree

xml = """"""&lt;FOO xmlns=""SOME_REALLY_LONG_STRING""
 xmlns:ss=""THE_VERY_SAME_REALLY_LONG_STRING_AS_ROOT""
&gt;
    &lt;child_of_foo&gt;
        ....
    &lt;/child_of_foo&gt;
    ...
    &lt;SomethingIWant ss:Name=""bar""&gt;
        ....
    &lt;/SomethingIWant&gt;
    ...
&lt;/FOO&gt;""""""

root = etree.fromstring(xml)
ns = {'ss': 'THE_VERY_SAME_REALLY_LONG_STRING_AS_ROOT'}

# i want just the first one for now
result = root.xpath('//@ss:Name', namespaces=ns)[0]
print(result)
</code></pre>

<p><strong>output :</strong></p>

<pre><code>bar
</code></pre>

<p><strong>UPDATE :</strong></p>

<p>Modified example demonstrating how to get attribute in namespace from current <code>element</code> :</p>

<pre><code>ns = {'ss': 'THE_VERY_SAME_REALLY_LONG_STRING_AS_ROOT', 'd': 'SOME_REALLY_LONG_STRING'}

element = root.xpath('//d:SomethingIWant', namespaces=ns)[0]
print(etree.tostring(element))

attribute = element.xpath('@ss:Name', namespaces=ns)[0]
print(attribute)
</code></pre>

<p><strong>output :</strong></p>

<pre><code>&lt;SomethingIWant xmlns=""SOME_REALLY_LONG_STRING"" xmlns:ss=""THE_VERY_SAME_REALLY_LONG_STRING_AS_ROOT"" ss:Name=""bar""&gt;
        ....
    &lt;/SomethingIWant&gt;
    ...

bar
</code></pre>
",""
"31064087","2","31063188","<p>If you want each individual text component on its own (each assigned a different name), I would advise you to parse the text from from the HTML separately. However if you want it all grouped together you could join the strings:</p>

<pre><code>print ' '.join(item.text.split())
</code></pre>

<p>This will place a single space between each word.</p>
",""
"31067313","2","31062785","<p>Use <code>unique_together</code> to validate the case when both values are provided. Then add a <code>clean</code> method to your model that makes sure that either both values are provided, or neither is.</p>

<pre><code>class MyModel(models.Model):
    ... 
    def clean(self):
        """"""
        Make sure that if field1 or field2 is specified, 
        then they are both specified.
        """"""
        if self.field1 is not None and self.field2 is None:
            raise ValidationError('you must specify field2 if you specify field1')
        elif self.field1 is None and self.field2 is not None:
            raise ValidationError('you must specify field1 if you specify field2')
</code></pre>
",""
"31073829","1","","<p>How can I find the Dynamic text that is as per the user details entered of the static field result using mechanize browser in python.
 I can do it using ""split"" function as splitting the text and storing the text in a variable. But is there any function that will directly give me results as:
Name: abc
Addr: pqr
Gender: male </p>

<pre><code>abc=mechanize.Browser()
abc.set_handle_robots(False)
abc.open(url)
abc._factory.is_html = True
abc.select_form(nr=0)
x=abc.submit()
m=x.read()
</code></pre>

<p>I tried using 'findAll' but not working well. Here abc can be any name as per the login. Data are not of any text box input values.
Any help will be appreciated. </p>
","<python><dynamic><mechanize>"
"31073856","1","","<p>I have a pandas data frame with a column that represents dates as:</p>

<pre><code>Name: ts_placed, Length: 13631, dtype: datetime64[ns]
</code></pre>

<p>It looks like this:</p>

<pre><code>0    2014-10-18 16:53:00
1    2014-10-27 11:57:00
2    2014-10-27 11:57:00
3    2014-10-08 16:35:00
4    2014-10-24 16:36:00
5    2014-11-06 15:34:00
6    2014-11-11 10:30:00
....
</code></pre>

<p>I know how to group it in general using the function:</p>

<pre><code>grouped = data.groupby('ts_placed')
</code></pre>

<p>What I want to do is to use the same function but to group the rows by week.</p>
","<python><pandas><datetime64>"
"31073889","1","","<p>I am trying to perform a some arithmetic operations in Python Pandas and merge the result in one of the file. </p>

<pre><code>Path_1: File_1.csv, File_2.csv, ....
</code></pre>

<p>This path has several file which are supposed to be increasing in time intervals. with the following columns </p>

<pre><code>    File_1.csv    |  File_2.csv
    Nos,12:00:00  |  Nos,12:30:00

    123,1451         485,5464
    656,4544         456,4865
    853,5484         658,4584

Path_2: Master_1.csv

Nos,00:00:00
123,2000
485,1500
656,1000
853,2500
456,4500
658,5000
</code></pre>

<p>I am trying to read the <code>n</code> number of <code>.csv</code> files from <code>Path_1</code> and compare the <code>col[1]</code> header timeseries with <code>col[last]</code> timeseries of <code>Master_1.csv</code>. </p>

<p>If <code>Master_1.csv</code> does not have that time it should create a new column with timeseries from <code>path_1 .csv</code> files and update the values with respect <code>col['Nos']</code> while subtracting them from <code>col[1]</code> of <code>Master_1.csv</code>.</p>

<p>If the <code>col</code> with time from <code>path_1 file</code> is present then look for <code>col['Nos']</code> and then replace the <code>NAN</code> with the subtracted values respect to that <code>col['Nos']</code>.</p>

<p>i.e. </p>

<p>Expected Output in Master_1.csv </p>

<pre><code>Nos,00:00:00,12:00:00,12:30:00,
    123,2000,549,NAN,
    485,1500,NAN,3964,
    656,1000,3544,NAN
    853,2500,2984,NAN
    456,4500,NAN,365
    658,5000,NAN,-416
</code></pre>

<p>I can understand the arithmetic calculations but I am not able to loop in with respect to <code>Nos</code> and <code>timeseries</code> I have tried to put some code together and trying to work around looping. Need help in that context. Thanks </p>

<pre><code>import pandas as pd 
import numpy as np

path_1 = '/'
path_2 = '/'

df_1 = pd.read_csv(os.path_1('/.*csv'), Index=None, columns=['Nos', 'timeseries'] #times series is different in every file eg: 12:00, 12:30, 17:30 etc
df_2 = pd.read_csv('master_1.csv', Index=None, columns=['Nos', '00:00:00']) #00:00:00 time series

for Nos in df_1 and df_2:
    df_1['Nos'] = df_2['Nos']
    new_tseries = df_2['00:00:00'] - df_1['timeseries']

merged.concat('master_1.csv', Index=None, columns=['Nos', '00:00:00', 'new_tseries'], axis=0) # new_timeseries is the dynamic time series that every .csv file will have from path_1
</code></pre>
","<python><file><csv><pandas><time-series>"
"31073993","1","","<p>I allow myself to write to you, due to a block on my part at Salt.</p>

<p>I made a bash script that adds a host in my zabbix monitoring server. it works perfectly when I run .sh</p>

<p>the idea is that I want to automate this configuration through salt. I am when I do a highstate my state that contains the script runs in the master before minion because there's  my login authentication in my bash script.</p>

<p>Is there's a special configuration for its? is what you have ideas how to do like this kind of setup? according to my research I found that to be used as the salt-runner but I do not know if this is good or not;</p>

<p>In anticipation of your return, I wish you a good weekend.</p>
","<python><git><salt-stack>"
"31074025","2","31073856","<p>Pass </p>

<pre><code>pd.DatetimeIndex(df.date).week
</code></pre>

<p>as the argument to <code>groupby</code>. This is the ordinal week in the year; see <a href=""http://pandas.pydata.org/pandas-docs/dev/generated/pandas.DatetimeIndex.html"" rel=""nofollow""><code>DatetimeIndex</code></a> for other definitions of week.</p>
",""
"31074043","1","","<p>I added some celery tasks to my python app, and they work great. I'm trying to fix my test suite for celery as well. I added <code>celery.conf.CELERY_ALWAYS_EAGER = True</code> to my test suite so that it can run with the tasks executed synchronously. </p>

<p>Problem is that random tests (that do not even use the celery task) are showing the error <code>DetachedInstanceError: Parent instance &lt;MyModel at 0x1096ba690&gt; is not bound to a Session; lazy load operation of attribute 'child' cannot proceed</code>.</p>

<p>Removing <code>celery.conf.CELERY_ALWAYS_EAGER = True</code> fixes the problem, but then the celery tasks are sent to the queue but not processed unless I start a worker in the terminal.</p>
","<python><unit-testing><celery><python-unittest>"
"31074127","1","","<p>I wrote a script fetching price data from <a href=""http://www.gold.org/"" rel=""nofollow"">here</a>. The web page updates every minute. </p>

<p>However, whenever I run this script I get the same result: (1173.4, '2015-06-26 13:16:02'). It feels like I'm fetching the data from the same web page in a particular moment.</p>

<p>My environment is Win7 x64 with Anaconda(spider).</p>

<pre><code>from bs4 import BeautifulSoup
import urllib.request
import re

def fetchPrice():
    req = urllib.request.urlopen('http://www.gold.org/')
    page = req.read()
    req.close()
    websoup = BeautifulSoup(page, 'html.parser')
    soup = websoup.findAll('div',attrs = {""class"":""asset ask""})[0]
    plain = soup.findAll('dd',attrs = {""class"":""value""})[0].text
    askprice = float(re.sub('[^0-9z\.]','',plain))
    t = websoup.findAll('span',attrs = {""class"":""timestamp""})[0].text  
    return (askprice,t)

print(fetchPrice())
</code></pre>
","<python>"
"31074172","1","","<p>In short, Im trying to add two points on an elliptic curve y^2 = x^3 + ax + b over a finite field Fp. I already have a working implementation over R, but do not know how to alter the general formulas Ive found in order for them to sustain addition over Fp. </p>

<p>When P does not equal Q, and Z is the sum of P and Q:</p>

<pre><code>        dydx = (Q.y - P.y)/(Q.x - P.x)
        Z.x = dydx**2 - P.x - Q.x
        Z.y = dydx * (Z.x - P.x) + P.y
</code></pre>

<p>When P equals Q, again with Z as the sum:</p>

<pre><code>        dydx = (3 * (P.x)**2 + self.a)/(2 * P.y)
        Z.x = dydx**2 - 2 * P.x
        Z.y = dydx * (Z.x - P.x) + P.y
</code></pre>

<p>These are the same formules as found <a href=""https://en.wikipedia.org/wiki/Elliptic_curve_point_multiplication#Point_addition"" rel=""nofollow"">here</a>. What needs to be modified?</p>

<p>Clarification: The code above works for elliptic curves over R. I am looking to find what needs to be changed for it to work for addition of points over a <a href=""https://en.wikipedia.org/wiki/Field_%28mathematics%29#Finite_fields"" rel=""nofollow"">finite field</a> of order p.</p>
","<python><math><cryptography><elliptic-curve>"
"31074183","1","","<p>Recently I tried calculating Catalan number using Python!
I tried 2 ways to calculate Catalan number:</p>

<pre><code>dp = np.zeros(160)
dp[0] = 1
for i in range(1, 100):
    for j in range(i):
        dp[i] += dp[j] * dp[i - j - 1]
</code></pre>

<p>and</p>

<pre><code>n = int(raw_input())
catalan_n = int(math.factorial(n * 2) / math.factorial(n) / math.factorial(n + 1))
</code></pre>

<p>According to <a href=""https://en.wikipedia.org/wiki/Catalan_number"" rel=""nofollow"">wiki</a> these should yield the same answer, but in my computer, when n equals about 31 or more, they give different results.</p>

<p>For example, given <code>n = 31</code>, the first implementation yield </p>

<pre><code>14544636039226908
</code></pre>

<p>when the second</p>

<pre><code>14544636039226909
</code></pre>

<p>The difference becomes larger when n is larger.</p>

<p>So, what is the reason? and how can I handle so that both implementations give the same ( and right ) result?</p>
","<python><python-2.7>"
"31074223","1","","<p>In <strong>Dockerfile</strong> I use:</p>

<pre><code>EXPOSE 8888
</code></pre>

<p>So, I run the container:</p>

<pre><code>docker run --name some-app --link some-redis:redis -d app
</code></pre>

<p>In output I have this string:</p>

<pre><code>c980349b5b2120064fc197b00a1aaf94aa16c788b66cb148da7826bb5488d0db
</code></pre>

<p>Then I want to know the ip, that I can connect from browser:</p>

<pre><code>docker inspect --format '{{ .NetworkSettings.IPAddress }}' c980349b
5b2120064fc197b00a1aaf94aa16c788b66cb148da7826bb5488d0db
</code></pre>

<p>It returns <strong>172.17.0.20</strong></p>

<p>I go to web-brouser and on page <code>http://172.17.0.20:8888</code>, but I have in Chrome </p>

<pre><code>ERR_CONNECTION_TIMED_OUT
</code></pre>

<p>Whats the problem and how to fix that?</p>

<p>Thanks!</p>

<p><strong>UPDATE</strong></p>

<p><strong>Dockerfile:</strong></p>

<pre><code>FROM python:3.4.3-slim
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app
COPY app.py /usr/src/app/
COPY requirements.txt /usr/src/app/
RUN pip install -r requirements.txt
CMD [ ""python"", ""./app.py"" ]
EXPOSE 8888
</code></pre>

<p>When I use:</p>

<pre><code>docker exec -it some-app bash
netstat -tulnp | grep 8888
</code></pre>

<p>It returned:</p>

<pre><code>bash: netstat: command not found
</code></pre>

<p>And</p>

<pre><code>docker logs some-app
</code></pre>

<p>Returns nothing</p>
","<python><docker><tornado>"
"31074227","1","","<p>I have been playing with various interpolation techniques - and particularly like the varieties shown in the youtube video 
<a href=""https://www.youtube.com/watch?v=_cJLVhdj0j4"" rel=""nofollow"">https://www.youtube.com/watch?v=_cJLVhdj0j4</a></p>

<p>However, the scatter module plots the points in the wrong location. I have transposed them below (Example 5) to make it work, but this does not work if the area of interest is not centred on the origin (Test_Rbf).</p>

<p>Am I mis-understanding something fundamental, or is this a problem in the pylab scatter module?</p>

<pre><code># Example 5 
#
# https://www.youtube.com/watch?v=_cJLVhdj0j4

import numpy as np
from scipy import interpolate
import pylab as py

def func(x,y):
return (x+y)*np.cos(-5.0*x + 4.0*y)

x = np.random.uniform(-1.0, 1.0,size=50)
y = np.random.uniform(-1.0, 1.0,size=50)
fvals = func(x,y)

newfunc = interpolate.Rbf(x, y, fvals, function='multiquadric')
xnew, ynew = np.mgrid[-1:1:100j, -1:1:100j]

fnew = newfunc(xnew, ynew)
true = func(xnew, ynew)

py.figure()
py.clf()
py.imshow( fnew, extent=[-1,1,-1,1], cmap=py.cm.jet)
# py.scatter( x, y, 30, fvals, cmap=py.cm.jet)
py.scatter( y, -x, 30, fvals, cmap=py.cm.jet)

py.show()

from enthought.mayavi import mlab

mlab.clf()
mlab.surf(xnew, ynew, fnew*2)
</code></pre>
","<python><matplotlib><scatter>"
"31074300","2","31074183","<p>I'm pretty sure it's just a division problem the same way that 5/2 will give you 2.
Also changing it to float won't fix it as floats only save a few (10 maybe? I don't remember) digits.</p>

<p>You could try first calculating the entire top part and then the entire bottom part and then divide them. By doing that you could also check for problems with %, I don't remember exactly how Catalan numbers work but it should fix it for you.
I hope this helps.</p>
",""
"31074329","1","","<p>We can support new typedefs , #includes and #defines , by preprocessing it with the help of pycparser parse_file . I also went through the documentation:  README page and the blog post , but all the documentation was written for linux systems.I have no clue about linux systems and would love to get the documentation for windows.</p>
","<python><windows><pycparser>"
"31074380","1","","<p>I am setting up the code for GA User-ID on my Python template (head section). The full GA script is:</p>

<pre><code>&lt;!-- Google Analytics --&gt;
&lt;script&gt;
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-HIDDENFORTHISQUESTION-1', 'auto');
  ga('set', '&amp;uid', {{ request.user.id }});
  ga('send', 'pageview');
&lt;/script&gt;
</code></pre>

<p>I get this error when resquest.user.id is set to None, as no user is logged in on the site:</p>

<pre><code>ga('set', '&amp;uid', None);
</code></pre>

<p>When a user is logged in, I get the proper id number and no error (e.g. 8543 stands for registered user #8543):</p>

<pre><code>ga('set', '&amp;uid', 8543);
</code></pre>

<p>How can I avoid this error when user.id returns None?</p>

<p>I believe I should wrap that line in an if sentence to convert the value ""None"" into NULL or 0, but my JS is very limited and I don't want to mess anything up :)</p>

<p>Thanks in advance for your help!   </p>
","<javascript><python><google-analytics><user-identification>"
"31074385","2","31074183","<p>Use integer division (<code>/</code> in Python 2.x; <code>//</code> in Python 3.x; see <a href=""https://www.python.org/dev/peps/pep-0238/"" rel=""nofollow"">PEP-0238</a>).</p>

<p>Python can handle arbitrary length integers if you use integer arithmetic.</p>

<p>I tested this in Python 3.4:</p>

<pre><code>&gt;&gt;&gt; n = 31
&gt;&gt;&gt; math.factorial(n * 2) // math.factorial(n) // math.factorial(n + 1)
14544636039226909
</code></pre>

<p>more:</p>

<pre><code>&gt;&gt;&gt; n = 300
&gt;&gt;&gt; math.factorial(n * 2) // math.factorial(n) // math.factorial(n + 1)
448863594671741755862042783981742625904431712455792292112842929523169934910317996551330498997589600726489482164006103817421596314821101
633539230654646302151568026806610883615856
</code></pre>

<p>really up to any length:</p>

<pre><code>&gt;&gt;&gt; n = 3000
&gt;&gt;&gt; math.factorial(n * 2) // math.factorial(n) // math.factorial(n + 1)
519462652919542881721365123011179975310102937604940266719385892606880110765316718891395071497514229126429925976055679251223128074749037
835401036449153787085998615080079472024510673995437465556202913988662201476481724554419588352460788248600870845757882846138810676725538
563107883030181266599172195406194674262178494218158106628185084640318133660880669410879631422165901582338980573378926964500556169385404
736100270128669761789892432503454091737948987203916800528049625631943853069946630768308689117691085645832918187925556506072761147675438
429882843604702193420613753732662694259398583327509305925877958076192508779774600671550059625449220766972323426048569573870742646138682
330665271970741737026351041002094725570021658043868050133870464978010862336227347394228402203592519509440711956260056901367528427111161
296369965071015622062369906953928825160542499316029260848901981705520546040735573456838161278143205046287274001985209051501791057064860
777924614712880895844889661062906810651227996795699200705689167041491295132678905362506739442596941049468768934515387686685216725429630
569388433843181310525905915079353425197760576036382793301451923253554632457764696533239230792374371551049829770586784317601794822668699
762524880276131689250405042237665587324829345738473826128110671929192283799781962486065016982222602138402014572024398921586637930463872
133232259555872008143437104541075975585105539708870387267774173630656199269799668692949281254988538412342931876350743005256155083395855
293674222742887729441736406441460871100319788599494948199980318713167545334283812660431840713561226653525108082181718879207846399491603
046897066186692086000900551598963656721594748873629207464689206076706897152859647808013130407215834207952366890322422542440601278699142
2249907274578524259056058561900439043252745600
</code></pre>

<p>The implementation using <code>math.factorial</code> is also orders of magnitude faster than the iterative version:</p>

<pre><code>p1='''
dp = [1] + [0] * n;
for i in range(1,1+n):
    for j in range(i):
        dp[i] += dp[j] * dp[i - j - 1]
'''
p2='''
math.factorial(n * 2) // math.factorial(n) // math.factorial(n + 1)
'''

# benchmarks:

import timeit

&gt;&gt;&gt; timeit.timeit(p1, 'n=300', number=1000)
14.639895505999448

&gt;&gt;&gt; timeit.timeit(p2, 'import math; n=300', number=1000)
0.06054379299166612

&gt;&gt;&gt; timeit.timeit(p1, 'n=3000', number=10)
207.88161920005223

&gt;&gt;&gt; timeit.timeit(p2, 'import math; n=3000', number=10)
0.042887639498803765
</code></pre>
",""
"31074412","2","31074183","<p>Avoid <code>numpy</code>, avoid floating point, just ask Python to work with its native integers:</p>

<pre><code>dp = [0] * 160
dp[0] = 1
for i in range(1, 100):
    for j in range(i):
        dp[i] += dp[j] * dp[i - j - 1]
</code></pre>

<p>You obtain the required result:</p>

<pre><code>&gt;&gt;&gt; dp[31]
14544636039226909
</code></pre>
",""
"31074551","1","","<p>which might not even have Python. I'm making dozens of scripts for my company but it only just now dawned on me that people might not even be able to use them.</p>

<p>I'm asking here because I'm not sure what keywords I would use on Google.</p>

<p>So the question is - can I somehow package Python+external libraries into one executable? Or do you know of another way to cirucmvent this?</p>
","<python><executable>"
"31074610","2","31074551","<p>There are several such utilities</p>

<p>I've used py2exe from py2exe.org</p>
",""
"31074682","1","","<p>I'm using Python's nltk and I want to tokenize a sentence containing quotes,  but it turns <code>""</code> into <code>``</code> and <code>''</code>.</p>

<p>E.g:</p>

<pre><code>&gt;&gt;&gt; from nltk import word_tokenize

&gt;&gt;&gt; sentence = 'He said ""hey Bill!""'
&gt;&gt;&gt; word_tokenize(sentence)
['He', 'said', '``', 'hey', 'Bill', '!', ""''""]
</code></pre>

<p>Why doesn't it keep the quotes like in the original sentence and how can this be solved?</p>

<p>Thanks </p>
","<python><nltk><tokenize>"
"31074758","1","","<p>I'm trying to create a barplot where all bars smaller than the largest are some bland color and the largest bar is a more vibrant color. A good example is darkhorse analytic's <a href=""http://darkhorseanalytics.com/blog/wp-content/uploads/2014/09/devourThePie3.gif"" rel=""nofollow"">pie chart gif</a> where they break down a pie chart and end with a more clear barplot. Any help would be appreciated, thank you!</p>
","<python><bar-chart><seaborn>"
"31074783","1","","<p>I have number f = 2.25e-06 and I want to print it in format</p>

<pre><code> 2.250000e-6
</code></pre>

<p>can someone help? </p>
","<python>"
"31074784","1","","<p>I am creating an OS X Today Widget. To get the data I need, I am using a python script which is called by an NSTask object.</p>

<p>This is the code which calls the python script and displays its output:</p>

<pre><code>func widgetPerformUpdateWithCompletionHandler(completionHandler: ((NCUpdateResult) -&gt; Void)!) {
    let task = NSTask()
    let pipe = NSPipe()

    task.launchPath = ""/usr/bin/arch""
    task.arguments = [""-x86_64"", ""/usr/bin/python"", ""/Users/tomas/Developement/N_news_reader/NReader1/ahoj.py""]

    task.standardOutput = pipe

    task.launch()

    let data = pipe.fileHandleForReading.readDataToEndOfFile()
    var news: String = (NSString(data: data, encoding: NSUTF8StringEncoding) as? String)!

    self.widgetLabel.stringValue = news

    completionHandler(.NewData)
}
</code></pre>

<p>In Terminal I have also changed ahoj.py's access rights with <code>chmod 777 ahoj.py</code></p>

<p>However, after running the code, Xcode gives me following error: </p>

<p><em>/usr/bin/python: can't open file '/Users/tomas/Developement/N_news_reader/NReader1/ahoj.py': [Errno 1] Operation not permitted'</em></p>
","<python><xcode><osx><swift>"
"31074843","1","","<p>Ok, I try to send a simple *.xlsx file with mailgun using Python 3.4. </p>

<pre><code>send_message(..., attachement=[""/tmp/demo.xlsx""])
</code></pre>

<p>The code in send_message is given here:</p>

<pre><code>def send_message(subject, text, fromAdr, to, attachement=None):

    files = list()
    if attachement:
        files.extend([(""attachement"", (os.path.basename(f), open(f, ""b+r"", encoding=""utf-8""))) for f in attachement])


    print(files)
    return requests.post(
        ""https://api.mailgun.net/v2/lobnek.com/messages"",
        auth=(""api"", ""key-2flidf93tp-u9moz95r8alhbl-pih1g9""),
        files = files,
        data={""from"": fromAdr,
              ""to"": to,
              ""subject"": subject,
              ""text"": text}
    )
</code></pre>

<p>I get no error messages but the attachment is not sent!</p>
","<python><encoding><utf-8><mailgun>"
"31074853","1","","<p>I have a list of members, from a for loop in jinja2 with select and option</p>

<p>I would like to be able to select one of the members from the for loop,
and add that member to another list of entries to an event, with the extra options available to the user. (getting the member is easy, from the value of the button, getting the options is the problem)</p>

<p>For example:</p>

<p>Jinja2 Template:</p>

<pre><code>&lt;form method=""post"" action=""add_member_to_list""&gt;
  &lt;table&gt;
  {% for member in members %}
    &lt;tr&gt;
      &lt;th&gt;{{ member.name }}&lt;/th&gt;
      &lt;td&gt;&lt;input type=""checkbox"" name=""in_out""&gt;&lt;/td&gt;
      &lt;td&gt;&lt;select name=""day""&gt;
            &lt;option&gt;Monday&lt;/option&gt;
            &lt;option&gt;Wednesday&lt;/option&gt;
          &lt;/select&gt;
      &lt;/td&gt;
      &lt;td&gt;&lt;button type=""submit"" name=""id"" value=""{{ member.id }}""&gt;Add&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;
  {% endfor %}
  &lt;/table&gt;
&lt;/form&gt;
</code></pre>

<p>in Google App Engine - Python</p>

<pre><code>class AddUser(BaseHandler):
    def post(self):
        in_out = self.request.get(""in_out"")
        id = self.request.get(""id"")
        day = self.request.get(""day"")
</code></pre>

<p>In this scenario, self.response.get(""day"") only ever returns the option selected for the first iteration of the for loop.</p>

<p>The checkbox; self.request.get(""in_out""), returns on or off as expected.</p>

<p>So submitting the nth iteration of the for loop:
""Monday"" is always returned from select/option.</p>

<p>How can I get the select/option corresponding to the nth iteration of the for loop?</p>

<p>Thanks!</p>
","<python><google-app-engine><jinja2>"
"31074891","2","31074783","<pre><code>'{:.6e}'.format(f) # format f exponentially using a base of 6 decimal places
</code></pre>
",""
"31074897","2","31074783","<p>Use the scientific format</p>

<pre><code>print(""%e.6"" %f)
</code></pre>
",""
"31074902","2","31074843","<p>An xlsx file is a binary file, not a text file in UTF-8.</p>

<p>Your initial validation attempt would have  failed, too, if you had actually tried to read (far enough into) the file; but your code merely opens and closes it.</p>
",""
"31074908","2","31074783","<p>Use </p>

<pre><code>print format(a[0]/a[1], '.8f)
</code></pre>

<p>with the <code>'8f'</code> being how many decimal places you want.</p>
",""
"31074949","1","","<p>I'm new  to Regular Expressions. I'm trying to identify the year in </p>

<pre><code>vsdir
</code></pre>

<p>as an integer e.g. number (2013) where</p>

<pre><code>vsdir=""vs2013""
</code></pre>

<p>so that I can apply an if statement where if this number is &lt; 2010 (one outcome), else (another outcome)</p>

<p>I'm doing this in a pythpon script. Can anyone give any suggestions please?</p>
","<python><regex>"
"31074960","2","31074127","<p>Try this:</p>

<pre><code>import re
import requests
from bs4 import BeautifulSoup

URL = 'http://www.gold.org/'

response = requests.get(URL)

soup = BeautifulSoup(response.content)
a = soup.findAll('div',attrs = {""class"":""asset ask""})[0]
plain = soup.findAll('dd',attrs = {""class"":""value""})[0].text
askprice = float(re.sub('[^0-9z\.]','',plain))
t = soup.findAll('span',attrs = {""class"":""timestamp""})[0].text  
print askprice,t
</code></pre>
",""
"31074967","2","31074227","<p>If you use</p>

<pre><code>ynew, xnew = np.mgrid[-1:1:100j, -2:2:100j]
</code></pre>

<p>instead of </p>

<pre><code>xnew, ynew = np.mgrid[-1:1:100j, -2:2:100j]
</code></pre>

<p>then <code>xnew</code> will vary as you move across columns, and <code>ynew</code> will vary as you move down the rows. (I changed the x-range from [-1,1] to [-2,2] to make it clear what numbers control which range.) </p>

<p>Combine that with @hitzg's suggestion to add <code>origin='lower'</code> to the call to <code>imshow</code>, and you get:</p>

<pre><code>import numpy as np
from scipy import interpolate
import matplotlib.pyplot as plt
np.random.seed(2015)
def func(x,y):
    return (x+y)*np.cos(-5.0*x + 4.0*y)

x = np.random.uniform(-2.0, 2.0, size=50)
y = np.random.uniform(-1.0, 1.0, size=50)
fvals = func(x,y)

newfunc = interpolate.Rbf(x, y, fvals, function='multiquadric')
ynew, xnew = np.mgrid[-1:1:100j, -2:2:100j]

fnew = newfunc(xnew, ynew)

plt.figure()
plt.imshow(fnew, extent=[-2,2,-1,1], cmap=plt.cm.jet, origin='lower')
plt.scatter(x, y, s=30, c=fvals, cmap=plt.cm.jet)
plt.show()
</code></pre>

<p><img src=""https://i.stack.imgur.com/P7acK.png"" alt=""enter image description here""></p>
",""
"31074974","1","","<pre><code>import h5py
import numpy as np

f = h5py.File('test','w')
f.create_dataset('key1', data = np.array([1,2,3]))
f.create_dataset('key2', data = np.array([4,5,6]))
f.close()
</code></pre>

<p>creates the file named test and writes two arrays under key1 and key2 respectively.</p>

<p>However, closing the file object and reopening the file deletes the data previously stored.</p>

<pre><code>f = h5py.File('test','w')
f.create_dataset('key1', data = np.array([1,2,3]))
f.close()
f = h5py.File('test','w')
f.create_dataset('key2', data = np.array([4,5,6]))
f.close()
</code></pre>

<p>In this case only <code>[4,5,6]</code> is stored under the key <code>key2</code>.</p>

<p>How to reopen the file and write new data without deleting the old data which is already stored?</p>
","<python><file><hdf5><h5py>"
"31074989","1","","<p>I input, i have the following lines in my file.</p>

<pre><code>...
VOAUT0000001712_19774.JPG   FRYW-1712-19774.jpg eab516afc1aaa10ad23edb5c15ae4ea4    1712    01

VOAUT0000001712_19775.JPG   FRYW-1712-19775.jpg 2715ceba8fd5c69b4ca6952e942a1a8a    1712    02 

VOAUT0000001712_19776.JPG   FRYW-1712-19776.jpg b1a0c4ec6160da3511e23c617517ff6f    1712    03 

VOAUT0000001713_19795.JPG   FRYW-1713-19795.jpg 56cd173c6e9436b19d39de214669cc53    1713    01 

VOAUT0000001713_19796.JPG   FRYW-1713-19796.jpg 271aa1b9ef2ac39c502a270c82b31fa3    1713    02 

VOAUT0000001713_19797.JPG   FRYW-1713-19797.jpg 667732a85660bebec168bc46b884d9b7    1713    03 

VOAUT0000001714_19763.JPG   FRYW-1714-19763.jpg d37770d6cde5639ce5db4e6a436498a8    1714    01 

VOAUT0000001714_19764.JPG   FRYW-1714-19764.jpg ce891ca4d4ea59c3a312a468bb0d4408    1714    02

VOAUT0000001714_19765.JPG   FRYW-1714-19765.jpg bd7fed521fe3997bf5c879d9d5ce942d    1714    03
...
</code></pre>

<p>I would like to modify my file line by line in order to have this</p>

<pre><code>17124615_01_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1712-19774.jpg    eab516afc1aaa10ad23edb5c15ae4ea4

17124615_02_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1712-19775.jpg    2715ceba8fd5c69b4ca6952e942a1a8a

17124615_03_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1712-19776.jpg    b1a0c4ec6160da3511e23c617517ff6f 

17134615_01_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1713-19795.jpg    56cd173c6e9436b19d39de214669cc53 

17134615_02_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1713-19796.jpg    271aa1b9ef2ac39c502a270c82b31fa3

17134615_03_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1713-19797.jpg    667732a85660bebec168bc46b884d9b7 

17144615_01_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1714-19763.jpg    d37770d6cde5639ce5db4e6a436498a8 

17144615_02_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1714-19764.jpg    ce891ca4d4ea59c3a312a468bb0d4408

17144615_03_hd.jpg  /opt/AutoPrivilege/client/photos/FRYW-1714-19765.jpg    bd7fed521fe3997bf5c879d9d5ce942d
</code></pre>

<p>Here is the beginning of my code:</p>

<pre><code>def renameLineByLine():
    with open('/opt/data/photos.txt') as f:
        for line in f:
            newname, file, path, checksum = line.split()
            if ..?? :
                try:
                    rename(...???)
                except OSError:
                    logger.error('Got a problem')
</code></pre>

<p>but I do not see how to rename each line with the new format ..?</p>
","<python>"
"31074994","1","","<p>I've been learning Rust for about two weeks now and today, I got into its FFI. I used Python to play with Rust, using ctypes and libc. I passed integers, strings and even learned to pass a list of integers (<a href=""https://stackoverflow.com/a/30313295/2313792"">thanks to this wonderful answer</a>).</p>

<p>Then, I tried to pass a list of strings (following the reasoning behind the that answer), but I failed, as I couldn't get a lead on it. In Python, I have something like this to pass the array of strings.</p>

<pre><code>def testRust():
    lib = ctypes.cdll.LoadLibrary(rustLib)
    list_to_send = ['blah', 'blah', 'blah', 'blah']
    c_array = (ctypes.c_char_p * len(list_to_send))()
    lib.get_strings(c_array, len(list_to_send))
</code></pre>

<p>In Rust, I thought that there should be something (like a <code>STRING_RECEIVER</code>) to collect the incoming strings, but I can't find one.</p>

<pre><code>#![feature(libc)]
extern crate libc;

use std::slice;
use libc::{size_t, STRING_RECEIVER};

#[no_mangle]
pub extern fn get_strings(array: *const STRING_RECEIVER, length: size_t) {
    let values = unsafe { slice::from_raw_parts(array, length as usize) };
    println!(""{:?}"", values);
}
</code></pre>

<p>Is there any alternative way to achieve this?</p>
","<python><rust><ctypes><ffi>"
"31075019","1","","<p>I have a certain string in my row of my text file, such as this:</p>

<pre><code>&lt;img title=""\frac{3}{8}"" src=""http://latex.codecogs.com/gif.latex?\dpi{50}&amp;amp;space;\fn_phv&amp;amp;space;\frac{3}{8}"" alt="""" /&gt;
</code></pre>

<p>Basically it contains a html code for a fraction. But now I would like to replace it with:</p>

<pre><code>&lt;sup&gt;3&lt;/sup&gt;&amp;frasl;&lt;sub&gt;8&lt;/sub&gt;
</code></pre>

<p>So it should take the word ""\frac{3}{8}"" and replace it accordingly for each line. The word ""\frac{3}{8}"" will also change accordingly.</p>

<p>I know I need to use regular expressions but need guidance to do this.</p>

<p>My code:</p>

<pre><code>with open('/Users/cnnlakshmen/Downloads/qz_question.sql', 'r') as fin:
    filedata = fin.read()

filedata1 = re.sub(r'&lt;img\b[^&lt;]*(?&lt;=title="")\\frac\{(\d+)\}\{(\d+)\}""[^&lt;]*&gt;', ""&lt;sup&gt;\g&lt;1&gt;&lt;/sup&gt;&amp;frasl;&lt;sub&gt;\g&lt;2&gt;&lt;/sub&gt;"", filedata)
print filedata1

# Write the file out again
with open('/Users/cnnlakshmen/Downloads/qz_question1.sql', 'w') as fin:
  fin.write(filedata1)
</code></pre>
","<python><regex>"
"31075021","1","","<p>I have a row like that -> [name],[mp3names],[suggested_names]
suggested_names is a list for combobox and each row has different suggested names. So I need a combobox for them. but I dont know how to do.</p>

<p>edit: I read my csv file at first, then I add all them in a list, then I handle all columns. I have name suggestions for every row, but i don't know how to add this suggestions. Now I can only once define the suggestions and use for all rows, but it is not correct, I need different suggestions for every row.
<img src=""https://i.stack.imgur.com/qYEU3.png"" alt=""enter image description here""></p>

<pre><code>            for i in range(self.row_len):
                outliers_list.append([str(self.columns[1][i])]+[str(self.columns[self.col_count-2][i])]+[str(self.columns[self.col_count-1][i])]+[corrected]+[audio_name])

            self.col_len = len(outliers_list[0]);

    #dynamically liststore column adding
            self.liststore = Gtk.ListStore(*([str] * 5))
    # You need to use self.fillStore() instead.
            for item in outliers_list:
                self.liststore.append(item)
            liststore_suggestions = Gtk.ListStore(str)
            suggestions = correct(""axse"") 
            for item in suggestions:
                liststore_suggestions.append([item])


            renderer_text = Gtk.CellRendererText()
            column = Gtk.TreeViewColumn(""Name"", renderer_text, text=0)
            treeview.append_column(column)

            renderer_text = Gtk.CellRendererText()
            column = Gtk.TreeViewColumn(""mp3Names"", renderer_text, text=1)
            treeview.append_column(column)
            renderer_combo = Gtk.CellRendererCombo()
            renderer_combo.set_property(""editable"", True)
            renderer_combo.set_property(""model"",liststore_suggestions)
            renderer_combo.set_property(""text-column"", 0)
            renderer_combo.set_property(""has-entry"", True)
            renderer_combo.connect(""edited"", self.on_combo_changed)

            column_combo = Gtk.TreeViewColumn(""Suggest"", renderer_combo, text=2)
            treeview.append_column(column_combo)
</code></pre>

<p>here suggestions = correct(""axse"") would change for every row, I only defined it for showing you, the correct one ise : </p>

<pre><code>suggestions = correct(str(self.columns[1][i]))
</code></pre>

<p>At last, what I want is changing this code, because it stores only one list and use it for every row.</p>

<pre><code>renderer_combo.set_property(""model"",liststore_suggestions)
</code></pre>

<p>But what I want is something like that. Loading dynamically combobox liststores for every row.</p>

<pre><code>renderer_combo.set_property(""model"",liststore_suggestions[i])
</code></pre>
","<python><combobox><gtk><cellrenderer>"
"31075024","2","31074127","<p>You don't need the <code>re</code> module and you're overly complicating some parts of your parsing. See below code.</p>

<pre><code>from bs4 import BeautifulSoup as bsoup
import requests as rq

def fetch_ask_price():

    # Prepare the soup.
    url = ""http://www.gold.org""
    r = rq.get(url)
    soup = bsoup(r.content)

    # Get the ask price.
    ask_div = soup.find_all(""div"", class_=""asset ask"")[0]
    ask_dd = ask_div.find_all(""dd"", class_=""value"")[0]
    ask_price = ask_dd.get_text()

    # Get the timestamp.
    timestamp = soup.find_all(""span"", class_=""timestamp"")
    timestamp = timestamp[0].get_text()

    print timestamp, ask_price

fetch_ask_price()
</code></pre>

<p>Another variation below, using CSS selectors.</p>

<pre><code>from bs4 import BeautifulSoup as bsoup
import requests as rq

def fetch_ask_price():

    # Prepare the soup.
    url = ""http://www.gold.org""
    r = rq.get(url)
    soup = bsoup(r.content)

    # Get the ask price.
    ask_div = soup.select(""div.ask"")[0]
    ask_dd = ask_div.select(""dd.value"")[0]
    ask_price = ask_dd.get_text()

    # Get the timestamp.
    timestamp = soup.select(""span.timestamp"")
    timestamp = timestamp[0].get_text()

    print timestamp, ask_price

fetch_ask_price()
</code></pre>
",""
"31075052","1","","<p>I was hoping someone could answer this. I am going through Mark Lutz's ""Programming in Python"". </p>

<p>If I issue the statement in an interactive session: </p>

<pre><code>import tkinter 
</code></pre>

<p>this statement works: </p>

<pre><code>tkinter.filedialog.askopenfilename
</code></pre>

<p>However the same statements fail in a script with the error, ""module has no attribute filedialog"". I can get it to work if I type in the script:</p>

<pre><code>from tkinter.filedialog import askopenfilename
</code></pre>

<p>and then to use it just use ""askopenfilename"".</p>

<p>I am just trying to understand why it isn't working in the script. It was my understanding I could reference it through dotted notation, but either that isn't true or I am doing something wrong.</p>
","<python><import><tkinter>"
"31075064","1","","<p>I have recently started adopting Python and the Django framework. There are numerous things that are awesome about it and also numerous things that I really hate. One of those things is having one <code>views.py</code> file per Django app, which I find just really unpractical. So I decided to split my views into multiple files. It has proven to be much more difficult than I originally thought.</p>

<p>I followed lot of questions and tutorials  but none of them work. I should add that I am using Python 3.4 on ArchLinux and Django 1.8.</p>

<p>My original setup (I have simplified it, there actually are more view functions):</p>

<p>views.py</p>

<pre><code>def entries(request):
    ...

def delete_entry(request, id):
    ...

def categories(request):
    ...

def delete_category(request, id):
    ...
</code></pre>

<p>urls.py</p>

<pre><code>from django.conf.urls import patterns, url
from transactions import views

urlpatterns = patterns('',
    url(r'^entries$', views.entries, name='entries'),
    url(r'^delete_entry(?:/(?P&lt;id&gt;[0-9]+)/)?$', views.delete_entry, name='delete_entry'),

    url(r'^categories$', views.categories, name='categories'),
    url(r'^delete_category(?:/(?P&lt;id&gt;[0-9]+)/)?$', views.delete_category, name='delete_category'),
)
</code></pre>

<p>My desired state is:</p>

<p>views folder containing entries.py and categories.py:</p>

<p><strong>Edit:</strong> There <strong>is</strong> an <strong>init</strong>.py file in the views folder.</p>

<p>entries.py</p>

<pre><code>def entries(request):
    ...

def delete_entry(request, id):
    ...
</code></pre>

<p>categories.py</p>

<pre><code>same logic as above
</code></pre>

<p>urls.py that I am using with this setup:</p>

<pre><code>from transactions.views import entries, categories
from django.conf.urls import patterns, url

urlpatterns = patterns('',
    url(r'^entries$', entries.entries, name='entries'),
    url(r'^delete_entry(?:/(?P&lt;id&gt;[0-9]+)/)?$', entries.delete_entry, name='delete_entry'),

    url(r'^categories$', categories.categories, name='categories'),
    url(r'^delete_category(?:/(?P&lt;id&gt;[0-9]+)/)?$', categories.delete_category, name='delete_category'),
)
</code></pre>

<p>when I try to <code>manage.py runserver</code>, an <code>ViewDoesNotExists</code> error is raised with <code>Could not import 'transactions.views.entries'. View is not callable.</code> message. When I try to dump <code>entries.entries</code> in <code>urls.py</code>, it actually is a function, same as with the original setup.</p>

<p>So far I have tried numerous suggestions from <a href=""https://stackoverflow.com/questions/1921771/django-split-views-py-in-several-files"">this</a> question such as import variants, hacking <code>__init.py__</code> in views folder, using views folder without <code>__init__.py</code>, but the results are pretty much the same or there are import errors.</p>
","<python><django><django-views><django-1.8>"
"31075067","2","31074949","<p>I think you mean this,</p>

<pre><code>if int(vsdir[-4:]) &lt; 2010:
    print(""yeh, less tha 2010"")
else:
    print(""greater than 2010"")
</code></pre>

<p>OR</p>

<pre><code>if int(re.search(r'\d+',vsdir).group()) &lt; 2010:
    print(""yeh, less tha 2010"")
else:
    print(""greater than 2010"")
</code></pre>
",""
"31075068","2","31074682","<p>It's actually meant to do that, not on accident. From <a href=""http://www.cis.upenn.edu/~treebank/tokenization.html"" rel=""nofollow"">Penn Treebank Tokenization</a></p>

<blockquote>
  <p>double quotes ("") are changed to doubled single forward- and backward- quotes (`` and '')</p>
</blockquote>

<p>In previous version it didn't do that, but it was updated last year. In other words if you want to change you'll need to edit <code>treebank.py</code></p>
",""
"31075160","2","31075019","<p>Assuming the numbers are positive integers</p>

<p><code>pattern = '\\frac\{(\d+)\}\{(\d+)\}'</code></p>

<p>Or for postive/negative, integers and decimals</p>

<p><code>pattern = '\\frac\{(-?\d+\.?[\d?]*)\}'</code></p>

<p><code>replaceWith: '&lt;sup&gt;\1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;\2&lt;/sub&gt;'</code></p>

<pre><code>import re
regex = re.compile(pattern)
re.sub(regex, replaceWith, inputString)
</code></pre>
",""
"31075161","2","31074127","<p>It doesn't update every minute. Rewriting the code won't change that - and none of the code suggestions make an iota of difference.</p>
",""
"31075186","2","31075019","<p>You can replace the whole <code>img</code> tag using </p>

<pre><code>&lt;img\b[^&lt;]*\btitle=""\\frac\{(\d+)\}\{(\d+)\}""[^&lt;]*&gt;
</code></pre>

<p>And replacing with</p>

<pre><code>&lt;sup&gt;\1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;\2&lt;/sub&gt;
</code></pre>

<p>See <a href=""https://regex101.com/r/yC0gP2/2"" rel=""nofollow"">demo</a></p>

<p><a href=""https://ideone.com/Mb0A1U"" rel=""nofollow"">IDEONE demo</a>:</p>

<pre><code>import re
p = re.compile(r'&lt;img\b[^&lt;]*\btitle=""\\frac\{(\d+)\}\{(\d+)\}""[^&lt;]*&gt;')
test_str = ""&lt;img title=\""\\frac{3}{8}\"" src=\""http://latex.codecogs.com/gif.latex?\dpi{50}&amp;amp;space;\\fn_phv&amp;amp;space;\\frac{3}{8}\"" alt=\""\"" /&gt;""
subst = ""&lt;sup&gt;\g&lt;1&gt;&lt;/sup&gt;&amp;frasl;&lt;sub&gt;\g&lt;2&gt;&lt;/sub&gt;""
print re.sub(p, subst, test_str)
</code></pre>
",""
"31075214","1","","<p>I'm an experienced iOS developer diving into Python. I'm setting up my first Django project. This is also first time for me to use Mercurial for version control (before I heavily used SVN, then GIT).</p>

<p>I'm trying to create a nice <strong><code>.hgignore</code></strong> file. So far I have:</p>

<pre><code>syntax: glob
bin/**
include/**
lib/**
pip-selfcheck.json
.Python
</code></pre>

<p>What other files should I put there? I'm using <code>virtualenv</code> and <code>pip</code> to create my development environment.
Thanks for help!</p>
","<python><django><mercurial><hgignore>"
"31075309","1","","<p>I have to replace some 'file names' from within an XML with the full path for those files. All the files are in the same directory which simplifies things somewhat. I was trying to use BeautifulSoup4 but there was a bug that kept breaking crashing python so I'm trying to do the same thing with regex's. </p>

<p>The copasiML variable contains an XML as a string.</p>

<p>My code:</p>

<pre><code>    copasiML=IA.read_copasiML_as_string(copasi_file)
    data_file_names=re.findall('&lt;Parameter name=""File Name"" type=""file"" value=""(.*)""/&gt;',copasiML)
    for i in data_file_names:
        copasiML2=re.sub('&lt;Parameter name=""File Name"" type=""file"" value=""'+i+'""/&gt;','&lt;Parameter name=""File Name"" type=""file"" value=""'+os.path.join(os.getcwd()+i)+'""/&gt;',copasiML)
        os.remove(copasi_file)
        with open(copasi_file,'w') as f:
            f.write(str(copasiML2))
</code></pre>

<p>As it stands, my code runs but doesn't actually do anything. Would anybody happen to know how to fix my code? </p>

<p>Many thanks </p>
","<python><regex><xml>"
"31075334","2","31073856","<p>you can also use Timergrouper</p>

<pre><code>df.set_index(your_date).groupby(pd.TimeGrouper('W')).size()
</code></pre>
",""
"31075336","1","","<p>I'm using <code>mechanize</code> library to log in website. I checked, it works well. But problem is i can't use <code>response.read()</code> with <code>BeautifulSoup</code> and 'lxml'.</p>

<pre><code>#BeautifulSoup
response = browser.open(url)
source = response.read()
soup = BeautifulSoup(source)  #source.txt doesn't work either
for link in soup.findAll('a', {'class':'someClass'}):
    some_list.add(link)
</code></pre>

<p>This doesn't work, actually doesn't find any tag. It works well when i use <code>requests.get(url)</code>.</p>

<pre><code>#lxml-&gt;html
response = browser.open(url)
source = response.read()
tree = html.fromstring(source)  #souce.txt doesn't work either
print tree.text
like_pages = buyers = tree.xpath('//a[@class=""UFINoWrap""]')  #/text() doesn't work either
print like_pages
</code></pre>

<p>Doesn't print anything. I know it has problem with return type of <code>response</code>, since it works well with <code>requests.open()</code>. What could i do? Could you, please, provide sample code where <code>response.read()</code> used in html parsing?</p>

<p>By the way, what is difference between <code>response</code> and <code>requests</code> objects?</p>

<p><strong>Thank you!</strong></p>
","<python><request><html-parsing><response>"
"31075375","2","31074994","<p>There is absolutely no difference with the case of array of numbers. C strings are zero-terminated arrays of bytes, so their representation in Rust will be <code>*const c_char</code>, which could then be converted to <code>&amp;CStr</code> which then can be used to obtain <code>&amp;[u8]</code> and then <code>&amp;str</code>.</p>

<p>Python:</p>

<p>

<pre><code>import ctypes

rustLib = ""libtest.dylib""

def testRust():
    lib = ctypes.cdll.LoadLibrary(rustLib)
    list_to_send = ['blah', 'blah', 'blah', 'blah']
    c_array = (ctypes.c_char_p * len(list_to_send))(*list_to_send)
    lib.get_strings(c_array, len(list_to_send))

if __name__==""__main__"":
    testRust()
</code></pre>

<p>Rust:</p>

<pre class=""lang-rust prettyprint-override""><code>#![feature(libc)]
extern crate libc;

use std::slice;
use std::ffi::CStr;
use std::str;
use libc::{size_t, c_char};

#[no_mangle]
pub extern fn get_strings(array: *const *const c_char, length: size_t) {
    let values = unsafe { slice::from_raw_parts(array, length as usize) };
    let strs: Vec&lt;&amp;str&gt; = values.iter()
        .map(|&amp;p| unsafe { CStr::from_ptr(p) })  // iterator of &amp;CStr
        .map(|cs| cs.to_bytes())                 // iterator of &amp;[u8]
        .map(|bs| str::from_utf8(bs).unwrap())   // iterator of &amp;str
        .collect();
    println!(""{:?}"", strs);
}
</code></pre>

<p>Running:</p>

<pre class=""lang-none prettyprint-override""><code>% rustc --crate-type=dylib test.rs
% python test.py
[""blah"", ""blah"", ""blah"", ""blah""]
</code></pre>

<p>And again, you should be careful with lifetimes and ensure that <code>Vec&lt;&amp;str&gt;</code> does not outlive the original value on the Python side.</p>
",""
"31075397","1","","<p>I'm trying to send files (images and text) by sockets in python. I don't want to create a new connection every time because the code is writing lots of files (>100) in a short amount of time so I don't want to build up that many connections while they wait to close. So before each chunk of the file is sent, I send the length of the chunk first. When I run it, it gives me a ValueError on <code>length = int(s.recv(4))</code> , showing a string from the file and saying that it cannot be converted to an int. Here is the part of my code that sends and receives one file: 
Sending:</p>

<pre><code>#Connect s and open file f
s.setblocking(1)
buf = 4096
while True:
    msg = f.read(buf)
    length = str(len(msg))
    if len(length) &lt; 4: length = ""0""*(4-len(length)) + length

    s.sendall(length)
    if length == ""0000"": break
    s.sendall(msg)
    if len(msg) != buf: break
</code></pre>

<p>Receiving:</p>

<pre><code>#Connect s and open file f
while True:
    length = int(s.recv(4))
    if length == 0: break

    f.write(s.recv(length))
    if length &lt; buf: break
</code></pre>

<p>Running on Windows 8. </p>
","<python><file><sockets>"
"31075438","1","","<p>I want to run the following script from python:</p>

<pre><code>temp=$(sky2xy image.fits 124.6456 -2.5517); arr=(${temp// / });
</code></pre>

<p>For that I am using the <code>os.system()</code> module:</p>

<pre><code>import os
os.system('temp=$(sky2xy image.fits 124.6456 -2.5517); arr=(${temp// / });')
</code></pre>

<p>But I am getting an unexpected syntax error</p>

<blockquote>
  <p>sh: 1: Syntax error: ""("" unexpected
  512</p>
</blockquote>

<p>The error is due to the parenthesis used in <code>arr=(${temp// / })</code></p>

<p>How should I get rid of this error?</p>
","<python><shell><unix>"
"31075447","2","31075309","<p>Every time you try to parse HTML/XML with Regular Expressions, you make baby Jesus cry.</p>

<p>I BeautifulSoup doesn't work for you, I suggest XPath as illustrated in <a href=""https://stackoverflow.com/questions/8171146/python-lxml-modify-attributes"">python lxml - modify attributes</a>.</p>

<p>Fun (but instructive) readings:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags"">RegEx match open tags except XHTML self-contained tags</a></li>
<li><a href=""https://stackoverflow.com/questions/590747/using-regular-expressions-to-parse-html-why-not"">Using regular expressions to parse HTML: why not?</a></li>
<li><a href=""https://stackoverflow.com/questions/6751105/why-its-not-possible-to-use-regex-to-parse-html-xml-a-formal-explanation-in-la"">Why it&#39;s not possible to use regex to parse HTML/XML: a formal explanation in layman&#39;s terms</a></li>
<li><a href=""https://news.ycombinator.com/item?id=2741780"" rel=""nofollow noreferrer"">https://news.ycombinator.com/item?id=2741780</a></li>
</ul>
",""
"31075487","1","","<p>I wrote this simple program on Raspberry Pi from the user guide. The problem is, that when I run it, Python says that video system not declared in line 29 (for event in pygame.event.get():). I tried initializing pygame twice, but it didn't work. Any suggestions how can I fix it?</p>

<pre><code>#!/usr/bin/env python
import pygame, sys, time, random
from pygame.locals import *
pygame.init()
fpsClock = pygame.time.Clock()
playSurface = pygame.display.set_mode((640, 480))
pygame.display.set_caption('Raspberry Snake')
redColour = pygame.Color(255, 0, 0)
blackColour = pygame.Color(0, 0, 0)
whiteColour = pygame.Color(255, 255, 255)
greyColour = pygame.Color(150, 150, 150)
snakePosition = [100,100]
snakeSegments = [[100,100],[80,100],[60,100]]
raspberryPosition = [300,300]
raspberrySpawned = 1
direction = 'right'
changeDirection = direction
def gameOver():
    gameOveerFont = pygame.font.Font('freesansbold.ttf', 72)
    gameOverSurf = gameOverFont.render('Game Over', True, greyColour)
    gameOverRect = gameOverSurf.get_rect()
    gameOverRect.midtop = (320, 10)
    playSurface.blit(gameOverSurf, gameOverRect)
    pygame.display.flip()
    time.sleep(5)
    pygame.quit()
    sys.exit()
while True:
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
        elif event.type == KEYDOWN:
            if event.key == K_RIGHT or event.key == ord('d'):
                changeDirection = 'right'
            if event.key == K_LEFT or event.key == ord('a'):
                changeDirection = 'left'
            if event.key == K_UP or event.key == ord('w'):
                changeDirection = 'up'
            if event.key == K_DOWN or event.key == ord('s'):
                changeDirection = 'down'
            if event.key == K_ESCAPE:
                pygame.event.post(pygame.event.Event(QUIT))
if changeDirection == 'right' and not direction == 'left':
    direction = changeDirection
if changeDirection == 'left' and not direction == 'right':
    direction = changeDirection
if changeDirection == 'up' and not direction == 'down':
    direction = changeDirection
if changeDirection == 'down' and not direction == 'up':
    direction = changeDirection
if direction == 'right':
    snakePosition[0] += 20
if direction == 'left':
    snakePosition[0] -= 20
if direction == 'up':
    snakePosition[1] -= 20
if direction == 'down':
    snakePosition[1] += 20
snakeSegments.insert(0,list(snakePosition))
if snakePosition[0] == raspberryPosition[0] and snakePosition[1] == raspberryPosition[1]:
    raspberrySpawned = 0
else:
    snakeSegments.pop()
if raspberrySpawned == 0:
    x = random.randrange(1,32)
    y = random.randrange(1,24)
    raspberryPosition = [int(x*20),int(y*20)]
raspberrySpawned = 1
playSurface.fill(blackColour)
for position in snakeSegments:
    pygame.draw.rect(playSurface,whiteColour,Rect (position[0], position[1], 20, 20))
    pygame.draw.rect(playSurface,redColour,Rect (raspberryPosition[0], raspberryPosition[1], 20, 20))
pygame.display.flip()
if snakePosition[0] &gt; 620 or snakePosition[0] &lt; 0:
    gameOver()
if snakePosition[1] &gt; 460 or snakePosition[1] &lt; 0:
    gameOver()
for snakeBody in snakeSegments[1:]:
    if snakePosition[0] == snakeBody[0] and snakePosition[1] == snakeBody[1]:
        gameOver()
fpsClock.tick(20)}
</code></pre>
","<python>"
"31075506","1","","<p>Each of the ""7-pack"" search results <a href=""https://www.google.com/?gws_rd=ssl#q=plumbers%2Bhouston%2Btx"" rel=""nofollow noreferrer"">here</a> contains an address and a phone number for each entry down the right hand side thus:</p>

<p><img src=""https://i.stack.imgur.com/kmtFx.png"" alt=""enter image description here""></p>

<p>For each, I want to extract (i) the address and (ii) the phone number. The problem is, here is how these elements are defined in HTML:</p>

<pre><code>&lt;div style=""width:146px;float:left;color:#808080;line-height:18px""&gt;&lt;span&gt;Houston, TX&lt;/span&gt;&lt;br&gt;&lt;span&gt;United States&lt;/span&gt;&lt;br&gt;&lt;nobr&gt;&lt;span&gt;(713) 766-6663&lt;/span&gt;&lt;/nobr&gt;&lt;/div&gt;
</code></pre>

<p>So there is no class name, css selector, or id from which I can use a find_element_by*(), I won't know the link text, so I can't use find_element_by_partial_link_text(), and WebDriver does not provide a method for finding by style, as far as I am aware. How do we work around this? I need to reliably be able to extract the right data every time, for each search result, for varying queries.</p>

<p>Language binding to WebDriver is Python.</p>
","<python><html><selenium><selenium-webdriver><webdriver>"
"31075556","2","31075064","<p>There is nothing like ""one views.py file per Django app"". The <code>startapp</code> command simply creates a views.py file for you, just for the sake of putting the code somewhere. A view function can live anywhere as long as it is on your Python path. What this means is that it has to be importable so as the comments suggest you might be missing <code>__init__.py</code> in your <code>views</code> folder.</p>

<blockquote>
  <p><a href=""https://docs.djangoproject.com/en/1.8/topics/http/views/"" rel=""nofollow"">Writing views</a></p>
  
  <p>A view function, or view for short, is simply a Python function that
  takes a Web request and returns a Web response. This response can be
  the HTML contents of a Web page, or a redirect, or a 404 error, or an
  XML document, or an image . . . or anything, really. The view itself
  contains whatever arbitrary logic is necessary to return that
  response. This code can live anywhere you want, as long as it’s on
  your Python path. There’s no other requirement–no “magic,” so to
  speak. For the sake of putting the code somewhere, the convention is
  to put views in a file called views.py, placed in your project or
  application directory.</p>
</blockquote>
",""
"31075564","1","","<p>I am new to python and still at the level of basic learning. Recently I tried to write a script to generate new folders according to the number supplied in the input text file. After creating those folders I want to copy a file into all those folders at the same time. I can do it by typing  </p>

<pre><code>echo equil{1..x} | xargs -n 1 cp *.txt *
</code></pre>

<p>in the terminal, and it works fine. Here x is the number of folders I have in my working directory. But my concern is to make it automatic, i.e. to call it from the script, so that the user doesn't need to type this line every time in the terminal. That is why I tried this</p>

<pre><code>sub2 = subprocess.call(['echo', 'equil{1..x}', '|', 'xargs', '-n', '1', 'cp', '*.txt *'])
</code></pre>

<p>Can anyone please guide me and show me the mistake. Actually I am not getting any error, rather it is printing this</p>

<pre><code>equil{1..x} | xargs -n 1 cp *.txt *
</code></pre>

<p>in the terminal after executing the rest of the script.</p>
","<python><xargs><copyfile>"
"31075591","1","","<p>I made a function which allows to add item to a tree (parent + child or children). </p>

<pre><code>def addItemsToSummary(self, parent, text, checkable=False, expanded=True):
    self.tabItems = []

    self.tabParent.append(text)

    self.item = QTreeWidgetItem(parent, [text])

    lhs, rhs = self.item.text(0).split(""="", 1)
    self.nominalValue,_ = rhs.split("")"", 1)
    print(self.nominalValue)
    self.val = re.findall('\w+', self.nominalValue)
    print(self.val)
    print(self.val[0])
    print(self.val[1])

    if checkable:
        self.item.setCheckState(0, Qt.Unchecked)
    else:
        self.item.setFlags(self.item.flags() &amp; ~Qt.ItemIsUserCheckable)
    self.item.setExpanded(expanded)

    self.addChildToSummary(self.item, [""Nominal value = "", self.val[0], self.val[1]])
    self.addChildToSummary(self.item, [""Min ="","""",self.val[1]])
    self.addChildToSummary(self.item, [""Max ="","""",self.val[1]])
    self.addChildToSummary(self.item, [""Type = "", ""float"",''])
    self.addChildToSummary(self.item, [""Relation ="","""",""""])

    if self.tabItems is not None:
        self.tabAnalysis.append(self.tabItems)

    return self.tabAnalysis, self.nominalValue
</code></pre>

<p>I made another function which allows to add each child to an item (parent).</p>

<pre><code> def addChildToSummary(self, parent, tab):
    item1 = QTreeWidgetItem(parent, [tab[0]])
    item2 = QTreeWidgetItem(parent, [tab[1]])
    item3 = QTreeWidgetItem(parent, [tab[2]])
    item2.setFlags(item2.flags() | Qt.ItemIsEditable)
    self.tabChild.append((item1.text(0),item2.text(0),item3.text(0)))
    print(item2.text(0))
    self.tabItems.append([parent.text(0),(item1.text(0),item2.text(0),item3.text(0))])

    return item1, item2, self.tabItems
</code></pre>

<p>I would like to know if it is possible to put each <code>QTreeWidgetItem</code> into column of <code>QTreeWidget</code>.</p>
","<python><python-3.x><pyqt><pyqt5>"
"31075601","2","31075052","<p>The problem here is that tkinter is a module and tkinter.filedialog is another module. So, since your code said ""import tkinter"" python only imports tkinter and not tkinter.filedialog.</p>
",""
"31075604","1","","<p>I am completely stumped. I surrounded the crux of the problem with hashtags. Any help is much appreciated!</p>

<pre><code>import pygame
import time
import random

pygame.init()

display_width = 600
display_height = 600
display = pygame.display.set_mode((display_width, display_height))
pygame.display.set_caption('Snake')
clock = pygame.time.Clock()
fps = 10

white = (255, 255, 255)
red = (200, 0, 0)
green = (0, 200, 0)
blue = (0, 0, 200)
black = (0, 0, 0)

def extend_snake(snake):
    x = snake[len(snake) - 1][0]
    y = snake[len(snake) - 1][1]
##    for i in snake:
##        print(i)
    return ([x, y])

def spawn_fruit():
    x = random.randrange(fruit_rad, display_width - fruit_rad, 2 * fruit_rad)
    y = random.randrange(fruit_rad, display_height - fruit_rad, 2 * fruit_rad)       
    return ((x, y))

def pause():
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_p:
                    return

score = 0

snake = []
snake_size = 10
snake.append([display_width / 2, display_height / 2])
snake_dx = 0
snake_dy = 0

fruit = []
fruit_count = 5
fruit_rad = 5
for a in range(fruit_count):
    fruit.append(spawn_fruit())

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_p:
                pause()         
            elif event.key == pygame.K_a or event.key == pygame.K_LEFT:
                snake_dx = -snake_size
                snake_dy = 0
            elif event.key == pygame.K_d or event.key == pygame.K_RIGHT:
                snake_dx = snake_size
                snake_dy = 0
            elif event.key == pygame.K_w or event.key == pygame.K_UP:
                snake_dy = -snake_size
                snake_dx = 0
            elif event.key == pygame.K_s or event.key == pygame.K_DOWN:
                snake_dy = snake_size
                snake_dx = 0

    print(snake)
    for coord in fruit:
        if snake[0][0] + fruit_rad == coord[0] and snake[0][1] + fruit_rad == coord[1]:
            fruit.remove(coord)
            fruit.append(spawn_fruit())
            snake.append(extend_snake(snake))
            score += 1
            fps += 1

    for i in range(len(snake) - 1, 0, -1):
        snake[i] = snake[i - 1]
</code></pre>

################################################

<pre><code>    try:
        print('1', snake[1])
    except:
        pass
    snake[0][0] += snake_dx
    snake[0][1] += snake_dy
    try:
        print('2', snake[1])
    except:
        pass
</code></pre>

#########################################################

<pre><code>    display.fill(white)
    for coord in fruit:
        pygame.draw.circle(display, red, coord, fruit_rad)
    for coord in snake:
        pygame.draw.rect(display, black, [coord[0], coord[1], snake_size, snake_size])

    pygame.display.update()
    clock.tick(fps)
</code></pre>

<p>This will return for example:<br>
1 (100, 100)<br>
2 (110, 100)  </p>

<p>No matter where I print(snake), every list is the same within it.
Could somebody please explain why this is happening and what I can do to prevent it?</p>
","<python><list><python-3.x><pygame><python-idle>"
"31075626","2","31074989","<p>All the information you need to generate the lines is already provided. Thanks to @SebastianHöffner for pointing out the obvious.</p>

<pre><code>out = open('output.txt','w')

for line in open('data.txt'):
    if len(line) != 1:
        a, b, c, d, e = line.split()
        l = d + '4615_'+ e + '_hd.jpg /opt/AutoPrivilege/client/photos/' + b + '  '+ c     
        out.write(l + '\n')
    else:
        out.write('\n')

out.close()
</code></pre>
",""
"31075636","2","31075397","<p>If you are sending large files (depending on your router), the router might split the packets into shorter ones causing you to accidentally try to get the length of a chunk while still not getting the entire earlier file. You should make sure with a while loop that you got the entire length of data, if not keep requesting for the data with s.recv(length - len(what_i_got_so_far)).</p>

<p>Example, when I'm sending to myself a few MB picture through LAN the router cuts the packets to around 25 KB so I have to use recv a lot of times although I only used 1 send.</p>

<p>I hope this helps.</p>
",""
"31075639","2","31074989","<p>You need to read in the file correctly: Skip empty lines and split for the correct values. There is no <code>path</code> where you expect one and you do not account for the two numbers at the end, which are crucial for the conversion.</p>

<p>Here I simply write all newly formatted lines into a new file, <code>photos_new.txt</code>. I hope this gets you started.</p>

<p>Note however, that your method name <code>renameLineByLine</code> as well as your <code>try/except</code> seem to hint that you also want to move/rename/do some work on your pictures. If that is the case, this answer will not be sufficient and you should try to elaborate a little bit more.</p>

<pre><code>def renameLineByLine():
    new_lines = []
    path = '/opt/AutoPrivilege/client/photos/'
    with open('/opt/data/photos.txt', 'r') as fin, \ 
        open('/opt/data/photos_new.txt', 'w') as fout:
        for line in fin:
            if len(line) != 1:
                newname, file, checksum, no1, no2 = line.split()
                fout.write("" "".join([
                    ""{}4615_{}_hd.jpg"".format(no1, no2),
                    path + file, checksum, '\n'])
                )
            else:
                fout.write('\n')
</code></pre>

<p>Input:</p>

<pre><code>VOAUT0000001712_19774.JPG   FRYW-1712-19774.jpg eab516afc1aaa10ad23edb5c15ae4ea4    1712    01

VOAUT0000001712_19775.JPG   FRYW-1712-19775.jpg 2715ceba8fd5c69b4ca6952e942a1a8a    1712    02 

VOAUT0000001712_19776.JPG   FRYW-1712-19776.jpg b1a0c4ec6160da3511e23c617517ff6f    1712    03 

VOAUT0000001713_19795.JPG   FRYW-1713-19795.jpg 56cd173c6e9436b19d39de214669cc53    1713    01 

VOAUT0000001713_19796.JPG   FRYW-1713-19796.jpg 271aa1b9ef2ac39c502a270c82b31fa3    1713    02 

VOAUT0000001713_19797.JPG   FRYW-1713-19797.jpg 667732a85660bebec168bc46b884d9b7    1713    03 

VOAUT0000001714_19763.JPG   FRYW-1714-19763.jpg d37770d6cde5639ce5db4e6a436498a8    1714    01 

VOAUT0000001714_19764.JPG   FRYW-1714-19764.jpg ce891ca4d4ea59c3a312a468bb0d4408    1714    02

VOAUT0000001714_19765.JPG   FRYW-1714-19765.jpg bd7fed521fe3997bf5c879d9d5ce942d    1714    03
</code></pre>

<p>Output: </p>

<pre><code>17124615_01_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1712-19774.jpg eab516afc1aaa10ad23edb5c15ae4ea4 

17124615_02_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1712-19775.jpg 2715ceba8fd5c69b4ca6952e942a1a8a 

17124615_03_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1712-19776.jpg b1a0c4ec6160da3511e23c617517ff6f 

17134615_01_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1713-19795.jpg 56cd173c6e9436b19d39de214669cc53 

17134615_02_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1713-19796.jpg 271aa1b9ef2ac39c502a270c82b31fa3 

17134615_03_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1713-19797.jpg 667732a85660bebec168bc46b884d9b7 

17144615_01_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1714-19763.jpg d37770d6cde5639ce5db4e6a436498a8 

17144615_02_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1714-19764.jpg ce891ca4d4ea59c3a312a468bb0d4408 

17144615_03_hd.jpg /opt/AutoPrivilege/client/photos/FRYW-1714-19765.jpg bd7fed521fe3997bf5c879d9d5ce942d
</code></pre>
",""
"31075680","2","31075564","<p>I don't think you can use subprocess.call() like this with pipes. For recipes how to use pipes, see</p>

<p><a href=""https://docs.python.org/2/library/subprocess.html#replacing-shell-pipeline"" rel=""nofollow"">https://docs.python.org/2/library/subprocess.html#replacing-shell-pipeline</a></p>

<p>I.e. you would use subprocess.communicate() over two processes.</p>
",""
"31075794","2","31075564","<p>You have to use <code>subprocess.Popen</code> if you want to send data to/from stdin/stdout of your subprocesses. And you have to <code>Popen</code> a subprocess for each of the executables, i.e. in your example, one for <code>echo</code> and one for <code>xargs</code>.</p>

<p>There is an example in the docs: <a href=""https://docs.python.org/2/library/subprocess.html#replacing-shell-pipeline"" rel=""nofollow noreferrer"">https://docs.python.org/2/library/subprocess.html#replacing-shell-pipeline</a></p>

<p>Another here: <a href=""https://stackoverflow.com/questions/7353054/call-a-shell-command-containing-a-pipe-from-python-and-capture-stdout"">Call a shell command containing a &#39;pipe&#39; from Python and capture STDOUT</a></p>

<p>However, instead of running <code>echo</code> to produce some lines, you can directly write them in python to the process <em>stdin</em>.</p>
",""
"31075842","2","31075604","<p>Setting snake[i] = snake[i-1]  makes them the same object and thus explaining why they were both being edited even though the code only edited one of them.</p>
",""
"31075854","2","31075064","<p>Instead of importing the views into the urls.py, you could try something like this.</p>

<pre><code>from django.conf.urls import patterns, url

urlpatterns = patterns('',
    url(r'^entries$', 'transactions.views.entries.entries', name='entries'),
    url(r'^delete_entry(?:/(?P&lt;id&gt;[0-9]+)/)?$', 'transactions.views.entries.delete_entry', name='delete_entry'),

    url(r'^categories$', 'transactions.views.categories.categories', name='categories'),
    url(r'^delete_category(?:/(?P&lt;id&gt;[0-9]+)/)?$', 'transactions.views.categories.delete_category', name='delete_category'),
)
</code></pre>
",""
"31075927","2","31075604","<p>When you are doing - <code>snake[i] = snake[i - 1]</code> , you are just passing the reference of the <code>snake[i - 1]</code> to <code>snake[i]</code> . And this seems to happen for all <code>i</code></p>

<p>Then when you make any changes inside anywhere inside <code>snake[i]</code> you are actually making the changes to the referenced object, hence the changes reflect in all other <code>snake[i]</code> as well.</p>

<p>For your logic to work, you need to use <code>copy.deepcopy</code> to create deep copies of the objects, so that the changes are not reflected in other <code>snake[i]</code>s</p>

<p>In your case you would need to do -</p>

<pre><code>import copy
for i in range(len(snake) - 1, 0, -1):
    snake[i] = copy.deepcopy(snake[i - 1])
</code></pre>

<p>Examples -</p>

<pre><code>&gt;&gt;&gt; l = [1,2,3]
&gt;&gt;&gt; l1 = l
&gt;&gt;&gt; l
[1, 2, 3]
&gt;&gt;&gt; l1
[1, 2, 3]
&gt;&gt;&gt; l1.pop(1)
2
&gt;&gt;&gt; l1
[1, 3]
&gt;&gt;&gt; l
[1, 3]
&gt;&gt;&gt; import copy
&gt;&gt;&gt; l2 = copy.deepcopy(l)
&gt;&gt;&gt; l2
[1, 3]
&gt;&gt;&gt; l2.append(4)
&gt;&gt;&gt; l2
[1, 3, 4]
&gt;&gt;&gt; l
[1, 3]
&gt;&gt;&gt; l1
[1, 3]
</code></pre>
",""
"31075946","2","31074989","<p>Something like this:</p>

<pre><code>   with open('1.txt','r') as inF:
    with open('12.txt', 'w') as outF:

        for line in inF:
            if line not in ('\n','\r\n'):
                t = []
                s = line.split()
                t.append(s[3]+'4615_'+s[4]+'_hd.'+s[0].split('.')[1].lower())
                t.append('/opt/AutoPrivilege/client/photos/' + s[1])
                t.append(s[2]+'\n')
                outF.write(' '.join(t))

            else:
                outF.write(line)
</code></pre>
",""
"31076043","2","31075506","<p>There are at least two key things you can rely on: the container box with <code>id=""lclbox""</code> and elements with <code>class=""intrlu""</code> corresponding to each result item.</p>

<p>How to extract the address and a phone number from each result item can vary, here is one option (definitely, not beautiful) involving locating the phone number via regex check of each <code>span</code> element text:</p>

<pre><code>import re

from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium import webdriver


driver = webdriver.Chrome()
driver.get('https://www.google.com/?gws_rd=ssl#q=plumbers%2Bhouston%2Btx')

# waiting for results to load
wait = WebDriverWait(driver, 10)
box = wait.until(EC.visibility_of_element_located((By.ID, ""lclbox"")))

phone_re = re.compile(r""\(\d{3}\) \d{3}-\d{4}"")

for result in box.find_elements_by_class_name(""intrlu""):
    for span in result.find_elements_by_tag_name(""span""):
        if phone_re.search(span.text):
            parent = span.find_element_by_xpath(""../.."")
            print parent.text
            break
    print ""-----""
</code></pre>

<p>I'm pretty sure it can be improved, but hope it would give you a starting point. Prints:</p>

<pre><code>Houston, TX
(713) 812-7070
-----
Houston, TX
(713) 472-5554
-----
6646 Satsuma Dr
Houston, TX
(713) 896-9700
-----
1420 N Durham Dr
Houston, TX
(713) 868-9907
-----
5630 Edgemoor Dr
Houston, TX
(713) 665-5890
-----
5403 Kirby Dr
Houston, TX
(713) 224-3747
-----
Houston, TX
(713) 385-0349
-----
</code></pre>
",""
"31076308","2","31074183","<p>The reason is that <code>numpy.zeros</code> uses <code>float</code> as the default element data type. You do not show how you retrieve the resulting number in the first version, but I am supposing that you cast it to <code>int</code>, otherwise, you would see the result as <code>1.45446360392e+16</code> or something similar:</p>

<pre class=""lang-py prettyprint-override""><code>def your_version(n):
    dp = np.zeros(n + 1)
    dp[0] = 1
    for i in range(1, n + 1):
        for j in range(i):
            dp[i] += dp[j] * dp[i - j - 1]
    return int(dp[n])
</code></pre>

<p>The rounding errors are removed if you specify that you want to work with integers in Numpy: use <code>np.zeros(n + 1, dtype=np.uint64)</code> and the result is correct.</p>

<p>By the way, @dlask is right to recommend you avoid Numpy. You can find memoized versions of the same formulas <a href=""http://rosettacode.org/wiki/Catalan_numbers#Python"" rel=""nofollow"">on Rosetta code</a>, and they are all faster than the Numpy version:</p>

<pre><code># The recurrent formula, memoized
In [9]: %timeit catalan.catalan(31)
The slowest run took 7.65 times longer than the fastest. This could mean that an intermediate result is being cached
1000000 loops, best of 3: 249 ns per loop

# The factorial formula, memoized
In [10]: %timeit catalan.cat_direct(31)
The slowest run took 10.21 times longer than the fastest. This could mean that an intermediate result is being cached
1000000 loops, best of 3: 1.19 µs per loop

# The recurrent formula with Numpy
In [11]: %timeit catalan.your_version(31)
1000 loops, best of 3: 259 µs per loop

# The factorial version without memoization
In [12]: %timeit catalan.your_other_version(31)
100000 loops, best of 3: 6.98 µs per loop
</code></pre>
",""
"31076390","2","31074380","<p>None is not a name of a function so it emits an Error.</p>

<p>Make condition in your Python macro:</p>

<pre><code>if('{{request.user.id}}'!='None') {
  ga('set', '&amp;uid', {{request.user.id}});
  }
</code></pre>

<p>PS: I dont know python, so the syntax is nonsense, but you know and this will solve your problem.</p>
",""
"31076776","2","31074853","<p>So your resulting form has multiple fields with the same name, right?</p>

<p>Like for the first member, there is a  and for the second member, there is also a ?</p>

<p>If so, forms don't support that. You have to have a unique name for each field. You'll have to throw in a memberID on each iteration of the loop, or come up with a better design. Something like <code>&lt;select name=""day{{member.id}}""&gt;</code> would be a hacky fix.</p>

<p>Another way is you just leave the in_out and day OUT of the for loop, keep it outside.</p>

<p>I hope that helps.</p>
",""
"31076982","2","31075438","<pre><code>sh: 1: Syntax error: ""("" unexpected 512
^^^
</code></pre>

<p><code>/bin/sh</code> is not the same as <code>/bin/bash</code> (or <code>/usr/bin/bash</code>, as the case may be). You are attempting to use Bash-specific syntax in a shell that doesn't understand it.</p>
",""
"31078271","2","31074758","<p>Just pass a list of colors.  Something like</p>

<pre><code>values = np.array([2,5,3,6,4,7,1])   
idx = np.array(list('abcdefg')) 
clrs = ['grey' if (x &lt; max(values)) else 'red' for x in values ]
sb.barplot(x=idx, y=values, palette=clrs) # color=clrs)
</code></pre>

<p><img src=""https://i.stack.imgur.com/1tt6Z.png"" alt=""enter image description here""></p>

<p>(As pointed out in comments, later versions of Seaborn use ""palette"" rather than ""color"")</p>
",""
"31079050","2","31074223","<p>I would check twice the image because it seems that the container has not any process listening on port 8888. To debug the issue you can run a shell session inside the container and check the if the process is listening, check the container log or any file inside if there is any log you can check,... I.E.:</p>

<pre><code>   $ sudo docker logs some-app (check container log)
   $ sudo docker exec -it some-app bash  (run an interactive shell)
   # netstat -tulnp | grep 8888   (check if any process is listening)
</code></pre>

<p>If you don not see the problem I would ask you to post your app Dockerfile and 
 Apart from that you don't need to use <code>EXPOSE 8888</code> in your Dockerfile if you use the container ip to access your service. <code>EXPOSE</code> is used to enable those port to be published to random ports of the host machine, when the container is run with <code>-P</code> option.</p>
",""
"31079475","2","31074974","<h1>Quick answer</h1>

<p>Change <code>h5py.File('test','w')</code> to <code>h5py.File('test','a')</code> (or <code>h5py.File('test')</code>, which defaults to the latter).</p>

<h1>Why</h1>

<p>When you instantiate a <code>h5py.File</code> object, you have to specify a <code>mode</code> as the second parameter. This must be one of the following:</p>

<ul>
<li><code>r</code>   Readonly, file must exist</li>
<li><code>r+</code>  Read/write, file must exist</li>
<li><code>w</code>   Create file, truncate if exists</li>
<li><code>w-</code> or <code>x</code>   Create file, fail if exists</li>
<li><code>a</code>   Read/write if exists, create otherwise (default)</li>
</ul>

<p>Using <code>a</code> is a quick fix, but risky if your program doesn't always know whether the file already exists. You can achieve any desired behavior in a less ambiguous way by using the other modes along with file checking.</p>
",""
"31080381","2","31074329","<p>The documentation is one and the same. You cannot effectively use pycparser without a basic understanding of how the C compilation pipeline works - sorry!</p>

<p>The documentation actually addresses Windows directly. The only difference is that instead of relying on a system C compiler (on Linux) you have to explicitly download one for Windows - and the documentation even gives you a link. Once you download Clang for Windows, which gives you preprocessing on Windows, everything else is platform-agnostic.</p>
",""
"31082111","2","31074853","<p>I found a quite simple solution for this:</p>

<p>instead of</p>

<pre><code>day = self.request.get(""day"")
</code></pre>

<p>I used</p>

<pre><code>day = self.request.get_all(""day"")
</code></pre>

<p>Which returns a list of all the options from the select, including the option the user choose for the member.</p>

<p>Then, for the Add Button, instead of</p>

<pre><code>&lt;td&gt;&lt;button type=""submit"" name=""id"" value=""{{ member.id }}""&gt;Add&lt;/button&gt;&lt;/td&gt;
</code></pre>

<p>I assigned the name ""loop"" and a value of {{ loop.index0}}</p>

<p>so,</p>

<pre><code>self.request.get(""loop"")
</code></pre>

<p>returns the position of the member selected, corresponding the position on the day list of the target. voila.</p>

<p>The member I get from a hidden td instead of from the submit button.</p>

<p>The final code:</p>

<pre><code>&lt;form method=""post"" action=""add_member_to_list""&gt;
  &lt;table&gt;
    {% for member in members %}
     &lt;tr&gt;
       &lt;th&gt;{{ member.name }}&lt;/th&gt;
       &lt;td&gt;&lt;input type=""checkbox"" name=""in_out""&gt;&lt;/td&gt;
       &lt;td&gt;
         &lt;select name=""day""&gt;
          &lt;option&gt;Monday&lt;/option&gt;
          &lt;option&gt;Wednesday&lt;/option&gt;
         &lt;/select&gt;
       &lt;/td&gt;
       &lt;td class=""hidden""&gt;&lt;input name=""id"" value=""{{ member.id }}""&gt;&lt;/td&gt;
       &lt;td&gt;&lt;button type=""submit"" name=""loop"" value=""{{ loop.index0 }}""&gt;Add&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;
  {% endfor %}
 &lt;/table&gt;
&lt;/form&gt;

class AddUser(BaseHandler):
    def post(self):
        day = self.request.get_all(""day"")
        id = self.request.get_all(""id"")
        loop = self.request.get(""loop"")
        target_day = day[int(loop)]
        target_id = id[int(loop)]
</code></pre>

<p>Niiice.</p>
",""
"31082815","2","31062946","<p>For python 2, as other have posted.</p>

<pre><code>class A(object):
    def __str__(self):
        return ""this""

class B(A):
    def __str__(self):
        return super(B, self).__str__() + "" + that""
</code></pre>

<p>For python 3 the syntax is simplified. <code>super</code> requires no arguments to work correctly.</p>

<pre><code>class A():
    def __str__(self):
        return ""this""

class B(A):
    def __str__(self):
        return super().__str__() + "" + that""
</code></pre>
",""
"31083687","2","31073993","<p>Run a minion on the same box as your master, then you can run the script on your master's minion and then on the other server.</p>
",""
"31085280","2","31074043","<p>It looks like you might be serializing something (<code>MyModel</code>) that loads an attribute / property lazily, whose loading requires something that didn't get serialized.</p>

<p>Can you try simplifying your task to a very simple function, and seeing if that solves this problem?</p>
",""
"31086204","1","","<p>Programming language: Python 3.4</p>

<p>I have written a program for the Bioinformatics 1 course from Coursera. The program is working all right, but is <strong>very slow for large datasets</strong>. I guess, it is because the loop is running for 4**k times, where k is the length of the sub-string that is passed into the function.
Input: Strings <em>Text</em> and <em>Pattern</em> along with an integer <em>d</em>.
Output: All starting positions where <em>Pattern</em> appears as a substring of Text with at most <em>d</em> mismatches.</p>

<p>This is my code:</p>

<pre><code>def MotifCount(string1, substring, d):
    k = 4 ** (len(substring))
    codeArray = list(itertools.product(['A', 'C', 'G', 'T'], repeat=len(substring)))
    for i in range(k):
        codeArray2 = ''.join(list(codeArray[i]))
        HammingValue = HammingDistance(codeArray2, substring)
        if HammingValue &lt;= d:
            for j in range(len(string1)):
                if(string1.find(codeArray2, j) == j):
                    print(j)



def HammingDistance(string_1, string_2):
    length_1 = len(string_1)
    length_2 = len(string_2)
    count = 0
    for i in range(length_1):
        if string_1[i] != string_2[i]:
            count += 1
    return count
</code></pre>

<p><strong>Sample Input:</strong></p>

<pre><code>CGCCCGAATCCAGAACGCATTCCCATATTTCGGGACCACTGGCCTCCACGGTACGGACGTCAATCAAAT
ATTCTGGA
3
</code></pre>

<p><strong>Output:</strong></p>

<pre><code>6 7 26 27
</code></pre>

<p>I want to optimize this code for bigger data sets. Is there any way to reduce the run time of the code?</p>
","<python><python-3.x><bioinformatics>"
"31086227","1","","<p>I wrote a piece of code which reads the columns from different csv files and writes to another csv file. I want the new column to be added at the end i.e as the last column, but my implementation makes the column to add at the bottom. Suppose <code>a</code> is already existing column, <code>b</code> is the new one added, here is what I got</p>

<pre><code>a,
1,
2,
3,
b,
1, 
2,
3,
</code></pre>

<p>but what i need is something like this </p>

<pre><code>a,b 
1,1
2,2
3,3
</code></pre>

<p>Here is the piece of code i am working with.</p>

<pre><code>wwr=[""wwr15"",""wwr30"",""wwr45"",""wwr60""]
shade=[""E1-geo1""]
climate=[""Madrid""]
orientations=['East','North','South','West']
colMap={'East':3,'North':2,'South':1,'West':0}

for shd in shade:
  for clim in climate:

    for orientation in orientations:
        for win in wwr:
            inp_filename=shd+""_""+clim+""_""+win+""_DC_ctrl3.csv""
            col=pd.read_csv(inp_filename,usecols=[colMap[orientation]])
            output_fname=shd+""_""+clim+"".csv""

            if os.path.isfile(output_fname):
                col.columns=[shd+"" ""+orientation+"" ""+clim+"" ""+win]
                col.to_csv(output_fname,index='false',mode='a')


            else:
                col.columns=[shd+"" ""+orientation+"" ""+clim+"" ""+win]
                col.to_csv(output_fname,index='false',mode='w')
</code></pre>

<p>In the above code, each of the <code>inp_filename</code> csv file has four columns and 8760 rows, i will read each column in a particular order(based on orientation) and write that into  <code>output_fname</code>csv file.         </p>

<p>Any help is much appreciated.</p>

<p><strong>Edit1:</strong> I tried this method as well, transposed each column to row and appended all of them but I see each row has indices which are not required.</p>

<pre><code>     col=pd.read_csv(filename,usecols=[colMap[orientation]], index_col=False)
     df_read=pd.DataFrame.transpose(col)
     outputname=shd+""_""+clim+"".csv""
     df_read.to_csv(outputname,index_label=shd+"" ""+orientation+"" ""+clim+"" ""+win, mode='a', header='False')
</code></pre>

<p>My result appeared something like this(2 rows) for every column</p>

<pre><code>  E1-geo1 East Madrid wwr15,0,1,2,3,4,5,6,7,8,..........
  1.3,1,1,1,1,1,1,1,1,1,1,1,1,1,...........
</code></pre>

<p>but what i require is something like this(only 1 row) for each column</p>

<pre><code>  E1-geo1 East Madrid wwr15,1,1,1,1,1,1,1,1,1,1,1,1,1.........
</code></pre>

<p>more over after I write this to csv file how do I transpose all at once?</p>
","<python><csv><pandas>"
"31086366","1","","<p>I have a server set up with sockets and threading, and when I connect multiple clients to it, if a client sends a message, the server repeats that same message back to it, instead of to all other connected clients. For example:</p>

<pre><code>#server terminal
Server is connected on 8000
('127.0.0.1', 50328) is Connected
('127.0.0.1', 50329) is Connected
Received Message b'hi\n'

#Client 1 terminal
#input
[user1]hi
#returns:
[user1] b'hi\nhi\n'[user1]

#Client 2 terminal
#doesn't return anything, just sits at the prompt
[user2]
</code></pre>

<p>The relevant code for the server is:</p>

<pre><code>def clientHandler():
    c, addr = s.accept() 
    print(addr, ""is Connected"")
    if addr not in clients:
        clients.append(addr)
    try:
        while True:
            data = c.recv(1024)
            if not data: 
                break 
            print(""Received Message "", repr(data))
            for client in clients:
                c.sendto(data, client)
    except:
        print(""Error. Data not sent."")
</code></pre>

<p>I have read the following sources, but to no avail:</p>

<p><a href=""https://stackoverflow.com/questions/21690683/python-tcp-server-sending-data-to-multiple-clients"">python tcp server sending data to multiple clients</a></p>

<p><a href=""https://docs.python.org/3/library/socket.html"" rel=""nofollow noreferrer"">https://docs.python.org/3/library/socket.html</a></p>

<p>What must I do to make it send user1's message to all other users through the server?</p>

<p>Edit 1:
All server.py code:</p>

<pre><code>from socket import *
from threading import Thread

clients = []

def clientHandler():
    c, addr = s.accept() 
    print(addr, ""is Connected"")
    if addr not in clients:
        clients.append(addr)
    try:
        while True:
            data = c.recv(1024)
            if not data: 
                break 
            for client in clients:
                c.sendto(data, client)
    except:
        print(""Error. Data not sent to all clients."")

HOST = '' #localhost
PORT = 8000

s = socket(AF_INET, SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(5)

print(""Server is running on ""+ str(PORT))

#Thread(target=clientHandler).start()
#Thread(target=clientHandler).start()
#Thread(target=clientHandler).start()

for i in range(5): 
    Thread(target=clientHandler).start()

s.close()
</code></pre>
","<python><multithreading><sockets><python-3.x>"
"31086515","2","31086227","<p>Suppose you have 3 CSV files. </p>

<p><code>a.csv</code> has</p>

<pre><code>a0,a1
1,a1
2,a2
</code></pre>

<p><code>b.csv</code> has</p>

<pre><code>b0,b1
1,b1
2,b2
</code></pre>

<p>and <code>c.csv</code> has</p>

<pre><code>c
9
8
</code></pre>

<p>So, <a href=""https://docs.python.org/2/library/csv.html#csv.reader"" rel=""nofollow""><code>csv.reader</code></a> can give you a reader for each, and <code>zip</code> can combine them, like so:</p>

<pre><code>for tup_a, tup_b, tup_c in zip(csv.reader(open('a.csv')), csv.reader(open('b.csv')), csv.reader(open('c.csv'))):
    print tup_a + tup_b + tup_c
['a0', 'a1', 'b0', 'b1', 'c']
['1', 'a1', '1', 'b1', '9']
['2', 'a2', '2', 'b2', '8']
</code></pre>

<p>If you want to write each tuple to a new file, just use <a href=""https://docs.python.org/2/library/csv.html#writer-objects"" rel=""nofollow""><code>csv.writer</code></a> instead of the <code>print</code> above.</p>
",""
"31086530","1","","<p>I have followed the procedure given in <a href=""https://stackoverflow.com/questions/20112989/how-to-use-valgrind-with-python"">How to use valgrind with python?</a> for checking memory leaks in my python code. </p>

<p>I have my python source under the path</p>

<pre><code>/root/Test/ACD/atech
</code></pre>

<p>I have given above path in <code>PYTHONPATH</code>. Everything is working fine if I run the code with default python binary, located under <code>/usr/bin/</code>. 
I need to run the code with the python binary I have build manually which is located under</p>

<pre><code>/home/abcd/workspace/python/bin/python
</code></pre>

<p>Then I am getting the following error </p>

<pre><code>from concurrent.futures.process import ProcessPoolExecutor
ImportError: No module named concurrent.futures.process
</code></pre>

<p>How can I solve this?</p>
","<python><path>"
"31086581","1","","<p>I am relatively new to python.The code is a solution to a problem in one of the online judges, but it throws a runtime error. Please help me fix this code.Thanks.</p>

<pre><code>import math
def square(n):
if n&lt;0:
    return 0
else:
    tst=int(math.sqrt(n))
    if tst*tst==n or  (tst+1)*(tst+1)==n or (tst-1)*(tst-1)==n:
        return 1


t=input()
for i in t:

   n=input()
   flag=square(n)
   if flag==1:
       print ""Case %l: Yes\n""%i

    else:
       print ""Case %l: No\n""%i

    t=t-1
</code></pre>
","<python>"
"31086626","2","31086581","<p>Try to read the info thrown by the python interpreter:</p>

<pre><code>Traceback (most recent call last):
  File ""prog.py"", line 17, in &lt;module&gt;
NameError: name 'i' is not defined
</code></pre>

<p>The line number where the error happens (17) and the type of error ('i' is not defined) appears clearly i the traceback.</p>
",""
"31086689","2","31086366","<p>I see a few issues in your code -</p>

<ol>
<li><p>You are starting clientHandler threads, but then you are not making the main thread join any , this may cause main thread to die before the child threads finish processing, I think you would want to save the <code>Thread</code> objects you create to a variable and then make them join the main thread.</p></li>
<li><p>Instead of making the clientHandlers directly, you should first wait for accepting a connection from client (outside the handler function) and once you get the connection, add it to list of clients and send it over to the clientHandler.</p></li>
<li><p>In your code - <code>for client in clients: c.sendto(data, client)</code> m this sends data to all clients ,instead you should check if <code>client</code> is not the <code>client</code> that this thread is servicing, by checking against the <code>addr</code> that this thread is servicing.</p></li>
</ol>

<p>Example changes -</p>

<pre><code>from socket import *
from threading import Thread

clients = []

def clientHandler(c, addr):
    global clients
    print(addr, ""is Connected"")
    try:
        while True:
            data = c.recv(1024)
            if not data: 
                break 
            for client in clients:
                if addr != client:
                    c.sendto(data, client)
    except:
        print(""Error. Data not sent to all clients."")

HOST = '' #localhost
PORT = 8000

s = socket(AF_INET, SOCK_STREAM)
s.bind((HOST, PORT))
s.listen(5)

print(""Server is running on ""+ str(PORT))

#Thread(target=clientHandler).start()
#Thread(target=clientHandler).start()
#Thread(target=clientHandler).start()
trds = []

for i in range(5): 
    c, addr = s.accept() 
    clients.append(addr)
    t = Thread(target=clientHandler, args = (c, addr))
    trds.append(t)
    t.start()

for t in trds:
    t.join()

s.close()
</code></pre>
",""
"31086693","1","","<p>Can't figure it out how upload the file there? It needs to be drag and dropped or just selected via dialog box</p>
","<python><selenium><selenium-webdriver><selenium-chromedriver>"
"31086704","1","","<p>Very new to Python and programming in general so apologies if I am missing anything straightforward.</p>

<p>I am trying to iterate through a directory and open the included .txt files and modify them with new content. </p>

<pre><code> import os

 def rootdir(x):
     for paths, dirs, files in os.walk(x):
         for filename in files:
             f=open(filename, 'r')
             lines=f.read()
             f.close()
             for line in lines:
                 f=open(filename, 'w')
                 newline='rewritten content here'
                 f.write(newline)
                 f.close()
 return x

 rootdir(""/Users/russellculver/documents/testfolder"")`
</code></pre>

<p>Is giving me: IOError: [Errno 2] No such file or directory: 'TestText1.rtf'</p>

<p><strong>EDIT: I should clarify there IS a file named 'TestText1.rtf' in the folder specified in the function argument. It is the first one of three text files.</strong></p>

<p>When I try moving where the file is closed / opened as seen below:</p>

<pre><code>import os

 def rootdir(x):
     for paths, dirs, files in os.walk(x):
         for filename in files:
             f=open(filename, 'r+')
             lines=f.read()
             for line in lines:
                  newline='rewritten content here'
                  f.write(newline)
                  f.close()
 return x

 rootdir(""/Users/russellculver/documents/testfolder"")
</code></pre>

<p>It gives me: ValueError: I/O operation on closed file</p>

<p>Thanks for any thoughts in advance.</p>

<p>@mescalinum Okay so I've made amendments to what I've got based on everyones assistance (thanks!), but it is still failing to enter the text ""newline"" in any of the .txt files in the specified folder.</p>

<pre><code>import os

x = raw_input(""Enter the directory here: "")

def rootdir(x):
    for dirpaths, dirnames, files in os.walk(x):
        for filename in files:
            try:
                with open(os.dirpaths.join(filename, 'w')) as f:
                    f.write(""newline"")
                return x
            except:
                print ""There are no files in the directory or the files cannot be opened!""
            return x
</code></pre>
","<python><python-2.7><nested-lists><file-writing>"
"31086725","1","","<p>I need to check python source for <strong>gross errors</strong> (i.e. to check general correctness of the source) using <code>parser</code> module. I thried to use <code>parser.suite(src)</code> and <code>parser.expr(src)</code>. But these methods always build parse tree. </p>

<p>For example, if I apply to the input random text file instead of python source, I get a tree, which contains <code>(n, 'Err')</code>, where <code>n</code> - number of the parse element (also I can get <code>SyntaxError</code>). But my source also may contains <code>(n, 'Err')</code> if it contains some element named <code>Err</code>.</p>

<p>So, how I can distinguish trees of incorrect source (incorrect in general with gross errors)?</p>
","<python><parsing><python-3.x>"
"31086734","2","31086581","<p>The issue in your code now is that you are using <code>t = input()</code> which accepts input line by line, so the first time it just returns the first line , which is <code>2</code>.</p>

<p>And then you are trying to loop over it , I think instead you want to loop that much times, so you should change the code to -</p>

<pre><code>t=int(input())
for i in range(t):
</code></pre>

<p>Using <code>range</code> function would make the loop go that much amount of times, Hoepfully that is what you intended to do.</p>

<hr>

<p>When using <code>%</code> symbol for string formatting, you have to give <code>%d</code> or <code>%s</code> , etc. There does not seem to be any <code>%l</code> .</p>

<p>Example -</p>

<pre><code>print ""Case %d: Yes\n""%i
</code></pre>
",""
"31086766","2","31086204","<pre><code>import itertools

def HammingDistance(string_1, string_2):
    assert len(string_1) == len(string_2)
    return sum(c1 != c2 for c1, c2 in zip(string_1, string_2))

def MotifCount(string1, substring, d):
    for i in range(len(string1) - len(substring) + 1):
        if HammingDistance(string1[i:i+len(substring)], substring) &lt;= d:
            print(i)

MotifCount(""CGCCCGAATCCAGAACGCATTCCCATATTTCGGGACCACTGGCCTCCACGGTACGGACGTCAATCAAAT"", ""ATTCTGGA"", 3)
</code></pre>

<p>It gives:</p>

<pre><code>6
7
26
27
</code></pre>

<p>Quickly.</p>
",""
"31086806","1","","<p>I am using angularJS with flask at the backend.my template has angular terms like(I know they are not called terms but i cant explain it in better way)</p>

<pre><code>       {{Person.name}} {{Person.number}}
</code></pre>

<p>I want to render this template in my flask views.</p>

<p>I tried to use render_template(""templatename.html"").
But it shows me Person not defined error.(Obviously sice i dint pass any parameters and it is not considering them to related to angular)</p>

<p>So i have found a workaround and used this</p>

<pre><code>return make_response(open(""templatename.html"",'r').read())
</code></pre>

<p>And this works!</p>

<p>But now i have to pass parameters to the template and i cant do it with this workaround!
Can anyone please suggest me some other way to escape angular related terms in html and render it.</p>
","<javascript><python><angularjs><templates><flask>"
"31086832","2","31086704","<p>From <a href=""https://docs.python.org/2/library/os.html#os.walk"" rel=""nofollow"">https://docs.python.org/2/library/os.html#os.walk</a>:</p>

<blockquote>
  <p><strong>os.walk(top, topdown=True, onerror=None, followlinks=False)</strong></p>
  
  <p>Generate the file names in a directory tree by walking the tree either top-down or bottom-up. For each directory in the tree rooted at directory top (including top itself), it yields a 3-tuple <code>(dirpath, dirnames, filenames)</code>.</p>
  
  <p><code>dirpath</code> is a string, the path to the directory. <code>dirnames</code> is a list of the names of the subdirectories in <code>dirpath</code> (excluding <code>'.'</code> and <code>'..'</code>). <code>filenames</code> is a list of the names of the non-directory files in <code>dirpath</code>. Note that the names in the lists contain no path components. <strong>To get a full path (which begins with top) to a file or directory in <code>dirpath</code>, do <code>os.path.join(dirpath, name)</code>.</strong></p>
</blockquote>

<hr>

<p>Also, <code>f.close()</code> should be outside <code>for line in lines</code>, otherwise you call it multiple times, and the second time you call it, <code>f</code> is already closed, and it will give that I/O error.</p>

<hr>

<p>You should avoid explicitly <code>open()</code>ing and <code>close()</code>ing files, like:</p>

<pre><code>f=open(filename, 'w')
f.write(newline)
f.close()
</code></pre>

<p>and instead use <a href=""https://www.python.org/dev/peps/pep-0343/"" rel=""nofollow"">context managers</a> (i.e. the <code>with</code> statement):</p>

<pre><code>with open(filename, 'w'):
    f.write(newline)
</code></pre>

<p>which does exactly the same thing, but implicitly closes the file when the body of <code>with</code> is finished.</p>
",""
"31086837","2","31086806","<p>Try to use different tags in Angular so that they don't conflict with those for Flask:</p>

<pre><code>app.config(function($interpolateProvider) {
    $interpolateProvider.startSymbol('&lt;%');
    $interpolateProvider.endSymbol('%&gt;');
});
</code></pre>

<p>and then in template:</p>

<pre><code>&lt;% Person.name %&gt; &lt;% Person.number %&gt;
</code></pre>

<p>Check <a href=""https://docs.angularjs.org/api/ng/provider/$interpolateProvider"" rel=""nofollow"">$interpolateProvider</a> for details.</p>
",""
"31086882","2","31086704","<p>Here is the code that does as you asked:</p>

<pre><code>import os

def rootdir(x):
     for paths, dirs, files in os.walk(x):
         for filename in files:
             try:
                 f=open(os.path.join(dirpath, name), 'w')
                 f.write('new content here')
                 f.close()
             except Exception, e:
                print ""Could not open "" + filename

rootdir(""/Users/xrisk/Desktop"")
</code></pre>

<p>However, I have a feeling you don’t <em>quite</em> understand what’s happening here (no offence). First have a look at the documentation of <code>os.walk</code> provided by @mescalinum . The third tuple element <code>files</code> will contain only the file name. You need to combine it with <code>paths</code> to get a full path to the file. </p>

<p>Also, you don’t need to read the file first to write to it. On the other hand, if you want to <em>append</em> to the file, you should use the mode 'a' when opening the file</p>

<p>In general, when reading/writing a file, you only close it <strong>after</strong> finishing all the read/writes. Otherwise you will get an exception.</p>

<p>Thanks @mescalinum</p>
",""
"31086883","1","","<p>As extension to my previous <a href=""https://stackoverflow.com/questions/31069153/bubble-plot-or-heatmap-in-matplotlib/31077694#31077694"">question</a> </p>

<p>With same data set I am not able to get the annotation done. </p>

<pre><code>import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
sns.set()

df = pd.read_csv('heat_map_data.csv')

df3 = df.copy()
for c in ['Place','Name']:
    df3[c] = df3[c].astype('category')

sns.heatmap(df3.pivot_table(index='Place', columns='Name', values='00:00:00', annot=True) )

plt.show() 
</code></pre>

<p>Error:</p>

<pre><code>Traceback (most recent call last):
  File ""heatmap_sns.py"", line 13, in &lt;module&gt;
    sns.heatmap(df3.pivot_table(index='Place', columns='Name', values='00:00:00', annot=True) )
TypeError: pivot_table() got an unexpected keyword argument 'annot'
</code></pre>

<p>Please suggest what could be the fix ?</p>
","<python><matplotlib><annotations><seaborn>"
"31086912","2","31086883","<p><code>annot=True</code> is an argument of <code>heatmap</code>, not <code>pivot_table</code>:</p>

<pre><code>sns.heatmap(df3.pivot_table(index='Place', columns='Name', values='00:00:00'), 
            annot=True)
</code></pre>
",""
"31087111","1","","<p>I am novice to Python and following a tutorial. There is an example of <code>list</code> in the tutorial :</p>

<pre><code>example = list('easyhoss')
</code></pre>

<p>Now, In tutorial, <code>example= ['e','a',...,'s']</code>. But in my case I am getting following error:</p>

<pre><code>&gt;&gt;&gt; example = list('easyhoss')
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: 'list' object is not callable
</code></pre>

<p>Please tell me where I am wrong. I searched SO <a href=""https://stackoverflow.com/questions/5735841/python-typeerror-list-object-is-not-callable"">this</a> but it is different.</p>
","<python><list>"
"31087151","2","31087111","<p>Seems like you've shadowed the built-in name <code>list</code> by an instance name somewhere in your code.</p>

<pre><code>&gt;&gt;&gt; example = list('easyhoss')
&gt;&gt;&gt; list = list('abc')
&gt;&gt;&gt; example = list('easyhoss')
Traceback (most recent call last):
File ""&lt;string&gt;"", line 1, in &lt;module&gt;
TypeError: 'list' object is not callable
</code></pre>

<p>I believe this is fairly obvious. Python stores object names (functions and classes are objects, too) in dictionaries (namespaces are implemented as dictionaries), hence you can rewrite pretty much any name in any scope. It won't show up as an error of some sort.
You'd better use an IDE (e.g. a free version of PyCharm or Atom with Python plugins) that highlights name shadowing. </p>

<p><strong>EDIT</strong>. Thanks to your additional questions I think the whole thing about <code>built-ins</code> and scoping is worth clarification. As you might know Python emphasizes that ""special cases aren't special enough to break the rules"". And there are a couple of rules behind the problem you've faced.</p>

<ol>
<li><p><em>Namespaces</em>. Python supports nested namespaces. Theoretically you can endlessly nest namespaces. As I've already mentioned, namespaces are basically dictionaries of names and references to corresponding objects. Any module you create gets its own ""global"" namespace. In fact it's just a local namespace with respect to that particular module. </p></li>
<li><p><em>Scoping</em>. When you call a name Python looks in the local namespace (relatively to the call) and if it fails to find the name it repeats the attempt in a higher-level namespace. <code>built-in</code> functions and classes reside in a special high-order namespace <code>__builtins__</code>. If you declare <code>list</code> in your module's global namespace, the interpreter will never search for that name in the higher-level namespace that is <code>__builtins__</code>. Similarly, suppose you create a variable <code>var</code> inside a function in your module, and another variable <code>var</code> in the module. Then if you call <code>var</code> inside the function Python will never give you the global <code>var</code>, because there is a <code>var</code> in the local namespace - it doesn't need to search in the higher-level namespace. </p></li>
</ol>

<p>Here is a simple illustration.</p>

<pre><code>    &gt;&gt;&gt; example = list(""abc"") # Works fine
    # Creating name ""list"" in the global namespace of the module
    &gt;&gt;&gt; list = list(""abc"")    
    &gt;&gt;&gt; example = list(""abc"")  
    Traceback (most recent call last):
      File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
    TypeError: 'list' object is not callable
    # Python looks for ""list"" and finds it in the global namespace. 
    # But it's not the proper ""list"".
    # Let's remove ""list"" from the global namespace
    &gt;&gt;&gt; del(list)
    # Since there is no ""list"" in the global namespace of the module,
    # Python goes to a higher-level namespace to find the name. 
    &gt;&gt;&gt; example = list(""abc"") # It works.
</code></pre>

<p>So, as you see there is nothing special about <code>built-ins</code>. And your case is a mere example of universal rules.</p>

<p><strong>P.S.</strong></p>

<p>When you start an interactive Python session you create a temporary module. </p>
",""
"31087173","1","","<p>I am trying to make a simple django app which will display a list of forums on the main page and when a user clicks on a forum title to be taken to the posts which belong to that forum </p>

<p>Here's the code for the post model:</p>

<pre><code>class Post(models.Model):
author = models.ForeignKey('auth.User')
title = models.CharField(max_length=200)
text = models.TextField()
created_date = models.DateTimeField(
    default=timezone.now)
published_date = models.DateTimeField(
    blank=True, null=True)
forum = models.ForeignKey('Forum') # referinta la Forum
upload = models.FileField(""Upload a file"", upload_to = 'media', null=True, blank=True)

def publish(self):
    self.published_date = timezone.now()
    self.save()
def __str__(self):
    return self.title
</code></pre>

<p>And the code for the forum model:</p>

<pre><code>class Forum(models.Model):
    title = models.CharField(max_length=200)
    published_date = models.DateTimeField(blank=True, null=True)

    def __str__(self):
        return self.title
</code></pre>

<p>The code in the views.py :</p>

<pre><code>def forum_list(request):
forums= Forum.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
return render(request, 'students_platform/post_list.html', {'forums': forums})

def post_list(request):
     posts=Post.objects.filter(published_date__lte=timezone.now()).order_by('published_date')
return render(request, 'students_platform/post_list.html', {'posts': posts})
</code></pre>

<p>Finally, i have a post_list.html file which looks like this:</p>

<pre><code>&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Informatii despre examene&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div&gt;
        &lt;h1&gt; Informatii despre examene&lt;/h1&gt;

    &lt;h2&gt; Bine ati venit! &lt;/h2&gt;
    &lt;/div&gt;
{% for forum in forums %}
&lt;div&gt;


    &lt;h1&gt;&lt;a href=""""&gt;{{ forum.title }}&lt;/a&gt;&lt;/h1&gt;
    &lt;p&gt;{{ forum.text|linebreaks }}&lt;/p&gt;

&lt;/div&gt;
{% endfor %}

&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<p>How can i edit the html file so that each time i click on a forum title to take me to the posts which were added to that forum?</p>
","<python><html><django><view>"
"31087268","1","","<p>There as several similar questions that I have already read on Stack Overflow. Unfortunately, I lost links of all of them, because my browsing history got deleted unexpectedly.</p>

<p>All of the above questions, couldn't help me. Either, some of them have used CELERY or some of them SCRAPYD, and I want to use the MULTIPROCESSISNG Library. Also, the Scrapy Official Documentation shows how to run multiple spiders on a SINGLE PROCESS, not on MULTIPLE PROCESSES.</p>

<p>None of them couldn't help me, and hence I decided to ask this question.</p>

<p>After several try's, I came up with this <a href=""http://paste.ubuntu.com/11782399/"" rel=""nofollow"">code</a>. </p>

<p>My Output-:</p>

<pre><code>Enter a product to search for: apple
2015-06-27 14:34:15 [scrapy] INFO: Scrapy 1.0.0 started (bot: scrapybot)
2015-06-27 14:34:15 [scrapy] INFO: Scrapy 1.0.0 started (bot: scrapybot)
2015-06-27 14:34:15 [scrapy] INFO: Optional features available: ssl, http11
2015-06-27 14:34:15 [scrapy] INFO: Optional features available: ssl, http11
2015-06-27 14:34:15 [scrapy] INFO: Overridden settings: {}
2015-06-27 14:34:15 [scrapy] INFO: Overridden settings: {}
2015-06-27 14:34:15 [scrapy] INFO: Enabled extensions: CloseSpider, TelnetConsole, LogStats, CoreStats, SpiderState
2015-06-27 14:34:15 [scrapy] INFO: Enabled extensions: CloseSpider, TelnetConsole, LogStats, CoreStats, SpiderState
2015-06-27 14:34:15 [scrapy] INFO: Enabled downloader middlewares: HttpAuthMiddleware, DownloadTimeoutMiddleware, UserAgentMiddleware, RetryMiddleware, DefaultHeadersMiddleware, MetaRefreshMiddleware, HttpCompressionMiddleware, RedirectMiddleware, CookiesMiddleware, ChunkedTransferMiddleware, DownloaderStats
2015-06-27 14:34:15 [scrapy] INFO: Enabled spider middlewares: HttpErrorMiddleware, OffsiteMiddleware, RefererMiddleware, UrlLengthMiddleware, DepthMiddleware
2015-06-27 14:34:15 [scrapy] INFO: Enabled item pipelines: 
2015-06-27 14:34:15 [scrapy] INFO: Spider opened
2015-06-27 14:34:15 [scrapy] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2015-06-27 14:34:15 [scrapy] DEBUG: Telnet console listening on 127.0.0.1:6023
2015-06-27 14:34:15 [scrapy] INFO: Enabled downloader middlewares: HttpAuthMiddleware, DownloadTimeoutMiddleware, UserAgentMiddleware, RetryMiddleware, DefaultHeadersMiddleware, MetaRefreshMiddleware, HttpCompressionMiddleware, RedirectMiddleware, CookiesMiddleware, ChunkedTransferMiddleware, DownloaderStats
2015-06-27 14:34:15 [scrapy] INFO: Enabled spider middlewares: HttpErrorMiddleware, OffsiteMiddleware, RefererMiddleware, UrlLengthMiddleware, DepthMiddleware
2015-06-27 14:34:15 [scrapy] INFO: Enabled item pipelines: 
2015-06-27 14:34:15 [scrapy] INFO: Spider opened
2015-06-27 14:34:15 [scrapy] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2015-06-27 14:34:15 [scrapy] DEBUG: Telnet console listening on 127.0.0.1:6024
2015-06-27 14:34:15 [twisted] ERROR: Unhandled Error
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 88, in callWithLogger
    return callWithContext({""system"": lp}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 73, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 81, in callWithContext
    return func(*args,**kw)
--- &lt;exception caught here&gt; ---
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py"", line 619, in _doReadOrWrite
    why = selectable.doWrite()
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/base.py"", line 1117, in doWrite
    ""doWrite called on a %s"" % reflect.qual(self.__class__))
exceptions.RuntimeError: doWrite called on a twisted.internet.tcp.Port

Unhandled Error
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 88, in callWithLogger
    return callWithContext({""system"": lp}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 73, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 81, in callWithContext
    return func(*args,**kw)
--- &lt;exception caught here&gt; ---
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py"", line 619, in _doReadOrWrite
    why = selectable.doWrite()
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/base.py"", line 1117, in doWrite
    ""doWrite called on a %s"" % reflect.qual(self.__class__))
exceptions.RuntimeError: doWrite called on a twisted.internet.tcp.Port
2015-06-27 14:34:16 [twisted] ERROR: Unhandled Error
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 88, in callWithLogger
    return callWithContext({""system"": lp}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 73, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 81, in callWithContext
    return func(*args,**kw)
--- &lt;exception caught here&gt; ---
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py"", line 619, in _doReadOrWrite
    why = selectable.doWrite()
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/base.py"", line 1117, in doWrite
    ""doWrite called on a %s"" % reflect.qual(self.__class__))
exceptions.RuntimeError: doWrite called on a twisted.internet.tcp.Port

Unhandled Error
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 88, in callWithLogger
    return callWithContext({""system"": lp}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/log.py"", line 73, in callWithContext
    return context.call({ILogContext: newCtx}, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/python/context.py"", line 81, in callWithContext
    return func(*args,**kw)
--- &lt;exception caught here&gt; ---
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/posixbase.py"", line 619, in _doReadOrWrite
    why = selectable.doWrite()
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/base.py"", line 1117, in doWrite
    ""doWrite called on a %s"" % reflect.qual(self.__class__))
exceptions.RuntimeError: doWrite called on a twisted.internet.tcp.Port
2015-06-27 14:34:17 [scrapy] DEBUG: Crawled (200) &lt;GET http://bigbasket.com/ps/?q=apple&gt; (referer: None)
hello, world
Current second: 17
Current microsecond: 546862
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 170', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/10000007_18-fresho-apple-washington.jpg', 'product_link': 'http://bigbasket.com/pd/10000007/fresho-apple-washington-1-kg/', 'productname': 'Apple - Washington', 'current_price': 'Rs. 170'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 199', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/10000003_7-fresho-apple-fuji.jpg', 'product_link': 'http://bigbasket.com/pd/10000003/fresho-apple-fuji-1-kg/', 'productname': 'Apple - Fuji', 'current_price': 'Rs. 199'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 229', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/10000005_16-fresho-apple-royal-gala.jpg', 'product_link': 'http://bigbasket.com/pd/10000005/fresho-apple-royal-gala-1-kg/', 'productname': 'Apple - Royal Gala', 'current_price': 'Rs. 229'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 156.75', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/205988_2-american-garden-vinegar-apple-cider.jpg', 'product_link': 'http://bigbasket.com/pd/205988/american-garden-vinegar-apple-cider-473-ml-bottle/', 'productname': 'Vinegar - Apple Cider', 'current_price': 'Rs. 156.75'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 151', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/10000397_7-fresho-apple-green.jpg', 'product_link': 'http://bigbasket.com/pd/10000397/fresho-apple-green-500-gm/', 'productname': 'Apple - Green', 'current_price': 'Rs. 151'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 114', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/229785_5-tropicana-100-juice-apple.jpg', 'product_link': 'http://bigbasket.com/pd/229785/tropicana-100-juice-apple-1-ltr-tetra/', 'productname': '100% Juice - Apple', 'current_price': 'Rs. 114'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 266', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/40015763_1-mylife-vinegar-apple-cider.jpg', 'product_link': 'http://bigbasket.com/pd/40015763/mylife-vinegar-apple-cider-300-ml/', 'productname': 'Vinegar - Apple Cider', 'current_price': 'Rs. 266'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 175', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/40015525_1-fresho-apple-chilli.jpg', 'product_link': 'http://bigbasket.com/pd/40015525/fresho-apple-chilli-1-kg/', 'productname': 'Apple - Chilli', 'current_price': 'Rs. 175'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 94.05', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/229791_3-tropicana-juice-apple.jpg', 'product_link': 'http://bigbasket.com/pd/229791/tropicana-juice-apple-1-ltr-tetra/', 'productname': 'Juice - Apple', 'current_price': 'Rs. 94.05'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 93', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/40015526_1-fresho-apple-chilli.jpg', 'product_link': 'http://bigbasket.com/pd/40015526/fresho-apple-chilli-500-gm/', 'productname': 'Apple - Chilli', 'current_price': 'Rs. 93'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 94.05', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/265854_2-real-fruit-power-juice-apple.jpg', 'product_link': 'http://bigbasket.com/pd/265854/real-fruit-power-juice-apple-1-ltr-carton/', 'productname': 'Fruit Power Juice - Apple', 'current_price': 'Rs. 94.05'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 143.10', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/252445_3-biotique-shampoo-and-conditioner-bio-green-apple.jpg', 'product_link': 'http://bigbasket.com/pd/252445/biotique-shampoo-and-conditioner-bio-green-apple-190-ml/', 'productname': 'Shampoo and Conditioner - Bio Green...', 'current_price': 'Rs. 143.10'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 250', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/30006470_1-fresho-apple-fuji-premium.jpg', 'product_link': 'http://bigbasket.com/pd/30006470/fresho-apple-fuji-premium-1-kg/', 'productname': 'Apple Fuji Premium', 'current_price': 'Rs. 250'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 19', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/282654_2-real-fruit-power-juice-apple.jpg', 'product_link': 'http://bigbasket.com/pd/282654/real-fruit-power-juice-apple-200-ml-carton/', 'productname': 'Fruit Power Juice - Apple', 'current_price': 'Rs. 19'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 14.25', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/100535016_4-quaker-oats-strawberry-flavor-with-apple.jpg', 'product_link': 'http://bigbasket.com/pd/100535016/quaker-oats-strawberry-flavor-with-apple-40-gm-pouch/', 'productname': 'Oats - Strawberry Flavor with Apple', 'current_price': 'Rs. 14.25'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 12.60', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/265705_1-appy-apple-juice-drink-classic.jpg', 'product_link': 'http://bigbasket.com/pd/265705/appy-apple-juice-drink-classic-200-ml-carton/', 'productname': 'Apple Juice Drink - Classic', 'current_price': 'Rs. 12.60'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 19', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/40012961_2-candy-clouds-cotton-candy-orange-green-apple.jpg', 'product_link': 'http://bigbasket.com/pd/40012961/candy-clouds-cotton-candy-orange-green-apple-30-gm-cup/', 'productname': 'Cotton Candy - Orange &amp; Green Apple', 'current_price': 'Rs. 19'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 96', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/229945_1-real-activ-juice-apple.jpg', 'product_link': 'http://bigbasket.com/pd/229945/real-activ-juice-apple-1-ltr-carton/', 'productname': 'Activ Juice - Apple', 'current_price': 'Rs. 96'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 23.75', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/286759_1-minute-maid-juice-apple.jpg', 'product_link': 'http://bigbasket.com/pd/286759/minute-maid-juice-apple-400-ml-bottle/', 'productname': 'Juice - Apple', 'current_price': 'Rs. 23.75'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://bigbasket.com/ps/?q=apple&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 85.50', 'imageurl': 'http://bigbasket.com/media/uploads/p/s/40020508_1-fresho-freshly-baked-apple-pie.jpg', 'product_link': 'http://bigbasket.com/pd/40020508/fresho-freshly-baked-apple-pie-100-gm-pouch/', 'productname': 'Freshly Baked - Apple Pie', 'current_price': 'Rs. 85.50'}
2015-06-27 14:34:17 [scrapy] INFO: Closing spider (finished)
2015-06-27 14:34:17 [scrapy] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 222,
 'downloader/request_count': 1,
 'downloader/request_method_count/GET': 1,
 'downloader/response_bytes': 54881,
 'downloader/response_count': 1,
 'downloader/response_status_count/200': 1,
 'finish_reason': 'finished',
 'finish_time': datetime.datetime(2015, 6, 27, 9, 4, 17, 621449),
 'item_scraped_count': 20,
 'log_count/DEBUG': 22,
 'log_count/ERROR': 1,
 'log_count/INFO': 7,
 'response_received_count': 1,
 'scheduler/dequeued': 1,
 'scheduler/dequeued/memory': 1,
 'scheduler/enqueued': 1,
 'scheduler/enqueued/memory': 1,
 'start_time': datetime.datetime(2015, 6, 27, 9, 4, 15, 879467)}
2015-06-27 14:34:17 [scrapy] INFO: Spider closed (finished)
2015-06-27 14:34:17 [scrapy] DEBUG: Crawled (200) &lt;GET http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt; (referer: None)
hello, world
Current second: 17
Current microsecond: 734324
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 31,800', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/178153.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-4-16-GB-Unlocked-Mobile-Phone-(Black)-pc-19326-97.aspx', 'productname': 'Apple iPhone 4 16 GB Unlocked Mobile Phone (Black)', 'current_price': 'Rs. 26,999'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/180356.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-5c-32-GB-GSM-Mobile-Phone-(White)-pc-20258-97.aspx', 'productname': 'Apple iPhone 5c 32 GB GSM Mobile Phone (White)', 'current_price': 'Rs. 53,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 53,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/180360.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-5s-16-GB-GSM-Mobile-Phone-(Grey)-pc-20262-97.aspx', 'productname': 'Apple iPhone 5s 16 GB GSM Mobile Phone (Grey)', 'current_price': 'Rs. 44,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 53,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/180362.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-5s-16-GB-GSM-Mobile-Phone-(Gold)-pc-20263-97.aspx', 'productname': 'Apple iPhone 5s 16 GB GSM Mobile Phone (Gold)', 'current_price': 'Rs. 44,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 53,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/180376.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-5s-16-GB-GSM-Mobile-Phone-(Silver)-pc-20277-97.aspx', 'productname': 'Apple iPhone 5s 16 GB GSM Mobile Phone (Silver)', 'current_price': 'Rs. 44,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 31,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/180443.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-4S-8-GB-GSM-Mobile-Phone-(Black)-pc-20318-97.aspx', 'productname': 'Apple iPhone 4S 8 GB GSM Mobile Phone (Black)', 'current_price': 'Rs. 16,990'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 31,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/180444.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-4S-8-GB-GSM-Mobile-Phone-(White)-pc-20319-97.aspx', 'productname': 'Apple iPhone 4S 8 GB GSM Mobile Phone (White)', 'current_price': 'Rs. 16,990'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 53,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/185039.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-5S-16-GB-GSM-Mobile-Phone-(Gold)-pc-23555-97.aspx', 'productname': 'Apple iPhone 5S 16 GB GSM Mobile Phone (Gold)', 'current_price': 'Rs. 49,999'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 53,500', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/185802.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-16-GB-GSM-Mobile-Phone-(Silver)-pc-23996-97.aspx', 'productname': 'Apple iPhone 6 16 GB GSM Mobile Phone (Silver)', 'current_price': 'Rs. 52,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/185805.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-64-GB-GSM-Mobile-Phone-(Silver)-pc-23999-97.aspx', 'productname': 'Apple iPhone 6 64 GB GSM Mobile Phone (Silver)', 'current_price': 'Rs. 62,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/185808.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-128-GB-GSM-(Silver)-pc-24002-97.aspx', 'productname': 'Apple iPhone 6 128 GB GSM (Silver)', 'current_price': 'Rs. 71,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/185880.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-Plus-16-GB-GSM-(Space-Grey)-pc-24004-97.aspx', 'productname': 'Apple iPhone 6 Plus 16 GB GSM (Space Grey)', 'current_price': 'Rs. 62,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/185881.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-Plus-16-GB-GSM-(Silver)-pc-24005-97.aspx', 'productname': 'Apple iPhone 6 Plus 16 GB GSM (Silver)', 'current_price': 'Rs. 62,500'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': 'Rs. 56,000', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/189360.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-16-GB-(Gold)-pc-26002-97.aspx', 'productname': 'Apple iPhone 6 16 GB (Gold)', 'current_price': 'Rs. 53,499'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/189363.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-64-GB-(Gold)-pc-26005-97.aspx', 'productname': 'Apple iPhone 6 64 GB (Gold)', 'current_price': 'Rs. 65,000'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/189364.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-64-GB-(Grey)-pc-26006-97.aspx', 'productname': 'Apple iPhone 6 64 GB (Grey)', 'current_price': 'Rs. 65,000'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/189365.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-64-GB-(Silver)-pc-26007-97.aspx', 'productname': 'Apple iPhone 6 64 GB (Silver)', 'current_price': 'Rs. 65,000'}
2015-06-27 14:34:17 [scrapy] DEBUG: Scraped from &lt;200 http://www.cromaretail.com/productsearch.aspx?txtSearch=apple&amp;x=0&amp;y=0&gt;
{'outofstock_status': 'In Stock', 'offer': 'No additional offer available', 'mrp': '', 'imageurl': 'http://www.cromaretail.com/Images/Catalogue/Product/medium/189366.jpg', 'product_link': 'http://www.cromaretail.comApple-iPhone-6-128-GB-(Gold)-pc-26008-97.aspx', 'productname': 'Apple iPhone 6 128 GB (Gold)', 'current_price': 'Rs. 74,000'}
2015-06-27 14:34:17 [scrapy] INFO: Closing spider (finished)
2015-06-27 14:34:17 [scrapy] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 259,
 'downloader/request_count': 1,
 'downloader/request_method_count/GET': 1,
 'downloader/response_bytes': 16851,
 'downloader/response_count': 1,
 'downloader/response_status_count/200': 1,
 'finish_reason': 'finished',
 'finish_time': datetime.datetime(2015, 6, 27, 9, 4, 17, 764861),
 'item_scraped_count': 18,
 'log_count/DEBUG': 20,
 'log_count/ERROR': 1,
 'log_count/INFO': 7,
 'response_received_count': 1,
 'scheduler/dequeued': 1,
 'scheduler/dequeued/memory': 1,
 'scheduler/enqueued': 1,
 'scheduler/enqueued/memory': 1,
 'start_time': datetime.datetime(2015, 6, 27, 9, 4, 15, 930386)}
2015-06-27 14:34:17 [scrapy] INFO: Spider closed (finished)
&lt;Deferred at 0x7f02a29b7c68 current result: None&gt;
</code></pre>

<p>If you see my output correctly, initially some error comes and the program pauses just a bit before </p>

<pre><code>2015-06-27 14:34:17 [scrapy] DEBUG: Crawled (200) &lt;GET http://bigbasket.com/ps/?q=apple&gt; (referer: None) 
</code></pre>

<p>- this line in my output, and then runs, but also produces an output.</p>

<p>I am not able to figure out the following 2 things:</p>

<ul>
<li> Why is that error coming? Why does the program pause over there (is it because that scrapy is crawling the pages, and so it is normal, or is it some problem?)? What changes I must do in my code in order to resolve it? </li>

<li> If you see I am printing the current second, and current microsecond, to check when both of my function's get entered and start getting processed. I have done this, basically to check whether both of my functions are actually getting multiprocessed or not. I know that, even after using the Multiprocessing, there is a time lag of a few microseconds, and that is very well acceptable from my end. But, I ran this script several times, and sometimes I noticed a time lag of only a few microseconds (which I could well accept, but this case generally came when the sites returned only a few search results, so I don't know whether they actually got multiprocessed or not, because normally my functions independently execute in around 1.3 seconds and produce around 20 results.), and sometimes I notice a time lag of around 1 or 2 seconds also (that definitely says, that my functions haven't got multiprocessed, at least after reading about the time - around 1.3 seconds in which my functions execute independently - had they been on different python scripts). So, why is this time variation occurring? How do I check as to are my functions actually getting multiprocessed? </li>
</ul>

<p>Please provide corrections in my code, and explanations to my 2 issues. </p>

<p>Please do help! Any answers, shall be well appreciated!</p>

<p>Thanks!</p>
","<python><web-scraping><scrapy><python-multiprocessing><scrapy-spider>"
"31087331","1","","<p>Let's say that I have a code like:</p>

<pre><code>{% for x in posts %}
   &lt;p&gt;We are in item: {{ x }}&lt;/&gt;
{% else %}
</code></pre>

<p>And I want to get the current index of the for loop to run an if loop, something like(logically):</p>

<pre><code>{% for x in posts %}
 {% if x.index = 0 %}
   &lt;p&gt;We are in the first item!&lt;/p&gt;
 {% else %}
   &lt;p&gt;We are in item: {{ x }}&lt;/&gt;
 {% endif %}
{% endfor %}
</code></pre>

<p>How to do it inside jijna2? (I use Python with Flask).</p>
","<python><jinja2>"
"31087336","1","","<p>I am creating an application in django and I have the next question:</p>

<p>I have two models which are related as I show here:</p>

<pre><code>class modelA(models.Model):
    ident = models.AutoField(primary_key=True)
    id_in_modelB = models.CharField(max_length=128, blank=True)

class modelB(models.Model):
    attr1 = models.ForeignKey(modelA)
    ...
</code></pre>

<p>In the application, first I select the object of modelB I want to work with, and then, I show a form to select which object of modelA inside the selected modelB I want to select.</p>

<p>I created a form of modelB, and a drop-down list of objects of modelA appeared, but it has all the values of modelA inside the drop-down. And I want only to appear the objects that are related with the previously chosen modelA.</p>

<p>Is it possible?</p>

<p>Thank you!</p>
","<python><django><forms><filter><model>"
"31087385","2","31087336","<p>It is not clear what exactly you mean with ""previously chosen modelA"", but you can provide a queryset for the form field. Assuming that <code>formB</code> is the modelform for <code>modelb</code>:</p>

<pre><code>formB.fields['attr1'].queryset = modelA.objects.filter(...)
</code></pre>

<p>If it is not a modelform but a standard form:</p>

<pre><code>formB.attr1.queryset = modelA.objects.filter(...)
</code></pre>
",""
"31087387","2","31087331","<p>You can use <code>loop.index</code> inside the loop.</p>

<pre><code>{% for x in posts %}
    &lt;p&gt;We are in item number: {{ loop.index }}&lt;/&gt;
{% else %}
</code></pre>

<p><a href=""http://jinja.pocoo.org/docs/dev/templates/"" rel=""nofollow"">Flask Template docs</a></p>
",""
"31087399","2","31087331","<p>You can use several loop related variables for that</p>

<p><a href=""http://jinja.pocoo.org/docs/dev/templates/#list-of-control-structures"" rel=""nofollow"">http://jinja.pocoo.org/docs/dev/templates/#list-of-control-structures</a></p>
",""
"31087453","2","31086693","<p>As per the answer here on: <a href=""https://stackoverflow.com/questions/22621232"">stackoverflow</a>
Looks like you cannot upload files on YouTube using the typical sendkeys method.</p>

<p>as @Arran said there in the comment section -</p>

<ul>
<li><blockquote>
  <p>Selenium cannot handle file upload dialogs. YouTube uses HTML5 input
  fields, and Selenium doesn't handle HTML5 elements even in the
  slightest. As I said, Selenium cannot support this. Selenium won't
  work here</p>
</blockquote></li>
<li><blockquote>
  <p>You shall use the API provided by <a href=""https://developers.google.com/youtube/v3/code_samples/java#upload_a_video"" rel=""nofollow noreferrer"">youtube</a></p>
</blockquote></li>
</ul>
",""
"31087505","1","","<pre><code>$ virtualenv --version
13.0.3
</code></pre>

<p>I create a new virtualenv with Python3 without access to global site packages. </p>

<pre><code>$ virtualenv --no-site-packages venv_pygments --python=/usr/local/bin/python3
Running virtualenv with interpreter /usr/local/bin/python3
Using base prefix '/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4'
New python executable in venv_pygments/bin/python3.4
Also creating executable in venv_pygments/bin/python
Installing setuptools, pip, wheel...done.
</code></pre>

<p>Then I use the virtualenv's Python3 interpreter and try to import <code>pygments</code></p>

<pre><code>$ cd venv_pygments 
$ venv_pygments  bin/python3
Python 3.4.3 (default, May  1 2015, 19:14:18) 
[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.49)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import pygments
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Applications/QGIS.app/Contents/Resources/python/pygments/__init__.py"", line 46
    except TypeError, err:
                    ^
SyntaxError: invalid syntax
</code></pre>

<p><code>pip freeze</code> though only shows these packages</p>

<pre><code>$ bin/pip freeze
wheel==0.24.0
</code></pre>

<p>So it seems like the virtualenv's Python3 is accessing global site packages. How can I avoid that?</p>

<p>It doesn't change when I install pygments for the virtualenv</p>

<pre><code>$ bin/pip install pygments
Collecting pygments
  Using cached Pygments-2.0.2-py3-none-any.whl
Installing collected packages: pygments
Successfully installed pygments-2.0.2
$ venv_pygments  bin/python3
Python 3.4.3 (default, May  1 2015, 19:14:18) 
[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.49)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import pygments
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
  File ""/Applications/QGIS.app/Contents/Resources/python/pygments/__init__.py"", line 46
    except TypeError, err:
                    ^
SyntaxError: invalid syntax
&gt;&gt;&gt; 
</code></pre>

<hr>

<p>Note: The original question was updated based on the comments.</p>
","<python><virtualenv><qgis><pygments>"
"31087611","1","","<p>I wrote this in python to calculate the number of primes under a given value. It prints ""0"" when I execute the code. Could anyone tell me why my code is going wrong? </p>

<pre><code>def is_prime(x):
    if x&lt;2:
        return False
    else:    
        for value in range(2, x):
            if x%value == 0:
                return False
        else: 
            return True

def primes_in(x):
    primes = [ ]
    for value in range(2, x+1):
        if is_prime(value):
            primes.append(1)
        elif not is_prime(value):
            primes.append(0)
        else: 
            primes.append(0)
    return sum(primes)

print primes_in(25)
</code></pre>
","<python><for-loop><iterator>"
"31087613","1","","<p>In extension to my previous <a href=""https://stackoverflow.com/questions/31086883/heat-maps-seaborn-annot-error/31086912#31086912"">question</a></p>

<p>I can plot the Heat map with Seaborn very well and with suggestion can get annotation. But I see a new problem now. </p>

<p>Input File </p>

<pre><code>Nos,Place,Way,Name,00:00:00,12:00:00
123,London,Air,Apollo,342,972
123,London,Rail,Beta,2352,342
123,Paris,Bus,Beta,545,353
345,Paris,Bus,Rava,652,974
345,Rome,Bus,Rava,2325,56
345,London,Air,Rava,2532,9853
567,Paris,Air,Apollo,545,544
567,Rome,Rail,Apollo,5454,5
876,Japan,Rail,Apollo,644,54
876,Japan,Bus,Beta,45,57
876,Japan,Bus,Beta,40,57
876,Japan,Bus,Beta,40,57
</code></pre>

<p>Program:</p>

<pre><code>import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
sns.set()

df = pd.read_csv('heat_map_data.csv')

df3 = df.copy()
for c in ['Place','Name']:
    df3[c] = df3[c].astype('category')

sns.heatmap(df3.pivot_table(index='Place', columns='Name', values='00:00:00' ),annot=True, fmt='.1f' )

plt.show() 
</code></pre>

<ol>
<li>If I take <code>fmt='d'</code> then I get error of float value and changed to <code>fmt='f'</code> And I get the count of the desired column. </li>
</ol>

<p>But When the same axis value repeats it does not add the count from desired column. Any solution for that pls ?</p>

<p>As it is seen in the input file </p>

<pre><code>876,Japan,Bus,Beta,45,57
876,Japan,Bus,Beta,40,57
876,Japan,Bus,Beta,40,57
</code></pre>

<p>It has 3 rows in repeat and the value of them should be shown as sum 
the cell which represents <code>Japan</code> and <code>Beta</code> should annot value as <code>125</code> instead it shows <code>41.7</code>. How do I achieve that? Also is it possible to give two values as annotation ?</p>

<p><img src=""https://i.stack.imgur.com/Xt1Zh.png"" alt=""enter image description here""></p>

<ol start=""2"">
<li>Second  doubt is now that in <code>pivot</code> I am giving <code>value='00:00:00'</code> but I need it to dynamically read the last column from the file. </li>
</ol>
","<python><pandas><annotations><seaborn>"
"31087629","1","","<p>The code below works as intended if I do <code>re.search(""(\d+)x""</code>. </p>

<p>However if I add an alternative search <code>re.search(""(\d+)x|x(\d+)""</code> I get:</p>

<pre><code>TypeError: cannot concatenate 'str' and 'NoneType' objects
</code></pre>

<p>Code:</p>

<pre><code>fundleverage = None
regex_fundleverage = None
regex_fundleverage = re.search(r""(\d+)x|x(\d+)"", instrument_name, flags=re.IGNORECASE)
if funddirection == ""Long"" and not regex_fundleverage == None:
    fundleverage = ""+"" + regex_fundleverage.group(1) + ""00""
if funddirection == ""Short"" and not regex_fundleverage == None:
    fundleverage = ""-"" + regex_fundleverage.group(1) + ""00""
print ""Fundleverage: %s"" % fundleverage
</code></pre>

<p>The error is of course due to that I try to concatenate str <code>""+""</code> and <code>""00""</code> with <code>None</code>.</p>

<p>My question is why selecting <code>group(1)</code>works when there is only one lookup in <code>re.search()</code>, but does not work if there are two alternative lookups.</p>

<p>The string it's searching does not contain both alternatives <code>""(\d+)x""</code> and <code>""x(\d+)""</code>, only one is possible.</p>

<p>Example str:</p>

<pre><code>""Boost LevDAX 3x Daily ETP""
""ComStage LevDAX x2 UCITS ETF""
</code></pre>
","<python><regex>"
"31087642","2","31087611","<p>See <a href=""https://docs.python.org/2/library/functions.html#range"" rel=""nofollow"">range function</a>.<br>
<code>range(start, stop[, step])</code></p>

<pre><code> for value in range(2, x+1):
            if x%value == 0:
                return False
</code></pre>

<p>This means value goes from <code>2</code> to <code>x</code> <strong>included</strong>. Which means that there will necessarily be <code>x%value == 0</code>. So your function <strong>always</strong> return False and then primes is a list of <code>0</code>.</p>

<p>You should use <code>for value in range(2, x)</code>.</p>
",""
"31087647","2","31087611","<p>The issue is in your is_prime function , you are looping from 2 to <code>x</code> inclusive of both  , so x%x is always  0 ,and hence it will always return False.</p>

<p>You just need to loop till the sqrt of the number.</p>

<p>Example code -</p>

<pre><code>def is_prime(x):
    if x&lt;2:
        return False
    else:    
        for value in range(2, int(x**(1/2))+1):
            if x%value == 0:
                return False
        else: 
            return True
</code></pre>

<p>Also, in the other function you should start</p>
",""
"31087652","1","","<p>The context is the following one, I have two text file that I need to edit.
I open the first text file read it line by line and edit it but sometimes when I encounter a specific line in the first text file I need to overwritte content of the the second file.</p>

<p>However, each time I re-open the second text file instead of overwritting its content the below code appends it to the file...</p>

<p>Thanks in advance.</p>

<pre><code>def edit_custom_class(custom_class_path, my_message):
    with open(custom_class_path, ""r+"") as file: 
        file.seek(0)
        for line in file:
            if(some_condition):
                file.write(mu_message)

def process_file(file_path):
     with open(file_path, ""r+"") as file:    
        for line in file:
            if(some_condition):
                edit_custom_class(custom_class_path, my_message)
</code></pre>
","<python><file>"
"31087674","2","31087629","<p>I did use <code>re.findall</code></p>

<pre><code>x = re.findall(r'(?&lt;=x)\d+|\d+(?=x)', s)
</code></pre>

<p>Then get the first element by specifying the first index like <code>x[0]</code> . You won't get <code>None</code> value.</p>

<p><strong>or</strong></p>

<p>You may also use <code>re.search</code> function without capturing groups.</p>

<pre><code>re.search(r'(?&lt;=x)\d+|\d+(?=x)', s).group()
</code></pre>

<p>I think you want tjis,</p>

<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = ""Boost LevDAX 3x Daily ETP""
&gt;&gt;&gt; re.sub(r'\d+(?=x)|(?&lt;=x)\d+', r'+\g&lt;0&gt;00', s)
'Boost LevDAX +300x Daily ETP'
</code></pre>

<p><strong>OR</strong></p>

<pre><code>&gt;&gt;&gt; s = ""Boost LevDAX 3x Daily ETP""
&gt;&gt;&gt; re.sub(r'(\d+)x|x(\d+)', lambda m: '+'+m.group(1)+'00' if m.group(1) else '+' + m.group(2) + '00', s)
'Boost LevDAX +300 Daily ETP'
&gt;&gt;&gt; s = ""ComStage LevDAX x2 UCITS ETF""
&gt;&gt;&gt; re.sub(r'(\d+)x|x(\d+)', lambda m: '+'+m.group(1)+'00' if m.group(1) else '+' + m.group(2) + '00', s)
'ComStage LevDAX +200 UCITS ETF'
</code></pre>

<p>According to your comment, there is only one <code>nox</code> or <code>xno</code> present in your input strings. If yes, then you may try this,</p>

<pre><code>&gt;&gt;&gt; s = ""ComStage LevDAX x2 UCITS ETF""
&gt;&gt;&gt; fundleverage = re.sub(r'.*(?:(\d+)x|x(\d+)).*', lambda m: '+'+m.group(1)+'00' if m.group(1) else '+' + m.group(2) + '00', s)
&gt;&gt;&gt; print fundleverage
</code></pre>
",""
"31087741","2","31087505","<p>Create isolated environment without access to global site-packages. Either enable/disable that behaviour intentionally. Recent versions disable access by default.</p>

<p>I assume you want an isolated environment to test Python 3.3.4.
Below I am using virtualenv provided by system python 2.7.6</p>

<pre><code>$ virtualenv --version
1.11.2

$ virtualenv
You must provide a DEST_DIR
Usage: virtualenv [OPTIONS] DEST_DIR

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Increase verbosity.
  -q, --quiet           Decrease verbosity.
  -p PYTHON_EXE, --python=PYTHON_EXE
                        The Python interpreter to use, e.g.,
                        --python=python2.5 will use the python2.5 interpreter
                        to create the new environment.  The default is the
                        interpreter that virtualenv was installed with
                        (/usr/bin/python)
  --clear               Clear out the non-root install and start from scratch.
  --no-site-packages    DEPRECATED. Retained only for backward compatibility.
                        Not having access to global site-packages is now the
                        default behavior.
  --system-site-packages
                        Give the virtual environment access to the global
                        site-packages.
  --always-copy         Always copy files rather than symlinking.
  --unzip-setuptools    Unzip Setuptools when installing it.
  --relocatable         Make an EXISTING virtualenv environment relocatable.
                        This fixes up scripts and makes all .pth files
                        relative.
  --no-setuptools       Do not install setuptools (or pip) in the new
                        virtualenv.
  --no-pip              Do not install pip in the new virtualenv.
  --extra-search-dir=DIR
                        Directory to look for setuptools/pip distributions in.
                        This option can be used multiple times.
  --never-download      DEPRECATED. Retained only for backward compatibility.
                        This option has no effect. Virtualenv never downloads
                        pip or setuptools.
  --prompt=PROMPT       Provides an alternative prompt prefix for this
                        environment.
  --setuptools          DEPRECATED. Retained only for backward compatibility.
                        This option has no effect.
  --distribute          DEPRECATED. Retained only for backward compatibility.
                        This option has no effect.
</code></pre>

<p>I create a virtualenv, change into the directory and use relative paths to address python interpreter and pip from inside this virtualenv.</p>

<pre><code>$ virtualenv --no-site-packages venv_pygments
New python executable in venv_pygments/bin/python
Installing setuptools, pip...done.
$ cd venv_pygments/
$ bin/pip install pygments
Downloading/unpacking pygments
  Downloading Pygments-2.0.2-py2-none-any.whl (672kB): 672kB downloaded
Installing collected packages: pygments
Successfully installed pygments
Cleaning up...
$ bin/python
Python 2.7.6 (default, Jun 22 2015, 17:58:13) 
[GCC 4.8.2] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import pygments
&gt;&gt;&gt; pygments.__version__
'2.0.2'
</code></pre>

<p>While creating your virtualenv you need to keep using the option </p>

<blockquote>
  <p>--python=/usr/local/bin/python3</p>
</blockquote>

<p>to refer to your Python 3.3.4 interpreter as you already do.</p>

<p>A recent default virtualenv usually has only a few packages installed. If yours has more you may have access to global site-packages.</p>

<pre><code>$ bin/pip freeze
Pygments==2.0.2
argparse==1.2.1
wsgiref==0.1.2
</code></pre>
",""
"31087748","2","31087611","<pre><code>def is_prime(x):
    if x&lt;2:
        return False
    else:
        if x == 2:
            return True
        for value in range(2, int(x**(0.5)) + 1):
            if x%value == 0:
                return False
        return True
def primes_in(x):
    primes = []
    for value in range(2, x+1):
        if is_prime(value) == True:
            primes.append(1)
        elif is_prime(value) == False:
            primes.append(0)
        else:
            primes.append(0)
    return sum(primes)
print primes_in(25)
</code></pre>
",""
"31087760","2","31087629","<p>if you were to pass just the first string your program would work ok. but when you pass the second string, the second group is matched. group(1) is None, while group(2) is 2. </p>

<p>I would rewrite your code to separate the two subexpression and use an <code>if</code> statement to decide which one matches.</p>
",""
"31087785","1","","<p>Trying to get values from a JSON file, up to 5 levels deep in python. Currently getting this error;</p>

<pre><code>Traceback (most recent call last):
File ""traffic.py"", line 9, in &lt;module&gt;
print data['features'][0]['properties']['location']['road']
KeyError: 'location'
</code></pre>

<p>Here is my code so far;</p>

<pre><code>import urllib, simplejson
url = ""http://131940.qld.gov.au/api/json/v1/events/?state=qld""
response = urllib.urlopen(url);
data = simplejson.loads(response.read())

for data['features'][0]['properties'] in data['features']:
    print data['features'][0]['properties']['location']['road']
</code></pre>

<p>Snippet of the JSON file;</p>

<pre><code>{
  ""type"": ""FeatureCollection"",
  ""published"": ""27/06/2015 19:15"",
  ""rights"": {
    ""owner"": ""Department of Transport and Main Roads"",
    ""disclaimer"": ""The State of Queensland makes no statements, representations or warranties about the accuracy, currency, reliability or completeness of the information contained in this feed."",
    ""copyright"": ""Copyright in material within this feed is owned by the State of Queensland or other entities which provide material for the website by arrangement. Please consult the 131940 website for further information.""
  },
  ""features"": [
    {
      ""type"": ""Feature"",
      ""id"": 55141891,
      ""source"": {
        ""externalid"": null,
        ""id"": 2,
        ""name"": ""Department of Transport and Main Roads""
      },
      ""geometry"": {
        ""type"": ""Point"",
        ""coordinates"": [
          152.356430053711,
          -27.5912036895752
        ],
        ""classifier"": null
      },
      ""properties"": {
        ""location"": {
          ""road"": ""VICTORIA STREET"",
          ""suburb"": ""FOREST HILL"",
          ""localGovernment"": null,
          ""postcode"": ""4342"",
          ""region"": {
            ""id"": 104,
            ""name"": ""Darling Downs""
          },
          ""state"": ""QLD"",
          ""direction"": ""Both Directions"",
          ""additional"": ""Gallipoli Rememberence March.\r\nVictoria Street Forest Hill, between Church Street and William Steet""
        },
        ""event"": {
          ""isHighImpact"": false,
          ""description"": ""Special Event Both Directions\r\nGallipoli Rememberence March.\r\nVictoria Street Forest Hill, between Church Street and William Steet.\r\nCommencing: 22 August 2015, between the hours of 10:30am and 11:15am\r\nConcluding: 22 August 2015.\r\nRoad closed both directions\r\nNo delays expected. Use alternative route. \r\n\r\n\r\nLast edited: 08 May 2015 09:35"",
          ""type"": ""Planned"",
          ""cause"": ""Special Event"",
          ""incidentType"": """",
          ""incidentDetails"": ""N/A"",
          ""delay"": ""No delays expected"",
          ""advice"": ""Use alternative route"",
          ""limit"": null,
          ""extraDetails"": ""\r\n"",
          ""impact"": null
        },
        ""temporal"": {
          ""start"": ""22/08/2015T10:30:00"",
          ""modified"": ""08/05/2015T09:35:14"",
          ""end"": null,
          ""review"": null,
          ""lastReviewed"": null,
          ""nextUpdate"": null
        },
        ""metadata"": {
          ""status"": null,
          ""owner"": null,
          ""modifiedBy"": null,
          ""url"": ""http://131940.qld.gov.au/road-conditions.aspx?id=55141891"",
          ""contactEmail"": null
        }
      }
    },
</code></pre>

<p>I have tried multiple combinations of <code>print data['features'][0]['properties']['location']['road']</code> eg. trying different variations of indexes or tag names after ['properties'] with no success.</p>

<p>Any advice/code example on how to read that far into the JSON file, and an explanation of how the dictionary/list is structured would be greatly appreciated.</p>
","<python><json><simplejson>"
"31087842","1","","<p>I want to create new node and its properties by passing parameters to it using cypher queries:</p>

<pre><code>@app.route('/enter',methods=['post'])
def enter_products():
     results = graph.cypher.execute(""CREATE (a:Products{""name"",""age""})"") 
</code></pre>
","<python><neo4j><cypher><py2neo>"
"31087857","1","","<p>I'm loading directed weighted graph from csv file into graph-tool graph in python. The organization of the input csv file is:</p>

<p>1,2,300</p>

<p>2,4,432</p>

<p>3,89,1.24</p>

<p>...</p>

<p>Where the fist two entries of a line identify source and target of an edge and the third number is the weight of the edge.  </p>

<p>Currently I'm using: </p>

<pre><code>g = gt.Graph()
e_weight = g.new_edge_property(""float"")
csv_network = open (in_file_directory+ '/'+network_input, 'r')
csv_data_n = csv_network.readlines()
for line in csv_data_n:
    edge = line.replace('\r\n','')
    edge = edge.split(delimiter)
    e = g.add_edge(edge[0], edge[1])
    e_weight[e] = float(edge[2])
</code></pre>

<p>However it takes quite long to load the data (I have network of 10 millions of nodes and it takes about 45 min). 
I have tried to make it faster by using g.add_edge_list, but this works only for unweighted graphs. Any suggestion how to make it faster?</p>
","<python><csv><graph><graph-tool>"
"31087863","2","31087785","<p>You should change your <code>for</code> loop to:</p>

<pre><code>for info in data['features']:
    print info['properties']['location']['road']
</code></pre>

<p>Explanation:
<code>data['features']</code> returns a list of dictionaries where each one is as follows:</p>

<pre><code>{u'geometry': {u'type': u'Point', u'classifier': None, u'coordinates': [152.356430053711, -27.5912036895752]}, u'source': {u'externalid': None, u'id': 2, u'name': u'Department of Transport and Main Roads'}, u'type': u'Feature', u'id': 55141891, u'properties': {u'temporal': {u'end': None, u'nextUpdate': None, u'lastReviewed': None, u'modified': u'08/05/2015T09:35:14', u'start': u'22/08/2015T10:30:00', u'review': None}, u'metadata': {u'status': None, u'owner': None, u'contactEmail': None, u'modifiedBy': None, u'url': u'http://131940.qld.gov.au/road-conditions.aspx?id=55141891'}, u'location': {u'direction': u'Both Directions', u'additional': u'Gallipoli Rememberence March.\r\nVictoria Street Forest Hill, between Church Street and William Steet', u'region': {u'id': 104, u'name': u'Darling Downs'}, u'localGovernment': None, u'suburb': u'FOREST HILL', u'state': u'QLD', u'postcode': u'4342', u'road': u'VICTORIA STREET'}, u'event': {u'impact': None, u'description': u'Special Event Both Directions\r\nGallipoli Rememberence March.\r\nVictoria Street Forest Hill, between Church Street and William Steet.\r\nCommencing: 22 August 2015, between the hours of 10:30am and 11:15am\r\nConcluding: 22 August 2015.\r\nRoad closed both directions\r\nNo delays expected. Use alternative route. \r\n\r\n\r\nLast edited: 08 May 2015 09:35', u'type': u'Planned', u'advice': u'Use alternative route', u'delay': u'No delays expected', u'incidentDetails': u'N/A', u'limit': None, u'incidentType': u'', u'extraDetails': u'\r\n', u'cause': u'Special Event', u'isHighImpact': False}}}
</code></pre>

<p>so all we need to do now is get to <code>['properties']['location']['road']</code>.</p>
",""
"31087864","2","31086725","<p>You can do it like this:</p>

<pre><code>#!/usr/bin/env python

from __future__ import print_function
from sys import argv

try:
    compile(open(argv[1]).read(), argv[1], 'exec', 0, 1)
except SyntaxError as err:
    print('%s:%s:%s: %s' % (err.filename, err.lineno, err.offset, err.msg))
</code></pre>

<p>This works with both Python 2 and Python 3.</p>
",""
"31087881","2","31087652","<p>In my opinion, simultaneously reading and modifying a file is a bad thing to do. Consider using something like this. First read the file, make modifications, and then overwrite the file completely.</p>

<pre><code>def modify(path):
    out = []
    f = open(path)
    for line in f:
        if some_condition:
            out.append(edited_line) #make sure it has a \n at the end
        else:
            out.append(original_line)
    f.close()
    with open(path,'w') as f:
        for line in out:
            f.write(line)
</code></pre>
",""
"31087889","1","","<p>I have created an arithmetic quiz that asks a student a number of questions, then saves their name and score onto a csv file.</p>

<p>I want to create a piece of code that will ask an if statement for a csv file. Something like, if name is already in first column, place new score on a new column.</p>

<p>This is what I have done to write the name and score onto the csv file.</p>

<pre><code>if Class==(""a""):
    with open(""a.csv"",""a"") as my_file:
    my_file.write(""{}, {}/10\n"".format( name,correctanswers))
</code></pre>

<p>This writes the name and score onto the class file but I need an if statement before writing on the file.</p>

<p>Pseudo code:</p>

<pre><code>if name = column1 on a.csv:
    then write correctanswers to new column
else:
    write name and score on a.csv
</code></pre>

<p>So say I took the quiz again and my name was already on the csv, I need the code to take my new score and add it on to my existing record on the csv (save the new score on the next column).</p>
","<python><csv>"
"31087957","2","31087857","<p>I suggest you try the performance you get by using the csv library. This example returns <code>edge</code> holding a list of the 3 parameters.</p>

<pre><code>import csv

reader = csv.reader(open(in_file_directory+ '/'+network_input, 'r'), delimiter="","")

for edge in reader:
    if len(edge) == 3:
        edge_float = [float(param) for param in edge]
</code></pre>

<p>So you would get the following to work with...</p>

<pre><code>edge_float = [1.0, 2.0, 300.0]
</code></pre>
",""
"31087973","2","31087629","<p>Use regex to check if the string is in your desired form , and if it does then just extract the number you want by using <code>\d+</code> since your string can contain only one number as follows:</p>

<p>Notice that the advantage of doing this is it throws an error if the <code>leverage</code> is not in desired format like <code>x3x</code> in your string</p>

<pre><code>import re
fundleverage = None
regex_fundleverage = None
funddirection = ""Long""
instrument_name = ""ComStage LevDAX 3x UCITS ETF""
regex_fundleverage = re.search(r""(\b\d+x|x\d+\b)"", instrument_name, flags=re.IGNORECASE)
if  regex_fundleverage:
    regex_fundleverage = re.search(r""(\d+)"", regex_fundleverage.group(0), flags=re.IGNORECASE)
print(regex_fundleverage.group(0))
if funddirection == ""Long"" and not regex_fundleverage == None:
    fundleverage = ""+"" + regex_fundleverage.group(1) + ""00""
if funddirection == ""Short"" and not regex_fundleverage == None:
    fundleverage = ""-"" + regex_fundleverage.group(1) + ""00""
print ""Fundleverage: %s"" % fundleverage
</code></pre>
",""
"31088061","2","31087629","<p>I would do it this way:</p>

<pre><code>regex_fundleverage = re.findall('(?&lt;=x)\d+|\d+(?=x)',instrument_name, flags=re.IGNORECASE) 

if funddirection == ""Long"" and regex_fundleverage:
    fundleverage = ""+"" + regex_fundleverage[0] + ""00""

if funddirection == ""Short"" and regex_fundleverage:
    fundleverage = ""-"" + regex_fundleverage[0] + ""00""

print ""Fundleverage: %s"" % fundleverage
</code></pre>
",""
"31088080","1","","<p>I would like to use jupyter-hub start and interact with django ipython kernels. </p>

<p>Django extensions allows me to create an ipython kernel via the <code>manage.py shell_plus --kernel</code> command line, however this doesn't allow me to specify the connection file, which is required for jupyter-hub kernel specification.</p>

<p>For example I would like to Specify my own custom kernel type similarly to this:</p>

<pre><code>{
""display_name"": ""Django"",
""language"": ""python"",
""codemirror_mode"": {
    ""version"": 3,
    ""name"": ""ipython""
},
""argv"": [
    ""/home/me/.virtualenvs/django/bin/python"",
    ""/home/me/django/manage.py"",
    ""shell_plus"",
    ""--kernel"",
    ""-f"",
    ""{connection_file}""
    ]
}
</code></pre>

<p>However it doesn't look like the <code>--kernel</code> option allows me to pass additional kwags.</p>

<p>I've taken a quick look at the source for <code>django-extensions</code> and <code>ipython</code>, but can't see an easy fix. Anyone have any ideas.</p>

<p>I think it would be super useful to be able to connect to a django shell from Jupyter-hub, and it seems like the functionality is pretty close.</p>

<p>Thanks.</p>
","<python><django><ipython><jupyter><django-extensions>"
"31088105","2","31087889","<p>If you open a file in <code>""a""</code> (append) mode, then obviously you can't modify or update existing records in the file since all writes occur after the last position in the file.</p>

<p>You should read the entire CSV file into memory, update the record(s) there and then write back the entire file (preferably after you've done all the modifications).</p>

<p>Something like this could work:</p>

<pre><code>import csv
def readcsv(filename):
    with open(filename,""rb"") as csvfile: # assuming Python 2 
        return dict(csv.reader(csvfile))
</code></pre>

<p>Then you'd have a dictionary of all names and their scores which is easy to update (using <code>setdefault()</code>). The disadvantage is that you'll lose the order in which entries were stored in the CSV file. </p>

<p>Saving the dictionary as a CSV file is easy as well:</p>

<pre><code>def writecsv(mydict, filename):
    with open(filename,""wb"") as csvfile: # assuming Python 2 
        writer = csv.writer(csvfile)
        writer.writerows(mydict.iteritems())
</code></pre>
",""
"31088156","1","","<p>I have 2 tkinter programs. The main program will have button to open the second program. The problem is when i try to close the child program, the main program is closed instead. I close the second program with command <code>app.destroy()</code>.
How to fix this?<br>
Thanks in advance.</p>

<p>All of the programs have this script</p>

<pre><code>from Tkinter import *
import Tkinter as tk
import os

class SeaofBTCapp(tk.Tk):

    def __init__(self,*args,**kwargs):

        tk.Tk.__init__(self)
        container = tk.Frame(self, background=""black"")
        container.pack(side=""top"", fill=""both"", expand = True)

        container.grid_rowconfigure(0, weight=1)
        container.grid_columnconfigure(0, weight=1)



        self.frames = {}

        for F in (StartPage, PageCheck, PageUpdate, PageDigital, PageAnalog,
                  PageResult, PageHasil):

            frame = F(container, self)

            self.frames[F] = frame

            ##self.overrideredirect(1)

            self.geometry(""800x480"")
            self.title(""IC Checker"")
            frame.grid(row=0, column=0, sticky=""nsew"")

        self.show_frame(StartPage)

    def show_frame(self, cont):

        frame = self.frames[cont]
        frame.tkraise()

##frame class

app = SeaofBTCapp()
app.mainloop()
</code></pre>
","<python><tkinter>"
"31088263","1","","<p>An image will be useful to understand this problem:
<img src=""https://i.stack.imgur.com/5Jz2x.png"" alt=""enter image description here""></p>

<p>the .txt file on the left hand side are customers order history. A column in the text file represents the order id number (order_idno). On the right hand side we have the transaction data of a company. This operates on various sites and the period of time is divided over several weeks.</p>

<p>.txt files are stored in a folder. Each individual file is named i.e. ""By_Customer_Id_01120.txt""and it looks like:</p>

<p><img src=""https://i.stack.imgur.com/GX1K8.png"" alt=""enter image description here""></p>

<p>We are interested in the first column(order_idno). </p>

<p>Looking at the data from the excel file, once imported in a pandas DataFrame it looks like</p>

<pre><code>df = df[['sitename', 'order_idno', 'ts_placed']]

Out[7]: 
                              sitename  order_idno  ts_placed
0            www.mattressesworld.co.uk     5242367         47
1      www.bedroomfurnitureworld.co.uk     5242295         47
2      www.bedroomfurnitureworld.co.uk     5242295         47
3      www.bedroomfurnitureworld.co.uk     5242295         47
4      www.bedroomfurnitureworld.co.uk     5242295         47
.....
</code></pre>

<p>where 'ts_placed' is the week number.</p>

<p>What i want to do is to find for each costumer(represented by each .txt file) how many times they have order on each site and in what week.</p>

<p>Feel free to edit the question if this needs more details or the title is to generic.</p>
","<python>"
"31088283","1","","<p>I ran the following code </p>

<pre><code>global_var1 = 1
global_var2 = 2

def func():
    print(global_var1)
    print(global_var2)
    global_var2 = 3

func()
</code></pre>

<p>It threw error </p>

<pre><code>Traceback (most recent call last):
  File ""/home/harish/PycharmProjects/try/scope.py"", line 10, in &lt;module&gt;
    func()
  File ""/home/harish/PycharmProjects/try/scope.py"", line 7, in func
    print(global_var2)
UnboundLocalError: local variable 'global_var2' referenced before assignment
</code></pre>

<p>But the following code worked </p>

<pre><code>__author__ = 'harish'
global_var1 = 1
global_var2 = 2

def func():
    print(global_var1)
    print(global_var2)
func()
</code></pre>

<p>My expectation was when the funcion <code>func</code> was called. It would look for <code>global_var1</code> and it was not it local so it looked in global and print it.
then similarly it would look for <code>global_var1</code> and it was not it local so it looked in global and print it. then it would create a variable <code>global_var2</code> in localscope and assign 3 .</p>

<p>May be it was not done like above because then within the same functions scope the same variable <code>global_var2</code> had different meaning . till line 2 it was referring to global then there after local .. Is my guess correct ?</p>
","<python>"
"31088303","2","31088283","<p><code>global</code> declarations should be put <strong>inside</strong> the function:</p>

<pre><code>def func():
    global global_var2
    print(global_var1)
    print(global_var2)
    global_var2 = 3
</code></pre>

<p>They tell python that inside the function the name <code>global_var2</code> refers to the global scope instead of local. Putting a <code>global</code> declaration at the top level is <strong>useless</strong>.</p>

<p>Python doesn't allow for the same name to refer to two different scopes inside a single scope so the assignment <code>global_var2 = 3</code> <em>imposes</em> that the variable is local. Thus if you try to print it before it raises an error. But if you say to python that the name is actually the global name then python knows that he should take the value from that scope and assign to the global scope.</p>

<p>In particular:</p>

<pre><code>a = 1

def f():
    print(a)
    a = 2
</code></pre>

<p>Here the <code>a</code> in <code>print(a)</code> and the <code>a</code> in <code>a = 2</code> <strong>always</strong> refer to the same variable. In the above code the inside <code>f</code> is <em>local</em> because no declaration is provided and there is an assignment. So <code>print(a)</code> tries to access a local variable that doesn't have a value.</p>

<p>If you add <code>global</code>:</p>

<pre><code>a = 1
def f():
    global a
    print(a)
    a = 2
</code></pre>

<p>Now all the <code>a</code>s in <code>f</code> refer to the global <code>a</code>, so <code>print(a)</code> prints <code>1</code> because it's the value of the global variable and after executing <code>f</code> the value will become <code>2</code>.</p>
",""
"31088306","2","31088283","<p>Python looks for local variables in functions at compile time. There is only one scope per function. So <code>global_var2</code> is local, because it is defined as local variable in the last line of the function.</p>
",""
"31088328","1","","<p>Trying to parse this html with BeautifulSoup:</p>

<pre><code>&lt;div class=""container""&gt;
  &lt;strong&gt;Monday&lt;/strong&gt; Some info here...&lt;br /&gt; and then some &lt;br /&gt;
  &lt;strong&gt;Tuesday&lt;/strong&gt; Some info here...&lt;br /&gt;
  &lt;strong&gt;Wednesday&lt;/strong&gt; Some info here...&lt;br /&gt;
  ...
&lt;/div&gt;
</code></pre>

<p>I wanna be able to get the data for Tuesday only: <code>&lt;strong&gt;Tuesday&lt;/strong&gt; Some info here...&lt;br /&gt;</code>
But since there is no wrapper div, I am having difficulties to get this data only. Any suggestions? </p>
","<python><beautifulsoup><html-parsing>"
"31088332","2","31074853","<p>The simplest solution will be to move the form tag into your for loop</p>

<pre><code>  &lt;table&gt;
  {% for member in members %}
&lt;form method=""post"" action=""add_member_to_list""&gt;
    &lt;tr&gt;
      &lt;th&gt;{{ member.name }}&lt;/th&gt;
      &lt;td&gt;&lt;input type=""checkbox"" name=""in_out""&gt;&lt;/td&gt;
      &lt;td&gt;&lt;select name=""day""&gt;
            &lt;option&gt;Monday&lt;/option&gt;
            &lt;option&gt;Wednesday&lt;/option&gt;
          &lt;/select&gt;
      &lt;/td&gt;
      &lt;td&gt;&lt;button type=""submit"" name=""id"" value=""{{ member.id }}""&gt;Add&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;
&lt;/form&gt;
  {% endfor %}
  &lt;/table&gt;
</code></pre>
",""
"31088353","1","","<p>I recieve bytes of image from C# by socket as following:</p>

<pre><code>[u'69', u'20', u'80', u'1', u'69', u'20', u'80', u'7', u'255', u'217']
</code></pre>

<p>I want to save this array as a jpg, I used PIL, but I can't do it.</p>
","<python><pillow>"
"31088483","2","31088328","<p>How about this way :</p>

<pre><code>from bs4 import BeautifulSoup

html = """"""&lt;div class=""container""&gt;
  &lt;strong&gt;Monday&lt;/strong&gt; Some info here...&lt;br /&gt; and then some &lt;br /&gt;
  &lt;strong&gt;Tuesday&lt;/strong&gt; Some info here...&lt;br /&gt;
  &lt;strong&gt;Wednesday&lt;/strong&gt; Some info here...&lt;br /&gt;
  ...
&lt;/div&gt;""""""
soup = BeautifulSoup(html)
result = soup.find('strong', text='Tuesday').findNextSibling(text=True)
print(result.decode('utf-8'))
</code></pre>

<p><strong>output :</strong></p>

<pre><code> Some info here...
</code></pre>

<p><strong>update based on comment :</strong></p>

<p>Basically, you can continue getting next sibling text of <code>&lt;strong&gt;Tuesday&lt;/strong&gt;</code>, until next sibling element of the text is another <code>&lt;strong&gt;</code> element or <code>none</code>.</p>

<pre><code>from bs4 import BeautifulSoup

html = """"""&lt;div class=""container""&gt;
  &lt;strong&gt;Monday&lt;/strong&gt; Some info here...&lt;br /&gt; and then some &lt;br /&gt;
  &lt;strong&gt;Tuesday&lt;/strong&gt; Some info here...&lt;br /&gt; and then some &lt;br /&gt;
  &lt;strong&gt;Wednesday&lt;/strong&gt; Some info here...&lt;br /&gt;
  ...
&lt;/div&gt;""""""
soup = BeautifulSoup(html)
result = soup.find('strong', text='Tuesday').findNextSibling(text=True)
nextSibling = result.findNextSibling()
while nextSibling and nextSibling.name != 'strong':
    print(result.decode('utf-8'))
    result = nextSibling.findNextSibling(text=True)
    nextSibling = result.findNextSibling()
</code></pre>

<p><strong>output :</strong></p>

<pre><code> Some info here...
 and then some 
</code></pre>
",""
"31088557","2","31086725","<p>Thanks to the @lcd047, I solved my problem:</p>

<pre><code>import parser, sys


def check_serious_errors(fname):
    return parser.st2tuple(parser.suite(open(fname).read()))

if __name__ == '__main__':
    try:
        tree = check_serious_errors(sys.argv[1])
    except SyntaxError:
        print(""Gross errors was found. Exit"")
    else:
        print(""File is correct in general. Let's move further!"")
        # Further analysis
</code></pre>
",""
"31088800","2","31087613","<p>You can use the <a href=""http://pandas.pydata.org/pandas-docs/dev/generated/pandas.tools.pivot.pivot_table.html"" rel=""nofollow noreferrer"">aggfunc</a> keyword passing in a dict:</p>

<p><strong>aggfunc :</strong> </p>

<blockquote>
  <p>function, default numpy.mean, or list of functions
  If list of functions passed, the resulting pivot table will have hierarchical columns whose top level are the function names (inferred from the function objects themselves)</p>
</blockquote>

<pre><code>sns.heatmap(df3.pivot_table(index='Place', columns='Name', 
values='00:00:00',aggfunc={'00:00:00':np.sum}), annot=True, fmt='.1f')
</code></pre>

<p>Which outputs:</p>

<p><img src=""https://i.stack.imgur.com/V4H6L.png"" alt=""enter image description here""></p>
",""
"31089027","2","31087842","<p>You can just pass in a map as parameters, each entry in the parameter map is available as <code>{key}</code> parameter in the query:</p>

<pre><code>@app.route('/enter',methods=['post'])
def enter_products():
     params = {""data"": {""name"":""Gokul"",""age"":23}}
     results = graph.cypher.execute(""CREATE (a:Products {data})"",params) 
</code></pre>
",""
"31089055","2","31088353","<p>Start with:</p>

<pre><code>import Image, ImageDraw

im=Image.new(valuetype, (width,height), None)
draw=ImageDraw.Draw(im)
draw.point((x,y),value)
im.save(file, ""JPEG"")
</code></pre>

<p>If you can't figure it out, post what problem you are having.</p>
",""
"31089339","2","31088263","<p>This code is not tested, it is likely to include syntax errors. It's just for you to get an idea of how to get started. It's also not efficient because I don't know exactly what information you want to get. I'm iteration over the excel sheet multiple times, if you really want to get the information of all customers everytime, it would be more efficient to read all customers into memory before iterating over the excel sheet.</p>

<p>First some modules we will use.</p>

<pre><code>import re
</code></pre>

<p>You already managed to read the excel file so I will start with the loop that iterates over the customers. You can use the os.listdir function to do so.</p>

<pre><code>customer_folder = ""path/to/customer/folder""
for file in os.listdir(customer_folder):
</code></pre>

<p>Now we have a loop that iterates over the customer files. Let's print which customer we are looking at at the momemnt and check if the file name is of the expected format.</p>

<pre><code>    match = re.match(""By_Customer_Id_([0-9]+)\.txt"", file)
    if match:
        print(""Looking at customer id '{0}':"".format(match.group[1]))
</code></pre>

<p>Now we have to open the file, so we can make a list of all order id numbers of a customer.</p>

<pre><code>        with open(os.path.join(customer_folder, file) as customer:
            customer_idnos = [order.split("","")[0] for order in customer]
</code></pre>

<p>Let's iterate over the elements in the excel document so we can get information from them. We first create a dict where we save our informations later.</p>

<pre><code>            sites = {}
            for _, row in df.iterrows():
                if row[""order_idno""] in customer_idnos:
</code></pre>

<p>If the ordner id number we are looking at is in the order id numbers of the customer we are looking at we get our information.</p>

<pre><code>                    if not row[""sitename""] in sites:
                        sites[row[""sitename""]] = []
                    sites[row[""sitename""]].append(row[""ts_placed""])
</code></pre>

<p>Let's print our informations.</p>

<pre><code>            for site, weeks in sites:
                print(""    Site '{0}' visited {1} time(s):"".format(
                                 site,        len(weeks)))
                for week in weeks:
                    print(""        In week {0}"".format(week))
</code></pre>
",""
"31089415","2","31074172","<p>There are a couple of issues here.  First is that you have the wrong formulas: those are the formulas for the <em>negation</em> of the sum, or equivalently the third point of the curve that lies on the line through P and Q.  Compare with the formula you linked to on Wikipedia, and you'll see that what you have for <code>Z.y</code> is the negation of the value they have.</p>

<p>A second issue is that your formulas don't take the origin into account: if P is the inverse of Q in the group law, then P + Q will be the origin, which doesn't lie on the affine part of the curve and so can't be described as a pair of <code>(x, y)</code> coordinates.  So you'll need some way to specify the origin.</p>

<p>Let's write some code.  First we need a representation for the points on the curve.  We use the string <code>'Origin'</code> to represent the origin, and a simple named tuple for the points on the affine part of the elliptic curve.</p>

<pre><code># Create a simple Point class to represent the affine points.
from collections import namedtuple
Point = namedtuple(""Point"", ""x y"")

# The point at infinity (origin for the group law).
O = 'Origin'
</code></pre>

<p>For demonstration purposes, we choose a particular elliptic curve and prime.  The prime should be greater than <code>3</code> for the addition formulas to be valid.  We also write a function that we can use to check that a particular point is a valid representation of a point on the curve.  This will be useful in checking that we didn't make any mistakes in implementing the addition formulas.</p>

<pre><code># Choose a particular curve and prime.  We assume that p &gt; 3.
p = 15733
a = 1
b = 3

def valid(P):
    """"""
    Determine whether we have a valid representation of a point
    on our curve.  We assume that the x and y coordinates
    are always reduced modulo p, so that we can compare
    two points for equality with a simple ==.
    """"""
    if P == O:
        return True
    else:
        return (
            (P.y**2 - (P.x**3 + a*P.x + b)) % p == 0 and
            0 &lt;= P.x &lt; p and 0 &lt;= P.y &lt; p)
</code></pre>

<p>To do divisions modulo <code>p</code> you'll need some way to compute inverses modulo <code>p</code>.  A simple and reasonably efficient trick here is to use Python's three-argument variant of the <code>pow</code> function: by Fermat's Little Theorem, <code>pow(a, p-2, p)</code> will give an inverse of <code>a</code> modulo <code>p</code> (provided of course that that inverse exists - that is, that <code>a</code> is not divisible by <code>p</code>).</p>

<pre><code>def inv_mod_p(x):
    """"""
    Compute an inverse for x modulo p, assuming that x
    is not divisible by p.
    """"""
    if x % p == 0:
        raise ZeroDivisionError(""Impossible inverse"")
    return pow(x, p-2, p)
</code></pre>

<p>And finally, here are the two functions to compute negation and addition on the elliptic curve.  The addition function is based directly on the formulas you gave (after correcting the sign of <code>Z.y</code>), makes use of <code>inv_mod_p</code> to perform the divisions modulo <code>p</code>, and does a final reduction modulo <code>p</code> for the computed <code>x</code> and <code>y</code> coordinates.</p>

<pre><code>def ec_inv(P):
    """"""
    Inverse of the point P on the elliptic curve y^2 = x^3 + ax + b.
    """"""
    if P == O:
        return P
    return Point(P.x, (-P.y)%p)

def ec_add(P, Q):
    """"""
    Sum of the points P and Q on the elliptic curve y^2 = x^3 + ax + b.
    """"""
    if not (valid(P) and valid(Q)):
        raise ValueError(""Invalid inputs"")

    # Deal with the special cases where either P, Q, or P + Q is
    # the origin.
    if P == O:
        result = Q
    elif Q == O:
        result = P
    elif Q == ec_inv(P):
        result = O
    else:
        # Cases not involving the origin.
        if P == Q:
            dydx = (3 * P.x**2 + a) * inv_mod_p(2 * P.y)
        else:
            dydx = (Q.y - P.y) * inv_mod_p(Q.x - P.x)
        x = (dydx**2 - P.x - Q.x) % p
        y = (dydx * (P.x - x) - P.y) % p
        result = Point(x, y)

    # The above computations *should* have given us another point
    # on the curve.
    assert valid(result)
    return result
</code></pre>

<p>We can check the code above by creating a handful of points on the curve and checking that they obey the expected arithmetic laws.</p>

<pre><code>P = Point(6, 15)
Q = Point(8, 1267)
R = Point(2, 3103)
TwoP = ec_add(P, P)
ThreeP = ec_add(TwoP, P)
# Compute 4P two different ways.
assert ec_add(P, ThreeP) == ec_add(TwoP, TwoP)
# Check the associative law.
assert ec_add(P, ec_add(Q, R)) == ec_add(ec_add(P, Q), R)
</code></pre>
",""
"31090117","2","31087173","<p>Add to your PostModelAdmin <code>list_filter = ('forum',)</code></p>

<p><a href=""https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter"" rel=""nofollow"">https://docs.djangoproject.com/en/dev/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter</a></p>

<pre><code>&lt;a href=""{% url 'admin:yourappname_post_changelist' %}?forum__id__exact={{ forum.id }}""&gt;{{ forum.title }}&lt;/a&gt;
</code></pre>

<p><a href=""https://docs.djangoproject.com/en/dev/ref/contrib/admin/#reversing-admin-urls"" rel=""nofollow"">https://docs.djangoproject.com/en/dev/ref/contrib/admin/#reversing-admin-urls</a></p>
",""
"31091079","2","31088080","<p>For anyone interested, I fixed this by adding a <code>--connection_file</code> option to the shell_plus command in django-extension, which then forwards the filename to the kernel.
I can then define my django kernel for Jupyter-hub as the following.</p>

<pre><code>{
""display_name"": ""Django"",
""language"": ""python"",
""codemirror_mode"": {
    ""version"": 3,
    ""name"": ""ipython""
},
""argv"": [
    ""/home/me/.virtualenvs/django/bin/python"",
    ""/home/me/django/manage.py"",
    ""shell_plus"",
    ""--kernel"",
    ""--connection_file"",
    ""{connection_file}""
    ]
}
</code></pre>

<p>See my branch on <a href=""https://github.com/robitnik/django-extensions/commit/b8b53f0b74a21a2ecb160d97b05edd1d56cb83d6"" rel=""nofollow"">github</a> for the changes.</p>
",""
"31091991","2","31087857","<p>This has been answered in graph-tool's mailing list:</p>

<p><a href=""http://lists.skewed.de/pipermail/graph-tool/2015-June/002043.html"" rel=""nofollow"">http://lists.skewed.de/pipermail/graph-tool/2015-June/002043.html</a></p>

<p>In short, you should use the function g.add_edge_list(), as you said, and and put the weights separately
via the array interface for property maps:</p>

<pre><code>e_weight.a = weight_list
</code></pre>

<p>The weight list should have the same ordering as the edges you passed to
g.add_edge_list().</p>
",""
"31104744","2","31087268","<p>Scrapy is created with Twisted, and this framework already has its way of running multiple processes. There is nice <a href=""https://stackoverflow.com/questions/5715217/mix-python-twisted-with-multiprocessing"">question about this here</a>. In your approach you are actually trying to marry two incompatible and competing libraries (Scrapy/Twisted + multiprocessing). This is probably not best idea, you can run into lots of problems with that. </p>

<p>If you would like to run Scrapy spiders in multiple processes it will much easier to just use Twisted. You could just read Twisted docs for <a href=""https://twistedmatrix.com/documents/14.0.2/core/howto/process.html"" rel=""nofollow noreferrer""><code>spawnProcess</code> and other calls</a> and try to those tools for your goal. For example here's quick and dirty implementation that runs two spiders in two processes</p>

<pre><code>from twisted.internet import defer, protocol, reactor
import os


class SpiderRunnerProtocol(protocol.ProcessProtocol):
    def __init__(self, d, inputt=None):
        self.deferred = d
        self.inputt = inputt
        self.output = """"
        self.err = """"

    def connectionMade(self):
        if self.inputt:
            self.transport.write(self.inputt)
        self.transport.closeStdin()

    def outReceived(self, data):
        self.output += data

    def processEnded(self, reason):
        print(reason.value)
        print(self.err)
        self.deferred.callback(self.output)

    def errReceived(self, data):
        self.err += data


def run_spider(cmd, *args, **kwargs):
    d = defer.Deferred()
    pipe = SpiderRunnerProtocol(d)
    args = [cmd] + list(args)
    env = os.environ.copy()
    x = reactor.spawnProcess(pipe, cmd, args, env=env)
    print(x.pid)
    print(x)
    return d


def print_out(result):
    print(result)

d = run_spider(""scrapy"", ""crawl"", ""reddit"")
d = run_spider(""scrapy"", ""crawl"", ""dmoz"")
d.addCallback(print_out)
d.addCallback(lambda _: reactor.stop())
reactor.run()
</code></pre>

<p>There's a nice blog post <a href=""http://blog.ldlework.com/2015/05/01/writing-safe-twisted-code/"" rel=""nofollow noreferrer"">explaining usage of Twisted subprocesses here</a></p>
",""
"31106479","2","31073889","<p>You can do it in three steps</p>

<ol>
<li>Read your csv's in to a list of dataframes</li>
<li>Merge the dataframes together (equivalent to a SQL left join or an Excel VLOOKUP</li>
<li>Calculate your derived columns using a vectorized subtraction.</li>
</ol>

<p>Here's some code you could try:</p>

<pre><code>#read dataframes into a list
import glob
L = []
for fname in glob.glob(path_1+'*.csv'):
   L.append(df.read_csv(fname))

#read master dataframe, and merge in other dataframes
df_2 = pd.read_csv('master_1.csv')
for df in L:
   df_2 = pd.merge(df_2,df, on = 'Nos', how = 'left')

#for each column, caluculate the difference with the master column
df_2.apply(lambda x: x - df_2['00:00:00'])
</code></pre>
",""
"31110040","2","31075021","<p>Finally I found my way.
So at first I added </p>

<pre><code> select = self.treeview.get_selection()
 select.connect(""changed"", self.on_tree_selection_changed)
</code></pre>

<p>Then I added the new function. It gets the first column value of row and do correction, suggests names and update combobox.</p>

<pre><code>def on_tree_selection_changed(self, selection):
    model, treeiter = selection.get_selected()

    name = str(model[treeiter][0])
    liststore_suggestions = Gtk.ListStore(str)
    suggestions = correct(name)
    for item in suggestions:
        liststore_suggestions.append([item])
    self.renderer_combo.set_property(""model"",liststore_suggestions)
</code></pre>
",""
"31114392","1","","<p>I'm currently building a login for a webapp using Flask-Security (which includes Flask-WTForms, Flask-SQLalchemy and Flask-Login). I've been able to fairly painlessly set up the majority of my login flow, including forgotten password; however I want to make it so that the only way users can be registered is through a page only accessible to the admins. I've managed to configure Roles (Admin, User) and set up the following  view:</p>

<pre><code>@app.route('/adminregister')
@roles_accepted('admin')
def adminregister():
    return render_template('*')
</code></pre>

<p>This creates the portal that is successfully limited to accounts with an Admin role. I'm unsure how to proceed for here however, as Flask-security has no built in means to enable what I'm trying to do.</p>

<p>I've overridden RegisterForm already to enforce password rules through a regexp:</p>

<pre><code># fixed register form
class ExtendedRegisterForm(RegisterForm):
password = TextField('Password', [validators.Required(), validators.Regexp(r'(?=.*?[0-9])(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[$-/:-?{-~!""^_`\[\]])')])
</code></pre>

<p>Basically I want a form, located at /adminregister, that when visited by an admin allows for the entry of an email address, at which point first the user is created in the database with a random and secure password, and then a similar process to a forgotten password happens and a 1 time password code is created to reset the password. </p>

<p>Useful things I've looked at:</p>

<ol>
<li><p>Within flask-security/views.py there is the forgotten passsword code:</p>

<pre><code>def forgot_password():
""""""View function that handles a forgotten password request.""""""

form_class = _security.forgot_password_form

if request.json:
    form = form_class(MultiDict(request.json))
else:
    form = form_class()

if form.validate_on_submit():
    send_reset_password_instructions(form.user)
    if request.json is None:
        do_flash(*get_message('PASSWORD_RESET_REQUEST', email=form.user.email))

if request.json:
    return _render_json(form, include_user=False)

return _security.render_template(config_value('FORGOT_PASSWORD_TEMPLATE'),
                             forgot_password_form=form,
                             **_ctx('forgot_password'))
</code></pre></li>
<li><p>Within flask_security/registerable.py there is the code for register_user</p>

<pre><code>def register_user(**kwargs):
confirmation_link, token = None, None
kwargs['password'] = encrypt_password(kwargs['password'])
user = _datastore.create_user(**kwargs)
_datastore.commit()

if _security.confirmable:
    confirmation_link, token = generate_confirmation_link(user)
    do_flash(*get_message('CONFIRM_REGISTRATION', email=user.email))

user_registered.send(app._get_current_object(),
                     user=user, confirm_token=token)

if config_value('SEND_REGISTER_EMAIL'):
    send_mail(config_value('EMAIL_SUBJECT_REGISTER'), user.email, 'welcome',
              user=user, confirmation_link=confirmation_link)

return user
</code></pre></li>
</ol>

<p>I want to somehow combine these two, so that upon submission of a form with the sole field ""Email"" at '/adminregister' the email is added with a secure, random password in the database and the email address is sent an email with a link to change there password (and ideally a message explaining). I'm not even sure where I would add such code, as there is nothing to specifically override, especially as I can't find a way to override RegisterForm to have FEWER fields and the same functionality.</p>

<p>The structure of my code is in line with the flask-security documentation's <a href=""https://pythonhosted.org/Flask-Security/quickstart.html"" rel=""nofollow"">quickstart</a>.</p>

<p>Thank you in advance for any guidance you can offer.</p>
","<python><flask><flask-wtforms><flask-login><flask-security>"
"31114432","1","","<p>i'm a newbie to pandas library and trying to do some analysis on the Titanic survival data using pandas.
in the data set there are some cells in the Age column that doesn't have value so they appear in the data frame as 'NaN'.
so i'm trying to replace these cells with the average of the male-ages for males and the average of the female ages for females.
first i tried this</p>

<pre><code>df[ df.Sex == ""male""]['Age'].fillna( df[ df.Sex == ""male"" ]['Age'].mean())
</code></pre>

<p>well it works but doesn't change the values of the cells in the data frame when i print it later so i tried this</p>

<pre><code>df[ df.Sex == ""male""]['Age'].fillna( df[ df.Sex == ""male"" ]['Age'].mean(),inplace = True)
</code></pre>

<p>and got this error message </p>

<p><code>/anaconda3/lib/python3.4/site-packages/pandas/core/generic.py:2602: SettingWithCopyWarning: A value is trying to be set on a copy of a slice from a DataFrame See the the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy self._update_inplace(new_data)</code></p>

<p>so anyone knows how to do it efficiently ?</p>
","<python><numpy>"
"31114440","1","","<p>Suppose we have the following text file with column <code>a</code> and column <code>b</code>:</p>

<pre><code>D000001 T109
D000001 T195
D000002 T115
D000002 T131
D000003 T073
D000004 T170
</code></pre>

<p>I wonder how to produce the following structure:</p>

<pre><code>D000001 T109 T195
D000002 T115 T131
D000003 T073
D000004 T170
</code></pre>

<p>Pasted below is initial skeleton in Python.</p>

<pre><code>from __future__ import print_function

with open('descr2semtype_short.txt') as f:
    for line in f:
        line = line.rstrip()
        a, b = line.split()
        print(a + ' ' + b)
</code></pre>
","<python>"
"31114608","2","31114440","<p>Instead of printing them there, you can keep a dictionary of the lines , with the first element of the line as the key and the second element as value (as a list , so that if another element comes for same key you can append to it).</p>

<p>And then print them at the end.</p>

<p>Example -</p>

<pre><code>from __future__ import print_function

d = {}
with open('descr2semtype_short.txt') as f:
    for line in f:
        line = line.rstrip()
        a, b = line.split()
        if a not in d:
            d[a] = []
        d[a].append(b)

for k,v in d.iteritems():
    print(k + ' ' + ' '.join(v))
</code></pre>

<p>From Python 2.7 onwards, If the order of the lines is important, then instead of <code>Dictionary</code> , we can use <code>OrderedDict</code> .</p>

<p>Example -</p>

<pre><code>from __future__ import print_function
from collections import OrderedDict

d = OrderedDict()
with open('descr2semtype_short.txt') as f:
    for line in f:
        line = line.rstrip()
        a, b = line.split()
        if a not in d:
            d[a] = []
        d[a].append(b)

for k,v in d.items():
    print(k + ' ' + ' '.join(v))
</code></pre>
",""
"31114733","2","31114432","<p>what you are doing is right. you just have to reassign it to df:</p>

<pre><code>df['Age'] = df['Age'].replace(df[(df['Sex']=='male') &amp; (df['Age'].isnull())]['Age'], df['Age'].mean)
</code></pre>
",""
"31114749","2","31114440","<p>You can use <code>itertools.groupby</code>:</p>

<pre><code>import itertools, operator
with open('descr2semtype_short.txt') as f:
    for key, items in itertools.groupby(
        (line.rstrip().split(None,1) for line in f),
        operator.itemgetter(0)):
        print(key, ' '.join(item[1] for item in items))
</code></pre>

<p>which gives the desired output:</p>

<pre><code>D000001 T109 T195
D000002 T115 T131
D000003 T073
D000004 T170
</code></pre>
",""
"31114821","2","31114440","<p>I would do it with <a href=""https://docs.python.org/2/library/collections.html?highlight=ordereddict#collections.OrderedDict"" rel=""nofollow"">OrderedDic</a>t , this way:</p>

<pre><code>from collections import OrderedDict

d = OrderedDict()
with open('1.txt', 'r') as f:
    for line in f:
        a,b = line.strip().split()
        print a,b
        if a not in d:
            d[a] = [b]
        else:
            d[a].append(b)
print d
</code></pre>

<p>Output:</p>

<pre><code>OrderedDict([('D000001', ['T109', 'T109', 'T195']), ('D000002', ['T115', 'T115', 'T131']), ('D000003', ['T073', 'T073']), ('D000004', ['T170', 'T170', 'T175', 'T180'])])
</code></pre>
",""
"31115092","2","31114432","<p>You should save the returned value from <code>fillna</code> (without <code>inplace</code> parameter) in a temporary variable, then loop through the indexes in that and change each of that index in <code>df</code></p>

<pre><code>tempdf = df[ df.Sex == ""male""]['Age'].fillna( df[ df.Sex == ""male"" ]['Age'].mean())
for i in  tempdf.index:
    df['Age'][i] = tempdf[i]
</code></pre>
",""
"31115359","2","31114432","<p><code>fillna()</code> accepts a dictionary with column names and values to replace <code>NaN</code> with. <code>NaN</code> in each column will be replaced with the coresponding value. 
Notice that other columns and the original <code>df</code> dataframe will not be affected if you don't specify <code>inplace=True</code>.</p>

<pre><code>replacement_value = df[ df.Sex == ""male"" ]['Age'].mean()
new_df = df.fillna({'Age': replacement_value})
</code></pre>

<p>You can of course overwrite the existing dataframe:</p>

<pre><code>df = df.fillna({'Age': replacement_value})
# or just df.fillna({'Age': replacement_value}, inplace=True)
</code></pre>
",""
"31118758","2","31062555","<pre><code>users = (
db.session.query(User)
    .join(Service)
    .join(TimeSlot)
    .options(contains_eager(User.services), contains_eager(User.timeslots))
    .filter(Service.desc == 'Fun')
    .filter(TimeSlot.start == arrow.get('2015-06-15T19:00:00+00:00'))
    .all()
)
</code></pre>
",""
"31123991","2","31075336","<p>I found solution. It is because <code>mechanize.browser</code> is emulated browser, and it gets only raw html. The page i wanted to scrape adds class to tag with help of JavaScript, so those classes were not on raw html. Best option is to use webdriver. I used Selenium for Python. Here is code:</p>

<pre><code>from selenium import webdriver

profile = webdriver.FirefoxProfile()
profile.set_preference('network.http.phishy-userpass-length', 255)
driver = webdriver.Firefox(firefox_profile=profile)

driver.get(url)
list = driver.find_elements_by_xpath('//a[@class=""someClass""]')
</code></pre>

<p><em>Note: You need to have Firefox installed. Or you can choose another profile according to browser you want to use.</em> </p>

<hr>

<blockquote>
  <p>A request is what a web client sends to a server, with details about what URL the client wants, what http verb to use (get / post, etc), and if you are submitting a form the request typically contains the data you put in the form.
  A response is what a web server sends back in reply to a request from a client. The response has a status code which indicates if the request was successful (code 200 usually if there were no problems, or an error code like 404 or 500). The response usually contains data, like the html in a page, or the binary data in a jpeg. The response also has headers that give more information about what data is in the response (e.g. the ""Content-Type"" header which says what format the data is in).</p>
</blockquote>

<p>Quote from @davidbuxton's answer on this <strong><a href=""http://www.reddit.com/r/learnpython/comments/3baft8/why_beautifulsoup_and_lxml_dont_work/"" rel=""nofollow"">link</a></strong>.</p>

<p><strong>Good luck!</strong></p>
",""
"31132181","2","31075064","<p>I figured it out after some time and found out that the fault is between my keyboard and chair :-). The problem is not with the urls.py in my transactions app, but in the ""main"" app django creates for you where you import the urls.py from other apps. I have left there one url for transactions.views.entries and forgot it there, so it was complaining for this file and I haven't seen it.</p>

<p>For anyone having similar issues - check yout main urls.py too!</p>

<p>Thanks everyone for their answers and comments.</p>
",""
"31165003","2","31073829","<p>this should tell you the field names: </p>

<pre><code>for f in br.forms()
print f.name
</code></pre>

<p>fill in the blanks:</p>

<pre><code>form[""field1""] = [""input1""]
</code></pre>

<p>hope this is what you were asking for. cheers!</p>
",""
"31209581","2","31075591","<pre><code>from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import sys

class MainWindow(QMainWindow):

    def __init__(self,  parent=None):
        super(MainWindow,self).__init__(parent)

        self.initUI()

    def createGroup(self):
        groupBox = QGroupBox()

        self.treeWidget = QTreeWidget()

        header=QTreeWidgetItem([""Tree"",""First"",""secondo""])
        #...
        self.treeWidget.setHeaderItem(header)   #Another alternative is setHeaderLabels([""Tree"",""First"",...])

        root = QTreeWidgetItem(self.treeWidget, [""root""])
        A = QTreeWidgetItem(root, [""A""])
        barA = QTreeWidgetItem(A, [""bar"", ""i"", ""ii""])
        bazA = QTreeWidgetItem(A, [""baz"", ""a"", ""b""])

        barA.setFlags(barA.flags() | Qt.ItemIsEditable)
        bazA.setFlags(bazA.flags() | Qt.ItemIsEditable)

        # switch off ""default"" editing behaviour
        # as it does not allow to configure only an individual
        # column as editable
        self.treeWidget.setEditTriggers(self.treeWidget.NoEditTriggers)

        # to be able to decide on your own whether a particular item
        # can be edited, connect e.g. to itemDoubleClicked
        self.treeWidget.itemDoubleClicked.connect(self.checkEdit)


        vbox = QVBoxLayout()
        vbox.addWidget(self.treeWidget)

        vbox.addStretch(1)
        groupBox.setLayout(vbox)

        return groupBox

    # in your connected slot, you can implement any edit-or-not-logic
    # you want
    def checkEdit(self, item, column):
    # e.g. to allow editing only of column 1:
        if column == 1:
            self.treeWidget.editItem(item, column)

    def initUI(self):
        self.resize(300, 220)

        self.grid = QGridLayout()

        self.widget = QWidget()
        self.widget.setLayout(self.grid)
        self.setCentralWidget(self.widget)
        self.grid.addWidget(self.createGroup(),1,0,1,2)

        self.show()

if __name__ == '__main__':

    app = QApplication(sys.argv)
    app.setStyle(QStyleFactory.create(""Fusion""))
    form = MainWindow()
    form.show()
    sys.exit(app.exec_())
</code></pre>
",""
"31215346","2","31075487","<p>1) Have you installed PyGame correctly?</p>

<p>2) If so... explore around with the locals. See if there's a specific <code>pygame.video</code> initilization.</p>

<p>3) Or, try using another IDE, like IDLE</p>

<p>I hope I helped!</p>
",""
"31217647","1","","<p>I get this error: <strong>[WinError 2] The system cannot find the file specified</strong>, only when I use pytesser to do OCR. Here is my code snippet.</p>

<pre><code>from PIL import Image
from pytesseract import *
image = Image.open('pranav.jpg')
print (image_to_string(image))****
</code></pre>

<p>Otherwise, when I use PIL to change size of image, I do not get this error.</p>
","<python><pytesser>"
"31218425","2","31062876","<p>When you're doing asynchronous network operations (like you do with Twisted) it shouldn't really matter how ""fast"" they are.</p>

<p>The usual approach for performing blocking calls from Twisted is running them in a thread (<a href=""http://twistedmatrix.com/documents/current/core/howto/gendefer.html#integrating-blocking-code-with-twisted"" rel=""nofollow"">example</a>), for example with <a href=""http://twistedmatrix.com/documents/current/api/twisted.internet.threads.deferToThread.html"" rel=""nofollow""><code>twisted.internet.threads.deferToThread</code></a>.</p>
",""
"31228170","2","31114392","<p>I ended up using a work around as follows:</p>

<ol>
<li><p>I enabled registration but limited registration view to users with an admin role.</p></li>
<li><p>I used <code>del form.password</code> in views -> register to no longer send the form with a password field.</p></li>
<li><p>I did the following in .registerable, generating a random password to fill the table.</p>

<p><code>kwargs['password'] = encrypt_password(os.urandom(24))</code></p></li>
<li><p>Upon admin entry of an email in the registration form, I had confimable enabled. This means the user would immediatly get an email to confirm their account and explaining they'd been registered. Upon confirmation they are redirected to the forgotten password page and asked to change their password (which is limited based on security).</p></li>
</ol>

<p>If anyone comes up with a more direct way I'd appreciate it. I'm leaving this here in case anyone has the same problem.</p>
",""
"31253499","2","31062545","<p>You are trying to pass the parameter values as a tuple whose elements are single-item lists. That won't work. The parameters must be passed as a list (or tuple) of individual values or objects.</p>

<p>So, instead of passing</p>



<pre class=""lang-python prettyprint-override""><code>([Ndx],[Tod],[Lat], ... )
</code></pre>

<p>you should be passing</p>

<pre class=""lang-python prettyprint-override""><code>[Ndx,Tod,Lat, ... ]
</code></pre>

<p>as the second argument to the <code>.execute()</code> method.</p>
",""
"31254893","2","31073993","<p>If you need the highstate on the minion to cause something to occur on the master than you are going to want too look into using salt's Reactor (which is designed to do exactly this kind of multi-machine stuff).</p>
",""
"31289232","2","31073993","<p>Thanks you, it's working, i used the cmd.script, and the script bash it works perfectly.</p>

<blockquote>
<pre><code>this is my state init
salt://script_API/Add_host_to_zabbix.sh:
  cmd.script:
    - env:
      - BATCH: 'yes'
    - args: 53 10466 10257
</code></pre>
</blockquote>

<p>And i make salt ""myMaster"" state.highstate, and when i verify in my server zabbix i see a host is added in my zabbix monitoring server.</p>

<p>I do not know is good or not bu it's work ^^</p>
",""
"31330138","2","31062975","<p>So as mentioned in the discussions, the numbers in the query should not be quoted, unless they are strings. Unquote the numbers should make it work.</p>
",""
"31389820","1","","<p>I don't know my algorithms too well, so I'm probably missing something really basic. It seems to me that a standard rotate-left/rotate-right implementation (I'm looking at <a href=""http://interactivepython.org/runestone/static/pythonds/Trees/balanced.html"" rel=""nofollow noreferrer"">this link</a> from Interactive Python) on this tree (called any time the balancing factor is not -1, 0, 1) will get into an infinite loop because the balancing factor will always be -2 or +2. Am I missing something or is this the correct conclusion? I'm pasting sample code at the bottom showing <code>rotateLeft</code> as implemented in the link I pasted</p>

<p><img src=""https://i.stack.imgur.com/PR0eo.png"" alt=""trees""></p>

<pre><code>def rotateLeft(self,rotRoot):
    newRoot = rotRoot.rightChild
    rotRoot.rightChild = newRoot.leftChild
    if newRoot.leftChild != None:
        newRoot.leftChild.parent = rotRoot
    newRoot.parent = rotRoot.parent
    if rotRoot.isRoot():
        self.root = newRoot
    else:
        if rotRoot.isLeftChild():
                rotRoot.parent.leftChild = newRoot
        else:
            rotRoot.parent.rightChild = newRoot
    newRoot.leftChild = rotRoot
    rotRoot.parent = newRoot
    rotRoot.balanceFactor = rotRoot.balanceFactor + 1 - min(newRoot.balanceFactor, 0)
    newRoot.balanceFactor = newRoot.balanceFactor + 1 + max(rotRoot.balanceFactor, 0)
</code></pre>

<p>Does this avoid an infinite loop (with its complementary <code>rotateRight</code>), and if so, how?</p>
","<python><binary-search-tree>"
"31389827","1","","<p>I'm creating a program in c# that involves reshaping and converting bytearrays, but I can't find any solution for the following line of code, which is written in python:</p>

<pre><code>mybytearray.astype('uint16').reshape(h, l, w)
</code></pre>

<p>Can someone help me with this conversion, as it is a crucial piece of code for my program to work!</p>

<p>Kind regards,
QuickScoP3s</p>
","<c#><python><converter>"
"31389833","1","","<p>Is there a way in python with difflib to get offsets of the changes as well as the changes themselves?</p>

<p>What I have is the following:</p>

<pre><code>import difflib

text1 = 'this is a sample text'.split()
text2 = 'this is text two.'.split()

print list(difflib.ndiff(text1, text2))
</code></pre>

<p>which prints:</p>

<pre><code>['  this', '  is', '- a', '- sample', '  text', '+ two.']
</code></pre>

<p>Can I also get offsets of the corresponding changes? 
Naive solution would be just to search for changes, but if strings get longer with repeated terms, that wouldn't work. </p>
","<python>"
"31390008","2","31389827","<p><code>astype</code> in Python does type conversion. To convert your byte array into an unsigner 16-bit integer in C#, try this:</p>

<pre><code>ushort myVal = BitConverter.ToUInt16( mybytearray, 0 )
</code></pre>

<p>This reads the first two bytes from your array and converts them into an unsigner 16-bit integer. <code>myVal</code> will contain the value.</p>
",""
"31390020","2","31389820","<p>From my understanding of balancing BST's is that you not only have a left/right rotate, but instead you have 4 types of shifts. A left,left rotate (similar to right right), and a right-left rotate(similar to left-right). 
I may be wrong at least this is the algorithm I had to write. Where the directions of left and right represent where you traveled the last 2 steps of the tree to find your insertion point.
You may want to look into AVL tree's as this seems like the type of problem you are trying to solve.</p>
",""
"31390595","2","31389833","<p>SequenceMatcher.get_matching_blocks() might help. It returns a list of triples describing matching subsequences. These indices in turn could be used to find the location of differences.</p>

<pre><code>&gt;&gt;&gt; for block in s.get_matching_blocks():
...     print ""a[%d] and b[%d] match for %d elements"" % block
a[0] and b[0] match for 8 elements
a[8] and b[17] match for 21 elements
a[29] and b[38] match for 0 elements
</code></pre>

<p><a href=""https://docs.python.org/2/library/difflib.html#difflib.SequenceMatcher.get_matching_blocks"" rel=""nofollow"">https://docs.python.org/2/library/difflib.html#difflib.SequenceMatcher.get_matching_blocks</a>
<a href=""https://docs.python.org/2/library/difflib.html#sequencematcher-examples"" rel=""nofollow"">https://docs.python.org/2/library/difflib.html#sequencematcher-examples</a></p>
",""
"31575626","2","31063036","<p>A similar issue is discussed here [1]. In the context of your question, the code would look like:</p>

<pre><code>log = LOAD 'test.txt' USING PigStorage(',') AS (x:int);
db = LOAD 'data.mmdb' AS (entry:(field_1:chararray, field_2....));
result = FOREACH log GENERATE myudf.function(x, db.entry);
</code></pre>

<p>[1] <a href=""https://stackoverflow.com/questions/28023561/pig-pass-relation-as-argument-to-udf"">Pig pass relation as argument to UDF</a></p>
",""
"31654556","1","","<p><strong>The problem:</strong>
I have a poorly designed Fortran program (I cannot change it, I'm stuck with it) which takes text input from stdin and other input files, and writes text output results to stdout and other output files. The size of input and out is quite large, and I would like to avoid writing to the hard drive (slow operation). I have written a function that iterates over the lines of the several input files, and I also have parsers for multiple output. I don't really know if the program first read all the input and then starts to output, or starts outputting while reading the input.</p>

<p><strong>The goal:</strong> 
To have a function that feeds the external program with what it wants, and parses the output as it comes from the program, without writing data to text files on the hard drive.</p>

<p><strong>Research:</strong>
The naive way using files is:</p>

<pre><code>from subprocess import PIPE, Popen

def execute_simple(cmd, stdin_iter, stdout_parser, input_files, output_files):

    for filename, file_iter in input_files.iteritems():
        with open(filename ,'w') as f:
            for line in file_iter:
                f.write(line + '\n')


    p_sub = Popen(
        shlex.split(cmd),
        stdin = PIPE,
        stdout = open('stdout.txt', 'w'),
        stderr = open('stderr.txt', 'w'),
        bufsize=1
    )
    for line in stdin_iter:
        p_sub.stdin.write(line + '\n')

    p_sub.stdin.close()
    p_sub.wait()

    data = {}
    for filename, parse_func in output_files.iteritems():
        # The stdout.txt and stderr.txt is included here
        with open(filename,'r') as f:
            data[filename] = parse_func(
                    iter(f.readline, b'')
            )
    return data
</code></pre>

<p>I have tried to and the <a href=""https://docs.python.org/2/library/subprocess.html"" rel=""nofollow noreferrer"">subprocess</a> module to execute the external program together. The additional input/output files are handled with named pipes and <a href=""https://docs.python.org/2/library/multiprocessing.html"" rel=""nofollow noreferrer"">multiprocessing</a>. I want to feed stdin with an iterator (which returns the lines for input), save the stderr in a list, and parse the stdout as it comes from the external program. The input and output can be quite large, so using <code>communicate</code> is not feasible. </p>

<p>I have a parser on the format:</p>

<pre><code>def parser(iterator):
    for line in iterator:
        # Do something
        if condition:
            break
    some_other_function(iterator)
    return data
</code></pre>

<p>I looked at this <a href=""https://stackoverflow.com/a/12272262/2082968"">solution</a> using <code>select</code> to choose the appropriate stream, however I don't know how to make it work with my stdout parser and how to feed the stdin.</p>

<p>I also look the <a href=""https://stackoverflow.com/a/25755038/2082968"">asyncio</a> module, but as I can see I will have the same problem with the parsing of stout.</p>
","<python><asynchronous><io><legacy>"
"31671080","2","15600707","<p>In Python 3 it's:</p>

<pre><code>from urllib.error import HTTPError
</code></pre>
",""
"31770231","2","61517","<p>Instead of <code>x.__dict__</code>, it's actually more pythonic to use <code>vars(x)</code>.</p>
",""
"31868278","2","31654556","<p>It is very important that the Fortran program calls <strong>flush</strong> at the end of every job (can be also moe frequently), if you are waiting for end of results before you send a new job.<br>
The command depends on the compiler, e.g. GNU fortran <code>CALL FLUSH(unitnumber)</code> or it can be simulated by closing the outpud and open again for append.</p>

<p>You can also easily write a few empty lines with many whitespace characters at the end that it fill the buffer size and you get a new block of data. 5000 whitespace characters is probably good enough, but not too much that it will block the Fortran side of pipe. If you read these empty lines just after sending the new job, you even don't need a non blocking read. The last line of the job can be easily recognized in numeric applications. If you would write a ""chat"" application you need something what other people wrote.</p>
",""
"31868865","2","31654556","<p>You should use <strong>named pipes</strong> for all input and output to the Fortran program to avoid writing to disk. Then, in your consumer, you can use threads to read from each of the program's output sources and add the information to a Queue for in-order processing.</p>

<p>To model this, I created a python app <code>daemon.py</code> that reads from standard input and returns the square root until EOF. It logs all input to a log file specified as a command-line argument and prints the square root to stdout and all errors to stderr. I think it simulates your program (of course the number of output files is only one, but it can be scaled). You can view the source code for this test application <a href=""http://pastebin.com/UuZz5xsQ"" rel=""nofollow noreferrer"">here</a>. Note the explicit call to <code>stdout.flush()</code>. By default, the standard output is print buffered, which means that this is output at the end and messages will not arrive in order. I hope your Fortran application does not buffer its output. I believe that my sample application will probably not run on Windows, due to a Unix-only use of <code>select</code>, which shouldn't matter in your case.</p>

<p>I have my consumer application which starts the daemon application as a subprocess, with stdin, stdout and stderr redirected to <code>subprocess.PIPE</code>s. each of these pipes is given to a different thread, one to give input, and three to handle the log file, errors and standard output respectively. They all add their messages to a shared <code>Queue</code> which your main thread reads from and sends to your parser.</p>

<p>This is my consumer's code:</p>

<pre><code>import os, random, time
import subprocess
import threading
import Queue
import atexit

def setup():
    # make a named pipe for every file the program should write
    logfilepipe='logpipe'
    os.mkfifo(logfilepipe)

def cleanup():
    # put your named pipes here to get cleaned up
    logfilepipe='logpipe'
    os.remove(logfilepipe)

# run our cleanup code no matter what - avoid leaving pipes laying around
# even if we terminate early with Ctrl-C
atexit.register(cleanup)

# My example iterator that supplies input for the program. You already have an iterator 
# so don't worry about this. It just returns a random input from the sample_data list
# until the maximum number of iterations is reached.
class MyIter():
    sample_data=[0,1,2,4,9,-100,16,25,100,-8,'seven',10000,144,8,47,91,2.4,'^',56,18,77,94]
    def __init__(self, numiterations=1000):
        self.numiterations=numiterations
        self.current = 0

    def __iter__(self):
        return self

    def next(self):
        self.current += 1
        if self.current &gt; self.numiterations:
            raise StopIteration
        else:
            return random.choice(self.__class__.sample_data)

# Your parse_func function - I just print it out with a [tag] showing its source.
def parse_func(source,line):
    print ""[%s] %s"" % (source,line)

# Generic function for sending standard input to the problem.
# p - a process handle returned by subprocess
def input_func(p, queue):
    # run the command with output redirected
    for line in MyIter(30): # Limit for testing purposes
        time.sleep(0.1) # sleep a tiny bit
        p.stdin.write(str(line)+'\n')
        queue.put(('INPUT', line))
    p.stdin.close()
    p.wait()

    # Once our process has ended, tell the main thread to quit
    queue.put(('QUIT', True))

# Generic function for reading output from the program. source can either be a
# named pipe identified by a string, or subprocess.PIPE for stdout and stderr.
def read_output(source, queue, tag=None):
    print ""Starting to read output for %r"" % source
    if isinstance(source,str):
        # Is a file or named pipe, so open it
        source=open(source, 'r') # open file with string name
    line = source.readline()
    # enqueue and read lines until EOF
    while line != '':
        queue.put((tag, line.rstrip()))
        line = source.readline()

if __name__=='__main__':
    cmd='daemon.py'

    # set up our FIFOs instead of using files - put file names into setup() and cleanup()
    setup()

    logfilepipe='logpipe'

    # Message queue for handling all output, whether it's stdout, stderr, or a file output by our command
    lq = Queue.Queue()

    # open the subprocess for command
    print ""Running command.""
    p = subprocess.Popen(['/path/to/'+cmd,logfilepipe],
                                    stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Start threads to handle the input and output
    threading.Thread(target=input_func, args=(p, lq)).start()
    threading.Thread(target=read_output, args=(p.stdout, lq, 'OUTPUT')).start()
    threading.Thread(target=read_output, args=(p.stderr, lq, 'ERRORS')).start()

    # open a thread to read any other output files (e.g. log file) as named pipes
    threading.Thread(target=read_output, args=(logfilepipe, lq, 'LOG')).start()

    # Now combine the results from our threads to do what you want
    run=True
    while(run):
        (tag, line) = lq.get()
        if tag == 'QUIT':
            run=False
        else:
            parse_func(tag, line)
</code></pre>

<p>My iterator returns a random input value (some of which are junk to cause errors). Yours should be a drop-in replacement. The program will run until the end of its input and then wait for the subprocess to complete before enqueueing a <code>QUIT</code> message to your main thread. My <code>parse_func</code> is obviously super simple, simply printing out the message and its source, but you should be able to work with something. The function to read from an output source is designed to work with both PIPEs and strings - don't open the pipes on your main thread because they will block until input is available. So for file readers (e.g. reading log files), it's better to have the child thread open the file and block. However, we spawn the subprocess on the main thread so we can pass the handles for stdin, stdout and stderr to their respective child threads.</p>

<p>Based partially on <a href=""https://unix.stackexchange.com/a/15540/114925"">this Python implementation of multitail</a>.</p>
",""
"31886634","2","7781545","<p><strong>To print only the folders</strong></p>

<pre><code>print os.walk(DIR_PATH).next()[1]
</code></pre>

<p><strong>To print only the files</strong></p>

<pre><code>print os.walk(DIR_PATH).next()[2]
</code></pre>
",""
"31987032","2","15599519","<p>After adding you need to commit,to see the changes</p>

<pre><code>userprofile = UserProfile(form.username.data)
db.session.add(userprofile)
db.session.commit()
</code></pre>
",""
"31995013","2","60208","<pre><code># simple case alternative

some_value = 5.0

# this while loop block simulates a case block

# case
while True:

    # case 1
    if some_value &gt; 5:
        print ('Greater than five')
        break

    # case 2
    if some_value == 5:
        print ('Equal to five')
        break

    # else case 3
    print ( 'Must be less than 5')
    break
</code></pre>
",""
"32031804","2","36901","<p>In addition to function calls, *args and **kwargs are useful in class hierarchies and also avoid having to write <strong>init</strong> method in Python. Similar usage is seen in frameworks like Django code.</p>

<p>For example,</p>

<pre><code>def __init__(self, *args, **kwargs):
    for attribute_name, value in zip(self._expected_attributes, args):
        setattr(self, attribute_name, value)
        if kwargs.has_key(attribute_name):
            kwargs.pop(attribute_name)

    for attribute_name in kwargs.viewkeys():
        setattr(self, attribute_name, kwargs[attribute_name])
</code></pre>

<p>A subclass can then be</p>

<pre><code>class RetailItem(Item):
_expected_attributes = Item._expected_attributes + ['name', 'price',    
                       'category', 'country_of_origin']

class FoodItem(RetailItem):
_expected_attributes = RetailItem._expected_attributes +  ['expiry_date']
</code></pre>

<p>The subclass then be called as </p>

<pre><code>food_item = FoodItem(name = 'Jam', 
                     price = 12.0, 
                     category = 'Foods', 
                     country_of_origin = 'US', 
                     expiry_date = datetime.datetime.now())
</code></pre>

<p>Also, a subclass with a new attribute which makes sense only to that subclass instance can call the Base class <strong>init</strong> to offload the attributes setting.
This is done through *args and **kwargs. kwargs mainly used so that code is readable using named arguments. For example,</p>

<pre><code>class ElectronicAccessories(RetailItem):
_expected_attributes = RetailItem._expected_attributes +  ['specifications']
""""""
Depend on args and kwargs to populate the data as needed.
""""""
def __init__(self, specifications = None, *args, **kwargs):
    self.specifications = specifications # Rest of attributes will make sense to parent class.
    super(ElectronicAccessories, self).__init__(*args, **kwargs)
</code></pre>

<p>which can be instatiated as</p>

<pre><code>usb_key = ElectronicAccessories(name = 'Sandisk', 
                                price = '$6.00', 
                                category = 'Electronics',
                                country_of_origin = 'CN',
                                specifications = '4GB USB 2.0/USB 3.0')
</code></pre>

<p>The complete code is <a href=""http://harisankar-krishnaswamy.blogspot.sg/2015/08/using-args-and-kwargs-python-code-post.html"" rel=""nofollow"">here</a></p>
",""
"32383135","2","15575826","<p>There is one issue that earlier answers have not addressed and may throw off people if they are not aware of it.</p>

<p>Among those solutions already posted, I'd use <a href=""https://stackoverflow.com/a/29788081/1906307"">Danielle's</a> with one minor modification: I'd import the task into my file and use its <code>.name</code> attribute to get the task name to pass to <code>.tasks_by_type()</code>.</p>

<pre><code>app.control.revoke(
    [uuid for uuid, _ in
     celery.events.state.State().tasks_by_type(task.name)])
</code></pre>

<p><strong>However, this solution will ignore those tasks that have been scheduled for future execution.</strong> Like some people who commented on other answers, when I checked what <code>.tasks_by_type()</code> return I had an empty list. And indeed my queues were empty. But I knew that there were tasks scheduled to be executed in the future and <em>these</em> were my primary target. I could see them by executing <code>celery -A [app] inspect scheduled</code> but they were unaffected by the code above.</p>

<p>I managed to revoke the scheduled tasks by doing this:</p>

<pre><code>app.control.revoke(
    [scheduled[""request""][""id""] for scheduled in
     chain.from_iterable(app.control.inspect().scheduled()
                         .itervalues())])
</code></pre>

<p><code>app.control.inspect().scheduled()</code> returns a dictionary whose keys are worker names and values are <em>lists</em> of scheduling information (hence, the need for <code>chain.from_iterable</code> which is imported from <code>itertools</code>). The task information is in the <code>""request""</code> field of the scheduling information and <code>""id""</code> contains the task id. Note that even after revocation, the scheduled task will still show among the scheduled tasks. Scheduled tasks that are revoked won't get removed from the list of scheduled tasks until their timers expire or until Celery performs some cleanup operation. (Restarting workers triggers such cleanup.)</p>
",""
"32397747","2","31086530","<p>If you're using Python 2.7 you must install this module : </p>

<pre><code>pip install futures
</code></pre>

<p>Futures feature has never included in Python 2.x core. However, it's present in Python 3.x since Python 3.2.</p>
",""
"32448434","2","35988","<p>I wrote a decorator which you can use on any method to make it so that all of the arguments passed in, or any defaults, are assigned to the instance.</p>

<pre><code>def argumentsToAttributes(method):
    argumentNames = method.func_code.co_varnames[1:]

    # Generate a dictionary of default values:
    defaultsDict = {}
    defaults = method.func_defaults if method.func_defaults else ()
    for i, default in enumerate(defaults, start = len(argumentNames) - len(defaults)):
        defaultsDict[argumentNames[i]] = default

    def newMethod(self, *args, **kwargs):
        # Use the positional arguments.
        for name, value in zip(argumentNames, args):
            setattr(self, name, value)

        # Add the key word arguments. If anything is missing, use the default.
        for name in argumentNames[len(args):]:
            setattr(self, name, kwargs.get(name, defaultsDict[name]))

        # Run whatever else the method needs to do.
        method(self, *args, **kwargs)

    return newMethod
</code></pre>

<p>A quick demonstration. Note that I use a positional argument <code>a</code>, use the default value for <code>b</code>, and a named argument <code>c</code>. I then print all 3 referencing <code>self</code>, to show that they've been properly assigned before the method is entered.</p>

<pre><code>class A(object):
    @argumentsToAttributes
    def __init__(self, a, b = 'Invisible', c = 'Hello'):
        print(self.a)
        print(self.b)
        print(self.c)

A('Why', c = 'Nothing')
</code></pre>

<p>Note that my decorator should work with any method, not just <code>__init__</code>.</p>
",""
"32608298","2","34439","<p>There is no reliable way to list all object's methods. <code>dir(object)</code> is usually useful, but in some cases it may not list all methods. According to <a href=""https://docs.python.org/2/library/functions.html#dir"" rel=""nofollow""><code>dir()</code> documentation</a>: <em>""With an argument, <strong>attempt</strong> to return a list of valid attributes for that object.""</em></p>

<p>Checking that method exists can be done by <code>callable(getattr(object, method))</code> as already mentioned there.</p>
",""
"32726068","2","13857","<p>Here is an example of Python3 closures </p>

<pre><code>def closure(x):
    def counter():
        nonlocal x
        x += 1
        return x
    return counter;

counter1 = closure(100);
counter2 = closure(200);

print(""i from closure 1 "" + str(counter1()))
print(""i from closure 1 "" + str(counter1()))
print(""i from closure 2 "" + str(counter2()))
print(""i from closure 1 "" + str(counter1()))
print(""i from closure 1 "" + str(counter1()))
print(""i from closure 1 "" + str(counter1()))
print(""i from closure 2 "" + str(counter2()))

# result

i from closure 1 101
i from closure 1 102
i from closure 2 201
i from closure 1 103
i from closure 1 104
i from closure 1 105
i from closure 2 202
</code></pre>
",""
"32936855","2","7798120","<p>I did a bit of messing around and experimenting with this... these two methods are the ones I use, for conversion to java.sql.Timestamp and then in the other direction, using java.sql.Timestamp.time() (ms since 1/1/1970).</p>

<p>""bst"" here stands for British Summer Time... I did at the time verify that it correctly took such dates into account: i.e. it would appear that the tz module is sufficiently clever to be able to detect that months during the summer are subject to BST and adjust accordingly.  </p>

<p>Hopefully it should work with any other time zones you can throw at it...</p>

<pre><code>def convert_datetime_bst_to_javaSQLTimestamp( datetime_val ):
    if datetime_val is None: return None
    assert type( datetime_val ) is datetime.datetime
    tz_local = tz.tzlocal()
    gmt_datetime = datetime_val - tz_local.dst( datetime_val )
    delta = gmt_datetime - datetime.datetime( 1970, 1, 1 )
    seconds = int( delta.total_seconds() ) 
    ms_fraction = int( delta.microseconds / 1000 )
    ms = seconds * 1000 + ms_fraction
    return java.sql.Timestamp( ms )

def conv_ms_to_datetime_bst( ms ):
    assert type( ms ) is long, '# ms type %s' % ( type( ms ), )
    # NB potentially a problem with pre-1970 and post-2038 dates: datetime.datetime.fromtimestamp(ms/1000.0)
    gmt_datetime = datetime.datetime( 1970, 1, 1 ) + datetime.timedelta( 0, 0, 0, ms )
    tz_local = tz.tzlocal()
    return gmt_datetime + tz_local.dst( gmt_datetime )
</code></pre>
",""
"33267230","2","15599639","<p>While there are suggestions above for ""doing it the python way"", if one wants to really have a logic based on EOF, then I suppose using exception handling is the way to do it -- </p>

<pre><code>try:
    line = raw_input()
    ... whatever needs to be done incase of no EOF ...
except EOFError:
    ... whatever needs to be done incase of EOF ...
</code></pre>

<p>Example:</p>

<pre><code>$ echo test | python -c ""while True: print raw_input()""
test
Traceback (most recent call last):
  File ""&lt;string&gt;"", line 1, in &lt;module&gt; 
EOFError: EOF when reading a line
</code></pre>

<p>Or press <kbd>Ctrl-Z</kbd> at a <code>raw_input()</code> prompt (Windows, <kbd>Ctrl-Z</kbd> Linux)</p>
",""
"33583008","2","60805","<p>Here's four different variations, ordered from slowest to fastest. <code>timeit</code> results at the bottom:</p>

<pre><code>from sqlalchemy.sql import func
from sqlalchemy.orm import load_only

def simple_random():
    return random.choice(model_name.query.all())

def load_only_random():
    return random.choice(model_name.query.options(load_only('id')).all())

def order_by_random():
    return model_name.query.order_by(func.random()).first()

def optimized_random():
    return model_name.query.options(load_only('id')).offset(
            func.floor(
                func.random() *
                db.session.query(func.count(model_name.id))
            )
        ).limit(1).all()
</code></pre>

<p><code>timeit</code> results for 10,000 runs on my Macbook against a PostgreSQL table with 300 rows:</p>

<pre><code>simple_random(): 
    90.09954111799925
load_only_random():
    65.94714171699889
order_by_random():
    23.17819356000109
optimized_random():
    19.87806927999918
</code></pre>

<p>You can easily see that using <code>func.random()</code> is far faster than returning all results to Python's <code>random.choice()</code>. </p>

<p>Additionally, as the size of the table increases, the performance of <code>order_by_random()</code> will degrade significantly because an <code>ORDER BY</code> requires a full table scan versus the <code>COUNT</code> in <code>optimized_random()</code> can use an index.</p>
",""
"33879404","2","31114432","<p>Try to use this one    </p>

<pre><code>df.loc[ df.Sex == ""male"",'Age'].fillna( df[ df.Sex == ""male"" ]['Age'].mean(),inplace = True)
</code></pre>
",""
"34043617","2","23342591","<p>There are several very fun ways to do this with string <code>format</code>-ing.</p>

<p>From Python's <a href=""https://docs.python.org/2/library/string.html"" rel=""nofollow"">Documentation</a>:</p>

<blockquote>
  <p>The built-in <code>str</code> and <code>unicode</code> classes provide the ability to do complex <strong>variable substitutions and value formatting</strong> via the <code>str.format()</code> method:</p>
</blockquote>

<pre><code>s = ""string""
c = ""Cool""
print ""This is a {0}. {1}, huh?"".format(s,c)
#=&gt; This is a string. Cool, huh? 
</code></pre>

<p>Other nifty tricks you can do with string formatting:</p>

<pre><code>""First, thou shalt count to {0}"".format(3) # References first positional argument
""Bring me a {}"".format(""shrubbery!"")       # Implicitly references the first positional argument
""From {} to {}"".format('Africa','Mercia')      # Same as ""From {0} to {1}""
""My quest is {name}""                       # References keyword argument 'name'
""Weight in tons {0.weight}""                # 'weight' attribute of first positional arg
""Units destroyed: {players[0]}""            # First element of keyword argument 'players'.`
</code></pre>
",""
"34122971","2","23342591","<p>Ummm, normally you'd want just replace 'ilike' with normal '=' comparison that doesn't interpret '%' in any special way. Escaping (effectively blacklisting of bad patterns) is error prone, e.g. even if you manage to escape all known patterns in the version of sqlLite you use, any future upgrade can put you at risk, etc..</p>

<p>It's not clear to me why you'd want to mass-update cookies based on a fuzzy match on user name.</p>

<p>If you really want to do that, my preferred approach would be to SELECT the list first and decide what to UPDATE at the application level to maintain a maximum level of control.</p>
",""
"34132198","2","23342591","<p>You've avoided outright code injection by using parametrized queries. Now it seems you're trying to do a pattern match with user-supplied data, but you want the user-supplied portion of the data to be treated as literal data (hence no wildcards). You have several options:</p>

<ol>
<li><p>Just filter the input. SQLite's <code>LIKE</code> only <a href=""https://www.sqlite.org/lang_expr.html#like"" rel=""nofollow noreferrer"">understands</a> <code>%</code> and <code>_</code> as wildcards, so it's pretty hard to get it wrong. Just make sure to always filter inputs. (My preferred method: Filter just before the query is constructed, not when user input is read).</p></li>
<li><p>In general, a ""whitelist"" approach is considered safer and easier than removing specific dangerous characters. That is, instead of deleting <code>%</code> and <code>_</code> from your string (and any ""lesser-known wildcards"", as you say), scan your string and keep only the characters you want. E.g., if your ""nicknames"" can contain ASCII letters, digits, ""-"" and ""."", it can be sanitized like this:</p>

<pre><code>name = re.sub(r""[^A-Za-z\d.-]"", """", name)
</code></pre>

<p>This solution is specific to the particula field you are matching against, and works well for key fields and other identifiers. I would definitely do it this way if I had to search with <code>RLIKE</code>, which accepts full regular expressions so there are a lot more characters to watch out for.</p></li>
<li><p>If you don't want the user to be able to supply a wildcard, why would you use <code>LIKE</code> in your query anyway? If the inputs to your queries come from many places in the code (or maybe you're even writing a library), you'll make your query safer if you can avoid <code>LIKE</code> altogether:</p>

<ul>
<li><p>Here's <a href=""https://stackoverflow.com/q/973541/699305"">case insensitive matching</a>:</p>

<pre><code>SELECT * FROM ... WHERE name = 'someone' COLLATE NOCASE
</code></pre></li>
<li><p>In your example you use prefix matching (""<code>sqlescape(nick)+""%""</code>""). Here's how to do it with exact search:</p>

<pre><code>size = len(nick)
cursor.execute(u""UPDATE `cookies` set `count`=? WHERE substr(`nickname`, 1, ?) = ?"", 
                (cookies, size, nick))
</code></pre></li>
</ul></li>
</ol>
",""
"34166505","2","36901","<p>In Python 3.5, you can also use this syntax in <code>list</code>, <code>dict</code>, <code>tuple</code>, and <code>set</code> displays (also sometimes called literals). See <a href=""http://legacy.python.org/dev/peps/pep-0448/"" rel=""nofollow"">PEP 488: Additional Unpacking Generalizations</a>.</p>

<pre><code>&gt;&gt;&gt; (0, *range(1, 4), 5, *range(6, 8))
(0, 1, 2, 3, 5, 6, 7)
&gt;&gt;&gt; [0, *range(1, 4), 5, *range(6, 8)]
[0, 1, 2, 3, 5, 6, 7]
&gt;&gt;&gt; {0, *range(1, 4), 5, *range(6, 8)}
{0, 1, 2, 3, 5, 6, 7}
&gt;&gt;&gt; d = {'one': 1, 'two': 2, 'three': 3}
&gt;&gt;&gt; e = {'six': 6, 'seven': 7}
&gt;&gt;&gt; {'zero': 0, **d, 'five': 5, **e}
{'five': 5, 'seven': 7, 'two': 2, 'one': 1, 'three': 3, 'six': 6, 'zero': 0}
</code></pre>

<p>It also allows multiple iterables to be unpacked in a single function call.</p>

<pre><code>&gt;&gt;&gt; range(*[1, 10], *[2])
range(1, 10, 2)
</code></pre>

<p>(Thanks to mgilson for the PEP link.)</p>
",""
"34346303","2","31217647","<p>I got the same error. You have to install tesseract from here:
<a href=""https://code.google.com/p/tesseract-ocr/downloads/detail?name=tesseract-ocr-setup-3.02.02.exe&amp;"" rel=""nofollow"">https://code.google.com/p/tesseract-ocr/downloads/detail?name=tesseract-ocr-setup-3.02.02.exe&amp;</a></p>

<p>Then you have to edit the pytesseract.py file.
In my case, this file is located in the folder:</p>

<blockquote>
  <p>C:\Users\USERNAME\AppData\Roaming\Python34\site-packages\pytesseract\pytesseract.py</p>
</blockquote>

<p>Search the following lines (for me it's line 60):</p>

<pre><code># CHANGE THIS IF TESSERACT IS NOT IN YOUR PATH, OR IS NAMED DIFFERENTLY
tesseract_cmd = 'tesseract'
</code></pre>

<p>and change it to the location, where your pytesseract.exe is located, in my case the line looks like this:</p>

<pre><code># CHANGE THIS IF TESSERACT IS NOT IN YOUR PATH, OR IS NAMED DIFFERENTLY
tesseract_cmd = 'c:\\Program Files (x86)\\Tesseract-OCR\\tesseract'
</code></pre>

<p>Now your code should work.</p>
",""
"34558167","2","7781260","<p>first of all type of float('inf') is float though it can be used for comparison purpose but it is considerably slow to compare against it. So if you are comparing a large list of number against float('inf') then be careful to pick it. I am not sure about the performance of ""math.inf"".</p> 
",""
"34569349","2","31088156","<p>Try to use withdraw() to 'destroy' it, and deiconify or iconify to show it again if u want.WITHDRAW have to bw written in your childapp.protocol(""WM_DELETEWINDOW"",somefunction) in somefunction just use withdraw on  child app</p>
",""
"34639742","2","60208","<p>For the sake of completeness, here are some of my attempts back in stone-age:</p>

<p><a href=""http://code.activestate.com/recipes/269708-some-python-style-switches/?in=user-1521341"" rel=""nofollow"">http://code.activestate.com/recipes/269708-some-python-style-switches/?in=user-1521341</a></p>

<p>I especially enjoy the use of ""3. Select values with 'range comparisons'""</p>
",""
"34662287","2","61517","<p>If you want to list part of your attributes, override <code>__dict__</code>:</p>

<pre><code>def __dict__(self):
    d = {
    'attr_1' : self.attr_1,
    ...
    }
    return d

# Call __dict__
d = instance.__dict__()
</code></pre>

<p>This helps a lot if your <code>instance</code> get some large block data and you want to push <code>d</code> to Redis like message queue. </p>
",""
"34899056","2","36901","<p>Let us first understand what are positional arguments and keyword arguments.
Below is an example of function definition with <strong>Positional arguments.</strong></p>

<pre><code>def test(a,b,c):
     print(a)
     print(b)
     print(c)

test(1,2,3)
#output:
1
2
3
</code></pre>

<p>So this is a function definition with positional arguments.
You can call it with keyword/named arguments as well:</p>

<pre><code>def test(a,b,c):
     print(a)
     print(b)
     print(c)

test(a=1,b=2,c=3)
#output:
1
2
3
</code></pre>

<p>Now let us study an example of function definition with <strong>keyword arguments</strong>:</p>

<pre><code>def test(a=0,b=0,c=0):
     print(a)
     print(b)
     print(c)
     print('-------------------------')

test(a=1,b=2,c=3)
#output :
1
2
3
-------------------------
</code></pre>

<p>You can call this function with positional arguments as well:</p>

<pre><code>def test(a=0,b=0,c=0):
    print(a)
    print(b)
    print(c)
    print('-------------------------')

test(1,2,3)
# output :
1
2
3
---------------------------------
</code></pre>

<p>So we now know function definitions with positional as well as keyword arguments.</p>

<p>Now let us study the '*' operator and '**' operator.</p>

<p>Please note these operators can be used in 2 areas:</p>

<p>a) <strong>function call</strong></p>

<p>b) <strong>function definition</strong></p>

<p>The use of '*' operator and '**' operator in <strong>function call.</strong> </p>

<p>Let us get straight to an example and then discuss it.</p>

<pre><code>def sum(a,b):  #receive args from function calls as sum(1,2) or sum(a=1,b=2)
    print(a+b)

my_tuple = (1,2)
my_list = [1,2]
my_dict = {'a':1,'b':2}

# Let us unpack data structure of list or tuple or dict into arguments with help of '*' operator
sum(*my_tuple)   # becomes same as sum(1,2) after unpacking my_tuple with '*'
sum(*my_list)    # becomes same as sum(1,2) after unpacking my_list with  '*'
sum(**my_dict)   # becomes same as sum(a=1,b=2) after unpacking by '**' 

# output is 3 in all three calls to sum function.
</code></pre>

<p>So remember </p>

<p>when the '*' or '**' operator is used in a <strong>function call</strong> -</p>

<p>'*' operator unpacks data structure such as a list or tuple  into arguments needed by function definition.</p>

<p>'**' operator unpacks a dictionary into arguments needed by function definition.</p>

<p>Now let us study the '*' operator use in <strong>function definition</strong>.
Example:</p>

<pre><code>def sum(*args): #pack the received positional args into data structure of tuple. after applying '*' - def sum((1,2,3,4))
    sum = 0
    for a in args:
        sum+=a
    print(sum)

sum(1,2,3,4)  #positional args sent to function sum
#output:
10
</code></pre>

<p>In function <strong>definition</strong> the '*' operator packs the received arguments into a tuple.</p>

<p>Now let us see an example of '**' used in function definition:</p>

<pre><code>def sum(**args): #pack keyword args into datastructure of dict after applying '**' - def sum({a:1,b:2,c:3,d:4})
    sum=0
    for k,v in args.items():
        sum+=v
    print(sum)

sum(a=1,b=2,c=3,d=4) #positional args sent to function sum
</code></pre>

<p>In function <strong>definition</strong> The '**' operator packs the received arguments into a dictionary.</p>

<p>So remember:</p>

<p>In a <strong>function call</strong> the '*' <strong>unpacks</strong> data structure of tuple or list into positional or keyword arguments to be received by function definition.</p>

<p>In a <strong>function call</strong> the '**' <strong>unpacks</strong> data structure of dictionary into positional or keyword arguments to be received by function definition.</p>

<p>In a <strong>function definition</strong> the '*' <strong>packs</strong> positional arguments into a tuple.</p>

<p>In a <strong>function definition</strong> the '**' <strong>packs</strong> keyword arguments into a dictionary.</p>
",""
"34973737","2","59825","<p>Following @wr. post, I get similar results (for Python3.5)</p>

<pre><code>from timeit import *

stats = [""for i in range(1000): next(iter(s))"",
         ""for i in range(1000): \n\tfor x in s: \n\t\tbreak"",
         ""for i in range(1000): s.add(s.pop())""]

for stat in stats:
    t = Timer(stat, setup=""s=set(range(100000))"")
    try:
        print(""Time for %s:\t %f""%(stat, t.timeit(number=1000)))
    except:
        t.print_exc()
</code></pre>

<p>Output:</p>

<pre><code>Time for for i in range(1000): next(iter(s)):    0.205888
Time for for i in range(1000): 
    for x in s: 
        break:                                   0.083397
Time for for i in range(1000): s.add(s.pop()):   0.226570
</code></pre>

<p>However, when changing the underlying set (e.g. call to <code>remove()</code>) things go badly for the iterable examples (<code>for</code>, <code>iter</code>):</p>

<pre><code>from timeit import *

stats = [""while s:\n\ta = next(iter(s))\n\ts.remove(a)"",
         ""while s:\n\tfor x in s: break\n\ts.remove(x)"",
         ""while s:\n\tx=s.pop()\n\ts.add(x)\n\ts.remove(x)""]

for stat in stats:
    t = Timer(stat, setup=""s=set(range(100000))"")
    try:
        print(""Time for %s:\t %f""%(stat, t.timeit(number=1000)))
    except:
        t.print_exc()
</code></pre>

<p>Results in:</p>

<pre><code>Time for while s:
    a = next(iter(s))
    s.remove(a):             2.938494
Time for while s:
    for x in s: break
    s.remove(x):             2.728367
Time for while s:
    x=s.pop()
    s.add(x)
    s.remove(x):             0.030272
</code></pre>
",""
"35111161","2","31217647","<p>You don't have to edit any pytesseract files. You can declare the path to your Tesseract installation inside your code like so:</p>

<pre><code>import pytesseract
pytesseract.pytesseract.tesseract_cmd = 'C:/Program Files (x86)/Tesseract-OCR/tesseract'
</code></pre>
",""
"35139726","2","111934","<p>This method seemed to work well if  all you are interested in is the width and height of the canvas being considered, using the bounds of the box and then checking the differential works just as well if you want to do it that way.</p>

<pre><code>width = myText.winfo_width()  
height = myText.winfo_height()
</code></pre>
",""
"35211263","2","31063384","<p>It's totally legal to write code like that in Python. However, writing code like</p>

<pre><code>lst = [1, 2, 3, 4, 12]
</code></pre>

<p>would be ""better"" than</p>

<pre><code>lst = [1, 2, 3, 4]
... # code has nothing do to with lst
lst.append(12)
</code></pre>

<p>In general, the former one would have better performance than the latter one, but if the latter one is more readable in your case/you have a good reason doing that, then you can ignore the PyCharm prompt.</p>

<p>If it bothers you, you can turn this inspection off in </p>

<p>""PyCharm->settings->editor->inspection->Python->List creation could be...""</p>
",""
"35520556","2","31114392","<p>The register process creates a signal with blinker that you can access like this:</p>

<pre><code>from flask.ext.security.signals import user_registered
@user_registered.connect_via(app)
def user_registered_sighandler(app, user, confirm_token):
    user_datastore.deactivate_user(user)
    db.session.commit()
</code></pre>

<p>Which will deactivate any newly registered users.</p>
",""
"35827692","2","23370556","<p>check if the top end 8 bits are 0. If they are not, you have a true 24 bit recording.</p>
",""
"36079070","2","60208","<p>I think the best way is to <strong>use the python language idioms to keep your code testable</strong>. As showed in previous answers, I use dictionaries to <strong>take advantage of python structures and language</strong> and keep the ""case"" code isolated in different methods. Below there is a class, but you can use directly a module, globals and functions. The class has methods that <strong>can be tested with isolation</strong>.
Dependending to your needs, you can play with static methods and attributes too.</p>

<pre><code>class ChoiceManager:

    def __init__(self):
        self.__choice_table = \
        {
            ""CHOICE1"" : self.my_func1,
            ""CHOICE2"" : self.my_func2,
        }

    def my_func1(self, data):
        pass

    def my_func2(self, data):
        pass

    def process(self, case, data):
        return self.__choice_table[case](data)

ChoiceManager().process(""CHOICE1"", my_data)
</code></pre>

<p>It is possible to <strong>take advantage of this method using also classes as keys</strong> of ""__choice_table"". In this way you can avoid <em>isinstance abuse</em> and keep all clean and testable.</p>

<p>Supposing you have to process a lot of messages or packets from the net or your MQ. Every packet has its own structure and its management code (in a generic way).
With the above code it is possible to do something like this:</p>

<pre><code>class PacketManager:

    def __init__(self):
        self.__choice_table = \
        {
            ControlMessage : self.my_func1,
            DiagnosticMessage : self.my_func2,
        }

    def my_func1(self, data):
        # process the control message here
        pass

    def my_func2(self, data):
        # process the diagnostic message here
        pass

    def process(self, pkt):
        return self.__choice_table[pkt.__class__](pkt)

pkt = GetMyPacketFromNet()
PacketManager().process(pkt)


# isolated test or isolated usage example
def test_control_packet():
    p = ControlMessage()
    PacketManager().my_func1(p)
</code></pre>

<p>So <strong>complexity is not spread in the code flow but it is rendered in code structure</strong>.</p>
",""
"36100559","2","23355220","<p>For echo Server :</p>

<h1>HTML :</h1>

<pre><code>&lt;html&gt;
 &lt;head&gt;

 &lt;script&gt;
function validateLogin()
{
var username = document.getElementById(""username"").value;
var password = document.getElementById(""password"").value;

if (username.length &lt;= 0 || password.length &lt;= 0)
  {
  document.alert(""The username or password cannot be blank"");
  return;
  }

var xmlhttp;

    if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari
        xmlhttp=new XMLHttpRequest();
  } else {// code for IE6, IE5
        xmlhttp=new ActiveXObject(""Microsoft.XMLHTTP"");
  }

xmlhttp.onreadystatechange=function()
    {
        if (xmlhttp.readyState==4 &amp;&amp; xmlhttp.status==200)
        {
            document.getElementById(""resultText"").innerHTML=xmlhttp.responseText;
        }else if (xmlhttp.readyState==4) {
            document.write(xmlhttp.status + xmlhttp.statusText);
        }
}

xmlhttp.open(""POST"",""../post_test.py"",true);
xmlhttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded; charset=UTF-8')
xmlhttp.send(""username="" + username + ""&amp;password="" + password);
}
&lt;/script&gt;
 &lt;/head&gt;




 &lt;body&gt;


&lt;form name=""login"" &gt;
Username:&lt;input type=""text""  id=""username""&gt;&lt;br&gt;
Password:&lt;input type=""text""  id=""password""&gt;&lt;br&gt;
Confirm password:&lt;input type=""text""  id=""repassword""&gt;&lt;br&gt;

&lt;/form&gt;
&lt;button onclick=""validateLogin()""&gt;Login&lt;/button&gt;
&lt;span id=""resultText""&gt;&lt;/span&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>

<h1>CGI-SCRIPT:</h1>

<pre><code>#!/usr/bin/python2.7

import cgi


form = cgi.FieldStorage()
print ""Content-Type: text/html;charset=utf-8""
print ""Access-Control-Allow-Origin:*""
print
print form
</code></pre>

<p>Replace input type <code>password</code> to <code>text</code> because got security bugs !</p>

<p>Yo got wrong answer on cgi script. Who know service is live ? So need some type, status, header, content..</p>

<p>Check post address : <code>..//</code> mean <code>currient_uri + new_path + target</code></p>

<p>On javascript: Call by ID but where ID parameter ?</p>
",""
"36250481","2","31075214","<p>I just searched and it appears there is an example in the Django repo at <a href=""https://github.com/django/django/blob/master/.hgignore"" rel=""nofollow"">Github</a> (<a href=""https://raw.githubusercontent.com/django/django/master/.hgignore"" rel=""nofollow"">raw text</a>) - the current version is:</p>

<pre><code>syntax:glob

*.egg-info
*.pot
*.py[co]
__pycache__
MANIFEST
dist/
docs/_build/
docs/locale/
node_modules/
tests/coverage_html/
tests/.coverage
build/
tests/report/
</code></pre>

<p>Note that some of that seems specific to their layout, but I'm still starting from this rather than from one of my own .gitignore files (I use git for my projects, but today I'm creating an example for another team that uses hg).</p>
",""
"37061405","2","7781260","<p>There is an infinity in the NumPy library: <code>from numpy import inf</code>. To get negative infinity one can simply write <code>-inf</code>.</p>
",""
"37122327","2","61151","<p>I recommend you check some main Python projects on GitHub and get some ideas.</p>

<p>When your code gets larger and you add more libraries it's better to create a test folder in the same directory you have setup.py and mirror your project directory structure for each test type (unittest, integration, ...)</p>

<p>For example if you have a directory structure like:</p>

<pre><code>myPackage/
    myapp/
       moduleA/
          __init__.py
          module_A.py
       moduleB/
          __init__.py
          module_B.py
setup.py
</code></pre>

<p>After adding test folder you will have a directory structure like:</p>

<pre><code>myPackage/
    myapp/
       moduleA/
          __init__.py
          module_A.py
       moduleB/
          __init__.py
          module_B.py
test/
   unit/
      myapp/
         moduleA/
            module_A_test.py
         moduleB/
            module_B_test.py
   integration/
          myapp/
             moduleA/
                module_A_test.py
             moduleB/
                module_B_test.py
setup.py
</code></pre>

<p>Many properly written Python packages uses the same structure. A very good example is the Boto package.
Check <a href=""https://github.com/boto/boto"" rel=""nofollow"">https://github.com/boto/boto</a></p>
",""
"37448954","2","60208","<p>If you don't worry losing syntax highlight inside the case suites, you can do the following:</p>

<pre><code>exec {
    1: """"""
print ('one')
"""""", 
    2: """"""
print ('two')
"""""", 
    3: """"""
print ('three')
"""""",
}.get(value, """"""
print ('None')
"""""")
</code></pre>

<p>Where <code>value</code> is the value. In C, this would be:</p>

<pre><code>switch (value) {
    case 1:
        printf(""one"");
        break;
    case 2:
        printf(""two"");
        break;
    case 3:
        printf(""three"");
        break;
    default:
        printf(""None"");
        break;
}
</code></pre>

<p>We can also create a helper function to do this:</p>

<pre><code>def switch(value, cases, default):
    exec cases.get(value, default)
</code></pre>

<p>So we can use it like this for the example with one, two and three:</p>

<pre><code>switch(value, {
    1: """"""
print ('one')
    """""", 
    2: """"""
print ('two')
    """""", 
    3: """"""
print ('three')
    """""",
}, """"""
print ('None')
"""""")
</code></pre>
",""
"37464502","2","34439","<p>I believe that what you want is something like this: </p>

<blockquote>
  <p>a list of attributes/methods of an object </p>
</blockquote>

<p>IMHO, <strong>dir()</strong> built-in can do this job for you.</p>

<pre><code>$ python
Python 2.7.6 (default, Jun 22 2015, 17:58:13) 
[GCC 4.8.2] on linux2
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.

&gt;&gt;&gt; a = ""I am a string""
&gt;&gt;&gt; dir(a)
['__add__', '__class__', '__contains__', '__delattr__', '__doc__',
'__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__',
'__getnewargs__', '__getslice__', '__gt__', '__hash__', '__init__',
'__le__', '__len__', '__lt__', '__mod__', '__mul__', '__ne__', '__new__',
'__reduce__', '__reduce_ex__', '__repr__', '__rmod__', '__rmul__',
'__setattr__', '__sizeof__', '__str__', '__subclasshook__',
'_formatter_field_name_split', '_formatter_parser', 'capitalize',
'center', 'count', 'decode', 'encode', 'endswith', 'expandtabs', 'find',
'format', 'index', 'isalnum', 'isalpha', 'isdigit', 'islower', 'isspace',
'istitle', 'isupper', 'join', 'ljust', 'lower', 'lstrip', 'partition',
'replace', 'rfind', 'rindex', 'rjust', 'rpartition', 'rsplit', 'rstrip',
'split', 'splitlines', 'startswith', 'strip', 'swapcase', 'title',
'translate', 'upper', 'zfill']
</code></pre>

<p>As I was checking your issue, I decided to make a script in order to better format and demonstrate the output of dir(). </p>

<p>Here goes:</p>

<p><strong>list_objects_methods.py</strong></p>

<pre><code>#!/usr/bin/python
OBJ = ""I am a string.""
COUNT = 0

for method in dir(OBJ):
    print ""| {0: &lt;20}"".format(method),
    COUNT += 1
    if COUNT == 4:
        COUNT = 0
        print
</code></pre>

<p>Hope that I have contributed :). Regards!</p>
",""
"37894455","2","23329034","<p>It is just fine.
Python may be installed in multiple places in your computer.
When you get a new Mac, the default python directory may be </p>

<pre><code> 'usr/bin/python2.7'
</code></pre>

<p>You may also have a directory </p>

<pre><code>'System/Library/Frameworks/Python.framework/Versions/2.7/bin/python'
</code></pre>

<p>The first one is the symlink of the second one.</p>

<p>If you use HomeBrew to install python, you may get a directory in </p>

<pre><code>'usr/local/bin/python2.7'
</code></pre>

<p>You may also have a directory as </p>

<pre><code>'Library/Frameworks/Python.framework/Versions/2.7/bin/python'
</code></pre>

<p>which is exactly where my directory is.</p>

<p>The difference between the second one and the fourth one, you may find it here
<a href=""https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPFrameworks/Tasks/InstallingFrameworks.html"" rel=""noreferrer"">Installing Your Framework</a></p>

<p>In your question, as you mentioned pip install is successful, but the installed packages still not available. I may guess your pip directory is not in your default python directory, and the packages are installed where your pip directory is. (Please use <code>'which pip'</code> to check it out)</p>

<p>For example, in my computer, the default pip directory is </p>

<pre><code>/Library/Frameworks/Python.framework/Versions/2.7/bin/pip
</code></pre>

<p>though, I have also pip in usr/local/bin.</p>

<p>So, all my packages installed via 'pip install' are stored in</p>

<pre><code>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages
</code></pre>

<p>Hope that resolves your doubt. Similar things have happened to me, and it took me a whole night to figure out.</p>

<p>Here is the solution:
Use <code>PYTHONPATH=""/usr/local/lib/python2.7/site-packages:$PYTHONPATH""</code> to modify your python directory, or modify your pip directory.
However, I would recommend a better way, use <strong><a href=""https://virtualenv.pypa.io/en/stable/"" rel=""noreferrer"">virtualenv</a></strong>. This can isolates Python environments, and can help you easily set up packages for each project.</p>
",""
"37910705","2","60649","<p>I can suggest you to use the <a href=""https://github.com/saprykin/plibsys"" rel=""nofollow"">plibsys</a> C library. It is very simple, lightweight and cross-platform. Released under the LGPL. It provides:</p>

<ul>
<li>named system-wide shared memory regions (System V, POSIX and Windows implementations);</li>
<li>named system-wide semaphores for access synchronization (System V, POSIX and Windows implementations);</li>
<li>named system-wide shared buffer implementation based on the shared memory and semaphore;</li>
<li>sockets (TCP, UDP, SCTP) with IPv4 and IPv6 support (UNIX and Windows implementations).</li>
</ul>

<p>It is easy to use library with quite a good documentation. As it is written in C you can easily make bindings from scripting languages.</p>

<p>If you need to pass large data sets between processes (especially if speed is essential) it is better to use shared memory to pass the data itself and sockets to notify a process that the data is ready. You can make it as following:</p>

<ul>
<li>a process puts the data into a shared memory segment and sends a notification via a socket to another process; as a notification usually is very small the time overhead is minimal;</li>
<li>another process receives the notification and reads the data from the shared memory segment; after that it sends a notification that the data was read back to the first process so it can feed more data.</li>
</ul>

<p>This approach can be implemented in a cross-platform fashion.</p>
",""
"38441518","2","31074172","<p>You can check for reference pure python implementation of secp256k1, secp256r1 and ed25519 available at <a href=""https://github.com/user8547/fast-ecc-python"" rel=""nofollow"">https://github.com/user8547/fast-ecc-python</a>.</p>
",""
"38730628","2","37535","<p>It's 2016 now and I had to fiddle with the dbf package to get it to work. Here is a python3 version to just export a dbf file to a csv</p>

<pre><code>import dbf

d=dbf.Table('mydbf.dbf')
d.open()
dbf.export(d, filename='mydf_exported.csv', format='csv', header=True)
</code></pre>

<p>I had some unicode error at first, but got around that by turning off memos.</p>

<pre><code>import dbf

d=dbf.Table('mydbf.dbf', ignore_memos=True)
d.open()
dbf.export(d, filename='mydf_exported.csv', format='csv', header=True)
</code></pre>
",""
"38757611","1","","<p>I am trying to modify the default Python compilation environment options in Visual Studio.</p>

<p>The option directory is at <code>Options -&gt; Python Tools -&gt; Environment Options</code>.</p>

<p>However, after I added a new custom environment, changed the default environment to the custom one, and clicked ""OK"" to save, I found that the settings go back to the default ""Python 3.4"".</p>

<p>How can I really save these changes?  </p>
","<python><visual-studio-2015>"
"38757655","1","","<p>Based on this qs from stackoverflow:
<a href=""https://stackoverflow.com/questions/29738859/sql-where-in-clause-using-column-in-pandas-dataframe"">SQL where in clause using column in pandas dataframe</a></p>

<p>I tried:</p>

<pre><code>import pandas as pd

df1 = pd.DataFrame()
df1['col1'] = [1,2,3,4,5]

str = ','.join([str(x) for x in df1['col1'].unique().tolist()])
</code></pre>

<p>However, I see the below error:</p>

<pre><code>TypeError: 'list' object is not callable
</code></pre>

<p>I want to query all the unique items in a column into another SQL table and then append those results to my original dataframe</p>

<p>is there another built-in approach altogether for this pls?</p>

<p>thanks</p>
","<python><sql><pandas>"
"38757657","1","","<p>I have a <code>(M x N)</code> numpy array, which contains string values, numerical values and nans. I want to drop the rows which contain <code>NaN</code> values. I've tried:</p>

<pre><code>arr[~np.isnan(arr)]
</code></pre>

<p>however i get the error: </p>

<pre><code>TypeError: ufunc 'isnan' not supported for the input types, and the inputs 
could not be safely coerced to any supported types according to the casting rule ''save''
</code></pre>

<p>Solution that I used:</p>

<pre><code># get column with NaNs, find row index, store in list
nan_idx = []
for v,m in enumerate(arr[:,row]):
    if np.isnan(m):
        nan_idx.append(v)

# separate columns with strings and non strings
numeric_cols = arr[:,:some_idx]
non_numeric_cols = arr[:,other_idx:]

# remove the nans
numeric_cols = numeric_cols[~np.isnan(numeric_cols).any(axis=1)]
non_numeric_cols = np.delete(non_numeric_cols, nan_idx, 0)
</code></pre>
","<python><arrays><numpy>"
"38757701","1","","<p>I have a network I want to output to a json file.  However, when I output it, node targets become converted to numbers and do not match the node ids which are strings.</p>

<p>For example:</p>

<pre><code>G = nx.DiGraph(data)
G.edges()
</code></pre>

<p>results in:</p>

<pre><code>[(22, 'str1'),
(22, 'str2'),
(22, 'str3')]
</code></pre>

<p>in python.  This is correct.</p>

<p>But in the output, when I write out the data like so...</p>

<pre><code>json.dump(json_graph.node_link_data(G), f, 
          indent = 4, sort_keys = True, separators=(',',':'))
</code></pre>

<p>while the ids for the three target nodes 'str1', 'str2', and 'str3'...</p>

<pre><code>{
    ""id"":""str1""
},
{
    ""id"":""str2""
},
{
    ""id"":""str3""
}
</code></pre>

<p>The targets of node 22 have been turned into numbers</p>

<pre><code>    {
        ""source"":22,
        ""target"":972
    },
    {
        ""source"":22,
        ""target"":1261
    },
    {
        ""source"":22,
        ""target"":1259
    }
</code></pre>

<p>This happens for all nodes that have string ids</p>

<p>Why is this, and how can I prevent it?</p>

<p>The desired result is that either ""target"" fields should keep the string ids, or that the string ids become numeric in a way that they match the targets.</p>
","<python><networkx>"
"38757713","1","","<p>I have large csv files with size more than 10 mb each and about 50+ such files. These inputs have more than 25 columns and more than 50K rows. </p>

<p>All these have same headers and I am trying to merge them into one csv with headers to be mentioned only one time. </p>

<p>Option: One
Code: Working for small sized csv -- 25+ columns but size of the file in kbs.</p>

<pre><code>import pandas as pd
import glob

interesting_files = glob.glob(""*.csv"")
df_list = []
for filename in sorted(interesting_files):
    df_list.append(pd.read_csv(filename))

full_df = pd.concat(df_list)

full_df.to_csv('output.csv')
</code></pre>

<p>But the above code does not work for the larger files and gives the error.  </p>

<p>Error: </p>

<pre><code>Traceback (most recent call last):
  File ""merge_large.py"", line 6, in &lt;module&gt;
    all_files = glob.glob(""*.csv"", encoding='utf8', engine='python')     
TypeError: glob() got an unexpected keyword argument 'encoding'
lakshmi@lakshmi-HP-15-Notebook-PC:~/Desktop/Twitter_Lat_lon/nasik_rain/rain_2$ python merge_large.py 
Traceback (most recent call last):
  File ""merge_large.py"", line 10, in &lt;module&gt;
    df = pd.read_csv(file_,index_col=None, header=0)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/io/parsers.py"", line 562, in parser_f
    return _read(filepath_or_buffer, kwds)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/io/parsers.py"", line 325, in _read
    return parser.read()
  File ""/usr/local/lib/python2.7/dist-packages/pandas/io/parsers.py"", line 815, in read
    ret = self._engine.read(nrows)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/io/parsers.py"", line 1314, in read
    data = self._reader.read(nrows)
  File ""pandas/parser.pyx"", line 805, in pandas.parser.TextReader.read (pandas/parser.c:8748)
  File ""pandas/parser.pyx"", line 827, in pandas.parser.TextReader._read_low_memory (pandas/parser.c:9003)
  File ""pandas/parser.pyx"", line 881, in pandas.parser.TextReader._read_rows (pandas/parser.c:9731)
  File ""pandas/parser.pyx"", line 868, in pandas.parser.TextReader._tokenize_rows (pandas/parser.c:9602)
  File ""pandas/parser.pyx"", line 1865, in pandas.parser.raise_parser_error (pandas/parser.c:23325)
pandas.io.common.CParserError: Error tokenizing data. C error: Buffer overflow caught - possible malformed input file.
</code></pre>

<p>Code: Columns 25+ but size of the file more than 10mb </p>

<p>Option: <a href=""https://stackoverflow.com/questions/20906474/import-multiple-csv-files-into-pandas-and-concatenate-into-one-dataframe"">Two</a>
Option: <a href=""https://stackoverflow.com/questions/36915188/pandas-cparsererror-error-tokenizing-data"">Three</a></p>

<p>Option: Four </p>

<pre><code>import pandas as pd
import glob

    interesting_files = glob.glob(""*.csv"")
    df_list = []
    for filename in sorted(interesting_files):
        df_list.append(pd.read_csv(filename))

    full_df = pd.concat(df_list)

    full_df.to_csv('output.csv')
</code></pre>

<p>Error: </p>

<pre><code>Traceback (most recent call last):
  File ""merge_large.py"", line 6, in &lt;module&gt;
    allFiles = glob.glob(""*.csv"", sep=None)
TypeError: glob() got an unexpected keyword argument 'sep'
</code></pre>

<p>I have searched extensively but I am not able to find a solution to concatenate large csv files with same headers into one file. </p>

<p><strong>Edit:</strong> </p>

<p>Code:</p>

<pre><code>import dask.dataframe as dd  

ddf = dd.read_csv('*.csv')

ddf.to_csv('master.csv',index=False)
</code></pre>

<p>Error:</p>

<pre><code>Traceback (most recent call last):
  File ""merge_csv_dask.py"", line 5, in &lt;module&gt;
    ddf.to_csv('master.csv',index=False)
  File ""/usr/local/lib/python2.7/dist-packages/dask/dataframe/core.py"", line 792, in to_csv
    return to_csv(self, filename, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/dask/dataframe/io.py"", line 762, in to_csv
    compute(*values)
  File ""/usr/local/lib/python2.7/dist-packages/dask/base.py"", line 179, in compute
    results = get(dsk, keys, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/dask/threaded.py"", line 58, in get
    **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/dask/async.py"", line 481, in get_async
    raise(remote_exception(res, tb))
dask.async.ValueError: could not convert string to float: {u'type': u'Point', u'coordinates': [4.34279, 50.8443]}

Traceback
---------
  File ""/usr/local/lib/python2.7/dist-packages/dask/async.py"", line 263, in execute_task
    result = _execute_task(task, data)
  File ""/usr/local/lib/python2.7/dist-packages/dask/async.py"", line 245, in _execute_task
    return func(*args2)
  File ""/usr/local/lib/python2.7/dist-packages/dask/dataframe/csv.py"", line 49, in bytes_read_csv
    coerce_dtypes(df, dtypes)
  File ""/usr/local/lib/python2.7/dist-packages/dask/dataframe/csv.py"", line 73, in coerce_dtypes
    df[c] = df[c].astype(dtypes[c])
  File ""/usr/local/lib/python2.7/dist-packages/pandas/core/generic.py"", line 2950, in astype
    raise_on_error=raise_on_error, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py"", line 2938, in astype
    return self.apply('astype', dtype=dtype, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py"", line 2890, in apply
    applied = getattr(b, f)(**kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py"", line 434, in astype
    values=values, **kwargs)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/core/internals.py"", line 477, in _astype
    values = com._astype_nansafe(values.ravel(), dtype, copy=True)
  File ""/usr/local/lib/python2.7/dist-packages/pandas/core/common.py"", line 1920, in _astype_nansafe
    return arr.astype(dtype
</code></pre>

<p>)</p>
","<python><csv><pandas><concatenation>"
"38757724","1","","<p>I am running this code on Python 3. I encoded the data using <code>.encode('utf_8')</code> while accepting from the server. But now I want to <code>decode</code> it in order make it human readable.</p>

<pre><code> All1 = soup.findAll('tag_name', class_='class_name')
 All2 = """".join([p.text for p in All1])
 str = ""1"",All2.encode('utf_8')
 print(str.decode('utf_8')) 
</code></pre>

<p>But it is giving the following error:</p>

<pre><code>print(str.decode('utf_8'))
    AttributeError: 'tuple' object has no attribute 'decode'
</code></pre>

<p>How can I decode it ?</p>
","<python><string><python-3.x><encoding>"
"38757750","2","38757724","<p><code>str</code> (don't name your variables after built-in functions, by the way) is a <code>tuple</code>, not a string.</p>

<pre><code>str = ""1"",All2.encode('utf_8')
</code></pre>

<p>This is equivalent to the more readable:</p>

<pre><code>str = (""1"", All2.encode('utf_8'))
</code></pre>

<p>I don't know what you need the <code>""1""</code> for, but you might try this:</p>

<pre><code>num, my_string = '1', All2.encode('utf_8')
</code></pre>

<p>And then decode the string:</p>

<pre><code>print(my_string.decode('utf_8'))
</code></pre>
",""
"38757759","2","38757655","<p>Maybe something like:</p>

<pre><code>df1['new'] = df1['col1'].apply(lambda x: f(x) if x in df1['col1'].unique().tolist() else 'n/a')
</code></pre>

<p>You'll need to define f(x) to take in the unique value, run the query, and return the results you want to append.  You can also change 'n/a' to whatever you want if it is not a unique value.  </p>

<pre><code>def f(x):
    ""RUN QUERY HERE""
    return result
</code></pre>
",""
"38757830","1","","<p>I just want to write a simple log in script for Apple website:
<a href=""https://secure2.store.apple.com/shop/sign_in?c=aHR0cDovL3d3dy5hcHBsZS5jb20vc2hvcC9iYWd8MWFvczVjNGU3ZWNjZjgwODVjNWY4NDk0OTA0ODJhMDc2Y2FkNmU3ODJkOTE&amp;o=O01LV0gy&amp;r=SXYD4UDAPXU7P7KXF&amp;s=aHR0cHM6Ly9zZWN1cmUyLnN0b3JlLmFwcGxlLmNvbS9zaG9wL2NoZWNrb3V0L3N0YXJ0P3BsdG49RkNBRjZGQjR8MWFvczAyZmZkZjQwNTgwOGI4ZTNkMDQ5MWRiM2NmZmExYTgxNzRkZTllMjY&amp;t=SXYD4UDAPXU7P7KXF&amp;up=t"" rel=""nofollow"">Sign In</a></p>

<p>The ID and password form cannot be located properly. 
Actually, I tried a lot of thing like:</p>

<pre><code> driver.find_element_by_xpath(""//*[@type='email']"")
</code></pre>

<p>or  </p>

<pre><code> driver.find_element_by_xpath(""//*[@name='login-appleId']"")
</code></pre>

<p>and </p>

<pre><code> driver.find_element_by_xpath(""//*[@id='login-appleId']"")
</code></pre>

<p>I did not find any iframe in this page. And I tried same thing for customer checkout button, also same problem happens. </p>

<p>Any suggestions would be appreciate!</p>

<p>Best,
Luke</p>
","<python><selenium-webdriver>"
"38757831","1","","<p>I have a set of data like</p>

<pre><code>schedule = [(2, 5),
            (4, 6),
            (10, 2)]
</code></pre>

<p>with the first element of each tuple being a time (in seconds) and the second element being a value.</p>

<p>I would like to start a separate thread which tracks the time and at each scheduled time runs some arbitrary function <code>func(value)</code>.</p>

<p>What is the cleanest way to do this? I could create a Timer object for each scheduled time, but that seems sloppy.</p>

<p>edit: You can assume the times are in ascending order</p>
","<python><timer><python-multithreading>"
"38757906","1","","<p>For the life of me, I cannot figure out how to do a non-blocking serial read in Python 3 using my Raspberry Pi.</p>

<p>Here's my code: </p>

<pre><code>import serial #for pySerial

ser = serial.Serial('/dev/ttyUSB0', 9600) #open serial port
print ('serial port = ' + ser.name) #print the port used

while (True):
    if (ser.in_waiting&gt;0):
        ser.read(ser.in_waiting)
</code></pre>

<p>Result:<br>
<code>AttributeError: 'Serial' object has no attribute 'in_waiting'</code></p>

<p>Here's the reference page I'm referencing that told me ""in_waiting"" exists: <a href=""http://pyserial.readthedocs.io/en/latest/pyserial_api.html"" rel=""nofollow"">http://pyserial.readthedocs.io/en/latest/pyserial_api.html</a></p>
","<python><raspberry-pi><pyserial>"
"38757936","1","","<p>I'm having trouble getting the python appengine-gcs-client demo working using the 1.9.40 (latest presently) SDK's <code>dev_appserver.py</code>.</p>

<p>I followed the <a href=""https://cloud.google.com/appengine/docs/python/googlecloudstorageclient/setting-up-cloud-storage"" rel=""nofollow"">Setting Up Google Cloud Storage</a> and the <a href=""https://cloud.google.com/appengine/docs/python/googlecloudstorageclient/app-engine-cloud-storage-sample"" rel=""nofollow"">App Engine and Google Cloud Storage Sample</a> instructions.</p>

<p>I created the default bucket for a paid app, with billing enabled and a non-zero daily spending limit set. I successfully uploaded a file to that bucket using the developer console.</p>

<p>I cloned the <a href=""https://github.com/GoogleCloudPlatform/appengine-gcs-client"" rel=""nofollow"">GoogleCloudPlatform/appengine-gcs-client</a> repo from github. I copied the <code>python/src/cloudstorage</code> dir into the <code>python/demo</code> dir, which now looks like this:</p>

<pre><code>dancorn-laptop.acasa:/home/dancorn/src/appengine-gcs-client/python&gt; find demo/ | sort
demo/
demo/app.yaml
demo/blobstore.py
demo/cloudstorage
demo/cloudstorage/api_utils.py
demo/cloudstorage/api_utils.pyc
demo/cloudstorage/cloudstorage_api.py
demo/cloudstorage/cloudstorage_api.pyc
demo/cloudstorage/common.py
demo/cloudstorage/common.pyc
demo/cloudstorage/errors.py
demo/cloudstorage/errors.pyc
demo/cloudstorage/__init__.py
demo/cloudstorage/__init__.pyc
demo/cloudstorage/rest_api.py
demo/cloudstorage/rest_api.pyc
demo/cloudstorage/storage_api.py
demo/cloudstorage/storage_api.pyc
demo/cloudstorage/test_utils.py
demo/__init__.py
demo/main.py
demo/main.pyc
demo/README
</code></pre>

<p>This is how I executed the devserver and the errors reported when trying to access <a href=""http://localhost:8080"" rel=""nofollow"">http://localhost:8080</a> as instructed:</p>

<pre><code>dancorn-laptop.acasa:/home/dancorn/src/appengine-gcs-client/python&gt; /home/usr_local/google_appengine_1.9.40/dev_appserver.py demo
INFO     2016-08-04 01:07:51,786 sdk_update_checker.py:229] Checking for updates to the SDK.
INFO     2016-08-04 01:07:51,982 sdk_update_checker.py:257] The SDK is up to date.
INFO     2016-08-04 01:07:52,121 api_server.py:205] Starting API server at: http://localhost:50355
INFO     2016-08-04 01:07:52,123 dispatcher.py:197] Starting module ""default"" running at: http://localhost:8080
INFO     2016-08-04 01:07:52,124 admin_server.py:116] Starting admin server at: http://localhost:8000
INFO     2016-08-04 01:08:03,461 client.py:804] Refreshing access_token
INFO     2016-08-04 01:08:05,234 client.py:827] Failed to retrieve access token: {
  ""error"" : ""internal_failure""
}
ERROR    2016-08-04 01:08:05,236 api_server.py:272] Exception while handling service_name: ""app_identity_service""
method: ""GetAccessToken""
request: ""\n7https://www.googleapis.com/auth/devstorage.full_control""
request_id: ""ccqdTObLrl""

Traceback (most recent call last):
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/tools/devappserver2/api_server.py"", line 247, in _handle_POST
    api_response = _execute_request(request).Encode()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/tools/devappserver2/api_server.py"", line 186, in _execute_request
    make_request()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/tools/devappserver2/api_server.py"", line 181, in make_request
    request_id)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/api/apiproxy_stub.py"", line 131, in MakeSyncCall
    method(request, response)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/api/app_identity/app_identity_defaultcredentialsbased_stub.py"", line 192, in _Dynamic_GetAccessToken
    token = credentials.get_access_token()
  File ""/home/usr_local/google_appengine_1.9.40/lib/oauth2client/oauth2client/client.py"", line 689, in get_access_token
    self.refresh(http)
  File ""/home/usr_local/google_appengine_1.9.40/lib/oauth2client/oauth2client/client.py"", line 604, in refresh
    self._refresh(http.request)
  File ""/home/usr_local/google_appengine_1.9.40/lib/oauth2client/oauth2client/client.py"", line 775, in _refresh
    self._do_refresh_request(http_request)
  File ""/home/usr_local/google_appengine_1.9.40/lib/oauth2client/oauth2client/client.py"", line 840, in _do_refresh_request
    raise AccessTokenRefreshError(error_msg)
AccessTokenRefreshError: internal_failure

WARNING  2016-08-04 01:08:05,239 tasklets.py:468] suspended generator _make_token_async(rest_api.py:55) raised RuntimeError(AccessTokenRefreshError(u'internal_failure',))
WARNING  2016-08-04 01:08:05,240 tasklets.py:468] suspended generator get_token_async(rest_api.py:224) raised RuntimeError(AccessTokenRefreshError(u'internal_failure',))
WARNING  2016-08-04 01:08:05,240 tasklets.py:468] suspended generator urlfetch_async(rest_api.py:259) raised RuntimeError(AccessTokenRefreshError(u'internal_failure',))
WARNING  2016-08-04 01:08:05,240 tasklets.py:468] suspended generator run(api_utils.py:164) raised RuntimeError(AccessTokenRefreshError(u'internal_failure',))
WARNING  2016-08-04 01:08:05,240 tasklets.py:468] suspended generator do_request_async(rest_api.py:198) raised RuntimeError(AccessTokenRefreshError(u'internal_failure',))
WARNING  2016-08-04 01:08:05,241 tasklets.py:468] suspended generator do_request_async(storage_api.py:128) raised RuntimeError(AccessTokenRefreshError(u'internal_failure',))
ERROR    2016-08-04 01:08:05,241 main.py:62] AccessTokenRefreshError(u'internal_failure',)
Traceback (most recent call last):
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/main.py"", line 43, in get
    self.create_file(filename)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/main.py"", line 89, in create_file
    retry_params=write_retry_params)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/cloudstorage_api.py"", line 97, in open
    return storage_api.StreamingBuffer(api, filename, content_type, options)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/storage_api.py"", line 697, in __init__
    status, resp_headers, content = self._api.post_object(path, headers=headers)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/rest_api.py"", line 82, in sync_wrapper
    return future.get_result()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 383, in get_result
    self.check_success()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 427, in _help_tasklet_along
    value = gen.throw(exc.__class__, exc, tb)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/storage_api.py"", line 128, in do_request_async
    deadline=deadline, callback=callback)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 427, in _help_tasklet_along
    value = gen.throw(exc.__class__, exc, tb)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/rest_api.py"", line 198, in do_request_async
    follow_redirects=False)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 427, in _help_tasklet_along
    value = gen.throw(exc.__class__, exc, tb)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/api_utils.py"", line 164, in run
    result = yield tasklet(**kwds)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 427, in _help_tasklet_along
    value = gen.throw(exc.__class__, exc, tb)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/rest_api.py"", line 259, in urlfetch_async
    self.token = yield self.get_token_async()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 427, in _help_tasklet_along
    value = gen.throw(exc.__class__, exc, tb)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/rest_api.py"", line 224, in get_token_async
    self.scopes, self.service_account_id)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 427, in _help_tasklet_along
    value = gen.throw(exc.__class__, exc, tb)
  File ""/home/dancorn/src/appengine-gcs-client/python/demo/cloudstorage/rest_api.py"", line 55, in _make_token_async
    token, expires_at = yield rpc
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/ndb/tasklets.py"", line 513, in _on_rpc_completion
    result = rpc.get_result()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/api/apiproxy_stub_map.py"", line 613, in get_result
    return self.__get_result_hook(self)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/api/app_identity/app_identity.py"", line 519, in get_access_token_result
    rpc.check_success()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/api/apiproxy_stub_map.py"", line 579, in check_success
    self.__rpc.CheckSuccess()
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/api/apiproxy_rpc.py"", line 157, in _WaitImpl
    self.request, self.response)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/remote_api/remote_api_stub.py"", line 201, in MakeSyncCall
    self._MakeRealSyncCall(service, call, request, response)
  File ""/home/usr_local/google_appengine_1.9.40/google/appengine/ext/remote_api/remote_api_stub.py"", line 235, in _MakeRealSyncCall
    raise pickle.loads(response_pb.exception())
RuntimeError: AccessTokenRefreshError(u'internal_failure',)
INFO     2016-08-04 01:08:05,255 module.py:788] default: ""GET / HTTP/1.1"" 200 249
</code></pre>

<p>I was surprised when I saw the attempt to contact a Google server, I was expecting to use a faked, local filesystem-based emulation, based on these notes from the <a href=""https://cloud.google.com/appengine/docs/python/googlecloudstorageclient/app-engine-cloud-storage-sample"" rel=""nofollow"">App Engine and Google Cloud Storage Sample</a> instructions:</p>

<ul>
<li><a href=""https://cloud.google.com/appengine/docs/python/googlecloudstorageclient/setting-up-cloud-storage#using_the_client_library_with_the_development_app_server"" rel=""nofollow"">Using the client library with the development app server</a>:</li>
</ul>

<blockquote>
  <p>You can use the client library with the development server.</p>

<pre><code>**Note**: Files saved locally are subject to the file size and naming conventions imposed by the local filesystem.
</code></pre>
</blockquote>

<ul>
<li><a href=""https://cloud.google.com/appengine/docs/python/googlecloudstorageclient/app-engine-cloud-storage-sample#appyaml_walkthrough"" rel=""nofollow"">app.yaml walkthrough</a>:</li>
</ul>

<blockquote>
  <p>You specify the project ID in the line application: your-app-id,
  replacing the value your-app-id. This value isn't used when running
  locally, but you must supply a valid project ID before deploying: the
  deployment utility reads this entry to determine where to deploy your
  app.</p>
</blockquote>

<ul>
<li><a href=""https://cloud.google.com/appengine/docs/python/googlecloudstorageclient/app-engine-cloud-storage-sample#deploying_the_sample"" rel=""nofollow"">Deploying the Sample</a>, step 5:</li>
</ul>

<blockquote>
  <p>In your browser, visit https://.appspot.com; the
  application will execute on page load, just as it did when running
  locally. Only this time, the app will actually be writing to and
  reading from a real bucket.</p>
</blockquote>

<p>I even placed my real app's ID into the <code>app.yaml</code> file, but that didn't make any difference.</p>

<p>I've checked the known GAE issues and only found this potentially related one, but on a much older SDK version:</p>

<ul>
<li><a href=""https://code.google.com/p/googleappengine/issues/detail?id=11690"" rel=""nofollow"">Issue 11690</a> GloudStorage bug in GoogleAppEngineLanucher development server</li>
</ul>

<p>I checked a few older SDK versions I have around (1.9.30, 1.9.35), just in case - no difference either.</p>

<p>My questions:</p>

<ol>
<li>How can I make the GCS client operate locally (w/ faked GCS based on the local filesystem) when it's used with dev_appserver.py?</li>
<li>Since it's mentioned it should work with the real GCS as well even when used with dev_appserver.py what do I need to do to achieve that? (less important, more of a curiosity)</li>
</ol>
","<python><google-app-engine><google-cloud-storage>"
"38757962","2","38757830","<p>I recommend you try the following:</p>

<pre><code>driver.find_element_by_id(""login-appleId"")
driver.find_element_by_id(""login-password"")
</code></pre>
",""
"38757994","1","","<p>what module can be use from luigi for update/delete data into database? i have use copy to table and sql alchemy for inserting data. for update and delete document is not clear how can it be achieved? please advise.</p>
","<python><apache><luigi>"
"38758029","1","","<p>I would like to integrate <code>python</code> scripts into my <code>pandorabot</code> written in <code>aiml</code>. </p>

<p>I know that you can tag <code>aiml</code> syntax with <code>javascript</code>, but I haven't found any documentation on <code>python</code>, except the following, which uses <code>&lt;oob&gt;</code> (out of bounds) tags, running services on the background:</p>

<pre><code>&lt;oob&gt;
  &lt;mrl&gt;
    &lt;service&gt;python&lt;/service&gt;
    &lt;method&gt;exec&lt;/method&gt;
    &lt;param&gt;myfuction()&lt;param&gt;
  &lt;/mrl&gt;
&lt;/oob&gt;
</code></pre>

<p><code>&lt;mrl&gt;</code>tags stands for <a href=""https://github.com/MyRobotLab/myrobotlab"" rel=""nofollow"">myrobot lab</a>, and it is part of <code>program-ab</code>, a <code>java framework</code> for actual robotics. </p>

<p>But I would like to use my <code>app</code> solely on the web...</p>

<p>I also came across <code>pyAiml</code>, but as for now I haven't see how it would help me to achieve my goal.</p>

<p><strong>MY GOAL</strong>:</p>

<p>I want to use <code>python</code> because it manipulates <code>NLTK</code> (<a href=""http://www.nltk.org/"" rel=""nofollow"">http://www.nltk.org/</a>), a Natural Language Toolkit which handles huge literary corpus, and I would like to integrate this library to my bot capabilities.</p>

<p>lets say I have a <code>&lt;pattern&gt;PYTHON&lt;/pattern&gt;</code>, and it  would run a python script.</p>

<p>the script, on its turn, would <code>import nltk</code> (and its corpus), linking AIML <code>patterns</code>, or ""questions"" to PYTHON <code>templates</code>, or ""answers""?</p>

<p>any clues on how I could achieve this? many thanks in advance.</p>
","<python><nltk><aiml><pandorabots>"
"38758084","1","","<p>this is what I am trying to do. I created a method that will upload a file however, I would like to change its file name. I was able to change the filename but I also lost the extension.</p>

<p>this is how my codes look:</p>

<pre><code>def upload_delivery_to_media(self,deliveryId, deliveryFile):

    with open('/app/media/TaskDelivery/'+str(delivery), 'wb+') as destination:
        for chunk in deliveryFile.chunks():
            destination.write(chunk)

    return ""Done uploading""
</code></pre>

<p>but the file looks like <code>324329432840932</code> only when I am expecting something like <code>324329432840932.jpg</code></p>
","<python><django>"
"38758158","1","","<p>I'm trying to generate the csv with delimiter '@|@' but, I couldn't achieve through below code.</p>

<pre><code>import csv
ifile  = open('test.csv', ""rb"")
reader = csv.reader(ifile)
ofile  = open('ttest.csv', ""wb"")
writer = csv.writer(ofile, delimiter='|', quotechar='""', quoting=csv.QUOTE_ALL)
for row in reader:
    writer.writerow(row)
ifile.close()
ofile.close()
</code></pre>

<p>While running, It has thrown below error.</p>

<pre class=""lang-none prettyprint-override""><code>Traceback (most recent call last):

File ""csvfile.py"", line 6, in &lt;module&gt;
writer = csv.writer(ofile, delimiter='@|@', quotechar='""', quoting=csv.QUOTE_ALL)
TypeError: ""delimiter"" must be an 1-character string
</code></pre>

<p>How can I achieve this?</p>
","<python><csv>"
"38758187","1","","<p><code>'=' not in access and name + '.' not in access</code></p>

<p>I hope to avoid the multiplicity of <code>not in access</code>s in a line of Python code. I've used expression evaluation loops for cases of higher numbers of repetitions for convenience but it just seems odd at two.</p>
","<python><repetition><non-repetitive>"
"38758221","1","","<p>I am trying to access the comment textbox in a generic huffington post artical. When I right click inspect element I get the following HTML code:</p>

<pre><code>&lt;div class=""UFIInputContainer""&gt;
 &lt;div class=""_1cb _5yk1""&gt;
  &lt;div class=""_5yk2"" tabindex=""-2""&gt;
   &lt;div class=""_5rp7""&gt;
</code></pre>

<p>with the line <code>&lt;div class=""_1cb _5yk1""&gt;</code> highlighted.</p>

<pre><code>from selenium import webdriver
driver = webdriver.Chrome()
'''
Just pretend that I put in some code to log in to facebook
so I can actually post a comment on huffington post
'''
driver.get.('http://www.huffingtonpost.com/entry/worst-suicide-squad-reviews_us_57a1e213e4b0693164c34744?')
'''
Just a random artical about a movie
'''
comment_box = driver.find_element_by_css_selector('._1cb._5yk1')
'''
since this is a compound class I think I should use find_by_css_selector
'''
</code></pre>

<p>When I run this though, I get the error message: ""no such element found"". I have tried other methods of trying to get a hold of the comment textbox but I get the same error message and I am at a lost of how to access it. I am hoping somebody can shed some light on this problem.</p>

<p>edit: This is a more complete HTML code:</p>

<pre><code>&lt;html lang=""en"" id=""facebook"" class=""svg ""&gt;
 &lt;head&gt;...&lt;/head&gt;
  &lt;body dir=""ltr"" class=""plugin chrome webkit win x1 Locale_en_US""&gt;
   &lt;div class=""_li""&gt;
    &lt;div class=""pluginSkinLight pluginFontHelvetica""&gt;
     &lt;div id=""u_0_0""&gt;
      &lt;div data-reactroot class=""_56q9""&gt;
       &lt;div class=""_2pi8""&gt;
        &lt;div class=""_491z clearfix""&gt;...&lt;/div&gt;
         &lt;div spacing=""medium"" class=""_4uyl _1zz8 _2392 clearfix"" direction=""left""&gt;
          &lt;div class=""_ohe lfloat""&gt;...&lt;/div&gt;
          &lt;div class&gt;
           &lt;div class=""UFIInputContainer""&gt;
            &lt;div class=""_1cb _5yk1""&gt;
             &lt;div class=""_5yk2"" tabindex=""-2""&gt;
              &lt;div class=""_5rp7""&gt;
             &lt;/div&gt;
            &lt;/div&gt;
            &lt;div class=""UFICommentAttachmentButtons clearfix""&gt;...&lt;/div&gt;
            &lt;!-- react-empty: 39 --&gt;
            &lt;div class=""_4uym""&gt;...&lt;/div&gt;
           &lt;/div&gt;
          &lt;/div&gt;
         &lt;/div&gt;
         ::after
</code></pre>
","<python><selenium><selenium-webdriver>"
"38758232","2","38758187","<p>Here's another option:</p>

<pre><code>all(s not in access for s in ('=', name + '.'))
</code></pre>

<p>It's up to you to decide if this is simpler than your code - but at least it avoids having to write <code>not in access</code> <em>twice</em>.</p>
",""
"38758249","2","38758158","<p>In csv <a href=""https://docs.python.org/3/library/csv.html#csv.Dialect.delimiter"" rel=""nofollow"">documentation</a> they say </p>

<blockquote>
  <p>A one-character string used to separate fields. It defaults to ','.</p>
</blockquote>

<p>So you can do this as an alternative.</p>

<pre><code>csv.reader((line.replace('@|@', '|') for line in ifile), delimiter='|')
</code></pre>

<p>So the complete code is,</p>

<pre><code>import csv
ifile  = open('test.csv', ""rb"")
reader = csv.reader((line.replace('@|@', '|') for line in ifile), delimiter='|')
ofile  = open('ttest.csv', ""wb"")
writer = csv.writer(ofile, delimiter='|', quotechar='""', quoting=csv.QUOTE_ALL)
for row in reader:
    writer.writerow(row)
ifile.close()
ofile.close()
</code></pre>
",""
"38758327","2","38758158","<p>Life is too short, just use <code>pandas</code></p>

<pre><code>import pandas as pd
df.to_csv('output.csv', sep='|')
</code></pre>

<p>By default, the delimiator is <code>','</code>, that is why it is called Commasv. But by changing the <code>sep</code> to <code>'|'</code>, you could simply achieve what you want.</p>
",""
"38758342","1","","<p>I'm working on a chatbot project based on Facebook's Wit.ai and was wondering if it is possible to set a default intent? </p>

<p>For example, my bot currently supports only a handful of questions, such as ""Where are you located?"" or ""What is your phone number?"", each of these questions has an intent and story associated with it but if someone asks something the bot doesn't understand, wit seems (I haven't been able to find any info about this) to choose a story at random and execute it. </p>

<p>I would like to set a default intent that will respond with something like ""I don't understand what you mean."" in the event that no other intent is recognized. Is it possible to do this? Specifically, I would like to know if there is an officially accepted way to do this as I currently have a way to achieve this but it is a bit hacky and requires me to edit the <code>wit</code> package from facebook which I would prefer not to do. </p>
","<python><facebook><wit.ai>"
"38758345","1","","<p>I run the following very trivial Python code. I am very surprised that it actually run. Could someone explain to me why I can even assign values to ""nd"" and ""hel"" without defining them in the class definition? Is this because the attribute can be added in the instance level?</p>

<pre><code>class tempClass(object):

a = tempClass()
a.nd = 1
a.hel = 'wem3'
</code></pre>
","<python><class><instance>"
"38758363","2","38757713","<p>If I understand your problem, you have large csv files with the same structure that you want to merge into one big CSV file.  </p>

<p>My suggestion is to use <a href=""http://dask.pydata.org/en/latest/examples/dataframe-csv.html"" rel=""nofollow""><code>dask</code></a> from Continuum Analytics to handle this job.  You can merge your files but also perform out-of-core computations and analysis of the data just like pandas.</p>

<pre class=""lang-sh prettyprint-override""><code>### make sure you include the [complete] tag
pip install dask[complete]
</code></pre>

<h1>Solution Using Your Sample Data from DropBox</h1>

<p>First, check versions of dask.  For me, dask = 0.11.0 and pandas = 0.18.1</p>

<pre><code>import dask
import pandas as pd
print (dask.__version__)
print (pd.__version__)
</code></pre>

<p>Here's the code to read in ALL your csvs.  I had no errors using your DropBox example data. </p>

<pre><code>import dask.dataframe as dd
from dask.delayed import delayed
import dask.bag as db
import glob

filenames = glob.glob('/Users/linwood/Downloads/stack_bundle/rio*.csv')

'''
The key to getting around the CParse error was using sep=None
Came from this post
http://stackoverflow.com/questions/37505577/cparsererror-error-tokenizing-data
'''

# custom saver function for dataframes using newfilenames
def reader(filename):
    return pd.read_csv(filename,sep=None)

# build list of delayed pandas csv reads; then read in as dask dataframe

dfs = [delayed(reader)(fn) for fn in filenames]
df = dd.from_delayed(dfs)


'''
This is the final step.  The .compute() code below turns the 
dask dataframe into a single pandas dataframe with all your
files merged. If you don't need to write the merged file to
disk, I'd skip this step and do all the analysis in 
dask. Get a subset of the data you want and save that.  
'''
df = df.reset_index().compute()
df.to_csv('./test.csv')
</code></pre>

<h1>The rest of this is extra stuff</h1>

<pre><code># print the count of values in each column; perfect data would have the same count
# you have dirty data as the counts will show

print (df.count().compute())
</code></pre>

<p>The next step is doing some pandas-like analysis.  Here is some code of me first ""cleaning"" your data for the 'tweetFavoriteCt' column. All of the data is not an integer, so I replace strings with ""0"" and convert everything else to an integer.  Once I get the integer conversion, I show a simple analytic where I filter the entire dataframe to only include the rows where the favoriteCt is greater than 3</p>

<pre><code># function to convert numbers to integer and replace string with 0; sample analytics in dask dataframe
# you can come up with your own..this is just for an example
def conversion(value):
    try:
        return int(value)
    except:
        return int(0)

# apply the function to the column, create a new column of cleaned data
clean = df['tweetFavoriteCt'].apply(lambda x: (conversion(x)),meta=('stuff',str))

# set new column equal to our cleaning code above; your data is dirty :-(
df['cleanedFavoriteCt'] = clean
</code></pre>

<p>Last bit of code shows dask analysis and how to load this merged file into pandas and also write the merged file to disk.  Be warned, if you have tons of CSVs, when you use the <code>.compute()</code> code below, it will load this merged csv into memory.</p>

<pre><code># retreive the 50 tweets with the highest favorite count 
print(df.nlargest(50,['cleanedFavoriteCt']).compute())

# only show me the tweets that have been favorited at least 3 times
# TweetID 763525237166268416, is VERRRRY popular....7000+ favorites
print((df[df.cleanedFavoriteCt.apply(lambda x: x&gt;3,meta=('stuff',str))]).compute())

'''
This is the final step.  The .compute() code below turns the 
dask dataframe into a single pandas dataframe with all your
files merged. If you don't need to write the merged file to
disk, I'd skip this step and do all the analysis in 
dask. Get a subset of the data you want and save that.  
'''
df = df.reset_index().compute()
df.to_csv('./test.csv')
</code></pre>

<p>Now, if you want to switch to pandas for the merged csv file:</p>

<pre><code>import pandas as pd
dff = pd.read_csv('./test.csv')
</code></pre>

<p>Let me know if this works.</p>

<p><strong>Stop here</strong> </p>

<h1>ARCHIVE: Previous solution; good to example of using dask to merge CSVs</h1>

<p>The first step is making sure you have <code>dask</code> installed.  There are <a href=""http://dask.pydata.org/en/latest/install.html#pip"" rel=""nofollow"">install instructions for <code>dask</code> in the documentation page</a> but this should work:</p>

<p>With dask installed it's easy to read in the files. </p>

<p>Some housekeeping first.  Assume we have a directory with csvs where the filenames are <code>my18.csv</code>, <code>my19.csv</code>, <code>my20.csv</code>, etc.  Name standardization and single directory location are key.  This works if you put your csv files in one directory and serialize the names in some way. </p>

<p>In steps:</p>

<ol>
<li>Import dask, read all the csv files in using wildcard. This merges all csvs into one single <code>dask.dataframe</code> object. You can do pandas-like operation immediately after this step if you want.</li>
</ol>

<pre class=""lang-py prettyprint-override""><code>import dask.dataframe as dd  
ddf = dd.read_csv('./daskTest/my*.csv')
ddf.describe().compute()
</code></pre>

<ol start=""2"">
<li>Write merged dataframe file to disk in the same directory as original files and name it <code>master.csv</code>  </li>
</ol>

<pre class=""lang-py prettyprint-override""><code>ddf.to_csv('./daskTest/master.csv',index=False)
</code></pre>

<ol start=""3"">
<li><strong>Optional</strong>, read <code>master.csv</code>, a much bigger in size, into dask.dataframe object for computations.  This can also be done after step one above; dask can perform pandas like operations on the staged files...this is a way to do ""big data"" in Python</li>
</ol>

<pre class=""lang-py prettyprint-override""><code># reads in the merged file as one BIG out-of-core dataframe; can perform functions like pangas    
newddf = dd.read_csv('./daskTest/master.csv')

#check the length; this is now length of all merged files. in this example, 50,000 rows times 11 = 550000 rows.
len(newddf)

# perform pandas-like summary stats on entire dataframe
newddf.describe().compute()
</code></pre>

<p>Hopefully this helps answer your question.  In three steps, you read in all the files, merge to single dataframe, and write that massive dataframe to disk with only one header and all your rows.     </p>
",""
"38758367","1","","<p>I know the topic is really hard to understand but I don't know how to describe my problem in one sentence...T^T</p>

<p>Here is what I'm trying to do.</p>

<p>I have a set of 1-dimensional points in three categories.</p>

<pre><code>A = [[0,1], [0,2], [0,3], [1,1], [2,1], [3,2], [3,3], [4,2], [4,3], [5,3], [6,3]]
</code></pre>

<p>First number is x-coordinate and second number is label in each [ ]</p>

<p>And I want to insert a cut point into every pair of adjacent points [x1, L1], [x2, L2] if at least one of them has more than one kinds of label and L2 belongs to those categories that differ from L1.;;;</p>

<p>For example, </p>

<pre><code>[0,1], [0,2], [0,3]
</code></pre>

<p>they are all on x = 0 but there are three kinds of labels</p>

<pre><code>[1,1]
</code></pre>

<p>belongs to only one categories, so I would like to add a cut point x=0.5 in the middle of 0 and 1.</p>

<pre><code>3 x
2 x
1 x 1
  x
0-x-1-
</code></pre>

<p>but like</p>

<pre><code>[1,1] and [2,1]
</code></pre>

<p>they both has only one and identical label, there is no need to add a cut point here.</p>

<p>So the result should be 
<code>[0.5, 2.5, 3.5, 4.5]</code>
and maybe looks like this</p>

<pre><code> 3 x       x 3 x 3 x 3   3     &lt;--Label
 2 x       x 2 x 2 x           &lt;--Label
 1 x 1   1 x   x   x           &lt;--Label
   x       x   x   x        
-0-x-1---2-x-3-x-4-x-5---6---  &lt;--X-axis
  0.5     2.5 3.5 4.5          &lt;--Cut points
</code></pre>

<p>The code I want to write will looks like this form</p>

<pre><code>A = [[0,1], [0,2], [0,3], [1,1], [2,1], [3,2], [3,3], [4,2], [4,3], [5,3], [6,3]]
X = []
for a in A:
    X.append(a[0])
X = sorted(list(set(X)))

labels = [[1], [2], [3]]
group = []
for i in range(len(labels)):
    group.append([])

for a in A:
    for i in range(3):
        if a[1] in labels[i]:
            group[i].append(a[0])

cutpoints = []

for i, x in enumerate(X):
    for j in range(len(group)):
        if x in group[j] and (X[i+1] in group[ other than j ]):
            cutpoints.append((x+X[i+1])/2)
</code></pre>

<p>But I stuck at the part ""other than j""
In this case there are only 3 categories so maybe I can do that manually but I'm looking for a more clever way to do it so I don't need to rewrite this part every time I meet a new data with different number of categories.</p>

<p>Is there any function I can use to do the ""other than j"" operation??</p>

<p>Any comment or answer will be appreciated.
Thanks in advance T^T</p>
","<python><list>"
"38758378","1","","<p>I have a tuple list like the code below, an identifier has multiple values(both identifier and values maybe duplicated), I thought using <code>dict</code> with a <code>str</code> as a key and a <code>set</code> as it's value would be reasonable, but how?</p>

<pre><code>tuple_list = [
    ('id1', 123),
    ('id1', 123),
    ('id2', 123),
    ('id1', 456),
    ('id2', 456),
    ('id1', 789),
    ('id2', 789)
]
</code></pre>

<p>What I need is like this: <code>{ 'id1': {123, 456, 789}</code>, ... }`, my code is:</p>

<pre><code>for id, val in tuple_list:
    map_data[id].append(val) # error here, how to fix this?
</code></pre>
","<python><dictionary>"
"38758389","1","","<p>I am attempting to build a python flask web app with a tutorial and I am having trouble implementing my signUp method.
Tutorial: <a href=""http://code.tutsplus.com/tutorials/creating-a-web-app-from-scratch-using-python-flask-and-mysql--cms-22972"" rel=""nofollow"">http://code.tutsplus.com/tutorials/creating-a-web-app-from-scratch-using-python-flask-and-mysql--cms-22972</a></p>

<p>I get a 500 error when I hit the 'sign up' button: _name = Request.form['inputName']
TypeError: 'cached_property' object has no attribute '<strong>getitem</strong>'</p>

<p>Not sure why I am receiving 500 error. Any help would be appreciated. Thanks</p>

<p>Below is my python code:</p>

<pre><code>from flask import Flask, render_template, json, Request

app = Flask(__name__)

@app.route('/main')
def main():
    return render_template('index.html')


@app.route('/showSignUp')
def showSignUp():
    return render_template('signup.html')


@app.route('/signUp',methods=['POST'])
def signUp():
    _name = Request.form['inputName']
    _email = Request.form['inputEmail']
    _password = Request.form['inputPassword']

    if _name and _email and _password:
        return json.dumps({'html':'&lt;span&gt;All fields good !!&lt;/span&gt;'})
    else:
        return json.dumps({'html:':'&lt;span&gt;Enter the required fields&lt;/span&gt;'})



if __name__ == ""__main__"":
    app.run(debug=True)
</code></pre>

<p>Here is the javascript ajax code:</p>

<pre><code>$(function () {
    $('#btnSignUp').click(function () {
        $.ajax({
            url: '/signUp',
            data: $('form').serialize(),
            type: 'POST',
            success: function(response) {
                console.log(response);
            },
            error: function(error) {
                console.log(error);
            }
        });
    });
});
</code></pre>

<p>Here is signup.html</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang=""en""&gt;
    &lt;head&gt;
        &lt;title&gt;Python Flask Bucket List App&lt;/title&gt;

        &lt;link href=""http://getbootstrap.com/dist/css/bootstrap.min.css"" rel=""stylesheet"" /&gt;
        &lt;link href=""http://getbootstrap.com/examples/jumbotron-narrow/jumbotron-narrow.css"" rel=""stylesheet"" /&gt;
        &lt;link href=""../static/signup.css"" rel=""stylesheet"" /&gt;
        &lt;script src=""../static/js/jquery-3.1.0.js""&gt;&lt;/script&gt;
        &lt;script src=""../static/js/signUp.js""&gt;&lt;/script&gt;

    &lt;/head&gt;

    &lt;body&gt;

        &lt;div class=""container""&gt;
            &lt;div class=""header""&gt;
                &lt;nav&gt;
                    &lt;ul class=""nav nav-pills pulls-right""&gt;
                        &lt;li role=""presentation""&gt;&lt;a href=""main""&gt;Home&lt;/a&gt;&lt;/li&gt;
                        &lt;li role=""presentation""&gt;&lt;a href=""#""&gt;Sign In&lt;/a&gt;&lt;/li&gt;
                        &lt;li role=""presentation"" class=""active""&gt;&lt;a href=""#""&gt;Sign Up&lt;/a&gt;&lt;/li&gt;
                    &lt;/ul&gt;
                &lt;/nav&gt;
                &lt;h3 class=""text-muted""&gt;Python Flask App&lt;/h3&gt;
            &lt;/div&gt;

            &lt;div class=""jumbotron""&gt;
                &lt;h1&gt;Bucket List App&lt;/h1&gt;
                &lt;form class=""form-signin""&gt;
                &lt;label for=""inputName"" class=""sr-only""&gt;Name&lt;/label&gt;
                &lt;input type=""name"" name=""inputName"" id=""inputName"" class=""form-control"" placeholder=""Name"" required autofocus /&gt;
                &lt;label for=""inputEmail"" class=""sr-only""&gt;Email address&lt;/label&gt;
                &lt;input type=""email"" name=""inputEmail"" id=""inputEmail"" class=""form-control"" placeholder=""Email address"" required autofocus /&gt;
                &lt;label for=""inputPassword"" class=""sr-only""&gt;Password&lt;/label&gt;
                &lt;input type=""password"" name=""inputPassword"" id=""inputPassword"" class=""form-control"" placeholder=""Password"" required /&gt;

                &lt;button id=""btnSignUp"" class=""btn btn-lg btn-primary btn-block"" type=""button""&gt;Sign up&lt;/button&gt;
            &lt;/form&gt;
            &lt;/div&gt;

            &lt;footer class=""footer""&gt;
                &lt;p&gt;&amp;copy; Company 2016&lt;/p&gt;
            &lt;/footer&gt;

        &lt;/div&gt;
    &lt;/body&gt;
&lt;/html&gt;
</code></pre>
","<python><ajax><flask>"
"38758406","2","38758378","<p>You can use <code>setdefaultdict</code>:</p>

<pre><code>map_data = {}
for id, val in tuple_list:
    map_data.setdefault(id,set()).add(val)
</code></pre>
",""
"38758428","1","","<p>I can't install Qutip in my fedora 24</p>

<pre><code>pip install qutip 
</code></pre>

<p>Whenever I type this , error message showing <a href=""http://i.stack.imgur.com/r8g3z.png"" rel=""nofollow"">It starts like this </a> 
But at the end <a href=""http://i.stack.imgur.com/q54nr.png"" rel=""nofollow"">this</a> happens , and Qutip is not get installed . 
What to do ?</p>
","<python><fedora><qutip>"
"38758447","2","38758389","<p>I also encountered the same issue when I was implementing the same recently.</p>

<p>Change your signUp code in app.py as follows including the import.</p>

<pre><code>from flask import Flask, render_template, json, request

def signUp():
    _name = request.form['inputName']
    _email = request.form['inputEmail']
    _password = request.form['inputPassword']
</code></pre>

<p>Note: it should be <code>request</code> not <code>Request</code></p>

<p><hr/>
This error occurs because <code>Request</code> is the class Flask uses to represent an incoming request; it is not, however, the request itself. Instead, Flask stores the current request, which is an instance of the <code>Request</code> class, in the <code>request</code> variable.</p>
",""
"38758467","2","38758158","<p>The <em>csvfile</em> argument to the <code>csv.writer</code> constructor only has to be a ""file-like object"". This means you could supply an instance of your own class which changes a single character into one with two or more characters (but which otherwise acts like a open output file object).</p>

<p>Here's what I mean:</p>

<pre><code>import csv

class CSV_Translater(object):
    """""" Output file-like object that translates characters. """"""
    def __init__(self, f, old, new):
        self.f = f
        self.old = old
        self.new = new
    def write(self, s):
        self.f.write(s.replace(self.old, self.new))
    def close(self):
        self.f.close()
    def flush(self):
        self.f.flush()

with open('in_test.csv', ""rb"") as ifile:
    reader = csv.reader(ifile)
    with open('out_test.csv', ""wb"") as ofile:
        translater = CSV_Translater(ofile, '|', '@|@')
        writer = csv.writer(translater, delimiter='|', quotechar='""',
                            quoting=csv.QUOTE_ALL)
        for row in reader:
            writer.writerow(row)
</code></pre>
",""
"38758474","2","38757906","<p>The documentation link you listed shows <code>in_waiting</code> as a property added in PySerial 3.0. Most likely you're using PySerial &lt; 3.0 so you'll have to call the <code>inWaiting()</code> function.</p>

<p>You can check the version of PySerial as follows:</p>

<pre class=""lang-py prettyprint-override""><code>import serial
print serial.VERSION
</code></pre>

<p>If you installed PySerial using <a href=""https://pypi.python.org/pypi/pip"" rel=""nofollow"">pip</a>, you should be able to perform an upgrade (admin privileges may be required):</p>

<pre><code>pip install --upgrade pyserial
</code></pre>

<p>Otherwise, change your code to use the proper interface from PySerial &lt; 3.0:</p>

<pre class=""lang-py prettyprint-override""><code>while (True):
    if (ser.inWaiting() &gt; 0):
        ser.read(ser.inWaiting())
</code></pre>
",""
"38758501","2","38758367","<p>You can use not in, like this: <code>X[i+1] not in group[j]</code></p>

<p>Secondly, your algorithm seems overly complicated. What something like this?</p>

<pre><code>A = [[0,1], [0,2], [0,3], [1,1], [2,1], [3,2], [3,3], [4,2], [4,3], [5,3], [6,3]]
point, label = A[0]
cuts = []
for npoint, nlabel in A[1:]:
  if not npoint == point:
     if not label == nlabel:
       cuts.append((point+npoint)/2.)
  point = npoint
  label = nlabel
</code></pre>
",""
"38758532","1","","<p>i wanna crawling on server side but my python it isnt so good...</p>

<p>my source is works so well, if i running it on mylaptop terminal, but it was going wrong when running it on server terminal</p>

<p>here my source code </p>

<pre><code>from scrapy.spider import BaseSpider
from scrapy.selector import HtmlXPathSelector
from thehack.items import NowItem
import time

class MySpider(BaseSpider):
    name = ""nowhere""
    allowed_domains = [""n0where.net""]
    start_urls = [""https://n0where.net/""]

    def parse(self, response):
        for article in response.css('.loop-panel'):
            item = NowItem()
            item['title'] = article.css('.article-title::text').extract_first()
            item['link'] = article.css('.loop-panel&gt;a::attr(href)').extract_first()
            item['body'] ='' .join(article.css('.excerpt p::text').extract()).strip()
            #date ga kepake
            #item['date'] = article.css('[itemprop=""datePublished""]::attr(content)').extract_first()
            yield item
            time.sleep(5)
</code></pre>

<p>the wrong line said</p>

<pre><code>ERROR: Spider error processing &lt;GET https://n0where.net/&gt;
Traceback (most recent call last):
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/base.py"", line 824, in runUntilCurrent
    call.func(*call.args, **call.kw)
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/task.py"", line 638, in _tick
    taskObj._oneWorkUnit()
  File ""/usr/lib/python2.7/dist-packages/twisted/internet/task.py"", line 484, in _oneWorkUnit
    result = next(self._iterator)
  File ""/usr/local/lib/python2.7/dist-packages/scrapy/utils/defer.py"", line 57, in &lt;genexpr&gt;
    work = (callable(elem, *args, **named) for elem in iterable)
--- &lt;exception caught here&gt; ---
  File ""/usr/local/lib/python2.7/dist-packages/scrapy/utils/defer.py"", line 96, in iter_errback
    yield next(it)
  File ""/usr/local/lib/python2.7/dist-packages/scrapy/contrib/spidermiddleware/offsite.py"", line 26, in process_spider_output
    for x in result:
  File ""/usr/local/lib/python2.7/dist-packages/scrapy/contrib/spidermiddleware/referer.py"", line 22, in &lt;genexpr&gt;
    return (_set_referer(r) for r in result or ())
  File ""/usr/local/lib/python2.7/dist-packages/scrapy/contrib/spidermiddleware/urllength.py"", line 33, in &lt;genexpr&gt;
    return (r for r in result or () if _filter(r))
  File ""/usr/local/lib/python2.7/dist-packages/scrapy/contrib/spidermiddleware/depth.py"", line 50, in &lt;genexpr&gt;
    return (r for r in result or () if _filter(r))
  File ""/home/admin/nowhere/thehack/spiders/thehack_spider.py"", line 14, in parse
    item['title'] = article.css('.article-title::text').extract_first()
exceptions.AttributeError: 'SelectorList' object has no attribute 'extract_first'
</code></pre>

<p>does anybody know how to fix it mate?
thanks a lot before :)</p>
","<python><server><scrapy><web-crawler><client>"
"38758552","2","38758378","<p>To use a <code>dict</code> containing a <code>set</code> do it like this.</p>

<pre><code>from collections import defaultdict

tuple_list = [
    ('id1', 123),
    ('id1', 123),
    ('id2', 123),
    ('id1', 456),
    ('id2', 456),
    ('id1', 789),
    ('id2', 789)
]

map_data = defaultdict(set)

for id, val in tuple_list:
    map_data[id].add(val)

print(map_data)
</code></pre>

<p>result</p>

<pre><code>defaultdict(&lt;type 'set'&gt;, {'id2': set([456, 123, 789]), 'id1': set([456, 123, 789])})
</code></pre>
",""
"38758561","2","38758221","<p>You have to switch to the iframe containing the text box. Try the following approach, it should work:
Clicking the load comments button might be required first if load comment button is displayed</p>

<pre><code>load_comment = driver.find_element_by_css_selector('.comment-button.js-comment-button')
load_comment.click()
driver.switch_to_frame(driver.find_element_by_css_selector('.fb_ltr.fb_iframe_widget_lift'))
comment_box = driver.find_element_by_css_selector('._1cb._5yk1')
comment_box.send_keys('Test')
</code></pre>
",""
"38758573","2","38758345","<p>Python has no notion of variable declaration, only assignments. The same applies to attributes: you simply assign an initial value to bring it into existence.</p>

<p>There is nothing special about the <code>__init__</code> method in this regard. For example,</p>

<pre><code>class TempClass(object):
    def __init__(self):
        self.nd = 1

a = tempClass()
a.hel = 'wem3'
</code></pre>

<p>Both attributes are created in the same way: by assigning a value to them. <code>__init__</code> is called when <code>a</code> is first created, but otherwise is not special. <code>self</code> inside <code>__init__</code> is a reference to the object referenced by <code>a</code>, so <code>self.nd = 1</code> is identical to <code>a.nd = 1</code>. After the object is created, <code>a.hel</code> is created and initialized with <code>'wem3'</code> by the same process.</p>
",""
"38758579","2","38757831","<p>If you need them to be in separate threads then a Timer object or as a commenter pointed out APScheduler. If you want to do the threading manually you could also use sched. They added support for threads in version 3.3. <a href=""https://docs.python.org/3/library/sched.html"" rel=""nofollow"">Docs</a></p>
",""
"38758580","1","","<p>I am making a web app with django, and in one portion I am trying to make use of the {% extends %} command to put some html from one template on to another. Here is the code:</p>

<p>home.html - </p>

<pre><code>&lt;!doctype html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;/head&gt;
&lt;body&gt;
 {% block content %}
 {% endblock %}
&lt;/body&gt;
&lt;/html
</code></pre>

<p>search.html - </p>

<pre><code>{% extends ""gamelobby/home.html"" %}
{% block content %}
 &lt;h1&gt;Hello World&lt;/h1&gt;
{% endblock %}
</code></pre>

<p>Any idea what the problem might be?</p>

<p>Code for home.html view -</p>

<pre><code>def index(request):
    all_games = GameCard.objects.all()
    template = loader.get_template('gamelobby/home.html')
    context = {
        'all_games': all_games,
    }
    return HttpResponse(template.render(context, request))
</code></pre>
","<python><django>"
"38758617","1","","<p>I have a two models: </p>

<pre><code>class Question(models.Model):
    question_text = models.TextField()

class Response(models.Model):
    response_text = models.TextField()
    question = models.ForeignKey(Question, related_name='responses', on_delete=models.CASCADE)
</code></pre>

<p>I have one haystack search index to index all of the <code>Question</code>'s <code>question_text</code>:</p>

<pre><code>class QuestionIndex(indexes.SearchIndex, indexes.Indexable):
    text = indexes.CharField(document=True, use_template=True)
    question_text = indexes.CharField(model_attr='question_text')
    def get_model(self):
        return Question
</code></pre>

<p>How do I index all of the <code>response_text</code> so that when I search for <code>Question</code>s, I get all of the questions that match <code>question_text</code> and all the questions that have responses that match <code>response_text</code>? I want something like:</p>

<pre><code>class QuestionIndex(indexes.SearchIndex, indexes.Indexable):
    text = indexes.CharField(document=True, use_template=True)
    question_text = indexes.CharField(model_attr='question_text')
    response_text = indexes.CharField(model_attr='responses__response_text')
    def get_model(self):
        return Question
</code></pre>

<p><strong>Ultimate Question:</strong> How do I index all of <code>response_text</code> using this <code>QuestionIndex</code> class?</p>
","<python><django><search><tastypie><django-haystack>"
"38758648","2","38758428","<p>The error is quite evident:</p>

<pre><code>gcc: error: /usr/lib/rpm/redhat/redhat-hardened-001: No such file or directory
</code></pre>

<p>Somehow this file has vanished from your computer. Find out which package provides this file.</p>

<pre><code>sudo dnf provides /usr/lib/rpm/redhat/redhat-hardened-cc1
Last metadata expiration check: 6 days, 22:14:34 ago on Thu Jul 28 11:58:37 2016.
redhat-rpm-config-40-2.fc24.noarch : Red Hat specific rpm configuration files
Repo        : @System

redhat-rpm-config-40-2.fc24.noarch : Red Hat specific rpm configuration files
Repo        : fedora
</code></pre>

<p>Then reinstall the package:</p>

<pre><code>sudo dnf reinstall -y redhat-rpm-config
</code></pre>
",""
"38758666","2","38758617","<p>You can supply a <a href=""http://django-haystack.readthedocs.io/en/v2.4.1/searchindex_api.html#prepare-foo-self-object"" rel=""nofollow""><code>prepare_</code> method</a> for that field to specify what data is indexed:</p>

<pre><code>class QuestionIndex(indexes.SearchIndex, indexes.Indexable):
    text = indexes.CharField(document=True, use_template=True)
    question_text = indexes.CharField(model_attr='question_text')
    response_text = indexes.CharField()

    def prepare_response_text(self, obj):
        return ', '.join([r.response_text for r in obj.responses.all()])
</code></pre>
",""
"38758668","1","","<p>I have been a Python Scientific Programmer for a few years now, and I find myself coming to a sort specific problem as my programs get larger and larger. I am self taught so I have never had any formal training and spent any time really on 'conventions' of coding in Python ""properly"".</p>

<p>Anyways, to the point, I find myself always creating a utils.py file that I store all my defined functions in that my programs use. I then find myself grouping these functions into their respective purposes. One way of I know of grouping things is of course using Classes, but I am unsure as to whether my strategy goes against what classes should actually be used for.</p>

<p>Say I have a bunch of functions that do roughly the same thing like this:</p>

<pre><code>def add(a,b):
    return a + b

def sub(a,b):
    return a -b

def cap(string):
    return string.title()

def lower(string):
    return string.lower()
</code></pre>

<p>Now obviously these 4 functions can be seen as doing two seperate purposes one is calculation and the other is formatting. This is what logic tells me to do, but I have to work around it since I don't want to initialise a variable that corresponds to the class evertime.</p>

<pre><code>class calc_funcs(object):

    def __init__(self):
        pass

    @staticmethod
    def add(a,b):
        return a + b

    @staticmethod
    def sub(a, b):
        return a - b

class format_funcs(object):
    def __init__(self):
        pass

    @staticmethod
    def cap(string):
        return string.title()

    @staticmethod
    def lower(string):
        return string.lower()
</code></pre>

<p>This way I have now 'grouped' these methods together into a nice package that makes finding desired methods much faster based on their role in the program.</p>

<pre><code>print calc_funcs.add(1,2)
print format_funcs.lower(""Hello Bob"")
</code></pre>

<p>However that being said, I feel this is a very 'unpython-y' way to do things, and it just feels messy. Am I going about thinking this the right way or is there an alternate method?</p>
","<python><class><conventions>"
"38758682","2","38758367","<p>This is sort of a weird problem you've got, but here's a functional way to do.</p>

<pre><code>from itertools import groupby
</code></pre>

<p><code>groupby</code> will let us easily merge your X coordinates, assuming the array is pre-sorted by them.</p>

<pre><code>l = [(i, [x[1] for x in g]) for i, g in groupby(A, lambda x: x[0])]
</code></pre>

<p>This looks a bit daunting, but is conceptually pretty easy. The <code>groupby</code> pulls together all the things that share an X, and the inner list comprehension just dumps the X values out:</p>

<pre><code>l

[(0, [1, 2, 3]),
 (1, [1]),
 (2, [1]),
 (3, [2, 3]),
 (4, [2, 3]),
 (5, [3]),
 (6, [3])]
</code></pre>

<p>Then if we group each together with the next element using <code>zip</code> we can just pick out the pairs that meet your criteria and get the midpoint between them:</p>

<pre><code>[(i1+i2) / 2.
 for (i1, l1), (i2, l2)
 in zip(l, l[1:])
 if l1 != l2 or len(l1) &gt; 1]

[0.5, 2.5, 3.5, 4.5]
</code></pre>
",""
"38758691","1","","<p>I have two pandas dataframes in a panel and would like to create a third df that ranks the first df (by row) but only include those where the corresponding element of the second df is True.  Some sample data to illustrate:</p>

<pre><code>p['x']             
                   A         B         C         D         E
2015-12-31  0.957941 -0.686432  1.087717  1.363008 -1.528369
2016-01-31  0.079616  0.524744  1.675234  0.665511  0.023160
2016-02-29 -0.300144 -0.705346 -0.141015  1.341883  0.855853
2016-03-31  0.435728  1.046326 -0.422501  0.536986 -0.656256


p['y']
                A      B     C      D    E
2015-12-31   True  False  True  False  NaN
2016-01-31   True   True  True  False  NaN
2016-02-29  False   True  True   True  NaN
2016-03-31    NaN    NaN   NaN    NaN  NaN
</code></pre>

<p>I have managed to do this with a few ugly hacks but still get stuck on the fact that rank won't let me use method='first' on non-numeric data.  I want to force incremental integer ranks (even if duplicates) and NaN for any cell that didn't have True in the boolean df.</p>

<p>Output should be of the form:</p>

<pre><code>              A    B    C    D   E
2015-12-31  2.0  NaN  1.0  NaN NaN
2016-01-31  3.0  2.0  1.0  NaN NaN
2016-02-29  NaN  3.0  2.0  1.0 NaN
2016-03-31  NaN  NaN  NaN  NaN NaN
</code></pre>

<p>My hacked attempt is below.  It works, although there should clearly be a better way to replace false with NaN.  However it doesn't work once I add method='first' and this is necessary as I may have instances of duplicated values.</p>

<pre><code># I first had to hack a replacement of False with NaN.
# np.nan did not evaluate correctly
# I wasn't sure how else to specify pandas NaN
rank=p['Z'].replace(False,p['Z'].iloc[3,0])

# eliminate the elements without a corresponding True
rank=rank*p['X']

# then this works
p['rank'] = rank.rank(axis=1, ascending=False)

# but this doesn't
p['rank'] = rank.rank(axis=1, ascending=False, method='first')
</code></pre>

<p>Any help would be much appreciated!
thanks</p>

<ol>
<li>List item</li>
</ol>
","<python><pandas><nan><rank>"
"38758708","1","","<p>Is there a Python builtin that repeats each element of a list based on the corresponding value in another list? For example <code>A</code> in list <code>x</code> position 0 is repeated 2 times because of the value <code>2</code> at position 0 in the list <code>y</code>.</p>

<pre><code>&gt;&gt;&gt; x = ['A', 'B', 'C']
&gt;&gt;&gt; y = [2, 1, 3]
&gt;&gt;&gt; f(x, y)
['A', 'A', 'B', 'C', 'C', 'C']
</code></pre>

<p>Or to put it another way, what is the fastest way to achieve this operation?</p>
","<python><list>"
"38758723","1","","<p>I have looked for <code>django</code> doc in their official site but i can't find the article about the <code>on_update</code> model function here in <a href=""https://docs.djangoproject.com/ja/1.9/ref/models/relations/"" rel=""nofollow noreferrer"">Related objects reference</a> except for <code>on_delete</code>.</p>

<p>Here is an example code:</p>

<pre><code>from django.db import models

class Reporter(models.Model):
    # ...
    pass

class Article(models.Model):
    reporter = models.ForeignKey(Reporter, on_delete=models.CASCADE)
</code></pre>

<p>Is there any version of <code>on_update</code>?</p>

<p>I have visited this <a href=""https://stackoverflow.com/questions/7295417/cascade-on-update-and-delete-wih-django"">Cascade on update and delete wih django</a> but there is not a clear answer about the <code>on_update</code> </p>

<p>I am using <code>mysql</code> and define the relationship in the <code>ERD</code> and sync it to the db and tried running the <code>python manage.py inspectdb</code> to generate the <code>django-model</code> but it shows only <code>models.DO_NOTHING</code>.</p>

<p>Is there a better way to achieve this, if any?</p>
","<python><mysql><django>"
"38758755","2","38758708","<p>Try this</p>

<pre><code>x = ['A', 'B', 'C']
y = [2, 1, 3]
newarray = []
for i in range(0,len(x)):
    newarray.extend(x[i] * y[i])

print newarray
</code></pre>
",""
"38758764","2","38758708","<p>One way would be the following</p>

<pre><code>x = ['A', 'B', 'C']
y = [2, 1, 3]

s = []
for a, b in zip(x, y):
    s.extend([a] * b)

print(s)
</code></pre>

<p>result</p>

<pre><code>['A', 'A', 'B', 'C', 'C', 'C']
</code></pre>
",""
"38758772","2","38758708","<pre><code>from itertools import chain

list(chain(*[[a] * b for a, b in zip(x, y)]))
['A', 'A', 'B', 'C', 'C', 'C']
</code></pre>

<p>There is <code>itertools.repeat</code> as well, but that ends up being uglier for this particular case.</p>
",""
"38758786","2","38758668","<p>I think doing so is perfectly pythonic. This is exactly the purpose of <code>staticmethod</code> constructor.</p>

<p>For python conventions, see <a href=""https://www.python.org/dev/peps/pep-0008/"" rel=""nofollow"">PEP 8</a>.</p>
",""
"38758795","2","38758708","<p>Just use a simple list comprehension:</p>

<pre><code>&gt;&gt;&gt; x = ['A', 'B', 'C']
&gt;&gt;&gt; y = [2, 1, 3]
&gt;&gt;&gt; [x[i] for i in range(len(x)) for j in range(y[i])]
['A', 'A', 'B', 'C', 'C', 'C']
&gt;&gt;&gt; 
</code></pre>
",""
"38758993","2","38758668","<p>I wouldn't use a <code>class</code> for this, I'd use a <code>module</code>. A class consisting of only staticmethods strikes me as a code smell too. Here's how to do it with modules: any time you stick code in a separate file and import it into another file, Python sticks that code in a module with the same name as the file. So in your case:</p>

<p>In <code>mathutil.py</code></p>

<pre><code>def add(a,b):
    return a+b

def sub(a,b):
    return a-b
</code></pre>

<p>In <code>main.py</code></p>

<pre><code>import mathutil

def main():
    c = mathutil.add(a,b)
</code></pre>

<p>Or, if you're going to use mathutil in a lot of places and don't want to type out (and read) the full module name each time, come up with a standard abbreviation and use that everywhere:</p>

<p>In <code>main.py</code>, alternate version</p>

<pre><code>import mathutil as mu

def main():
    c = mu.add(a,b)
</code></pre>

<p>Compared to your method you'll have more files with fewer functions in each of them, but I think it's easier to navigate your code that way.</p>

<p>By the way, there is a bit of a Python convention for naming files/modules: short names, all lower case, without underscores between words. It's not what I started out doing, but I've moved over to doing it that way in my code and it's made it easier to understand the structure of other people's modules that I've used.</p>
",""
"38759051","2","38758668","<p>Another approach is to make a <code>util</code> <em>package</em> and split up your functions into different modules within that package. The basics of packages: make a directory (whose name will be the package name) and put a special file in it, the <code>__init__.py</code> file. This <em>can</em> contain code, but for the basic package organization, it can be an empty file.</p>

<pre><code>my_package/
  __init__.py
  module1.py/
  modle2.py/
  ...
  module3.py
</code></pre>

<p>So say you are in your working directory:</p>

<pre><code>mkdir util
touch util/__init__.py
</code></pre>

<p>Then inside your <code>util</code> directory, make <code>calc_funcs.py</code></p>

<pre><code>def add(a,b):
    return a + b

def sub(a,b):
    return a -b
</code></pre>

<p>And <code>format_funcs.py</code>:</p>

<pre><code>def cap(string):
    return string.title()

def lower(string):
    return string.lower()
</code></pre>

<p>And now, from your working directory, you can do things like the following:</p>

<pre><code>&gt;&gt;&gt; from util import calc_funcs
&gt;&gt;&gt; calc_funcs.add(1,3)
4
&gt;&gt;&gt; from util.format_funcs import cap
&gt;&gt;&gt; cap(""the quick brown fox jumped over the lazy dog"")
'The Quick Brown Fox Jumped Over The Lazy Dog'
</code></pre>

<h2> Edited to add </h2>

<p>Notice, though, if we restart the interpreter session:</p>

<pre><code>&gt;&gt;&gt; import util
&gt;&gt;&gt; util.format_funcs.cap(""i should've been a book"")
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
AttributeError: module 'util' has no attribute 'format_funcs'
</code></pre>

<p>This is what the <code>__init__.py</code> is for!</p>

<p>In <code>__init__.py</code>, add the following:</p>

<pre><code>import util.calc_funcs, util.format_funcs
</code></pre>

<p>Now, restart the interpreter again:</p>

<pre><code>&gt;&gt;&gt; import util
&gt;&gt;&gt; util.calc_funcs.add('1','2')
'12'
&gt;&gt;&gt; util.format_funcs.lower(""I DON'T KNOW WHAT I'M YELLING ABOUT"")
""i don't know what i'm yelling about""
</code></pre>

<p>Yay! We have flexible control over our namespaces with easy importing! Basically, the <code>__init__.py</code> plays an analogous role to the <code>__init__</code> method in a class definition.</p>
",""
"38759134","2","38758691","<pre><code>pd.DataFrame(np.where(p['y'] == True, p['x'], np.nan),
             p.major_axis, p.minor_axis).rank(1, ascending=False)
</code></pre>

<p><a href=""https://i.stack.imgur.com/8VDxF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8VDxF.png"" alt=""enter image description here""></a></p>
",""
"38759206","2","38757657","<p>I get your error if I make an object dtype array:</p>

<pre><code>In [112]: arr=np.ones((3,2),object)
In [113]: arr
Out[113]: 
array([[1, 1],
       [1, 1],
       [1, 1]], dtype=object)
In [114]: np.isnan(arr)
...
TypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
</code></pre>

<p>That <code>dtype</code> is the only one that can mix numbers, strings and <code>np.nan</code> (which is a float).  You can't do a lot of whole-array operations with this.</p>

<p>I can't readily test your solution because several variables are unknown.</p>

<p>With a more general <code>arr</code>, I don't see how you can remove a row without iterating over both rows and cols, testing whether each value is numeric, and if numeric <code>isnan</code>.  <code>np.isnan</code> is picky and can only operate on a float.</p>

<p>As mentioned in the 'possible duplicate' pandas <code>isnull</code> is more general.</p>

<p>So basically two points:</p>

<ul>
<li><p>what's a good general test that can handle strings as well as numbers</p></li>
<li><p>can you get around a full iteration, assuming the array is dtype object.</p></li>
</ul>

<p><a href=""https://stackoverflow.com/questions/36198118/np-isnan-on-arrays-of-dtype-object"">np.isnan on arrays of dtype &quot;object&quot;</a>
My solution here is to do a list comprehension to loop over a 1d array.</p>

<p>From that I can test each element of <code>arr</code> with:</p>

<pre><code>In [125]: arr
Out[125]: 
array([['str', 1],
       [nan, 'str'],
       [1, 1]], dtype=object)
In [136]: for row in arr:
     ...:     for col in row:
     ...:         print(np.can_cast(col,float) and np.isnan(col))
False
False
True
False
False
False
</code></pre>
",""
"38760576","2","38758084","<p>It's better to use <a href=""https://docs.python.org/3/library/os.path.html#os.path.splitext"" rel=""nofollow"">splitext</a> instead of method <code>split()</code>:</p>

<pre><code>import os
from django.conf import settings

def upload_delivery_to_media(self, delivery_id, delivery_file):
    _, ext = os.path.splitext(delivery_file.name)
    with open(os.path.join(settings.MEDIA_ROOT, 'TaskDelivery', '{}{}'.format(delivery_id, ext)), 'wb') as destination:
        for chunk in delivery_file.chunks():
            destination.write(chunk)       
</code></pre>
",""
"38761763","2","38758532","<p>Seems like your scrapy version is out of date. <code>scrapy.Selector</code> method <code>.extract_first()</code> was only added in scrapy 1.1, so you want to upgrade the scrapy package on your server.</p>
",""
"38762379","2","38757830","<p>Sometimes in <code>WebDriver</code> there are scenarios where the <code>WebElement</code> isn't loaded properly on <code>DOM</code> and webdriver tries to find it. So to handle these kind of scenarios there are 2 types of wait provided by <code>WebDriver</code> library.</p>

<p>You just need to implement one of these based on your requirements.</p>

<ol>
<li><a href=""http://selenium-python.readthedocs.io/waits.html#implicit-waits"" rel=""nofollow"">Implicit Waits</a></li>
<li><a href=""http://selenium-python.readthedocs.io/waits.html#explicit-waits"" rel=""nofollow"">Explicit Waits</a></li>
</ol>

<p>I suggest you to implement one of these and then try to execute your script.</p>
",""
"38762790","2","38757830","<p>You can Follow this code .. It works ..!!</p>

<pre><code>from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

driver = webdriver.Chrome('E:\chromedriver.exe') #location
driver.get('url') #https://secure2.store.apple.com/shop/sign_in?c=aHR0cDovL3d3dy5hcHBsZS5jb20vc2hvcC9iYWd8MWFvczVjNGU3ZWNjZjgwODVjNWY4NDk0OTA0ODJhMDc2Y2FkNmU3ODJkOTE&amp;o=O01LV0gy&amp;r=SXYD4UDAPXU7P7KXF&amp;s=aHR0cHM6Ly9zZWN1cmUyLnN0b3JlLmFwcGxlLmNvbS9zaG9wL2NoZWNrb3V0L3N0YXJ0P3BsdG49RkNBRjZGQjR8MWFvczAyZmZkZjQwNTgwOGI4ZTNkMDQ5MWRiM2NmZmExYTgxNzRkZTllMjY&amp;t=SXYD4UDAPXU7P7KXF&amp;up=t

def find_by_xpath(locator):
    element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((By.XPATH, locator))
    )
   return element
class FormPage(object):
    def fill_form(self, data):
        find_by_xpath('//input[@name = ""login-appleId""]').send_keys(data['usr')
        find_by_xpath('//input[@name = ""login-password""]').send_keys(data['pwd'])
        return self 

    def submit(self):
        find_by_xpath('//input[@id = ""sign-in""]').click()

 data = {
       'usr': 'xx@apple.com',
       'pwd': 'xxxx'
       }

if __name__==""__main__"":
     FormPage().fill_form(data).submit()
     driver.quit() # closes the webbrowser
</code></pre>

<p>Hope it is helpful to you
Thanks.!!</p>
",""
"38763221","2","38757657","<p>One solution is you can use np.sum() to sum each row up. because nan + any float = nan, so that you can get which lines incluede nan value.</p>

<pre><code>np.sum(arr,axis = 1)
rowsWithoutNaN = [ not(np.isnan(i)) for i in b]
result = np.array( [val for shouldKeep, val in zip(rowsWithoutNaN,arr) if shouldKeep])
</code></pre>
",""
"38765461","2","38757701","<blockquote>
  <p>Why is this</p>
</blockquote>

<p>It's a feature. Not all graph libraries accept strings as identifiers, but all that I know of accept integers.</p>

<blockquote>
  <p>how can I prevent it?</p>
</blockquote>

<p>Replace the ids by node names using the <code>nodes</code> map:</p>

<pre><code>&gt;&gt;&gt; import networkx as nx
&gt;&gt;&gt; import pprint
&gt;&gt;&gt; g = nx.DiGraph()
&gt;&gt;&gt; g.add_edge(1, 'foo')
&gt;&gt;&gt; g.add_edge(2, 'bar')
&gt;&gt;&gt; g.add_edge('foo', 'bar')
&gt;&gt;&gt; res = nx.node_link_data(g)
&gt;&gt;&gt; pprint.pprint(res)
{'directed': True,
 'graph': {},
 'links': [{'source': 0, 'target': 3},
           {'source': 1, 'target': 2},
           {'source': 3, 'target': 2}],
 'multigraph': False,
 'nodes': [{'name': 1}, {'name': 2}, {'name': 'bar'}, {'name': 'foo'}]}
&gt;&gt;&gt; res['links'] = [
        {
            'source': res['nodes'][link['source']]['name'],
            'target': res['nodes'][link['target']]['name']
        }
        for link in res['links']]
&gt;&gt;&gt; pprint.pprint(res)
{'directed': True,
 'graph': {},
 'links': [{'source': 1, 'target': 'foo'},
           {'source': 2, 'target': 'bar'},
           {'source': 'foo', 'target': 'bar'}],
 'multigraph': False,
 'nodes': [{'name': 1}, {'name': 2}, {'name': 'bar'}, {'name': 'foo'}]}
</code></pre>
",""
"38768996","1","","<p>I try to install pandas for Python 3 by executing the following command:</p>

<pre><code>sudo pip3 install pandas
</code></pre>

<p>As a result I get this:</p>

<pre><code>Downloading/unpacking pandas
  Cannot fetch index base URL https://pypi.python.org/simple/
  Could not find any downloads that satisfy the requirement pandas
Cleaning up...
No distributions at all found for pandas
</code></pre>

<p>Maybe it is interesting to note that installation for Python 2 works fine. </p>

<pre><code>sudo pip install pandas
</code></pre>

<p>Returns the following:</p>

<pre><code>Requirement already satisfied (use --upgrade to upgrade): pandas in /usr/lib/python2.7/dist-packages
Requirement already satisfied (use --upgrade to upgrade): python-dateutil in /usr/lib/python2.7/dist-packages (from pandas)
Requirement already satisfied (use --upgrade to upgrade): pytz&gt;=2011k in /usr/lib/python2.7/dist-packages (from pandas)
Requirement already satisfied (use --upgrade to upgrade): numpy&gt;=1.6.1 in /usr/lib/python2.7/dist-packages (from pandas)
Cleaning up...
</code></pre>

<p>ADDED</p>

<p>I have just installed pandas in the following way:</p>

<pre><code>sudo apt-get install python3-pandas
</code></pre>
","<python><pandas><install><pip><python-3.4>"
"38769088","1","","<p>My plot contains many subplots and I need a list of handles to treat each one of them. Right now I do the following</p>

<pre><code>axes = [fig.add_subplot(2,3,1), fig.add_subplot(2,3,2),                       
        fig.add_subplot(2,3,3), fig.add_subplot(2,3,4),                       
        fig.add_subplot(2,3,5), fig.add_subplot(2,3,6)]
</code></pre>

<p>Is there a built-in function to get <code>axes</code> more succinctly by simply specifying 2, and 3?</p>
","<python><matplotlib>"
"38769120","1","","<p>I have a file text with data in a following format:</p>

<p>rubbish &amp; 3.97&amp; 3.83&amp; 3.95&amp; 3.83&amp; 3.82</p>

<p>rubbish &amp; 4.92&amp; 4.81&amp; 4.88&amp; 4.81&amp; 4.81</p>

<p>rubbish &amp; 5.90&amp; 5.66&amp; 5.88&amp; 5.66&amp; 5.66</p>

<p>rubbish &amp;---  &amp; 6.05&amp; 6.14&amp; 6.05&amp; 6.05</p>

<p>rubbish &amp; 6.42&amp; 6.26&amp; 6.46&amp; 6.26&amp; 6.26</p>

<p>rubbish &amp;---  &amp; 6.56&amp; 6.63&amp; 6.56&amp; 6.56</p>

<p>And I want to read them into numpy.ndarray object so that numbers are transformed into floating point number object while the <code>---</code> stay as the string objects. However, the following piece of code creates an expected numpy.array object but everything in there is a string.</p>

<pre><code>import numpy as np

wejscie = open('data.dat', 'r').readlines()

def fun1(x):

  print x
  if x.strip() == '---':

    return str(x)

  else:

    return float(x)

dane = np.array([map(fun1, linijka.split('&amp;')[1:]) for linijka in wejscie])
</code></pre>

<p>So is it possible to have numpy.ndarray object containing data of various types?</p>
","<python><arrays><numpy>"
"38769140","1","","<p>I hope i can have some help with this problem:</p>

<p>I have two text file made up of about 10.000 rows (let's say File1 and File2) comng from a FEM analysis. The structure of the files is:</p>

<p>File1</p>

<pre><code>        ....
     Element           Facet            Node  CNORMF.Magnitude     CNORMF.CNF1     CNORMF.CNF2     CNORMF.CNF3          CPRESS         CSHEAR1         CSHEAR2  CSHEARF.Magnitude    CSHEARF.CSF1    CSHEARF.CSF2    CSHEARF.CSF3

         881               3            6619              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
         881               3            6648              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
         881               3            6653              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
         930               3            6452              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
         930               3            6483              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
         930               3            6488              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        1244               2            7722              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        1244               2            7724              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        1244               2            7754              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        2380               2            3757     304.326E-06    -123.097E-06    -203.689E-06    -189.663E-06     564.697E-06    -281.448E-06     22.5357E-06     152.710E-06     144.843E-06    -26.7177E-06    -40.3387E-06
        2380               2            3826     226.603E-06    -85.9859E-06    -161.270E-06    -133.967E-06     270.594E-06    -134.865E-06     10.7988E-06     117.700E-06     116.217E-06    -4.67318E-06    -18.0298E-06
        2380               2            3848     10.4740E-03    -2.01174E-03    -6.63900E-03    -7.84743E-03     771.739E-06    -384.638E-06     30.7983E-06     5.24148E-03     5.12795E-03    -541.446E-06    -940.251E-06
        2894               2            8253              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        2894               2            8255              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        2894               2            8270              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3372               2            5920              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3372               2            5961     52.7705E-03     12.2948E-03    -40.8019E-03    -31.1251E-03     7.36309E-03    -2.56505E-03    -502.055E-06     18.8167E-03     17.9038E-03     2.12060E-03     5.38774E-03
        3372               2            5996              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3936               3            6782              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3936               3            6852              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3936               3            6857              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3937               4            6410              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3937               4            6452              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3937               4            6488              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3955               2            6940              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3955               2            6941              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        3955               2            6993              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        4024               2            8027              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.
        4024               2            8050              0.              0.              0.              0.              0.              0.              0.              0.              0.              0.              0. 
        ....
</code></pre>

<p>File2</p>

<pre><code>        ....
        Node  COORD.Magnitude     COORD.COOR1     COORD.COOR2     COORD.COOR3     U.Magnitude            U.U1            U.U2            U.U3
           1         131.691         14.5010        -92.2190        -92.8868         1.93638     188.252E-03        -1.64949    -996.662E-03
           2         131.336         10.9038        -92.2281        -92.8663         1.93341     188.250E-03        -1.64672    -995.468E-03
           3         132.130         18.7534        -92.4681        -92.5002         1.93968     188.190E-03        -1.65258    -997.959E-03
           4         130.769         1.97638        -92.5186        -92.3953         1.92580     188.179E-03        -1.63965    -992.387E-03
           5         130.560        -4.04517        -93.1433        -91.3993         1.92030     188.026E-03        -1.63459    -990.122E-03
           6         132.422         24.0768        -93.9662        -90.1454         1.94282     187.819E-03        -1.65564    -999.062E-03
           7         130.377        -8.39503        -94.1640        -89.7827         1.91586     187.774E-03        -1.63054    -988.235E-03
           8         126.321         13.6556        -88.0641        -89.5278         1.93579     192.554E-03        -1.64736    -998.202E-03
           9         125.963         4.31065        -88.6558        -89.3771         1.92786     192.145E-03        -1.64012    -994.852E-03
          10         130.037         3.02359        -94.4877        -89.2894         1.92501     187.692E-03        -1.63909    -991.871E-03
          11         126.692         18.5888        -88.1164        -89.1107         1.93970     192.653E-03        -1.65097    -999.810E-03
          12         125.751        -1.96189        -89.1238        -88.6928         1.92231     192.010E-03        -1.63500    -992.572E-03
          13         125.719        -3.46723        -89.2798        -88.4437         1.92094     191.971E-03        -1.63373    -992.005E-03
          14         130.026         7.42596        -95.0372        -88.4289         1.92818     187.556E-03        -1.64210    -993.086E-03
          15         130.736         16.3557        -95.3755        -87.9092         1.93527     187.472E-03        -1.64873    -995.891E-03
          16         130.251        -12.8122        -95.5572        -87.5783         1.91105     187.430E-03        -1.62618    -986.163E-03
          17         130.250         12.8770        -95.6602        -87.4548         1.93216     187.401E-03        -1.64586    -994.616E-03
          18         125.609        -7.73838        -90.1949        -87.0785         1.91668     191.718E-03        -1.62985    -990.191E-03
          19         124.466        -6.21492        -88.8834        -86.9075         1.91827     192.783E-03        -1.63095    -991.270E-03
          20         126.958         23.9470        -89.5421        -86.7584         1.94289     192.337E-03        -1.65406        -1.00096
          21         121.210         6.64491        -84.7929        -86.3587         1.92993     196.112E-03        -1.64059    -997.316E-03
          22         121.369         12.5781        -84.3620        -86.3434         1.93495     196.450E-03        -1.64514    -999.468E-03 
        ....
</code></pre>

<p>I want to do the following step:</p>

<ol>
<li>remove the first two column from the File1 </li>
<li>compare the node label for the two files</li>
<li>write an output text file in ""rpt"" format containing the rows having the same ""node label"" side by side</li>
</ol>

<p>Here is the code I have used. It looks like it works for small file. But for large file, it takes a huge amound of time. </p>

<pre><code>nodEl = open(""P:/File1.rpt"", ""r"")
uniNod = open(""P:/File2.rpt"", ""r"")

row_nodEl  = nodEl.readlines()
row_uniNod = uniNod.readlines()

nodEl.close()
uniNod.close()

output = open(""P:/output.rpt"", ""w"")

for index, line in enumerate(row_nodEl):
    if index &gt; 23081 and index &lt; 40572 and index !=23083 and index !=23084:
        temp  = line.strip()
        temp2 = "" "".join(temp.split()) 
        var   = temp2.split("" "",3) 
        for index2, line2 in enumerate(row_uniNod):
            if index2 &gt; 11412 and index2 &lt; 21258 and index2 != 11414 and index2 !=11415: 
                temp3 = line.strip()
                temp4 = "" "".join(temp3.split())
                var2  = temp4.split("" "",1)
                if var[2] == var2[0]:
                    output.write(""%s"" %var[2]) + "" "" + ""%s"" %var[3] + "" "" + ""%s"" %var2[1])
</code></pre>

<p>Any suggestion is more then welcome!</p>
","<python><file><text><comparison><abaqus>"
"38769154","2","38769088","<p>Simply use list comprehensions:</p>

<pre><code>axes = [fig.add_subplot(2,3,i+1) for i in range(6)]
</code></pre>

<p>Or a little generally:</p>

<pre><code>x = 2
y = 3
axes = [fig.add_subplot(x,y,i+1) for i in range(x*y)]
</code></pre>
",""
"38769207","1","","<p>I am trying to pass a list into an HTML form with Python. I am a noob and I am not really sure what I am doing so any advice would be appreciated.</p>

<p>What I am trying to do is fill in all the blank text boxes and click radio buttons and drop down lists / menus using the list. This list will be the default values for the form.</p>

<pre><code>form = cgi.FieldStorage()
latitude = form.getvalue('latitude', '0')
if config_settings.settings[0]:
    latitude = config_settings.settings[0]
</code></pre>

<p>I have been trying to do this with the CGI module but I am not doing this right. Should I use mechanise or selenium instead, or can this be done with CGI and FieldStorage. Any advice would be greatly appreciated.</p>

<pre><code>#!/usr/bin/python
import config_settings
import cgi
import cgitb
# A path to error logs
cgitb.enable(display=0,logdir=""/var/www/cgi-bin/error-logs"")


print(""Content-Type: text/html\n\n"")
print("""")

print('''&lt;html&gt;
&lt;head&gt;
&lt;title&gt;EM2010 Sound Level Monitor - Setup&lt;/title&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;
    &lt;meta name=""description"" content=""EM2010 User Interface""&gt;
    &lt;meta name=""author"" content=""Sonitus Systems""&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class=""navbar navbar-inverse navbar-fixed-top""&gt;
      &lt;div class=""navbar-inner""&gt;
        &lt;div class=""container-fluid""&gt;
          &lt;div class=""logo""&gt; &lt;a href=""/index.html""&gt; &lt;img src=""../images/sonitus_logo_halo.png"" style=""height:32px;"" /&gt; &lt;/a&gt; &lt;/div&gt;
          &lt;a class=""brand"" href=""/index.html""&gt;EM2010 Sound Level Monitor&lt;/a&gt;
          &lt;div class=""nav-collapse collapse""&gt;
            &lt;p class=""navbar-text pull-right""&gt;
              &lt;a href=""./set_time.cgi"" class=""navbar-link""&gt; &lt;span id=""showdate""&gt; &lt;/span&gt;&lt;span id=""showtime""&gt; &lt;/span&gt; &lt;/a&gt;
            &lt;/p&gt;
          &lt;/div&gt;&lt;!--/.nav-collapse --&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;


        &lt;div class=""container-fluid""&gt;
          &lt;div class=""row-fluid""&gt;
            &lt;div class=""span10 offset1""&gt;
            &lt;!--This is the line you need to look at mark--&gt;
           &lt;form class=""well form-inline"" method=""post"" action=""/cgi-bin/process_setup.cgi""&gt;

              &lt;!-- Location --&gt;
              &lt;i class=""icon-location-arrow icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Location&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;
              Latitude: &lt;input type=""text"" name=""latitude"" class=""input-small"" value=""lat""&gt;&amp;deg;



&lt;select name=""latHemi""&gt;

  &lt;option selected=""selected""&gt;N&lt;/option&gt;
  &lt;option&gt;S&lt;/option&gt;&lt;/select&gt;

  &lt;option&gt;N&lt;/option&gt;
  &lt;option selected=""selected""&gt;S&lt;/option&gt;&lt;/select&gt;



 &amp;nbsp;&amp;nbsp;
 Longitude: &lt;input type=""text"" name=""longitude"" class=""input-small"" value=""$long""&gt;&amp;deg;

&lt;select name=""longHemi""&gt;


  &lt;option selected=""selected""&gt;E&lt;/option&gt;
  &lt;option&gt;W&lt;/option&gt;&lt;/select&gt;

  &lt;option&gt;E&lt;/option&gt;
  &lt;option selected=""selected""&gt;W&lt;/option&gt;&lt;/select&gt;

&lt;hr/&gt;
&lt;!-- Mic Sensitivity --&gt;
&lt;i class=""icon-microphone icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Microphone&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;
Sensitivity: &lt;input type=""text"" name=""sensitivity"" class=""input-small"" value=""$micSensitivity""&gt; dB


 &lt;hr/&gt;
&lt;!-- Measurement Settings --&gt;
&lt;i class=""icon-edit icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Measurement Settings&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;
&lt;h5&gt;Weighting:&lt;/h5&gt;



&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""aWeight"" value=""aWeight"" checked=""checked"" readonly=""readonly"" disabled=""disabled"" type=""checkbox""&gt;
&lt;span&gt; A-Weight &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;


  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""cWeight"" value=""cWeight"" checked=""checked"" type=""checkbox""&gt;



&lt;span&gt; C-Weight&lt;/span&gt;&lt;/label&gt;



 &lt;br&gt;
 &lt;br&gt;
 &lt;h5&gt;Optional Levels (L&lt;sub&gt;EQ&lt;/sub&gt; is always recorded):&lt;/h5&gt;




  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L95"" value=""L95"" checked=""checked"" type=""checkbox""&gt;

    &lt;!--&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L95"" value=""L95"" type=""checkbox""&gt;--&gt;

&lt;span&gt; L95  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L90"" value=""L90"" checked=""checked"" type=""checkbox""&gt;

  &lt;!--&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L90"" value=""L90"" type=""checkbox""&gt;--&gt;

 &lt;span&gt; L90  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L50"" value=""L50"" checked=""checked"" type=""checkbox""&gt;

  &lt;!--&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L50"" value=""L50"" type=""checkbox""&gt;--&gt;

&lt;span&gt; L50  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L10"" value=""L10"" checked=""checked"" type=""checkbox""&gt;

  &lt;!--&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L10"" value=""L10"" type=""checkbox""&gt;--&gt;

&lt;span&gt; L10  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L05"" value=""L05"" checked=""checked"" type=""checkbox""&gt;

  &lt;!--&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""L05"" value=""L05"" type=""checkbox""&gt;--&gt;

&lt;span&gt; L5  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""checkbox inline control-label""&gt;&lt;input name=""fmax"" value=""fmax"" checked=""checked"" type=""checkbox""&gt;

  &lt;!--&lt;label class=""checkbox inline control-label""&gt;&lt;input name=""fmax"" value=""fmax"" type=""checkbox""&gt;--&gt;

&lt;span&gt; L&lt;sub&gt;MAX&lt;/sub&gt;&lt;/span&gt;&lt;/label&gt;



&lt;br&gt;
&lt;br&gt;
&lt;h5&gt;Averaging Period:&lt;/h5&gt;





  &lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""1min"" checked=""checked"" type=""radio""&gt;

  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""1min"" type=""radio""&gt;--&gt;

&lt;span&gt; 1 minute  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""5min"" checked=""checked"" type=""radio""&gt;

  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""5min"" type=""radio""&gt;--&gt;

 &lt;span&gt; 5 minutes  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""10min"" checked=""checked"" type=""radio""&gt;

 &lt;!-- &lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""10min"" type=""radio""&gt;--&gt;

&lt;span&gt; 10 minutes  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""15min"" checked=""checked"" type=""radio""&gt;

  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""15min"" type=""radio""&gt;--&gt;

&lt;span&gt; 15 minutes  &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""30min"" checked=""checked"" type=""radio""&gt;

  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""epoc"" value=""30min"" type=""radio""&gt;--&gt;

 &lt;span&gt; 30 minutes&lt;/span&gt;&lt;/label&gt;""



&lt;br&gt;
&lt;br&gt;
&lt;h5&gt;Time Weighting (L&lt;sub&gt;MAX&lt;/sub&gt;):&lt;/h5&gt;





  &lt;label class=""radio inline control-label""&gt;&lt;input name=""fastaveraging"" value=""fastaveraging"" checked=""checked"" type=""radio""&gt;
  &lt;span&gt; 0.125s (Fast) &amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;
  &lt;label class=""radio inline control-label""&gt;&lt;input name=""fastaveraging"" value=""empty"" type=""radio""&gt;
  &lt;span&gt; 1s (Slow)&lt;/span&gt;&lt;/label&gt;

  &lt;label class=""radio inline control-label""&gt;&lt;input name=""fastaveraging"" value=""fastaveraging"" type=""radio""&gt;
  &lt;span&gt; 0.125s  (Fast)&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;/label&gt;""
  &lt;label class=""radio inline control-label""&gt;&lt;input name=""fastaveraging"" value=""empty"" checked=""checked"" type=""radio""&gt;
  &lt;span&gt; 1s (Slow)&lt;/span&gt;&lt;/label&gt;""






&lt;hr/&gt;
&lt;!-- Reboot --&gt;
 &lt;i class=""icon-refresh icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Reboot Time&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;






  &lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""midnight"" checked=""checked"" type=""radio""&gt;

  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""midnight"" type=""radio""&gt;--&gt;

&lt;span &gt;00:00hrs&lt;/span&gt;&lt;/label&gt;


  &lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""7am"" checked=""checked"" type=""radio""&gt;

 &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""7am"" type=""radio""&gt;--&gt;

&lt;span &gt;07:00hrs&lt;/span&gt;&lt;/label&gt;


  &lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""7pm"" checked=""checked"" type=""radio""&gt;

  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""7pm"" type=""radio""&gt;--&gt;

&lt;span &gt;19:00hrs&lt;/span&gt;&lt;/label&gt;


  &lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""23pm"" checked=""checked"" type=""radio""&gt;
else
  &lt;!--&lt;label class=""radio inline control-label""&gt;&lt;input name=""bootTime"" value=""23pm"" type=""radio""&gt;--&gt;

&lt;span &gt;23:00hrs&lt;/span&gt;&lt;/label&gt;




&lt;hr/&gt;
&lt;!-- ISP --&gt;
&lt;i class=""icon-cloud-upload icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Remote Upload&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;




  &lt;label class=""radio inline control-label""&gt;&lt;input name=""isp"" value=""nointernet"" checked=""checked"" type=""radio""&gt;
else
  &lt;label class=""radio inline control-label""&gt;&lt;input name=""isp"" value=""nointernet"" type=""radio""&gt;

&lt;span&gt;Upload Off&lt;/span&gt;&lt;/label&gt;


  &lt;label class=""radio inline control-label""&gt;&lt;input name=""isp"" value=""vodafone"" checked=""checked"" type=""radio""&gt;

  &lt;label class=""radio inline control-label""&gt;&lt;input name=""isp"" value=""vodafone"" type=""radio""&gt;

&lt;span&gt;Upload On&lt;/span&gt;&lt;/label&gt;




&lt;hr/&gt;
  Changes will not take effect until the monitor is &lt;span class=""bold""&gt;rebooted&lt;/span&gt;.
  &lt;p class=""offset0""&gt;
  &lt;br/&gt;
  &lt;label for=""submit"" class=""btn""&gt;&lt;i class=""icon-ok""&gt;&lt;/i&gt; Submit Changes&lt;/label&gt;
  &lt;input id=""submit"" name=""Submit"" value=""Submit Changes"" type=""submit"" class=""hidden"" /&gt;

  &lt;label for=""reset"" class=""btn""&gt;&lt;i class=""icon-refresh""&gt;&lt;/i&gt; Reset Form&lt;/label&gt;
  &lt;input id=""reset"" name=""Reset"" value=""Reset Form"" type=""reset"" class=""hidden"" /&gt;

  &lt;label for=""restore"" class=""btn""&gt;&lt;i class=""icon-home""&gt;&lt;/i&gt; Restore Defaults&lt;/label&gt;
  &lt;input id=""restore"" name=""Submit""  value=""Restore Factory Defaults"" type=""submit"" class=""hidden"" /&gt;
  &lt;/p&gt;
  &lt;/form&gt;





&lt;/body&gt;

&lt;/html&gt;''')
</code></pre>
","<python><html><selenium><cgi><mechanize>"
"38769274","1","","<p>I want to have information about many persons. 
I have these informations on the website www.wats4u.com. .
I have the firstname and the name of these persons in a document exel.</p>

<p>For the moment I have the code :</p>

<pre><code>import urllib 
page = urllib.urlopenbegin('https://www.wats4u.com/annuaire-alumni?lastname=algan&amp;firstname=michel&amp;scholl=All&amp;class=All&amp;=rechercher')
strpage = page.read()
sock.close()
print htmlSource
</code></pre>

<p>And I would like a code more like that :</p>

<pre><code>page = urllib.urlopenbegin('https://www.wats4u.com/annuaire-alumni?lastname= + name + &amp;firstname= + firstname + &amp;scholl=All&amp;class=All&amp;=rechercher')
</code></pre>

<p>I have the name and the firstname in a document exel ""test.xlsx""( approximately 5000 people).</p>

<p>What do I need to change or add in my code?</p>
","<python><web>"
"38769316","2","38769120","<p>The problem isn't with <code>fun1</code>, it's with trying to insert elements of differing types into a numpy array. </p>

<p>Consider the following:</p>

<pre><code>&gt;&gt;&gt; a = numpy.array([1])
&gt;&gt;&gt; numpy.append(a,2)
array([1, 2])
&gt;&gt;&gt; numpy.append(a,'b')
array(['1', 'b'],
  dtype='&lt;U11')
</code></pre>

<p>You may find this helpful <a href=""https://stackoverflow.com/questions/11309739/store-different-datatypes-in-one-numpy-array"">Store different datatypes in one NumPy array?</a></p>
",""
"38769334","2","38769088","<p>You can use:</p>

<pre><code>f, ((ax1, ax2, ax3),(ax4, ax5, ax6)) = plt.subplots(2, 3)
</code></pre>

<p>or:</p>

<pre><code>f, axarray = plt.subplots(2, 3)
</code></pre>
",""
"38769350","1","","<p>I have been working on this project, a small Python and Tkinter project as I'm a beginner and I almost finished it if it weren't for this little issue I have with it that I detected after doing a few tests.
The program should say whether a serial number that I entered in an input is a ""devil number"" or not depending on whether the number does have the number ""666"" in it or not. in the positive case, there should be the number ""666"" in it and it should away from other 6s, which means there shouldn't be something like this ""666"". If the number ""666"" is repeated several times inside the serial number (without being stuck together ""666666"") it can be considered a devil number too.</p>

<p>The issue I have is that when I test numbers that only have one ""666"" within them and that at the same time end with that number (666), those numbers are not considered as devil numbers while they should be. I can't seem to solve this problem.</p>

<p>To realise this project, I used Python and Tkinter. The code is as follows:</p>

<pre><code>""""""*************************************************************************""""""
"""""" Author: CHIHAB        Version: 2.0        Email: chihab2007@gmail.com   """"""
"""""" Purpose: Practice     Level: Beginner     2016/2017                     """"""
""""""*************************************************************************""""""
############################ I M P O R T S#####################################
from tkinter import*
from types import *
############################ T K I N T E R ####################################
main = Tk()

e = Entry(main, bg=""darkblue"", fg=""white"")
e.pack(fill=X)

l = Label(main, bg=""blue"", fg=""yellow"")
l.pack(fill=X)
############################ F U N C T I O N S ################################
def devil(x): #TEST ENTERED VALUE FOR DEVIL NUMBER
    c = 0
    i = 0
    l = list(x)
    while i &lt; len(l):                   #This block of code means that as long as the index i 
        if l[i] == ""6"":                 #   is below the length of the list to which we have 
            c = c+1                     #       converted the entry, the program is allowed to keep 
            print(""this is c :"", c)     #           reading through the list's characters.
        else:
            c = 0
        if i &lt;= (len(l)-2) and c == 3 and l[i+1] != ""6"":
            return True
        i = i+1
    return False
def printo():   #GET VALUE ENTRY AND SHOW IT IN LABEL
    x = e.get()
    if x != """":
        if x.isnumeric() == True:   #SHOW ENTERED VALUE IF INTEGER
            y = devil(x)
            if y == True:
                print(""The number you entered is a devil number."")                
                l.config(text=""The number you entered is a devil number."", bg=""blue"")
            else:
                print(""The number you entered is NOT a devil number."")                
                l.config(text=""The number you entered is NOT a devil number."", bg=""blue"")
            #print(x)
            e.delete(0, END)
        else:   #SHOW ERROR IF NOT INTEGER
            l.config(text=""please enter an integer in the entry."", bg=""red"")
            print(""please enter an integer in the entry."")
            e.delete(0, END)
    else:   #SHOW ERROR IF EMPTY
        l.config(text=""please enter something in the entry."", bg=""red"")
        print(""please enter something in the entry."")

############################ T K I N T E R ####################################
b = Button(main, text=""Go"", bg=""lightblue"", command=printo)
b.pack(fill=X)

main.mainloop()
</code></pre>

<p>Here you go, guyz. I hope my code is neat enough and that you would be able to help me which I have no doubt about.
Thank you.</p>
","<python><tkinter><project>"
"38769400","2","38769274","<p>Look into <a href=""https://docs.python.org/2/library/stdtypes.html#str.format"" rel=""nofollow""><code>str.format</code></a>:</p>

<pre><code>url = 'https://www.wats4u.com/annuaire-alumni?lastname={}&amp;firstname={}&amp;scholl=All&amp;class=All&amp;=rechercher'
firstname = 'algan'
lastname = 'michel'
page = urllib.urlopenbegin(url.format(firstname, lastname))
</code></pre>
",""
"38769428","1","","<p>In my config file I have something like that : </p>

<pre><code>[Section_1]
List=Column1,Column2,Column3,Column4
</code></pre>

<p>Now, I would like to process it in my main file as normal lists :</p>

<pre><code>    config = configparser.ConfigParser()
    config.read(""configTab.ini"")
    for index in range(len(List)):
                 sql=sql.replace(List[index],""replace(""+List[index]+"",""'hidden'"")"")
</code></pre>

<p>Now when I read from configuration file ""List"" is a normal String.
What is the best approach to to it?</p>

<p>If I put a normal list variable in my main code it this way:</p>

<pre><code>List=['Column1','Column2','Column3','Column4']
</code></pre>

<p>Then it works fine, but I would like to get that from my configure file,</p>

<p>Thanks</p>
","<python><configparser>"
"38769449","2","38769207","<p>Part of the problem is that you're spinning this all up from the ground up. There are many templating libraries and tools offered in the greater Python community, you may want to look at those. Personally, I like Flask.</p>

<p>If I <em>HAD</em> to solve this problem without recourse to an external library, I would change all instances of <code>location</code> in your code to <code>{location}</code> and then add a <code>.format(location = location)</code> to the end.</p>

<pre><code>location = 'cat'
# Notice the location with braces, and the one without.
html = '&lt;input value=""{location}"" name=""location"" type=""text"" /&gt;'
print(html.format(location = location))

# outputs &lt;input value=""cat"" name=""location"" type=""text"" /&gt;
# the location with braces is replaced.
</code></pre>
",""
"38769508","2","38769428","<p>Use <a href=""https://docs.python.org/2/library/stdtypes.html#str.split"" rel=""nofollow""><code>str.split</code></a>:</p>

<p><code>List = List.split(',')</code></p>

<pre><code>string = 'a, b, c'
print(string.split(','))
&gt;&gt; ['a', 'b', 'c']
</code></pre>
",""
"38769553","2","38769350","<p>If you mean that <code>666</code>, found anywhere in the number should be a match, then it's very simple:</p>

<pre><code>if '666' in '1234666321':
    print(""It's a devil's number"")
</code></pre>

<p>However, you say that <code>666</code> must be a ""lone"" <code>666</code>, i.e. exactly three <code>6</code> side by side, no more, no less. Neither two, nor four. Five <code>6</code>'s are right out. In that case, I would use <a href=""https://stackoverflow.com/a/38769806/344286"">tobias_k's regex</a>. </p>

<p>Though, if you had a passionate hatred for regex, you <em>could</em> do it using <code>string.partition</code>:</p>

<pre><code>def has_devils_number(num):
    start, mid, end = num.partition('666')
    if not mid:
        return False
    else:
        if end == '666':
            return False
        elif start.endswith('6') or end.startswith('6'):
            return has_devils_number(start) or has_devils_number(end)
        return True
</code></pre>

<p>Here's what the performance looks like:</p>

<pre><code>&gt;&gt;&gt; x = '''
... import re
... numbas = ['666', '6', '123666', '12366', '66123', '666123', '666666', '6666', '6'*9, '66661236666']
... 
... def devil(x):
...     return re.search(r""(?:^|[^6])(666)(?:[^6]|$)"", x) is not None
... '''
&gt;&gt;&gt; import timeit
&gt;&gt;&gt; timeit.timeit('[devil(num) for num in numbas]', setup=x)
13.822128501953557

&gt;&gt;&gt; x = '''
... numbas = ['666', '6', '123666', '12366', '66123', '666123', '666666', '6666', '6'*9, '6666123
666']
... def has_devils_number(num):
...     start, mid, end = num.partition('666')
...     if not mid:
...         return False
...     else:
...         if end == '666':
...             return False
...         elif start.endswith('6') or end.startswith('6'):
...             return has_devils_number(start) or has_devils_number(end)
...         return True
... '''
&gt;&gt;&gt; timeit.timeit('[has_devils_number(num) for num in numbas]', setup=x)
9.843224229989573
</code></pre>

<p>I'm as surprised as you are.</p>
",""
"38769602","2","38769207","<p>I dont know a lot about Python but you did say you where a noob so I hope there is some value in this text, it gonna a quick and I hope easy to follow.</p>

<p>Who cares what the server tech is? Get the data that you need on the client side and turn it into a json object so for instance if you need a name passed to the client side create an object like this 'data: {""name"": ""John Doe"", ""tel"", ""055415252""}' (there will be a library already part of your project which will create a json object guaranteed!). Send this object to the page you are displaying or you are responding to.</p>

<p>Then on the client side simply map the object into a javascript object, lets say you sent the above object you now need to use something like this on the client side 'var x = JSON.parse(data)' (<a href=""https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"" rel=""nofollow"">Link to the JSON.parse command</a>) once you have done this you can then update the fields or whatever on your page.</p>

<p>Lets say you have a div on your html page like this '' you can easily set the content to text from your object as follows using jquery: $(""#somedata"").text(x.name);</p>

<p>You may have an input like this:  and again we can set the text within the input using jquery <a href=""https://jquery.com/"" rel=""nofollow"">A quick link to jquery which you will find handy when builing small scale web app pages</a> as follows: $(""#morestuff"").val(x.name).</p>

<p>So thats really sketchy but basically how web pages work.</p>
",""
"38769628","1","","<p>I want to know how to read a csv file into a dictionary and then print out a specific value from the dictionary with python. <a href=""http://i.imgur.com/OcZ1tlK.jpg"" rel=""nofollow"">CSV file example</a>. I'd like to grab the line that is selected and print that persons name out. I'm new at this and I've tried some loops, but the loop goes right past to the last person. </p>

<pre><code>import csv
with open('data.csv') as csvFile:
readCSV = list(csv.DictReader(csvFile))
for row in readCSV:
    person1 = row['firstname'] + ' ' + row['lastname']
with open('nametags8gen.html', 'w+') as myWriteFile:
myWriteFile.write('&lt;!DOCTYPE html&gt; \n'
                  '&lt;html&gt;\n'
                  '&lt;head&gt;\n'
                  '&lt;title&gt;natetag8&lt;/title&gt;\n'
                  '&lt;link href=""styles/nametags8.css"" type=""text/css"" rel=""stylesheet"" /&gt;\n'
                  '&lt;/head&gt;\n'
                  '&lt;body&gt;\n'
                  '&lt;header&gt;\n'
                  '&lt;/header&gt;\n'
                  '&lt;main class=""mainContainer""&gt;\n'
                  '&lt;div class""textBoxContainer""&gt;\n'
                  '&lt;div class=""textContainer""&gt;\n'
                  '&lt;span class=""font22""&gt;' + person1 +'&lt;/span&gt;\n'
                  '&lt;span class=""font12""&gt;Smith&lt;/span&gt;\n'
                  '&lt;span class=""font14""&gt;Web Developer&lt;/span&gt;\n'
                  '&lt;span class=""font12""&gt;Regis University&lt;/span&gt;\n'
                  '&lt;span class=""font12""&gt;Denver, CO&lt;/span&gt;\n'
                  '&lt;/div&gt;\n')
</code></pre>

<p>This loops through and grabs the last person and not the specific person I need. </p>

<p>The 'write' section is where I will be putting the persons information, specifically in that spot that says 'person1' in my html template is where a first and last name will go that I take from the CSV file. I don't know how to make the loop stop on a certain person/row to pull their information, such as firstname or their address. </p>
","<python><csv><dictionary>"
"38769638","2","38769140","<p>You are comparing each line of one file (with <code>m</code> lines) to each line of another file (with <code>n</code> lines). This leads to a time complexity <code>O(m*n)</code>. What this means is that two files, each having 10,000 lines, will produce 100,000,000 comparisons.</p>

<p>You could speed up your code if you change how you read values. Consider reading a file into a dictionary instead into a list. Each key in the dictionary would be a node number and each value would be the complete line.</p>

<p>Using this approach, you could do the following:</p>

<ol>
<li>Load the first file into a dictionary</li>
<li>Load the second file into a dictionary</li>
<li>For each node from the first dictionary, find the corresponding node in the second dictionary</li>
</ol>

<p>Using Python, it would look similar to this</p>

<pre><code>file_contents_1 = load_file(""P:/File1.rpt"")
file_contents_2 = load_file(""P:/File2.rpt"")

for node_label in file_contents_1:
    # Skip processing node which doesn't have corresponding values in the second file
    if not node_label in file_contents_2:
        continue
    # Do something
</code></pre>

<p>The benefit of this approach is that you load the files separately, meaning that time complexity now becomes linear <code>O(m+n)</code>. When looking for a corresponding node in the second file, you have a constant time complexity because of the way dictionaries are implemented (i.e. hash tables).</p>

<p>This should make your code a lot faster.</p>
",""
"38769675","1","","<p>What is the fastest way (within the limits of sane pythonicity) to count distinct values, across columns of the same <code>dtype</code>, for each row in a <code>DataFrame</code>? </p>

<p><strong>Details:</strong> I have a <code>DataFrame</code> of categorical outcomes by subject (in rows) by day (in columns), similar to something generated by the following.</p>

<pre><code>import numpy as np
import pandas as pd

def genSampleData(custCount, dayCount, discreteChoices):
    """"""generate example dataset""""""
    np.random.seed(123)     
    return pd.concat([
               pd.DataFrame({'custId':np.array(range(1,int(custCount)+1))}),
               pd.DataFrame(
                columns = np.array(['day%d' % x for x in range(1,int(dayCount)+1)]),
                data = np.random.choice(a=np.array(discreteChoices), 
                                        size=(int(custCount), int(dayCount)))    
               )], axis=1)
</code></pre>

<p>For example, if the dataset tells us which drink each customer ordered on each visit to a store, I would like to know the count of distinct drinks per customer.</p>

<pre><code># notional discrete choice outcome          
drinkOptions, drinkIndex = np.unique(['coffee','tea','juice','soda','water'], 
                                     return_inverse=True) 

# integer-coded discrete choice outcomes
d = genSampleData(2,3, drinkIndex)
d
#   custId  day1  day2  day3
#0       1     1     4     1
#1       2     3     2     1

# Count distinct choices per subject -- this is what I want to do efficiently on larger DF
d.iloc[:,1:].apply(lambda x: len(np.unique(x)), axis=1)
#0    2
#1    3

# Note: I have coded the choices as `int` rather than `str` to speed up comparisons.
# To reconstruct the choice names, we could do:
# d.iloc[:,1:] = drinkOptions[d.iloc[:,1:]]
</code></pre>

<p><strong>What I have tried:</strong> The datasets in this use case will have many more subjects than days (example <code>testDf</code> below), so I have tried to find the most efficient row-wise operation:</p>

<pre><code>testDf = genSampleData(100000,3, drinkIndex)

#---- Original attempts ----
%timeit -n20 testDf.iloc[:,1:].apply(lambda x: x.nunique(), axis=1)
# I didn't wait for this to finish -- something more than 5 seconds per loop
%timeit -n20 testDf.iloc[:,1:].apply(lambda x: len(x.unique()), axis=1)
# Also too slow
%timeit -n20 testDf.iloc[:,1:].apply(lambda x: len(np.unique(x)), axis=1)
#20 loops, best of 3: 2.07 s per loop
</code></pre>

<p>To improve on my original attempt, we note that <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html"" rel=""nofollow noreferrer"">pandas.DataFrame.apply()</a> accepts the argument:</p>

<blockquote>
  <p>If <code>raw=True</code> the passed function will receive ndarray objects instead.
  If you are just applying a NumPy reduction function this will achieve
  much better performance</p>
</blockquote>

<p>This did cut the runtime by more than half:</p>

<pre><code>%timeit -n20 testDf.iloc[:,1:].apply(lambda x: len(np.unique(x)), axis=1, raw=True)
#20 loops, best of 3: 721 ms per loop *best so far*
</code></pre>

<p>I was surprised that a pure numpy solution, which would seem to be equivalent to the above with <code>raw=True</code>, was actually a bit slower:</p>

<pre><code>%timeit -n20 np.apply_along_axis(lambda x: len(np.unique(x)), axis=1, arr = testDf.iloc[:,1:].values)
#20 loops, best of 3: 1.04 s per loop
</code></pre>

<p>Finally, I also tried transposing the data in order to do <a href=""https://stackoverflow.com/questions/30503321/finding-count-of-distinct-elements-in-dataframe-in-each-column"">column-wise count distinct</a>, which I thought might be more efficient (at least for <code>DataFrame.apply()</code>, but there didn't seem to be a meaningful difference.</p>

<pre><code>%timeit -n20 testDf.iloc[:,1:].T.apply(lambda x: len(np.unique(x)), raw=True)
#20 loops, best of 3: 712 ms per loop *best so far*
%timeit -n20 np.apply_along_axis(lambda x: len(np.unique(x)), axis=0, arr = testDf.iloc[:,1:].values.T)
# 20 loops, best of 3: 1.13 s per loop
</code></pre>

<p>So far my best solution is a strange mix of <code>df.apply</code> of <code>len(np.unique())</code>, but what else should I try?</p>
","<python><performance><pandas><numpy><distinct-values>"
"38769798","1","","<p>I'm trying to write a Python script that will check if a user account has got two-step verification enabled.</p>

<p>As a starting point, I'm using the quickstart script provided on <a href=""https://developers.google.com/admin-sdk/reports/v1/quickstart/python"" rel=""nofollow"">https://developers.google.com/admin-sdk/reports/v1/quickstart/python</a>. I've followed the instructions and the sample code works as expected.</p>

<p>I then add the following line after the example code:</p>

<pre><code>results = service.userUsageReport().get(userKey='john.doe@example.com', date='2016-08-02', parameters='accounts:is_2sv_enrolled').execute()
</code></pre>

<p>but I get ""Insufficient Permission"" returned.</p>

<p>Just to make it clear, I do replace ""john.doe@example.com"" with an email address that is valid for my organisation :).</p>

<p>I've double-checked the credentials used and, indeed, if I use the web-based API Explorer with the same account being used to run the script, it works.</p>

<p>I don't understand why the call to activities().list() is working but userUsageReport().get() isn't.</p>
","<python><google-admin-sdk>"
"38769806","2","38769350","<p>You should use a <a href=""https://docs.python.org/3/library/re.html#re.search"" rel=""nofollow"">regular expression</a> for this. Something like <code>(?:^|[^6])(666)(?:[^6]|$)</code> seems to work. This means ""start of string <code>^</code> or <code>|</code> something that is not a 6 <code>[^6]</code>, then <code>666</code>, then something other than 6 or end of string <code>$</code>"".</p>

<pre><code>&gt;&gt;&gt; p = r""(?:^|[^6])(666)(?:[^6]|$)""
&gt;&gt;&gt; re.search(p, ""123666"")
&lt;_sre.SRE_Match at 0x7fe120f12918&gt;
&gt;&gt;&gt; re.search(p, ""666123"")
&lt;_sre.SRE_Match at 0x7fe120f128a0&gt;
&gt;&gt;&gt; re.search(p, ""12366666123"")
None
</code></pre>

<p>In your code, this should do the trick (not tested):</p>

<pre><code>def devil(x):
    p = r""(?:^|[^6])(666)(?:[^6]|$)""
    return re.search(p, x) is not None
</code></pre>

<p>If performance is an issue (but in your case it should not be), you can precompile the regex.</p>

<pre><code>p = re.compile(r""(?:^|[^6])(666)(?:[^6]|$)"")
def devil_fast(x):
    return p.search(x) is not None
</code></pre>

<p>Timing:</p>

<pre><code>In [5]: numbers = ['666', '6', '123666', '12366', '66123', '666123', '666666', '6666', '6'*9, '66661236666', '12366664566786669']
In [8]: %timeit [devil(x) for x in numbers]
100000 loops, best of 3: 14 µs per loop
In [9]: %timeit [devil_fast(x) for x in numbers]
100000 loops, best of 3: 6.32 µs per loop
</code></pre>
",""
"38769821","1","","<p>If I have a 2D list in python <code>Data</code> and I want to create a slice of that 2D list, where I select all the elements from the first index and a single on from the second.</p>

<p>eg.</p>

<pre><code>Data = [[a,b,c],[d,e,f],[h,i,g]]
</code></pre>

<p>and I want the list;</p>

<pre><code>raw_data = [b,e,i]
</code></pre>

<p>Why does doing something like;</p>

<pre><code>raw_data = Data[:][1]
</code></pre>

<p>not give the desired output?
I have specified the whole first index and the 1 index for the second.
Instead I get the output that is;</p>

<pre><code>raw_data = [d,e,f]
</code></pre>

<p>Which is what I would expect to get from;</p>

<pre><code>raw_data = Data[1][:]

raw_data = [d,e,f]
</code></pre>

<p>So;</p>

<pre><code>Data[1][:] = Data[:][1]
</code></pre>

<p>Which is not compatible with my mental model of how lists work in python.</p>

<p>Instead I have to use a loop to do it;</p>

<pre><code>raw_data = []

for i in xrange(0,len(Data),1):
       raw_data.append(Data[i][1])
</code></pre>

<p>So my question is, can anyone explain why <code>Data[1][:] = Data[:][1]</code> ?</p>

<p>Thanks for reading!</p>
","<python><list><indexing>"
"38769859","1","","<p>I am unable to understand how values are assinged to a new column of a DataFrame</p>

<p>if my code is:</p>

<pre><code>Frame3['Debt']=16.5
print Frame3

o/p is
     Year   State  POP  Debt
one    2000    Ohio  1.5  16.5
two    2001    Ohio  1.7  16.5
three  2002    Ohio  3.6  16.5
four   2001  Nevada  2.4  16.5
five   2002  Nevada  2.9  16.5
</code></pre>

<p>but if I assign</p>

<pre><code>Frame5 =Frame3['Debt']=16.5
print Frame5
</code></pre>

<p>my o/p is:</p>

<pre><code>16.5
</code></pre>

<p>Whats happening the above line of code?? </p>

<p>but the code:
<code>Frame5 =Frame3</code> works</p>
","<python><pandas><dataframe>"
"38769878","2","38769628","<p>Do something like :</p>

<pre><code>import csv
l = []

with open('inputfile.csv') as f:
    reader = csv.DictReader(f)
    for row in reader:
        l.append(row)

# If you need say for example the firstname
for val in l:
    print (l['firstname'])
</code></pre>

<p>Although its still unclear without the code what exactly are you trying to achieve.</p>
",""
"38769930","2","38769859","<p>You need to write:</p>

<pre><code>Frame5 = Frame3.loc[Frame3['Debt']== 16.5]
</code></pre>

<p>To subset your pandas DataFrame. Make sure that 'Debt' is a float.</p>
",""
"38769935","1","","<p>Consider a sum of <code>n</code> squared iid normal random variables <code>S = sum (Z^2(mu, sig^2))</code>.  According to <a href=""https://mathoverflow.net/questions/89779/sum-of-squares-of-normal-distributions"">this question</a>, <code>S / sig^2</code> has a <a href=""https://en.wikipedia.org/wiki/Noncentral_chi-squared_distribution"" rel=""nofollow noreferrer"">noncentral chi-squared distribution</a> with degrees of freedom = <code>n</code> and non-centrality parameter = <code>n*mu^2</code>.</p>

<p>However, compare generating <code>N</code> of these variables <code>S</code> by summing squared normals with generating <code>N</code> noncentral chi-squared random variables directly using <code>scipy.ncx2</code>:</p>

<pre><code>import numpy as np
from scipy.stats import ncx2, chi2
import matplotlib.pyplot as plt

n = 1000  # number of normals in sum
N_MC = 100000  # number of trials

mu = 0.05
sig = 0.3

### Generate sums of squared normals ###
Z = np.random.normal(loc=mu, scale=sig, size=(N_MC, n))
S = np.sum(Z**2, axis=1)

### Generate non-central chi2 RVs directly ###
dof = n
non_centrality = n*mu**2
NCX2 = sig**2 * ncx2.rvs(dof, non_centrality, size=N_MC)
# NCX2 = sig**2 * chi2.rvs(dof, size=N_MC)  # for mu = 0.0

### Plot histos ###
fig, ax = plt.subplots()
ax.hist(S, bins=50, label='S')
ax.hist(NCX2, bins=50, label='NCX2', alpha=0.7)
ax.legend()
plt.show()
</code></pre>

<p>This results in the histograms
<a href=""https://i.stack.imgur.com/IY9o2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IY9o2.png"" alt=""comparison of distros""></a></p>

<p>I believe the mathematics is correct; could the discrepancy be a bug in the <code>ncx2</code> implementation?  Setting <code>mu = 0</code> and using <code>scipy.chi2</code> looks much better:
<a href=""https://i.stack.imgur.com/gAIxh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gAIxh.png"" alt=""distros good""></a></p>
","<python><numpy><scipy>"
"38769969","1","","<p>I'm currently having a competition with my friends to create the shortest solution (in lines) to a python problem.</p>

<p>I figure there must be a way to get rid of the <code>total=0</code> in this for loop</p>

<pre><code>total=0
for x in word:
    total += x
print total
</code></pre>

<p>(I am aware that I can put the for loop all on one line)
To clarify I am going to be using the variable further</p>
","<python>"
"38769999","2","38769821","<p><code>lst[:]</code> has no explicit start an no explicit end, so according to the Python documentation, it will return a copy of the list starting at the start and ending at the end of the list. In other words, it will return a copy of same list you have before. So:</p>

<pre><code>&gt;&gt;&gt; Data = [['a','b','c'],['d','e','f'],['h','i','g']]
&gt;&gt;&gt; Data[:]
[['a', 'b', 'c'], ['d', 'e', 'f'], ['h', 'i', 'g']]
</code></pre>

<p>So when you say <code>Data[:]</code>, that will evaluate to the same as a copy of <code>Data</code>, meaning that <code>Data[:][1]</code> essentially is just <code>Data[1]</code>, which is <code>[d,e,f]</code></p>

<p>If you do it the other way: </p>

<pre><code>&gt;&gt;&gt; Data[1]
['d', 'e', 'f']
&gt;&gt;&gt; Data[1][:]
['d', 'e', 'f']
</code></pre>

<p>You get the second element in data, <code>[d,e,f]</code>, then you use that same list slicing syntax as before to get that same list again.</p>

<p>To get what you want, I'd use a list comprehension:</p>

<pre><code>&gt;&gt;&gt; [x[1] for x in Data]
['b', 'e', 'i']
</code></pre>

<p>Simple as that.</p>
",""
"38770004","2","38769969","<p>You can't in this context, but you don't even need that loop:</p>

<pre><code>sum(list_of_ints)
</code></pre>
",""
"38770007","2","38769821","<p>It's pretty obvious if you go through what's happening from left to right.</p>

<pre><code>raw_data = Data[:]
</code></pre>

<p>will give you the entirety of Data, so the whole list of lists: <code>[[a,b,c],[d,e,f],[h,i,g]]</code></p>

<pre><code>raw_data = Data[:][1]
</code></pre>

<p>will then give you the element at index 1 in this list, which is <code>[d,e,f]</code>.</p>

<p>On the other hand, 
    raw_data = Data[1]
will return the element at position 1 in data, which is also <code>[d,e,f]</code>.</p>

<p><code>[:]</code> on this object will again return itself in its entirety.</p>

<p>What you are trying to do is best done with a list comprehension, such as:</p>

<pre><code>raw_data = [x[1] for x in Data]
</code></pre>

<p>This will give you list of all second elements in all lists in Data.</p>
",""
"38770024","1","","<p>I'm looking for a way to speed up this process.  I have it functioning, but it is going to take days to complete.<br>
I have a data file for each day of a year.  And, I want to combine them into a single HDF5 file with a node for each data label (data tag).<br>
The data looks like this:</p>

<pre><code>a,1468004920,986.078
a,1468004921,986.078
a,1468004922,987.078
a,1468004923,986.178
a,1468004924,984.078
b,1468004920,986.078
b,1468004924,986.078
b,1468004928,987.078
c,1468004924,98.608
c,1468004928,97.078
c,1468004932,98.078
</code></pre>

<p>Note that there are different numbers of entries, and different update frequencies for each data tag.  Each actual data file has about 4 million rows, and about 4000 different tag labels, in each single day file, and then I have a year of data.<br>
The following code does what I want.  But running it for every file will take days to complete.  I'm looking for suggestions to speed this up:</p>

<pre><code>import pandas as pd
import datetime
import pytz
MI = pytz.timezone('US/Central')

def readFile(file_name):
    tmp_data=pd.read_csv(file_name,index_col=[1],names=['Tag','Timestamp','Value'])
    tmp_data.index=pd.to_datetime(tmp_data.index,unit='s')
    tmp_data.index.tz=MI
    tmp_data['Tag']=tmp_data['Tag'].astype('category')
    tag_names=tmp_data.Tag.unique()
    for idx,name in enumerate(tag_names):
        tmp_data.loc[tmp_data.Tag==name].Value.to_hdf('test.h5',name,complevel=9, complib='blosc',format='table',append=True)

for name in ['test1.csv']:
    readFile(name)
</code></pre>

<p>Essentially, what I'm trying to do is to ""unwrap"" the CSV data, so each tag is separate in the HDF5 file.  So, I want to get all the data tagged ""a"" into a single leaf of an hdf5 file for a year, and all the ""b"" data into the next leaf etc.  So, I need to run the above code on each of 365 files.  I did try with and without compression and I also tried index=False.  But, neither seemed to have a large effect.  </p>
","<python><pandas>"
"38770028","2","38769821","<p>Vanilla Python doesn't have two dimensional arrays, but it does allow for extensions to implement them. You have a list of lists, which is somewhat different.</p>

<p>The solution to your problem is to <strong>use numpy</strong> which does have a 2d array type. You can then say <code>data[:,1]</code></p>

<p>Why your example doesn't work as you expect: <code>data[:]</code> means ""a copy of <code>data</code>"" and so <code>data[:][1]</code> means the index 1 element of the copy of <code>data</code>, which is <code>[d,e,f]</code></p>
",""
"38770058","1","","<p>Let me preface this by saying I downloaded Spyder as part of the automatic installation of Anaconda about 2 months ago.</p>

<p>I was working on a web scraper in Spyder (i've written a few scrappers/files in Spyder before and run them with no issue).  However I accidentally dragged my file so that everything behind it was phased out, and tried to run my file.  It told me that I dragged the file out of my IPython environment, so I quit the application and tried to run it back up, hoping it would reconnect. </p>

<p>I've tried to open the application back up, and all I get is the spyder icon, followed by nothing.  I did the command line Spyder --reset and got this:</p>

<pre><code>C:\Users\captainhukk&gt;spyder --reset, and this is what I get in return:
Traceback (most recent call last):
  File ""C:\Anaconda2\Scripts\spyder-script.py"", line 2, in &lt;module&gt;
    start_app.main()
  File ""C:\Anaconda2\lib\site-packages\spyderlib\start_app.py"", line 114, in main
    from spyderlib import spyder
  File ""C:\Anaconda2\lib\site-packages\spyderlib\spyder.py"", line 155, in &lt;module&gt;
    from spyderlib.utils.environ import WinUserEnvDialog
  File ""C:\Anaconda2\lib\site-packages\spyderlib\utils\environ.py"", line 17, in &lt;module&gt;
    from spyderlib.widgets.dicteditor import DictEditor
  File ""C:\Anaconda2\lib\site-packages\spyderlib\widgets\dicteditor.py"", line 39, in &lt;module&gt;
    from spyderlib.widgets.dicteditorutils import (sort_against, get_size,
  File ""C:\Anaconda2\lib\site-packages\spyderlib\widgets\dicteditorutils.py"", line 78, in &lt;module&gt;
    import bs4
  File ""C:\Anaconda2\lib\site-packages\bs4\__init__.py"", line 30, in &lt;module&gt;
    from .builder import builder_registry, ParserRejectedMarkup
  File ""C:\Anaconda2\lib\site-packages\bs4\builder\__init__.py"", line 314, in &lt;module&gt;
    from . import _html5lib
  File ""C:\Anaconda2\lib\site-packages\bs4\builder\_html5lib.py"", line 70, in &lt;module&gt;
    class TreeBuilderForHtml5lib(html5lib.treebuilders._base.TreeBuilder):
AttributeError: 'module' object has no attribute '_base'
</code></pre>

<p>Any ideas on what to do to fix this issue?  I am god awful at working with windows (always used a mac), and have been searching for answers for two hours now and feel completely lost.  </p>
","<python><anaconda><spyder>"
"38770078","2","38769675","<p><code>pandas.melt</code> with <code>DataFrame.groupby</code> and <code>groupby.SeriesGroupBy.nunique</code> seems to blow the other solutions away:</p>

<pre><code>%timeit -n20 pd.melt(testDf, id_vars ='custId').groupby('custId').value.nunique()
#20 loops, best of 3: 67.3 ms per loop
</code></pre>
",""
"38770115","2","38769969","<p>Since you are only concerned about the number of lines, you could check if <code>total</code> has been declared already:</p>

<pre><code>for x in word:
    total = x if 'total' not in locals() else total + x
print total
</code></pre>
",""
"38770148","1","","<p>First of all, let me excuse for my English - it's not my native language.</p>

<p>I have following models:</p>

<pre><code>class Student(models.Model):
    student_id = models.IntegerField(primary_key=True)
    student_name = models.CharField(max_length=255, default='John Doe')
    dob = models.DateField(max_length=8)

class Group(models.Model):
    group_name = models.CharField(max_length=40)
    monitor = models.ForeignKey(Student)

class Student_Group(models.Model):
    student_id = models.ForeignKey(Student)
    group_name = models.ForeignKey(Group)
</code></pre>

<p>I need to render groups of students, its monitors and amount of students in each group. Making first two tasks is not a problem:</p>

<p><strong>views.py:</strong></p>

<pre><code>def group_list(request):
    groups = Group.objects.all()
    return render(request, 'groups/group_list.html', {'groups': groups})
</code></pre>

<p><strong>groups.html</strong></p>

<pre><code>{% for group in groups %}
    &lt;p&gt;{{ group.group_name }}&lt;/p&gt;
    &lt;p&gt;{{ group.monitor }}&lt;/p&gt;
{% endfor %}
</code></pre>

<p>But when it comes to rendering amount of students for each group, I'm getting stuck.</p>

<p>Following SQL lets to count amount of students in given group</p>

<pre><code>select count(*) from students_student
join students_student_group
on students_student.student_id = students_student_group.student_id_id
where students_student_group.group_name_id = ""Mega nerds""
</code></pre>

<p>Questions are:</p>

<ol>
<li><p>How to get amount of students for each group using Django ORM instead, so the template will render following info:</p>

<ul>
<li>Group name: Mega nerds</li>
<li>Amount of students: 8</li>
<li>Monitor: John Doe</li>
</ul>

<p>...</p>

<ul>
<li>Group name: Nice guys</li>
<li>Amount of students: 11</li>
<li>Monitor: John Appleseed</li>
</ul></li>
<li>How to pass data regarding amount of students to corresponding group.</li>
</ol>

<p>Thanks. </p>

<p><strong>Update</strong></p>

<p>According to @Gocht advice, I used ManyToManyField, so my <code>models.py</code> now looks as</p>

<pre><code>class Student(models.Model):
    student_id = models.IntegerField(primary_key=True)
    student_name = models.CharField(max_length=255, default='Василий Пупкин')
    dob = models.DateField(max_length=8)

    def __str__(self):
        return self.student_name


class Group(models.Model):
    group_name = models.CharField(max_length=40, primary_key=True)
    monitor = models.ForeignKey(Student)
    students = models.ManyToManyField(Student, related_name='students')
</code></pre>

<p>also, as suggested, I've added decorator to <code>Group</code> class: </p>

<pre><code>@property
def get_students_qty(self):
    return self.students.all().count()
</code></pre>

<p>so now I can get number of students in each group, like so:</p>

<pre><code>{% for group in groups %}
    &lt;p&gt;{{ group.group_name }}&lt;/p&gt;
    &lt;p&gt;{{ group.monitor }}&lt;/p&gt;
    &lt;p&gt;{{ group.get_students_qty }}&lt;/p&gt;
{% endfor %}
</code></pre>

<p>But I still wondering - is it possible to get number of students in group without using decorator? After all, <code>Group</code> class has <code>students</code> field...</p>
","<python><django>"
"38770169","1","","<p>I try to install scikit-learn for Python 3. I do it in the following way:</p>

<pre><code>virtualenv model_env
source  model_env/bin/activate
pip3 install sklearn
</code></pre>

<p>As a result I get the following error message:</p>

<pre><code>Downloading/unpacking sklearn
  Cannot fetch index base URL https://pypi.python.org/simple/
  Could not find any downloads that satisfy the requirement sklearn
Cleaning up...
No distributions at all found for sklearn
</code></pre>

<p>I had the same problem with <code>pandas</code> package and I have resolved it by using the following command:</p>

<pre><code>sudo apt-get install python3-pandas
</code></pre>

<p>Unfortunately, the same approach does not work for the <code>sklearn</code></p>

<pre><code>sudo apt-get install python3-sklearn
</code></pre>

<p><strong>ADDED</strong></p>

<p>When I replace <code>sklearn</code> by <code>scikit-learn</code>, I have the same problem:</p>

<pre><code>Downloading/unpacking scikit-learn
  Cannot fetch index base URL https://pypi.python.org/simple/
  Could not find any downloads that satisfy the requirement scikit-learn
Cleaning up...
No distributions at all found for scikit-learn
</code></pre>

<p><strong>ADDED 2</strong></p>

<p>As it has been recommended, I have try to use pip in combination with <code>-vvv</code>. Note that I use <code>pip3</code> instead of <code>pip</code>. This is what I get as the result:</p>

<pre><code>Downloading/unpacking scikit-learn
  Getting page https://pypi.python.org/simple/scikit-learn/
  Could not fetch URL https://pypi.python.org/simple/scikit-learn/: connection error: HTTPSConnectionPool(host='pypi.python.org', port=443): Max retries exceeded with url: /simple/scikit-learn/ (Caused by &lt;class 'OSError'&gt;: [Errno 101] Network is unreachable)
  Will skip URL https://pypi.python.org/simple/scikit-learn/ when looking for download links for scikit-learn
  Getting page https://pypi.python.org/simple/
  Could not fetch URL https://pypi.python.org/simple/: connection error: HTTPSConnectionPool(host='pypi.python.org', port=443): Max retries exceeded with url: /simple/ (Caused by &lt;class 'OSError'&gt;: [Errno 101] Network is unreachable)
  Will skip URL https://pypi.python.org/simple/ when looking for download links for scikit-learn
  Cannot fetch index base URL https://pypi.python.org/simple/
  URLs to search for versions for scikit-learn:
  * https://pypi.python.org/simple/scikit-learn/
  Getting page https://pypi.python.org/simple/scikit-learn/
  Could not fetch URL https://pypi.python.org/simple/scikit-learn/: connection error: HTTPSConnectionPool(host='pypi.python.org', port=443): Max retries exceeded with url: /simple/scikit-learn/ (Caused by &lt;class 'OSError'&gt;: [Errno 101] Network is unreachable)
  Will skip URL https://pypi.python.org/simple/scikit-learn/ when looking for download links for scikit-learn
  Could not find any downloads that satisfy the requirement scikit-learn
Cleaning up...
  Removing temporary dir /tmp/pip_build_root...
No distributions at all found for scikit-learn
Exception information:
Traceback (most recent call last):
  File ""/usr/lib/python3/dist-packages/pip/basecommand.py"", line 122, in main
    status = self.run(options, args)
  File ""/usr/lib/python3/dist-packages/pip/commands/install.py"", line 278, in run
    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)
  File ""/usr/lib/python3/dist-packages/pip/req.py"", line 1178, in prepare_files
    url = finder.find_requirement(req_to_install, upgrade=self.upgrade)
  File ""/usr/lib/python3/dist-packages/pip/index.py"", line 277, in find_requirement
    raise DistributionNotFound('No distributions at all found for %s' % req)
pip.exceptions.DistributionNotFound: No distributions at all found for scikit-learn

Storing debug log for failure in /home/rngorb/.pip/pip.log
</code></pre>
","<python><scikit-learn><python-3.4>"
"38770234","2","38770169","<p>Try using</p>

<pre><code>pip3 install scikit-learn
</code></pre>
",""
"38770247","1","","<p>I have a header array with three things in it. My program goes through all the combinations of headers and sees if they are concurrent or not concurrent.</p>

<p>When I run the program I want it to print which two headers are concurrent and which are not concurrent. So basically when it prints, instead of it printing <code>sequences are concurrent</code>/<code>sequences are not concurrent</code>, I want it to say <code>header a is concurrent to header b</code> and <code>header b is not concurrent to header c</code> etc.</p>

<p>This is my program as it stands:</p>

<pre><code>c=combinations(header,2)
for p in combinations(sequence,2):
    if p[0][start:stop]==p[1][start:stop]:
        print header[p[0],p[1]], ""are concurrent""
    else:
        print header[p[0],p[1]], ""are not concurrent""
print list(c)
</code></pre>

<p>I know the problem is line four and six. Please help. With this code I get <code>TypeError: list indices must be integers, not tuple.</code></p>

<p>Someone asked for an example of my headers and sequences...
My headers are as follows:
('>DQB1', '>OMIXON', '>GENDX')</p>

<p>My sequences are as follows:
('GACTAAAAAGCTA', 'GACTAAAAAGCTA', 'GAAAACTGGGGGA')</p>
","<python><string><python-2.7><variables><printing>"
"38770329","2","38770247","<p>Best way to format strings in <em>Python</em> is like this:</p>

<pre><code>""{} and {} are concurrent"".format(header[p[0]],header[p[1]])
</code></pre>

<p>It's also possible to use multiple placeholders <code>{}</code>.</p>
",""
"38770374","1","","<p>I have a dictionary filled with key-object pairs. I want to make the dictionary immutable and I thought the best/easiest way is to cast it to a frozenset but <code>frozenset(dict)</code> and also <code>tuple(dict)</code> only stores the keys.</p>

<p>Using <code>frozenset(dict.items())</code> I seem to get a frozenset with the key-object pairs but I don't know how to retrieve the values/keys.</p>

<p>I have the following code which works, as long as ""__obfuscators"" is a dictionary</p>

<pre><code>def obfuscate_value(self, key, value):
    obfuscator = self.__obfuscators.get(key)
    if obfuscator is not None:
        return obfuscator.obfuscate_value(value)
    else:
        return value
</code></pre>

<p>I tried this in an attempt to get it working with the frozen set:</p>

<pre><code>def obfuscate_value(self, key, value):
    try:
        obfuscator = self.__obfuscators[key]
    except:
        return value
    return obfuscator.obfuscate_value(value)
</code></pre>

<p>but this gives that <code>frozenset does not have \__getitem__</code>
and <code>self.__obfuscators.__getattribute__(key)</code> always says it does not have the attribute (because I assume this searches for a function named key)
Is there a better way to make the dictionary immutable or how can I retrieve the object depending on the key?</p>

<p>Edit:
I ended up casting the dict to a tuple using <code>tuple(obfuscator.items())</code>
and then wrote my own find value function:</p>

<pre><code>def find_obfuscator(self, key):
    for item in self.__obfuscators:
        x, y = item
        if self.case_insensitive:
            if x.lower() == key.lower():
                return y
        else:
            if x == key:
                return y
</code></pre>

<p>I would like to thank everyone for their efforts and input.</p>
","<python><python-2.7><dictionary><frozenset>"
"38770461","2","38770148","<p>You could get the number of students in a group like this:</p>

<pre><code>group = ...  # get a group

n_students = Student_Group.objects.filter(group=group).count()
</code></pre>

<p>Then since every Student_Group object has <em>one</em> student, <code>n_students</code> will contain the number of student in the given group.</p>

<p>To send this number to your template you can add it in your context:</p>

<pre><code>def group_list(request):
    groups = Group.objects.all()
    return render(request, 'groups/group_list.html', {'groups': groups, 'n_students': n_students})
</code></pre>

<p>You could also see docs for <a href=""https://docs.djangoproject.com/es/1.10/topics/db/models/#extra-fields-on-many-to-many-relationships"" rel=""nofollow""><code>ManyToMany</code></a> relationships, that could be helpful here.</p>

<p><strong>EDIT</strong></p>

<p>Take some time to check <a href=""https://www.python.org/dev/peps/pep-0008/#naming-conventions"" rel=""nofollow"">Python's naming conventions</a>; your <code>Student_Group</code> should be <code>StudentGroup</code>.</p>

<p>You can create a method in your model to return the number of students in a group:</p>

<pre><code># models.py
class Group(models.Model):

    # fields

    @property
    def get_students_qty(self):
        return self.student_group_set.all().count()
        # Try with self.studentgroup_set.all().count() if the line
        # above does not work
</code></pre>

<p>then in your template:</p>

<pre><code>{% for group in groups %}
    &lt;p&gt;{{ group.group_name }}&lt;/p&gt;
    &lt;p&gt;{{ group.monitor }}&lt;/p&gt;
    &lt;p&gt;{{ group.get_students_qty }}&lt;/p&gt;
{% endfor %}
</code></pre>
",""
"38770470","1","","<p>Im working on a finger exercise from Guttag Intro to computer science and programming using python, and Im working on the following finger exercise:</p>

<p>Finger Exercise: Implement a function that satisfies the specification
def findAnEven(l):
""""""Assumes l is a list of integers
Returns the first even number in l
Raises ValueError if l does not contain an even number""""""</p>

<p>This is what I wrote so far, it get's the job done, but is definitely not what Guttag intended as an answer.</p>

<pre><code>   def isEven(l):
        """"""Assumes l is a list of integars
           returns the first even number in list
           raises an exception if no even number in list""""""
        for i in l:
            if i % 2 == 0:
                print i, "" is the first even number in the list""            
                exit()
        raise ValueError(""No even numbers in list!"")
</code></pre>

<p>I would highly appreciate any input on how professor Guttag intended the code to look. I'm assuming I should have used the try statement somewhere, and the using the exit statement is very crude in this context. Thanks in advance.</p>
","<python><exception><raise>"
"38770484","1","","<p>I couldn't find anything that could solve this (<code>replace()</code> method doesn't work).</p>

<p>I have a sentence like:</p>

<pre><code>sentence_noSlots = ""Albania compared to other CountriesThe Internet users of Albania is similar to that of Poland , Portugal , Russia , Macedonia , Saudi Arabia , Argentina , Greece , Dominica , Azerbaijan , Italy with a respective Internet users of 62.8 , 62.1 , 61.4 , 61.2 , 60.5 , 59.9 , 59.9 , 59.0 , 58.7 , 58.5 -LRB- per 100 people -RRB- and a global rank of 62 , 63 , 64 , 65 , 66 , 68 , 69 , 70 , 71 , 72.10 years growthAlbania 's Internet users had a positive growth of 5,910 -LRB- % -RRB- in the last 10 years from -LRB- 2003 to 2013 -RRB- .""
</code></pre>

<p>I then have a string like: </p>

<pre><code>extracted_country = Saudi Arabia 
extracted_value = 58.5
</code></pre>

<p>I need to replace <code>Saudi Arabia</code> in the string with <code>&lt;location&gt;empty&lt;/location&gt;</code> and <code>58.5</code> with <code>&lt;number&gt;empty&lt;/number&gt;</code>. My current method is:</p>

<pre><code>sentence_noSlots.replace(str(extracted_country),""&lt;location&gt;empty&lt;/location&gt;"")
sentence_noSlots.replace(str(extracted_value),""&lt;number&gt;empty&lt;/number&gt;"")
</code></pre>

<p>However because Saudi Arabia is two words, a simple word replace doesn't work. Nor does tokenizing first and replacing work due to the same type of issue:</p>

<pre><code> sentenceTokens = sentence_noSlots.split()
                            for i,token in enumerate(sentenceTokens):
                                if token==extracted_country:
                                    sentenceTokens[i]=""&lt;location&gt;empty&lt;/location&gt;""
                                if token==extracted_value:
                                    sentenceTokens[i]=""&lt;number&gt;empty&lt;/number&gt;""
                            sentence_noSlots = ("" "").join(sentenceTokens)
</code></pre>

<p>How can I achieve what I want to achieve?</p>
","<python><string><replace><find><findall>"
"38770522","1","","<p>In Python 2 this code does what I'd expect:</p>

<pre><code>import csv
import sys

writer = csv.writer(sys.stdout)
writer.writerow([u'hello', b'world'])
</code></pre>

<p>It prints:</p>

<pre><code>hello,world
</code></pre>

<p>But in Python 3, <code>bytes</code> are printed with a prefix and quotes:</p>

<pre><code>hello,b'world'
</code></pre>

<p>Since CSV is a generic data interchange format, and since no system other than Python knows what <code>b''</code> is, I need to disable this behavior.  But I haven't figured out how.</p>

<p>Of course I could use <code>str.decode</code> on all the <code>bytes</code> first, but that is inconvenient and inefficient.  What I really want is either to write the literal bytes to the file, or pass an encoding (e.g. 'ascii') to <code>csv.writer()</code> so it knows how to decode any <code>bytes</code> objects it sees.</p>
","<python><python-3.x><csv><python-unicode>"
"38770548","2","38770374","<p>You could make a wrapper class that takes a dictionary and has a get item function but no set item.  You'd need to add a few things for thread safety and hashing maybe but the basic class wouldn't be too difficult.</p>
",""
"38770583","2","38769675","<p>You don't need <code>custId</code>.  I'd <code>stack</code>, then <code>groupby</code></p>

<pre><code>testDf.iloc[:, 1:].stack().groupby(level=0).nunique()
</code></pre>

<p><a href=""https://i.stack.imgur.com/fBX5l.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fBX5l.png"" alt=""enter image description here""></a></p>
",""
"38770604","1","","<p>I'm trying to figure out the best way to keep code in an Jupyter/iPython notebook and the same code inside of a class method in sync.  Here's the use case:</p>

<p>I wrote a long script that uses pandas inside a notebook, and have multiple cells which made the development easy, because I could check intermediate results within the notebook. This is very useful with pandas scripts. I downloaded that working code into a Python "".py"" file, and converted that script to be a method within a Python class in my program, that is instantiated with the input data, and provides the output as a result of that method.  Everything works great.  That Python class is used in a much larger application, so that is the real deliverable.</p>

<p>But then there was a bug for a certain data set in the implementation in the method, which also was in my script.  I could go back to my notebook and go step-by-step through the various cells to find the issue.  I fix the issue, but then I have to carefully make the change back in the regular Python class method code.  This is a bit painful.</p>

<p>Ideally, I'd like to be able to run a class method across cells, so I can check intermediate results.  I can't figure out how to do this.</p>

<p>So what is the best practice between keeping a script code and code embedded within a class method in sync?</p>

<p>Yes, I know that I can import the class into the notebook, but then I lose the ability to look at intermediate results inside the class method via individual cells, which is what I do when it is a pure script.  With pandas, this is very useful.</p>
","<python><pandas><jupyter-notebook><ipython-notebook><jupyter>"
"38770605","2","38770169","<p>Maybe you should consider the use of <a href=""https://www.continuum.io/downloads"" rel=""nofollow"">Anaconda</a> which include both packages by default and make your life easy with tools to manage <a href=""http://conda.pydata.org/docs/using/envs.html"" rel=""nofollow"">enviroments</a> and <a href=""http://conda.pydata.org/docs/using/pkgs.html"" rel=""nofollow"">packages</a></p>
",""
"38770606","1","","<p>I am currently searching for a way to find patterns in a list of integers, but the method I am going to use would be applicable to strings and other lists with different elements of course. Now let me explain what I am looking for.</p>

<p>I want to find the longest repeating pattern in a list of integers. For example,</p>

<pre><code>[1, 2, 3, 4, 1, 2, 3]
# This list would give 1, 2, 3
</code></pre>

<p>Overlapping patterns should be discarded. ( Not certain )</p>

<pre><code>[1, 1, 1, 1, 1]
# Should give 1, 1  Not 1, 1, 1, 1
</code></pre>

<p><strong>Here is what did not help me.</strong></p>

<p><a href=""https://stackoverflow.com/questions/6656310/finding-patterns-in-a-list"">Finding patterns in a list</a> (Did not understand the logic behind the first answer, very little explanation. And second answer solves the problem only if the pattern is known before solving.)</p>

<p><a href=""https://stackoverflow.com/questions/33928775/finding-integer-pattern-from-a-list"">Finding integer pattern from a list</a> (Pattern is given and number of occurrence is wanted. Different than my question.)</p>

<p><a href=""https://en.wikipedia.org/wiki/Longest_common_subsequence_problem"" rel=""nofollow noreferrer"">Longest common subsequence problem</a> (Most people dealed with this problem however it is not close to mine. I need consecutive elements while searching for a pattern. However in this, seperate elements also counted as subsequences.)</p>

<p><strong>Here what I tried.</strong></p>

<pre><code>def pattern(seq):
    n = len(seq)
    c = defaultdict(int) # Counts of each subsequence
    for i in xrange(n):
        for j in xrange(i + 1, min(n, n / 2 + i)): 
            # Used n / 2 because I figured if a pattern is being searched
            # It cant be longer that the half of the list.
            c[tuple(seq[i:j])] += 1      
    return c
</code></pre>

<p>As you see, It finds all the sublists and check for repeats. I found this approach a bit naive(and inefficient) and I am in need of a better way. Please help me. Thanks in advance.</p>

<p><strong>Note1:</strong> The list is predetermined but because of my algorithms failure, I can only check some parts of the list before freezing the computer. So the pattern I am trying to find can very well be longer than the half of the search list, It can even be longer than the search list itself because I am searching only a part of the original list.If you present a better method than I am using, I can search a larger part of the original list so I will have a better chance at finding the pattern. (If there is one.)</p>

<p><strong>Note2:</strong> Here is a part of the list if you want to test it yourself. It really seems like that there is a pattern, but I cannot be sure before I test it with a reliable code.
<a href=""http://collabedit.com/f5j3v"" rel=""nofollow noreferrer"">Sample List</a></p>

<p><strong>Note3:</strong> I approach this as a serious problem of data mining. And will try to learn if you make a long explanation. This feels like a much more important problem than LCS, however LCS is much more popular :D This method I am trying to find feels like the methods scientists use to find DNA patterns.</p>
","<python><algorithm><performance><pattern-matching>"
"38770613","2","38770247","<p>You want to combine the two lists into one:</p>

<pre><code>for (h1, s1), (h2, s2) in combinations(zip(header, sequence), 2):
    if s1[start:stop] == s2[start:stop]:
        print h1, h2, ""are concurrent""
    else:
        print h1, h2, ""are not concurrent""
</code></pre>

<p>or to reduce duplicate code:</p>

<pre><code>for (h1, s1), (h2, s2) in combinations(zip(header, sequence), 2):
    concurrent = s1[start:stop] == s2[start:stop]
    print ""{} and {} are{} concurrent"".format(h1, h2, """" if concurrent else "" not"")
</code></pre>
",""
"38770619","2","38770374","<p>The simplest way I could think of to achieve what you want was to subclass the standard <code>dict</code> type and overwrite its <code>__setitem__</code> method:</p>

<pre><code>class MyDict(dict):
    def __setitem__(self, key, value):
        raise NotImplementedError(""This is a frozen dictionary"")
</code></pre>

<p>This allows you to create dictionaries that cannot thereafter be changed by item assignment:</p>

<pre><code>d = MyDict({1: 2, 3: 4})
</code></pre>

<p>or, equivalently:</p>

<pre><code>d = MyDict([(1, 2), (3, 4)])
</code></pre>

<p>The dict then prints out just like a standard dict:</p>

<pre><code>{1: 2, 3: 4}
</code></pre>

<p>But when you try to change a value (or add a new one):</p>

<pre><code>d[1] = 15
---------------------------------------------------------------------------
NotImplementedError                       Traceback (most recent call last)
&lt;ipython-input-21-a22420992053&gt; in &lt;module&gt;()
----&gt; 1 d[1] = 34

&lt;ipython-input-18-03f266502231&gt; in __setitem__(self, key, value)
      1 class MyDict(dict):
      2     def __setitem__(self, key, value):
----&gt; 3         raise NotImplementedError(""This is a frozen dictionary"")

NotImplementedError: This is a frozen dictionary
</code></pre>

<p>Note that this isn't fully immutable, however:</p>

<pre><code>d.update({1:17})
</code></pre>

<p>for example, will update it, but this solution might be good enough - it depends on the broader requirements.</p>
",""
"38770661","2","38770484","<p><code>string.replace()</code> is not in-place. Strings are immutable in python.</p>

<p>From <a href=""https://docs.python.org/2/library/string.html"" rel=""nofollow"">python docs</a>:</p>

<blockquote>
  <p>string.replace(s, old, new[, maxreplace]) Return a copy of string s
  with all occurrences of substring old replaced by new. If the optional
  argument maxreplace is given, the first maxreplace occurrences are
  replaced.</p>
</blockquote>

<p>Do this:</p>

<pre><code>&gt;&gt;&gt; sentence_noSlots = ""Albania compared to other CountriesThe Internet users of Albania is similar to that of Poland , Portugal , Russia , Macedonia , Saudi Arabia , Argentina , Greece , Dominica , Azerbaijan , Italy with a respective Internet users of 62.8 , 62.1 , 61.4 , 61.2 , 60.5 , 59.9 , 59.9 , 59.0 , 58.7 , 58.5 -LRB- per 100 people -RRB- and a global rank of 62 , 63 , 64 , 65 , 66 , 68 , 69 , 70 , 71 , 72.10 years growthAlbania 's Internet users had a positive growth of 5,910 -LRB- % -RRB- in the last 10 years from -LRB- 2003 to 2013 -RRB- .""
&gt;&gt;&gt; 
&gt;&gt;&gt; extracted_country = ""Saudi Arabia""
&gt;&gt;&gt; extracted_value = 58.5
&gt;&gt;&gt; s = sentence_noSlots.replace(str(extracted_country),""&lt;location&gt;empty&lt;/location&gt;"").replace(str(extracted_value),""&lt;number&gt;empty&lt;/number&gt;"")
&gt;&gt;&gt; s
""Albania compared to other CountriesThe Internet users of Albania is similar to that of Poland , Portugal , Russia , Macedonia , &lt;location&gt;empty&lt;/location&gt; , Argentina , Greece , Dominica , Azerbaijan , Italy with a respective Internet users of 62.8 , 62.1 , 61.4 , 61.2 , 60.5 , 59.9 , 59.9 , 59.0 , 58.7 , &lt;number&gt;empty&lt;/number&gt; -LRB- per 100 people -RRB- and a global rank of 62 , 63 , 64 , 65 , 66 , 68 , 69 , 70 , 71 , 72.10 years growthAlbania 's Internet users had a positive growth of 5,910 -LRB- % -RRB- in the last 10 years from -LRB- 2003 to 2013 -RRB- .""
</code></pre>
",""
"38770739","2","38770470","<p>The issue with your code is the usage of <code>exit()</code>. Generally <code>return</code> will exit for you. To fix the code, just remove it:</p>

<pre><code>def isEven(l): 
        for i in l: 
                if i % 2 == 0: 
                        return i 
        raise ValueError(""No even numbers in list!"") 
</code></pre>
",""
"38770773","2","38770484","<p>I assume you meant:</p>

<pre><code>extracted_country = ""Saudi Arabia""
extracted_value = ""58.5""
</code></pre>

<p>Then, the .replace method works as expected. Be careful though, it is NOT a modifier: it returns a NEW string with the modification. ""sentence_noSlots"" will remain the same.</p>

<p>So by chaining both .replace you can achieve it like this:</p>

<pre><code>sentence_slots = sentence_noSlots.replace(str(extracted_country),""&lt;location&gt;empty&lt;/location&gt;"").replace(str(extracted_value),""&lt;number&gt;empty&lt;/number&gt;"")
</code></pre>
",""
"38770783","2","38770374","<p>You can create an immutable view of a dictionary using <a href=""https://docs.python.org/3/library/types.html#types.MappingProxyType"" rel=""nofollow""><code>types.MappingProxyType</code></a>:</p>

<pre><code>from types import MappingProxyType
d = { 'a': 1 }
fd = MappingProxyType(d)
fd['a']
#output:
1

fd['a'] = 2
#output:
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: 'mappingproxy' object does not support item assignment
</code></pre>

<p>notice that you can still change the vaule object, so:</p>

<pre><code>d = { 'a': [1] }
fd = MappingProxyType(d)
fd['a'].append(2)
fd['a']
#output:
[1,2]
</code></pre>

<p>will work.</p>
",""
"38770978","2","38770374","<p>Since you mention <code>tuple(dict)</code> in your original post, probably the simplest solution to achieve what you want might simply be:</p>

<pre><code>tuple(dict.items())
</code></pre>
",""
"38771111","2","38770374","<p>You need a <code>dict</code> that is capable of freezing? You can simply make one:</p>

<pre><code>class FrozenDict(dict):
    def __init__(self, *args, **kwargs):
        self._frozen = False
        dict.__init__(self, *args, **kwargs)
    def freeze(self):
        self._frozen = True
    def __setitem__(self, key, value):
        if (self._frozen):
            raise TypeError(""Attempted assignment to a frozen dict"")
        else:
            return dict.__setitem__(self, key, value)

a = FrozenDict({7:8})
a[5] = 6
print(a)
a.freeze()
a[3] = 2 # raises TypeError
</code></pre>

<p>It will behave exactly like usual <code>dict</code> until you call <code>.freeze()</code>. Then it's frozen.</p>
",""
"38771428","2","38757936","<p>Actually the reason was what IMHO is a quite silly bug - inability to read the credentials from a local file written by an earlier version of the SDK (or related package?) and failure to fallback to a more decent action which leads to a rather misleading traceback throwing off the investigation.</p>

<p>Credit goes to this answer: <a href=""https://stackoverflow.com/a/35890078/4495081"">https://stackoverflow.com/a/35890078/4495081</a> ('tho the bug mentioned in the post was for something else, ultimately triggering the similar end result)</p>

<p>After removing the <code>~/.config/gcloud/application_default_credentias.json</code> file the demo completed successfully using the local filesystem. And my real app worked fine as well.</p>

<p>My 2nd question stands, but I'm not too worried about it - personally I don't see a great value in using the real GCS storage with the local development server - I have to do testing on a real staging GAE app anyways for other reasons.</p>
",""
"38772004","2","38769675","<p>My understanding is that nunique is optimized for large series. Here, you have only 3 days. Comparing each column against the others seems to be faster:</p>

<pre><code>testDf = genSampleData(100000,3, drinkIndex)
days = testDf.columns[1:]

%timeit testDf.iloc[:, 1:].stack().groupby(level=0).nunique()
10 loops, best of 3: 46.8 ms per loop

%timeit pd.melt(testDf, id_vars ='custId').groupby('custId').value.nunique()
10 loops, best of 3: 47.6 ms per loop

%%timeit
testDf['nunique'] = 1
for col1, col2 in zip(days, days[1:]):
    testDf['nunique'] += ~((testDf[[col2]].values == testDf.ix[:, 'day1':col1].values)).any(axis=1)
100 loops, best of 3: 3.83 ms per loop
</code></pre>

<p>It loses its edge when you add more columns of course. For different number of columns (the same order: <code>stack().groupby()</code>, <code>pd.melt().groupby()</code> and loops):</p>

<pre><code>10 columns: 143ms, 161ms, 30.9ms
50 columns: 749ms, 968ms, 635ms
100 columns: 1.52s, 2.11s, 2.33s
</code></pre>
",""
"38772020","2","38770606","<h1>The Code</h1>

<p>Ignoring the ""no overlapping"" requirement, here's the code I used:</p>

<pre><code>def pattern(seq):
        storage = {}
        for length in range(1,len(seq)/2+1):
                valid_strings = {}
                for start in range(0,len(seq)-length+1):
                        valid_strings[start] = tuple(seq[start:start+length])
                candidates = set(valid_strings.values())
                if len(candidates) != len(valid_strings.values()):
                        print ""Pattern found for "" + str(length)
                        storage = valid_strings
                else:
                        print ""No pattern found for "" + str(length)
                        return set(filter(lambda x: storage.values().count(x) &gt; 1, storage.values()))
        return storage
</code></pre>

<p>Using that, I found 8 distinct patterns of length 303 in your dataset. The program ran pretty fast, too.</p>

<h1>Pseudocode Version</h1>

<pre><code>define patterns(sequence):
    list_of_substrings = {}
    for each valid length:  ### i.e. lengths from 1 to half the list's length
        generate a dictionary my_dict of all sub-lists of size length
        if there are repeats:
            list_of_substrings = my_dict
        else:
            return all repeated values in list_of_substrings
    return list_of_substrings  #### returns {} when there are no patterns
</code></pre>
",""
"38772084","2","38769207","<p>thanks to cwallenpoole I am making some progress. I am managing to pull some of the information from the settings list. However I do not seem to be able to affect the radio buttons or drop down lists. Here is my code now:</p>

<pre><code>#!/usr/bin/python
import config_settings
import cgi
import cgitb
cgitb.enable(display=0,logdir=""/var/www/cgi-bin/error-logs"")






print(""Content-Type: text/html\n\n"")
print("""")

latitude = config_settings.settings[0]
latHemi = config_settings.settings[1]
longitude = config_settings.settings[2]
longHemi = config_settings.settings[3]
sensitivity = config_settings.settings[4]


htmlFormat='''&lt;html&gt;
&lt;head&gt;
&lt;meta charset=""utf-8""&gt;
    &lt;title&gt;EM2010 Sound Level Monitor - Setup&lt;/title&gt;
    &lt;meta name=""viewport"" content=""width=device-width, initial-scale=1.0""&gt;
    &lt;meta name=""description"" content=""EM2010 User Interface""&gt;
    &lt;meta name=""author"" content=""Sonitus Systems""&gt;

&lt;/head&gt;

&lt;body&gt;

           &lt;form class=""well form-inline"" method=""post"" action=""/cgi-bin/process_setup.cgi""&gt;

              &lt;!-- Location --&gt;
              &lt;i class=""icon-location-arrow icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Location&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;
              Latitude: &lt;input type=""text"" name=""latitude"" class=""input-small"" value=""{latitude}""&gt;&amp;deg;



&lt;select name=""latHemi""&gt;

  &lt;option selected=""{latHemi}""&gt;N&lt;/option&gt;
  &lt;option&gt;S&lt;/option&gt;&lt;/select&gt;

  &lt;option&gt;N&lt;/option&gt;
  &lt;option selected=""{latHemi}""&gt;S&lt;/option&gt;&lt;/select&gt;

   &amp;nbsp;&amp;nbsp;
   Longitude: &lt;input type=""text"" name=""longitude"" class=""input-small"" value=""{longitude}""&gt;&amp;deg;

 &lt;select name=""longHemi""&gt;


     &lt;option selected=""{longHemi}""&gt;E&lt;/option&gt;
     &lt;option&gt;W&lt;/option&gt;&lt;/select&gt;

     &lt;option&gt;E&lt;/option&gt;
     &lt;option selected=""{longHemi}""&gt;W&lt;/option&gt;&lt;/select&gt;

&lt;hr/&gt;
&lt;!-- Mic Sensitivity --&gt;
&lt;i class=""icon-microphone icon-large""&gt; &lt;span class=""setting""&gt;&amp;nbsp;Microphone&lt;span&gt;&lt;/span&gt;&lt;/i&gt;&lt;br&gt;&lt;br&gt;
Sensitivity: &lt;input type=""text"" name=""sensitivity"" class=""input-small"" value=""{sensitivity}""&gt; dB

print htmlFormat.format(latitude=latitude, latHemi=latHemi, longitude=longitude,
longHemi=longHemi, sensitivity=sensitivity,weight=weight)
</code></pre>

<p>Can anyone point me in the right direction please?</p>
",""
"38772693","2","38769935","<p>The problem is in the second sentence of the question: <em>""<code>S / sig^2</code> has a noncentral chi-squared distribution with degrees of freedom = <code>n</code> and non-centrality parameter = <code>n*mu^2</code>.""</em>  That non-centrality parameter is not correct.  It should be <code>n*(mu/sig)^2</code>.</p>

<p>The standard definition of the noncentral chi-squared distribution is that it is the sum of the squares of normal variates that have mean mu and <em>standard deviation 1</em>.  You are computing <code>S</code> using normal variates with standard deviation <code>sig</code>.  Let's write that distribution as <code>N(mu, sig**2)</code>.  By using the location-scale properties of the normal distribution, we have</p>

<pre><code>N(mu, sig**2) = mu + sig*N(0, 1) = sig*(mu/sig + N(0,1)) = sig*N(mu/sig, 1)
</code></pre>

<p>So summing the squares of variates from <code>N(mu, sig**2)</code> is equivalent to summing the squares of <code>sig*N(mu/sig, 1)</code>.  That gives <code>sig**2</code> times a noncentral chi-squared variate with noncentrality <code>mu/sig</code>.</p>

<p>If you change the line where <code>non_centrality</code> is computed to</p>

<pre><code>non_centrality = n*(mu/sig)**2
</code></pre>

<p>the histograms line up as you expect.</p>
",""
"38772740","2","38758580","<p>What you want to happen is to direct people to your search <code>view</code> so that view has to know about <code>search.html</code></p>

<pre><code>def index(request):
    all_games = GameCard.objects.all()
    template = loader.get_template('search.html') &lt;!-- or whichever file --&gt;
    context = {
        'all_games': all_games,
    }
    return HttpResponse(template.render(context, request))
</code></pre>

<p>When this view loads the template, it sees this <code>extends</code> from <code>gamelobby/home.html</code> and pulls it in <em>around</em> the block tags.</p>
",""
"38772864","2","38770024","<p>I'd do it this way:</p>

<pre><code>MI = pytz.timezone('US/Central')

tmp_data=pd.read_csv('test1.txt',index_col=[1],names=['Tag','Timestamp','Value'])
tmp_data.index=pd.to_datetime(tmp_data.index,unit='s')
tmp_data.index.tz=MI

hdf_key = 'my_key'

store = pd.HDFStore('/path/to/file.h5')

for loop which processes all your CSV files:
    # pay attention at index=False - we want to index everything at the end
    store.append(hdf_key, tmp_data, complevel=9, complib='blosc', append=True, index=False)

# all CSV files have been processed, let's index everything...
store.create_table_index(hdf_key, columns=['Tag','Value'], optlevel=9, kind='full')
</code></pre>
",""
"38773355","2","38770522","<p>I don't think there's any way of avoiding having to explictly convert the byte strings into unicode strings with the <code>csv</code> module in Python 3. In Python 2, they're implicitly converted to ASCII. </p>

<p>To make this easier you could effectively subclass <code>csv.writer</code> (or wrap) objects as shown below, which will make the process more convenient.</p>

<pre><code>import csv

class MyCsvWriter(object):
    def __init__(self, *args, **kwrds):
        self.csv_writer = csv.writer(*args, **kwrds)

    def __getattr__(self, name):
        return getattr(self.csv_writer, name)

    def writerow(self, row):
        self.csv_writer.writerow(
            str(v, encoding='utf-8') if isinstance(v, bytes) else v for v in row)

    def writerows(self, rows):
        for row in rows:
            self.writerow(row)

with open('bytes_test.csv', 'w', newline='') as file:
    writer = MyCsvWriter(file)
    writer.writerow([u'hello', b'world'])
</code></pre>
",""
"38773645","2","38770522","<p><code>csv</code> writes text files and expects Unicode (text) strings in Python 3.</p>

<p><code>csv</code> writes binary files and expects byte strings in Python 2, but allowed implicit encoding of Unicode strings to byte strings using the default <code>ascii</code> codec.  Python 3 does not allow implicit conversion, so you can't really avoid it:</p>

<pre><code>#!python3
import csv
import sys
writer = csv.writer(sys.stdout)
writer.writerow(['hello', b'world'.decode()])
</code></pre>
",""
"38779064","2","38770169","<p>If you want the convenience of Anaconda packages but the flexibility and minimalism of <code>pip</code> package management, I suggest you try <a href=""http://conda.pydata.org/miniconda.html"" rel=""nofollow"">miniconda</a>.</p>

<p>Once you install miniconda (remembering to <code>source ~/.bash_profile</code> or <code>source ~/.bashrc</code>), you can do this to setup your environment:</p>

<pre><code>conda create -n myenv scikit-learn pip python=3
</code></pre>

<p>This will get you a conda env with sklearn and pip in case you want to install libraries that are not supported as a conda package. The pip runs inside the conda env.</p>
",""
"38781579","1","","<p>I wrote a map function to aggregate data by using itertools.groupby, and what I do is like below.</p>

<p><strong>Driver code</strong></p>

<pre><code>pair_count = df.mapPartitions(lambda iterable: pair_func_cnt(iterable))
pair_count.collection()
</code></pre>

<p><strong>Map function</strong></p>

<pre><code>def pair_func_cnt(iterable):
    from itertools import groupby

    ls = [[1,2,3],[1,2,5],[1,3,5],[2,4,6]]
    grp1 = [(k,g) for k,g in groupby(ls, lambda e: e[0])]
    grp2 = [(k,g) for k,g in groupby(grp1, lambda e: e[1])]
    return iter(grp2)
</code></pre>

<p>But it gives the following error</p>

<pre><code>Caused by: org.apache.spark.api.python.PythonException: Traceback (most recent call last):
  File ""/opt/zeppelin-0.6.0-bin-netinst/interpreter/spark/pyspark/pyspark.zip/pyspark/worker.py"", line 111, in main
    process()
  File ""/opt/zeppelin-0.6.0-bin-netinst/interpreter/spark/pyspark/pyspark.zip/pyspark/worker.py"", line 106, in process
    serializer.dump_stream(func(split_index, iterator), outfile)
  File ""/opt/zeppelin-0.6.0-bin-netinst/interpreter/spark/pyspark/pyspark.zip/pyspark/serializers.py"", line 267, in dump_stream
    bytes = self.serializer.dumps(vs)
  File ""/opt/zeppelin-0.6.0-bin-netinst/interpreter/spark/pyspark/pyspark.zip/pyspark/serializers.py"", line 415, in dumps
    return pickle.dumps(obj, protocol)
PicklingError: Can't pickle &lt;type 'itertools._grouper'&gt;: attribute lookup itertools._grouper failed
    at org.apache.spark.api.python.PythonRunner$$anon$1.read(PythonRDD.scala:166)
    at org.apache.spark.api.python.PythonRunner$$anon$1.&lt;init&gt;(PythonRDD.scala:207)
    at org.apache.spark.api.python.PythonRunner.compute(PythonRDD.scala:125)
    at org.apache.spark.api.python.PythonRDD.compute(PythonRDD.scala:70)
    at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:306)
    at org.apache.spark.rdd.RDD.iterator(RDD.scala:270)
    at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:66)
    at org.apache.spark.scheduler.Task.run(Task.scala:89)
    at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:214)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    ... 1 more
</code></pre>
","<python><apache-spark><pyspark>"
"38781686","1","","<p>I'm trying to define a function in a Python class using lambda and I want to refer to the instance of the class from which it's being called and can't figure out how.</p>

<pre><code>properties.append(pf.moleculeProperties())
properties[-1].name = ""Monatomic Hydrogen""
properties[-1].formula = ""H""
properties[-1].mass = (1.00795e-3)/(6.022e23)
properties[-1].elecLevels = [[pf.waveNumToJoules(82309.58), 1]]
properties[-1].q = lambda T,V : pf.q_trans(properties[-1],T,V) * pf.q_elec(properties[-1],T,V)

properties.append(pf.moleculeProperties())
properties[-1].name = ""Monatomic Oxygen""
properties[-1].formula = ""O""
properties[-1].mass = (16.0e-3)/(6.022e23)
properties[-1].elecLevels = [[pf.waveNumToJoules(158.265), 1], [pf.waveNumToJoules(226.977), 1], [pf.waveNumToJoules(15867.862), 1],
           [pf.waveNumToJoules(33792.583), 1], [pf.waveNumToJoules(73768.200), 1], [pf.waveNumToJoules(76794.978), 1], [pf.waveNumToJoules(86625.757), 1]]
properties[-1].q = lambda T,V : pf.q_trans(properties[-1],T,V) * pf.q_elec(properties[-1],T,V)
</code></pre>

<p>When I try to call q on the something other than the last member of the list, it seems to evaluate the properties[-1] statement and give me the last member of the list each time.  In this example, I'm trying to call the q function on the element corresponding to hydrogen and getting the q function for oxygen.</p>
","<python><oop><lambda>"
"38781744","1","","<p>On python34 and Mingw compiler, While running <code>kivy</code> application, I am  facing this error. Can someone help me?</p>

<pre><code>[INFO              ] [Logger      ] Record log in C:\Users\Naver-Say\.kivy\logs\kivy_16-08-05_8.txt
[INFO              ] [Kivy        ] v1.9.1
[INFO              ] [Python      ] v3.4.4 (v3.4.4:737efcadf5a6, Dec 20 2015, 19:28:18) [MSC v.1600 32 bit (Intel)]
[INFO              ] [Factory     ] 179 symbols loaded
[INFO              ] [Image       ] Providers: img_tex, img_dds, img_gif, img_sdl2 (img_pil, img_ffpyplayer ignored)
 Traceback (most recent call last):
   File ""D:\pythonData\kivyproject\kivyapp.py"", line 4, in &lt;module&gt;
     from kivy.app import App
   File ""C:\Python34\lib\site-packages\kivy\app.py"", line 327, in &lt;module&gt;
     from kivy.uix.widget import Widget
   File ""C:\Python34\lib\site-packages\kivy\uix\widget.py"", line 219, in &lt;module&gt;
     from kivy.graphics import (
   File ""C:\Python34\lib\site-packages\kivy\graphics\__init__.py"", line 89, in &lt;module&gt;
     from kivy.graphics.instructions import Callback, Canvas, CanvasBase, \
   File ""kivy\graphics\vbo.pxd"", line 7, in init kivy.graphics.instructions (kivy\graphics\instructions.c:14640)
   File ""kivy\graphics\compiler.pxd"", line 1, in init kivy.graphics.vbo (kivy\graphics\vbo.c:5482)
   File ""kivy\graphics\shader.pxd"", line 5, in init kivy.graphics.compiler (kivy\graphics\compiler.c:2983)
   File ""kivy\graphics\texture.pxd"", line 3, in init kivy.graphics.shader (kivy\graphics\shader.c:11990)
   File ""kivy\graphics\fbo.pxd"", line 5, in init kivy.graphics.texture (kivy\graphics\texture.c:31800)
   File ""kivy\graphics\fbo.pyx"", line 84, in init kivy.graphics.fbo (kivy\graphics\fbo.c:7683)
 ImportError: DLL load failed: The specified procedure could not be found.
</code></pre>
","<python><kivy>"
"38781746","1","","<p>Is there any way to do some computation on a tensor in graph.</p>

<p>Example my graph:</p>

<pre><code>slim = tf.contrib.slim

def slim_graph(images, train=False):
    with slim.arg_scope([slim.conv2d, slim.fully_connected],
                  activation_fn=tf.nn.relu,
                  weights_initializer=tf.truncated_normal_initializer(0.0, 0.01),
                  weights_regularizer=slim.l2_regularizer(0.0005)):
        net = slim.repeat(images, 2, slim.conv2d, 64, [3, 3], scope='conv1')
        // Do my compute by numpy on net

        np_array_result = my_func(net)

        // It will return a numpy array
        // Use numpy array as input of graph

        net = slim.max_pool2d(np_array_result, [2, 2], scope='pool1')

        ...
        return logits
</code></pre>

<ul>
<li>Can we do somethings like that?</li>
<li>How to get feature maps in graph to compute?</li>
</ul>

<p>I can separate graph into 2 parts and use Session.run([part1])
After that use the result to input my function, then feed it to Session.run([part2])</p>

<p>But it seems weird.</p>
","<python><numpy><tensorflow><deep-learning>"
"38781789","1","","<p><strong>./configure</strong> </p>

<pre><code>thrift 1.0.0-dev

Building C++ Library ......... : yes
Building C (GLib) Library .... : yes
Building Java Library ........ : yes
Building C# Library .......... : no
Building Python Library ...... : **no**
Building Ruby Library ........ : no
Building Haxe Library ........ : no
Building Haskell Library ..... : no
Building Perl Library ........ : no
Building PHP Library ......... : yes
Building Dart Library ........ : no
Building Erlang Library ...... : no
Building Go Library .......... : yes
Building D Library ........... : no
Building NodeJS Library ...... : yes
Building Lua Library ......... : no

C++ Library:
   Build TZlibTransport ...... : yes
   Build TNonblockingServer .. : yes
   Build TQTcpServer (Qt4) .... : no
   Build TQTcpServer (Qt5) .... : yes

Java Library:
   Using javac ............... : javac
   Using java ................ : java
   Using ant ................. : /bin/ant

PHP Library:
   Using php-config .......... : /bin/php-config

Go Library:
   Using Go................... : /bin/go
   Using Go version........... : go version go1.6.3 linux/amd64

NodeJS Library:
   Using NodeJS .............. : /bin/node
   Using NodeJS version....... : v4.4.6

If something is missing that you think should be present,
please skim the output of configure to find the missing
component.  Details are present in config.log.
</code></pre>

<p>however during output it says both python and python3 are found. I also have python-devel and python3-devel installed</p>

<pre><code>[root@dmitrypc thrift]# dnf list installed | grep 'python-devel'
Failed to synchronize cache for repo 'rpmforge', disabling.
python-devel.x86_64                   2.7.12-1.fc24                @updates     
[root@dmitrypc thrift]# dnf list installed | grep 'python3-devel'
Failed to synchronize cache for repo 'rpmforge', disabling.
python3-devel.x86_64                  3.5.1-12.fc24                @updates     
[root@dmitrypc thrift]# 
</code></pre>
","<python><python-3.x><thrift>"
"38781820","1","","<pre><code>import math

def roots4(outfile,a,b,c):
    """"""Prints the solutions of 'x' for equation ax² + bx + c = 0 """"""
    d = b * b - 4 * a * c
    if a == 0 and b == 0 and c == 0:
        print ""X = All complex/real numbers.""

    if c != 0:
        print ""X = No real solutions.""

    e = (-c / (b))
    if a == 0 and b &gt; 0 &lt; c:
        print ""There's only one solution: "" + e

    solutions = [str(-b / (2 * a))]
    if a != 0 and d == 0:
        print ""There's only one solution: "" + solutions 

    solutions2 = [str((-b + math.sqrt(d)) / 2.0 / a), str((-b - math.sqrt(d)) / 2.0 / a)]
    if a != 0 and d &gt; 0:
        print ""There's two solutions: "" + solutions2

    xre = str((-b) / (2 * a))
    xim = str((math.sqrt(-d)) / (2 * a))
    solutions3 = [xre + "" + "" + xim +""i"", xre + "" - "" + xim +""i""]
    if a != 0 and d &lt; 0:
        print ""Solutions are: "" + solutions3
</code></pre>

<p>I get a ""ZeroDivisionError: float division by zero"" error because I'm dividing by zero when ""b"" is ""0"" from an input file. How can I bypass the error so it can print the desired text? My desired output needs to be the desired print statement when meeting the ""if"" conditions.</p>

<p>where (a, b, c)</p>

<pre><code>    0.0, 0.0, 0.0

    0.0, 0.0, 1.0

    0.0, 2.0, 4.0

    1.0, 2.0, 1.0

    1.0, -5.0, 6.0

    1.0, 2.0, 3.0
</code></pre>
","<python><if-statement><math><printing><error-handling>"
"38781831","2","38781686","<p>You need to evaluate <code>properties</code> in the argument list rather than the body of the lambda so that it binds early.  So, define <code>q</code> as:</p>

<pre><code>properties[-1].q = lambda T,V,self=properties[-1] : pf.q_trans(self,T,V) * pf.q_elec(self,T,V)
</code></pre>

<p>When you do the above, the assignment to <code>self</code> is evaluated once and becomes bound permanently to the lambda.  Otherwise, <code>properties</code> will refer to the parent context (as you've found out). </p>
",""
"38781868","1","","<p>I am writing this function to test the primality of numbers, I know that it is not the best code but I would wish it prints out <strong>Not prime</strong> when a number is not prime and <strong>Is prime</strong> when a number is prime. The problem is that it prints out <strong>Not prime</strong> then <strong>Is prime</strong> for numbers that are not prime...
For example this code:</p>

<pre><code>def isPrime(n):
  for i in range(2, n):
    if n%i==0:
        print ""Not Prime!""
        break
  print ""Is Prime""

isPrime(5)
isPrime(18)
isPrime(11)
</code></pre>

<p>Prints out.</p>

<pre><code>Is Prime
Not Prime!
Is Prime
Is Prime
</code></pre>

<p>Help me out, What should I do? I am a beginner.</p>
","<python>"
"38781905","2","38781868","<p><code>break</code> doesn't exist out of a function -- it just exits a loop. So as soon as you print ""Not prime"", you exit the loop and move on to the next print statement.</p>

<p>replace the <code>break</code> with the keyword <code>return</code> instead. <code>return</code> will immediately exit the function, returning the value you give the return statement, or <code>None</code> if you just put <code>return</code> with no value next to it.</p>
",""
"38781927","2","38781868","<p>Here is a fix (python 3)</p>

<pre><code>
def isPrime(n):
  prime = True
  for i in range(2, n):
    if n%i==0:
        print(""Not Prime!"")
        prime = False
        break
  if prime:
      print(""Is Prime"") 

isPrime(5)
isPrime(18)
isPrime(11)
</code></pre>

<p>The problem in the code you posted is that the last <code>print</code> is always executed.</p>
",""
"38782004","1","","<p>I am trying to install <code>lxml</code> package after i installed <code>BeautifulSoup4</code> package.</p>

<p>In the terminal i type:</p>

<pre><code>sudo pip install lxml
</code></pre>

<p>This is what i get</p>

<pre><code>sudo pip install lxml
Downloading/unpacking lxml
  Running setup.py egg_info for package lxml
    Building lxml version 3.6.1.
    Building without Cython.
    Using build configuration of libxslt 1.1.26
    Building against libxml2/libxslt in the following directory: /usr/lib

Installing collected packages: lxml
  Running setup.py install for lxml
    Building lxml version 3.6.1.
    Building without Cython.
    Using build configuration of libxslt 1.1.26
    Building against libxml2/libxslt in the following directory: /usr/lib
    building 'lxml.etree' extension
    gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/libxml2 -Isrc/lxml/includes -I/usr/include/python2.7 -c src/lxml/lxml.etree.c -o build/temp.linux-armv9l-2.7/src/lxml/lxml.etree.o -w
</code></pre>

<p>And then it just hangs there at the last line for a very long long time, I have to exit by pressing <kbd>CTRL+C</kbd>.</p>

<p>Can someone tell me what it really means?</p>

<p>I then try <code>pip freeze</code> to see if the package is installed. No, it is not there.</p>
","<python><beautifulsoup><raspberry-pi><pip><lxml>"
"38782035","2","38781789","<p>From: <a href=""https://github.com/apache/thrift/blob/master/configure.ac#L279-L289"" rel=""nofollow"">https://github.com/apache/thrift/blob/master/configure.ac#L279-L289</a></p>

<pre><code>if test ""$with_python"" = ""yes"";  then
  AC_PATH_PROG([PIP], [pip])
  AC_PATH_PROG([TRIAL], [trial])
  if test -n ""$TRIAL"" &amp;&amp; test ""x$PYTHON"" != ""x"" &amp;&amp; test ""x$PYTHON"" != ""x:"" ; then
    have_python=""yes""
  fi  
fi
</code></pre>

<p>This requires the existence of the binaries: <code>pip</code> and <code>trial</code>. Try installing:</p>

<pre><code>dnf install python2-twisted python3-twisted python-pip python3-pip
</code></pre>
",""
"38782069","2","38782004","<p>well you could open python and try importing it. But if its python 3 try this</p>

<pre><code>sudo apt-get install python3-lxml
</code></pre>

<p>else its </p>

<pre><code>sudo apt-get install python-lxml
</code></pre>
",""
"38782072","1","","<p>My csv data is follows:</p>

<pre><code>0.03095566878715169,False
0.9700097239723956,False
0.9756176662740987,False
0.9516273399151274,False
0.21111951544035354,False
0.10371038060888567,False
0.018505911665029413,True
0.3595877911788813,True
0.010223522470333259,True
0.0812290660300292,True
0.19798744613629704,True
</code></pre>

<p>I am trying to acquire a k-fold cross validation score.</p>

<p>This is my code as follows:</p>

<pre><code>import os,csv
import numpy as np
from sklearn import cross_validation
from sklearn import datasets
from sklearn import svm

import numpy as np

csvout = open('xval.csv','wb')
csvwriter=csv.writer(csvout)

f='some.csv'
try:
    X,Y=[],[]
    feat=f[4:-4]
    print feat
    csvin = open(f,'rb')
    csvread=csv.reader(csvin)
    for row in csvread:
        X.append(row[0])
        Y.append(row[1])

    npX=np.array(X)
    npY=np.array(Y)
    clf = svm.SVC()
    xval_score=cross_validation.cross_val_score(clf,X=npX,y=npY,cv=10)
    csvwriter.writerow([feat,str(xval_score[-1])])
except Exception,e:
    print(e)    
csvout.close()
</code></pre>

<p>However, I get an error as follows:</p>

<pre><code>X and y have incompatible shapes.
X has 1 samples, but y has 837
</code></pre>

<p>Or am I going about this the wrong way? I'd be grateful if someone could shed more light on this.</p>
","<python><scikit-learn><cross-validation>"
"38782075","1","","<p>how can properly route pages using a href tag in templates in django ?
my urls.py</p>

<pre><code>urlpatterns = [
url(r'^admin/', admin.site.urls),
url(r'^$', views.home_page, name='home_page'),
url(r'^post/', include('blog.urls')),
url(r'^post/(?P&lt;slug&gt;[-\w]+)/$', views.single_post, name='post'),
url(r'^about/', views.about_page, name='about_page'),
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
</code></pre>

<p>views.py</p>

<pre><code> def home_page(request):
posts = Post.objects.filter(publish_date__lte=timezone.now()).order_by('publish_date').reverse()
paginator = Paginator(posts, 6)
page = request.GET.get('page')
try:
    posts = paginator.page(page)
except PageNotAnInteger:
    posts = paginator.page(1)
except EmptyPage:
    posts = paginator.page(paginator.num_pages)

return render_to_response('home.html', locals(), context_instance=RequestContext(request))

 def single_post(request, slug):
     post = get_object_or_404(Post, slug=slug)
     return render_to_response('post/post_detail.html', locals(), context_instance=RequestContext(request))

def about_page(request):
     return render_to_response(
    'about.html'
)
</code></pre>

<p>base.html</p>

<pre><code> &lt;div class=""head-nav""&gt;
                &lt;span class=""menu""&gt; &lt;/span&gt;
                    &lt;ul class=""cl-effect-1""&gt;
                        &lt;li class=""active""&gt;&lt;a href=""/""&gt;Home&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=""about/""&gt;About&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=""gaming/""&gt;Gaming&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=""tech/""&gt;Tech&lt;/a&gt;&lt;/li&gt;
                        &lt;li&gt;&lt;a href=""404.html""&gt;Shortcodes&lt;/a&gt;&lt;/li&gt;

                        &lt;li&gt;&lt;a href=""contact.html""&gt;Contact&lt;/a&gt;&lt;/li&gt;
                                    &lt;div class=""clearfix""&gt;&lt;/div&gt;
                    &lt;/ul&gt;
            &lt;/div&gt;
</code></pre>

<p>the problem is that when i am at url <a href=""http://127.0.0.1:8000/post/post_title"" rel=""nofollow"">http://127.0.0.1:8000/post/post_title</a>
and then i want to go to about page, then when i hit link from navbar it goes to 
link <a href=""http://127.0.0.1:8000/post/post_title/about"" rel=""nofollow"">http://127.0.0.1:8000/post/post_title/about</a> gives me 404 but the about page is at url <a href=""http://127.0.0.1:8000/about"" rel=""nofollow"">http://127.0.0.1:8000/about</a> .</p>

<p>It maybe a problem with href or urls so correct me. </p>
","<python><html><django><web><url-routing>"
"38782089","1","","<p>I've switched to a new machine and tried to use my code (that working on the previous one).
I'm using python/django/Theano/Keras with the following versions (aligned with the previous machine of course...):</p>

<ul>
<li>Django==1.9.6</li>
<li>django-cors-headers==1.1.0 </li>
<li>django-user-agents==0.3.0   </li>
<li>Keras==1.0.3   </li>
<li>python-apt===0.9.3.5ubuntu2   </li>
<li>python-dateutil==2.5.3   </li>
<li>python-debian===0.1.21-nmu2ubuntu2   </li>
<li>scipy==0.17.1   </li>
<li>Theano==0.8.2</li>
</ul>

<p>On one of the import I get the following error:
(Note that in other case I got the error of missing gof... but that might be a different issue)</p>

<ul>
<li><p>Last import fail line:</p>

<pre><code>AttributeError: 'module' object has no attribute 'poll'
</code></pre></li>
</ul>

<p>Any Ideas?
Thanks!</p>

<ul>
<li>Short version:</li>
</ul>

<p><code>File ""/home/django/django_project/textlab/mainClasses/UploadNewSetCluster2TLChosen.py"", line 10, in &lt;module&gt;
        from keras.models import model_from_json
      File ""/usr/local/lib/python2.7/dist-packages/keras/__init__.py"", line 2, in &lt;module&gt;
        from . import backend
      File ""/usr/local/lib/python2.7/dist-packages/keras/backend/__init__.py"", line 51, in &lt;module&gt;
        from .theano_backend import *
      File ""/usr/local/lib/python2.7/dist-packages/keras/backend/theano_backend.py"", line 1, in &lt;module&gt;
        import theano
      File ""/usr/local/lib/python2.7/dist-packages/theano/__init__.py"", line 42, in &lt;module&gt;
        from theano.configdefaults import config
      File ""/usr/local/lib/python2.7/dist-packages/theano/configdefaults.py"", line 1452, in &lt;module&gt;
        p_out = output_subprocess_Popen([config.cxx, '-dumpversion'])
      File ""/usr/local/lib/python2.7/dist-packages/theano/misc/windows.py"", line 78, in output_subprocess_Popen
        out = p.communicate()
      File ""/usr/lib/python2.7/subprocess.py"", line 799, in communicate
        return self._communicate(input)
      File ""/usr/lib/python2.7/subprocess.py"", line 1401, in _communicate
        stdout, stderr = self._communicate_with_poll(input)
      File ""/usr/lib/python2.7/subprocess.py"", line 1431, in _communicate_with_poll
        poller = select.poll()
    AttributeError: 'module' object has no attribute 'poll'</code></p>

<ul>
<li>Full Version
<code>[05/Aug/2016 08:22:50] ERROR [/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py:284] Internal Server Error: /dashboardeventreport
Traceback (most recent call last):
  File ""/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py"", line 123, in get_response
    response = middleware_method(request)
  File ""/usr/local/lib/python2.7/dist-packages/django/middleware/common.py"", line 61, in process_request
    if self.should_redirect_with_slash(request):
  File ""/usr/local/lib/python2.7/dist-packages/django/middleware/common.py"", line 79, in should_redirect_with_slash
    not urlresolvers.is_valid_path(request.path_info, urlconf)
  File ""/usr/local/lib/python2.7/dist-packages/django/core/urlresolvers.py"", line 668, in is_valid_path
    resolve(path, urlconf)
  File ""/usr/local/lib/python2.7/dist-packages/django/core/urlresolvers.py"", line 534, in resolve
    return get_resolver(urlconf).resolve(path)
  File ""/usr/local/lib/python2.7/dist-packages/django/core/urlresolvers.py"", line 374, in resolve
    for pattern in self.url_patterns:
  File ""/usr/local/lib/python2.7/dist-packages/django/utils/functional.py"", line 33, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File ""/usr/local/lib/python2.7/dist-packages/django/core/urlresolvers.py"", line 417, in url_patterns
    patterns = getattr(self.urlconf_module, ""urlpatterns"", self.urlconf_module)
  File ""/usr/local/lib/python2.7/dist-packages/django/utils/functional.py"", line 33, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File ""/usr/local/lib/python2.7/dist-packages/django/core/urlresolvers.py"", line 410, in urlconf_module
    return import_module(self.urlconf_name)
  File ""/usr/lib/python2.7/importlib/__init__.py"", line 37, in import_module
    __import__(name)
  File ""/home/django/django_project/django_project/urls.py"", line 17, in &lt;module&gt;
    from textlab import views
  File ""/home/django/django_project/textlab/views.py"", line 43, in &lt;module&gt;
    from mainClasses import UploadNewSetCluster2TLChosen
  File ""/home/django/django_project/textlab/mainClasses/UploadNewSetCluster2TLChosen.py"", line 10, in &lt;module&gt;
    from keras.models import model_from_json
  File ""/usr/local/lib/python2.7/dist-packages/keras/__init__.py"", line 2, in &lt;module&gt;
    from . import backend
  File ""/usr/local/lib/python2.7/dist-packages/keras/backend/__init__.py"", line 51, in &lt;module&gt;
    from .theano_backend import *
  File ""/usr/local/lib/python2.7/dist-packages/keras/backend/theano_backend.py"", line 1, in &lt;module&gt;
    import theano
  File ""/usr/local/lib/python2.7/dist-packages/theano/__init__.py"", line 42, in &lt;module&gt;
    from theano.configdefaults import config
  File ""/usr/local/lib/python2.7/dist-packages/theano/configdefaults.py"", line 1452, in &lt;module&gt;
    p_out = output_subprocess_Popen([config.cxx, '-dumpversion'])
  File ""/usr/local/lib/python2.7/dist-packages/theano/misc/windows.py"", line 78, in output_subprocess_Popen
    out = p.communicate()
  File ""/usr/lib/python2.7/subprocess.py"", line 799, in communicate
    return self._communicate(input)
  File ""/usr/lib/python2.7/subprocess.py"", line 1401, in _communicate
    stdout, stderr = self._communicate_with_poll(input)
  File ""/usr/lib/python2.7/subprocess.py"", line 1431, in _communicate_with_poll
    poller = select.poll()
AttributeError: 'module' object has no attribute 'poll'</code></li>
</ul>
","<python><django><import><theano><keras>"
"38782114","2","38782075","<p>Replace your code with the line below.</p>

<pre><code>&lt;li&gt;&lt;a href=""{% url 'about_page' %}""&gt;About&lt;/a&gt;&lt;/li&gt;
</code></pre>

<p>You have defined named url's in your urls.py, so make good use of it.
For more information read this article this will help you making the best use of named urls. <a href=""https://docs.djangoproject.com/ja/1.9/topics/http/urls/"" rel=""nofollow"">Django URL's Dispatcher </a></p>
",""
"38782191","1","","<p>Dlib has a really handy, fast and efficient object detection routine, and I wanted to make a cool face tracking example similar to the example <a href=""https://realpython.com/blog/python/face-detection-in-python-using-a-webcam/"" rel=""nofollow"">here</a>.</p>

<p>OpenCV, which is widely supported, has VideoCapture module that is fairly quick (a fifth of a second to snapshot compared with 1 second or more for calling up some program that wakes up the webcam and fetches a picture). I added this to the face detector Python example in Dlib.</p>

<p>If you directly show and process the OpenCV VideoCapture output it looks odd because apparently OpenCV stores BGR instead of RGB order. After adjusting this, it works, but slowly:</p>

<pre><code>from __future__ import division
import sys

import dlib
from skimage import io


detector = dlib.get_frontal_face_detector()
win = dlib.image_window()

if len( sys.argv[1:] ) == 0:
    from cv2 import VideoCapture
    from time import time

    cam = VideoCapture(0)  #set the port of the camera as before

    while True:
        start = time()
        retval, image = cam.read() #return a True bolean and and the image if all go right

        for row in image:
            for px in row:
                #rgb expected... but the array is bgr?
                r = px[2]
                px[2] = px[0]
                px[0] = r
        #import matplotlib.pyplot as plt
        #plt.imshow(image)
        #plt.show()

        print( ""readimage: "" + str( time() - start ) )

        start = time()
        dets = detector(image, 1)
        print ""your faces: %f"" % len(dets)
        for i, d in enumerate( dets ):
            print(""Detection {}: Left: {} Top: {} Right: {} Bottom: {}"".format(
                i, d.left(), d.top(), d.right(), d.bottom()))
            print(""from left: {}"".format( ( (d.left() + d.right()) / 2 ) / len(image[0]) ))
            print(""from top: {}"".format( ( (d.top() + d.bottom()) / 2 ) /len(image)) )
        print( ""process: "" + str( time() - start ) )

        start = time()
        win.clear_overlay()
        win.set_image(image)
        win.add_overlay(dets)

        print( ""show: "" + str( time() - start ) )
        #dlib.hit_enter_to_continue()



for f in sys.argv[1:]:
    print(""Processing file: {}"".format(f))
    img = io.imread(f)
    # The 1 in the second argument indicates that we should upsample the image
    # 1 time.  This will make everything bigger and allow us to detect more
    # faces.
    dets = detector(img, 1)
    print(""Number of faces detected: {}"".format(len(dets)))
    for i, d in enumerate(dets):
        print(""Detection {}: Left: {} Top: {} Right: {} Bottom: {}"".format(
            i, d.left(), d.top(), d.right(), d.bottom()))

    win.clear_overlay()
    win.set_image(img)
    win.add_overlay(dets)
    dlib.hit_enter_to_continue()


# Finally, if you really want to you can ask the detector to tell you the score
# for each detection.  The score is bigger for more confident detections.
# Also, the idx tells you which of the face sub-detectors matched.  This can be
# used to broadly identify faces in different orientations.
if (len(sys.argv[1:]) &gt; 0):
    img = io.imread(sys.argv[1])
    dets, scores, idx = detector.run(img, 1)
    for i, d in enumerate(dets):
        print(""Detection {}, score: {}, face_type:{}"".format(
            d, scores[i], idx[i]))
</code></pre>

<p>From the output of the timings in this program, it seems processing and grabbing the picture are each taking a fifth of a second, so you would think it should show one or 2 updates per second - however, if you raise your hand it shows in the webcam view after 5 seconds or so!</p>

<p>Is there some sort of internal cache keeping it from grabbing the latest webcam image? Could I adjust or multi-thread the webcam input process to fix the lag? This is on an Intel i5 with 16gb RAM.</p>

<p><strong><em>Update</em></strong></p>

<p>According to here, it suggests the read grabs a video <em>frame by frame</em>. This would explain it grabbing the next frame and the next frame, until it finally caught up to all the frames that had been grabbed while it was processing. I wonder if there is an option to set the framerate or set it to drop frames and just click a picture of the face in the webcam <em>now</em> on read?
<a href=""http://docs.opencv.org/3.0-beta/doc/py_tutorials/py_gui/py_video_display/py_video_display.html#capture-video-from-camera"" rel=""nofollow"">http://docs.opencv.org/3.0-beta/doc/py_tutorials/py_gui/py_video_display/py_video_display.html#capture-video-from-camera</a></p>
","<python><opencv><webcam><dlib>"
"38782203","1","","<p>The data I'm using is pasted below. When I apply <a href=""http://study.com/academy/lesson/skewness-in-statistics-definition-formula-example.html"" rel=""nofollow"">the basic formula</a> for skewness to my data in R:</p>

<pre><code>3*(mean(data) - median(data))/sd(data) 
</code></pre>

<p>The result is -0.07949198. I get a very similar result in Python. The median is therefore greater than the mean suggesting the left tail is longer.</p>

<p>However, when I apply the descdist function from the <a href=""https://cran.r-project.org/web/packages/fitdistrplus/fitdistrplus.pdf"" rel=""nofollow"">fitdistrplus package</a>, the skewness is 0.3076471 suggesting the right tail is longer. The Scipy function <a href=""http://docs.scipy.org/doc/scipy-0.15.1/reference/generated/scipy.stats.skew.html"" rel=""nofollow"">skew</a> again returns a skewness of 0.303. </p>

<p>Can I trust this simple formula which gives me a negative skewness? What is going on here.</p>

<p>Thanks,
Oliver</p>

<pre><code>data = c(0.18941565600882029, 1.9861271676300578, -5.2022598870056491, 1.6826411075612353, 1.6826411075612353, -2.9502890173410403, -2.923253150057274, -2.9778296382730454, 0.71202396234488663, 0.71202396234488663, -3.1281373844121529, 1.8326831382748159, -5.2961554710604135, 2.7793190416141234, 0.46922759190417185, 7.0730158730158728, 1.1745152354570636, 2.8142292490118579, 2.037940379403794, 7.0607489597780866, 10.460258249641321, 11.894978479196554, 4.8334682860998655, 1.3884016973125886, 4.0940458015267174, 0.12592959841348539, -0.37022332506203476, 1.9713554987212274, -0.83774145616641893, -1.896978417266187, 6.4340675477239362, -6.4774193548387089, -0.31790393013100438, -4.4193265007320646, 5.7454545454545451, 2.5913432835820895, 0.86190724335591451, 0.95753781950965045, 6.8923556942277697, 1.7650659630606862, -2.4558421851289833, -2.390546528803545, 2.6355029585798815, 0.26983655274888557, 1.5032159264931086, 3.9839506172839503, -5.1404511278195484, -2.2477777777777779, 6.0604444444444443, -0.9691172451489477, 1.1383462670591382, -1.5281319661168078, 4.7775667118950702, 1.2223175965665234, 2.0563555555555553, -3.6153201970443352, -0.35731206188058978, -3.6265094676670238, 1.3053804930332262, -4.4604960677555958, -0.8933514246947083, 0.7622542595019659, 1.3892170651664322, 2.5725258493353031, -0.028006088280060883, 0.8933947772657449, 2.4907086614173228, 3.0914196567862717, 4.4222575516693157, 0.64568527918781726, 0.97095158597662778, -3.7409780775716697, -3.3472636815920396, -0.66307448494453247, -7.0384291725105186, -0.14540612516644474, -0.38161535029004906, 5.1076923076923082, 4.0237516869095806, 1.510099573257468, 1.5064083457526081, -0.025879043600562587, 4.5001414427156998, 3.2326264274061991, 1.0185639229422065, 2.66690518783542, 0.53032015065913374, 1.2117829457364342, 0.60861244019138749, -2.5248049921996878, 1.8666666666666669, -0.32978612415232139, 0.29055999999999998, 1.9150729335494328, 2.2988352745424296, 3.779225265235628, 0.093884800811976657, 1.0097869890616005, 1.2220632081097198, 0.21164401128494487)
</code></pre>
","<python><r><scipy><distribution>"
"38782263","1","","<p>I installed Freeswitch 1.6 in Debian 8, using <a href=""https://freeswitch.org/confluence/display/FREESWITCH/Debian+8+Jessie"" rel=""nofollow"">this</a> link. Installing latest release branch section.</p>

<p>Module python is enabled using fs_cli:</p>

<pre><code>&gt;module_exists mod_python                                                                                              
true
</code></pre>

<p><strong>Symptoms</strong></p>

<p>When I execute my Python script I get:</p>

<pre><code>    2016-08-05 05:49:23.875318 [ERR] mod_python.c:231 Error importing module
    2016-08-05 05:49:23.875318 [ERR] mod_python.c:164 Python Error by calling script ""fax"": &lt;type 'exceptions.ImportError'&gt;    
    Message: No module named freeswitch    
    Exception: None    
    Traceback (most recent call last)
File: ""/usr/share/freeswitch/scripts/fax.py"", line 1, in &lt;module&gt;
</code></pre>

<p>Using <a href=""https://wiki.freeswitch.org/wiki/Mod_python#Cannot_import_freeswitch"" rel=""nofollow"">this</a> document:</p>

<p><strong>Troubleshooting:</strong></p>

<ol>
<li><p>This same script is working with other Freeswitch box.</p></li>
<li><p>Moved file properly:</p>

<p><code>ls -al /usr/local/lib/python2.7/site-packages/
freeswitch.py</code></p></li>
<li><p>Script fax.py content is <a href=""http://pastebin.com/mamZiXkq"" rel=""nofollow"">here</a></p></li>
<li><p>Reboot Freeswitch</p></li>
<li><p>Script freeswitch.py location</p>

<ul>
<li>/usr/local/lib/python3.4/dist-packages/freeswitch.py    </li>
<li>/usr/local/lib/python2.7/site-packages/freeswitch.py  </li>
<li>/usr/share/pyshared/freeswitch.py</li>
</ul></li>
</ol>
","<python><freeswitch>"
"38782276","2","38782263","<p>I copied <code>freeswitch.py</code> to <code>/usr/share/freeswitch/scripts/</code>
and that solved the problem.</p>
",""
"38782344","1","","<p>Hi can someone please assist.</p>

<p>I wish to modify Column A, on Sheet 3 of an Excel Work book to change the Date Format from:</p>

<p>Sep-15 to 2016-09-15.</p>

<p>In Excel this the format is mmm-yy I wish to change it to yyyy-mm-dd.</p>

<p>Trying to get my head around it, I know you could use a module like pandas, or xlsxwriter but the example are not making sense.</p>

<p>Thanks</p>
","<python><excel>"
"38782346","1","","<p>I am trying to couple <code>wx.ListBox</code> with <code>wx.combo.Comboctrl</code>. A sample code is below. For some reason, the items in the ListBox are not clickable/selectable. I wonder how I can make it work. Thanks!</p>

<h2>EDIT: Missing code added</h2>

<pre><code>import wx, wx.combo

class MainFrame(wx.Frame):
    def __init__(self, parent):
        wx.Frame.__init__(self, parent, title="""", size=(300, 100))
        gbs = wx.GridBagSizer()
        ComboCtrlBox = wx.combo.ComboCtrl(self)
        ComboCtrlPopup = ListBoxComboPopup()
        ComboCtrlBox.SetPopupControl(ComboCtrlPopup)
        ComboCtrlPopup.ListBox.Append(""Apple"")
        ComboCtrlPopup.ListBox.Append(""Banana"")
        ComboCtrlPopup.ListBox.Append(""Orange"")

        ComboCtrlPopup.ListBox.Bind(wx.EVT_LISTBOX, self.OnSelect) #ADDED

        gbs.Add(ComboCtrlBox, pos = (0, 0), span = (1, 1), flag = wx.EXPAND|wx.ALL, border = 10)
        gbs.AddGrowableCol(0)
        self.SetSizer(gbs)
        self.Layout()

    def OnSelect(self, evt):    #ADDED
        print ""HAHA""


class ListBoxComboPopup(wx.combo.ComboPopup):
    def Init(self):
        self.ItemList = []

    def Create(self, parent):
        self.ListBox = wx.ListBox(parent, -1, size = (-1, 20), choices = self.ItemList)

    def GetControl(self):
        return self.ListBox

    def OnPopup(self):
        pass

#-----------------------------------------------------------------------------#

if __name__ == '__main__':
    APP = wx.App(False)
    FRAME = MainFrame(None)
    FRAME.Show()
    APP.MainLoop()
</code></pre>
","<python><listbox><wxpython>"
"38782398","1","","<h2>What I want to do</h2>

<p>I am trying to parse the geometry information of a nastran file using python. My current attempts use NumPy as well as regular expressions. It is important to read the data fast and that the result is a NumPy array.</p>

<h2>Nastran file format</h2>

<p>A nastran file can look like the following:</p>

<pre><code>GRID           1        3268.616-30.0828749.8656    
GRID           2        3268.781  -3.-14749.8888
GRID           3        3422.488580.928382.49383
GRID           4        3422.488     10.-2.49383
...
</code></pre>

<p>I am only interested in the right part of the file. There the information is present in chunks of 8 characters for the x, y and z coordinates respectively. A common representation of the coordinates above would be</p>

<pre><code>3268.616, -30.0828, 749.8656    
3268.781,  -3.e-14, 749.8888
3422.488, 580.9283, 82.49383
3422.488,      10., -2.49383
</code></pre>

<h2>What I tried so far</h2>

<p>Up until now, I tried to use regular expressions and NumPy to avoid all kinds of python for loops to be as fast a possible about dealing with the data. After reading the complete file into memory and store it in the <code>fContent</code> variable I tried:</p>

<pre><code>vertices = np.array(re.findall(""^.{24}(.{8})(.{8})(.{8})"", fContent, re.MULTILINE), dtype=float)
</code></pre>

<p>However, this falls short for the <code>-3.-14</code> expressions. A solution would be to loop over the resulting string tuples of the regex and substitude all <code>.-</code> with <code>.e-</code> and then create the NumPy array from the list of string tuple. (Not shown in the code above). However, I think that this approach would be slow since it involves a loop over all found tuples of the regular expression and perform a substitution.</p>

<h2>What I am looking for</h2>

<p>I am looking for any fast way to read in the data. My current hopes are on a smart regular expression that successfully deals with the ""<code>-3.-14</code>"" problem. The regex would need to substitute all <code>.-</code> characters with <code>.e-</code> but <strong>only</strong> if the <code>.</code> is not at the end of an 8 character block. Up until now, I was not able to create such a regular expression. But as I said, any other fast way of reading in the data is also very welcome.</p>
","<python><regex><numpy><nastran>"
"38782423","1","","<p>I am trying to execute an executable binary that produces an error. My code for the execution of binary using Popen:</p>

<pre><code>p = Popen(cmd, stdout=PIPE, stderr=PIPE, shell=True)
output, error = p.communicate()
return_code = p.returncode
if error:
   raise SomeLocallyDefinedError
</code></pre>

<p>This is supposed to raise error when the script execution results in an error. The cmd in this particular case is the path to the concerned executable binary. </p>

<p>Now when I execute this very binary on my terminal ./binary_file it gives me an error msg</p>

<p>""Floating point exception: 8"".</p>

<p><strong>But when the script is executed by Popen , there is no error as well as output. But the returncode is -8. I believe that a non zero return code implies an error and if so why was the message not captured by Popen.communicate()?</strong></p>

<p>In case you guys are wondering what was the executable binary file. The binary file was generated by a compiling a c file that results in run time error. Here is the content of c file</p>

<pre><code># include&lt;stdio.h&gt;
int main(){
   int a = 18;
   int b = 0;
   int c = a/b;
   printf(""%d"", c);
}
</code></pre>
","<python><subprocess><popen>"
"38782478","1","","<p>I found importing modules in Python complicated, so I'm doing experiments to clear it up. Here is my file structure:</p>

<pre><code>PythonTest/
  package/
    __init__.py
    test.py
</code></pre>

<p>Content of <code>__init__.py</code>:</p>

<pre><code>package = 'Variable package in __init__.py'
from package import test
</code></pre>

<p>Content of <code>test.py</code>:</p>

<pre><code>from package import package
print package
</code></pre>

<p>When I stay out of <code>package</code>(in <code>PythonTest</code>), and execute <code>python package/test.py</code>, I get:</p>

<pre><code>Traceback (most recent call last):
  File ""package/test.py"", line 1, in &lt;module&gt;
    from package import package
ImportError: No module named package
</code></pre>

<p>The expected output is <code>Variable package in __init__.py</code>. What am I doing wrong?</p>

<hr>

<p>However, I can get the expected output in the interactive mode:</p>

<pre><code>sunqingyaos-MacBook-Air:PythonTest sunqingyao$ python
Python 2.7.10 (default, Oct 23 2015, 19:19:21) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import package
Package in __init__.py
</code></pre>
","<python><python-2.7><import><module><python-import>"
"38782525","2","38782344","<p>See this example.</p>

<pre><code>import xlsxwriter

workbook = xlsxwriter.Workbook('date_examples.xlsx')
worksheet = workbook.add_worksheet()

# Widen column A for extra visibility.
worksheet.set_column('A:A', 30)

# A number to convert to a date.
number = 41333.5

# Write it as a number without formatting.
worksheet.write('A1', number)                # 41333.5

format2 = workbook.add_format({'num_format': 'dd/mm/yy'})
worksheet.write('A2', number, format2)       # 28/02/13

format3 = workbook.add_format({'num_format': 'mm/dd/yy'})
worksheet.write('A3', number, format3)       # 02/28/13

format4 = workbook.add_format({'num_format': 'd-m-yyyy'})
worksheet.write('A4', number, format4)       # 28-2-2013

format5 = workbook.add_format({'num_format': 'dd/mm/yy hh:mm'})
worksheet.write('A5', number, format5)       # 28/02/13 12:00

format6 = workbook.add_format({'num_format': 'd mmm yyyy'})
worksheet.write('A6', number, format6)       # 28 Feb 2013

format7 = workbook.add_format({'num_format': 'mmm d yyyy hh:mm AM/PM'})
worksheet.write('A7', number, format7)       # Feb 28 2013 12:00 PM

workbook.close()
</code></pre>

<p><a href=""http://xlsxwriter.readthedocs.io/working_with_dates_and_time.html"" rel=""nofollow"">Source</a></p>
",""
"38782611","2","38782398","<p>Would something like this work fine? Match the <code>.-</code> and replace with <code>.e-</code>.</p>

<p>Regex: <code>(\.-)(?!(.{7})?$)</code></p>

<p><a href=""https://regex101.com/r/uB8dO7/1"" rel=""nofollow"">DEMO</a></p>
",""
"38782663","1","","<p>I write my master thesis on ""Estimation of poker skills value in late tournament phase"". I encountered a problem because i can not find python package which would evaluate hand odds versus each other.</p>

<p>What is satisfying for my is simply function:
odds(AsAc, KsKc) which would return [% that AsAc wins, % that KsKc wins]</p>

<p>I tried package PokerSleuth but it does not work on my pc.
(<a href=""http://www.barsoom.org/scriptable-equity-calculator"" rel=""nofollow"">http://www.barsoom.org/scriptable-equity-calculator</a>  - maybe it works for You)</p>

<p>Do You happen to know any python holdem package with function of odds estimation or do You posses a table with all hands vs all hands odds value?</p>

<p>Thanks in advance!</p>
","<python><simulation>"
"38782666","1","","<p>I have some code which invokes a HTTP request and I would like to unit test a negative case where it should raise a specific exception for a 404 response. However I am trying to figure out how to mock the parameter so it can raise the <code>HTTPError</code> as a side-effect in the calling function, the mock object seems to create an invokable function which isn't the parameter that it accepts, it is only a scalar value.</p>

<pre><code>def scrape(variant_url):
    try:
        with urlopen(variant_url) as response:
            doc = response.read()
            sizes = scrape_sizes(doc)
            price = scrape_price(doc)
            return VariantInfo([], sizes, [], price)

    except HTTPError as e:
        if e.code == 404:
            raise LookupError('Variant not found!')

        raise e

def test_scrape_negative(self):
    with self.assertRaises(LookupError):
        scrape('foo')
</code></pre>
","<python><unit-testing><mocking><magicmock>"
"38782689","2","38782423","<p>The output is generated by the shell, while catching an <code>SIGFPE</code> signal. You have to catch this signal in your program by yourself and handle it as you wish.</p>
",""
"38782714","2","38782423","<p>This is not just an ordinary runtime error, it is a process crash raised by kernel (via a signal). </p>

<p>If you are running on UNIX//Linux/OS X you should get a core dump (<code>ulimit -c unlimited</code> in the shell). Kernel does not write to a process's stderr - it can't because the process has crashed. </p>

<p>This is not an issue with Python.</p>
",""
"38782731","2","38782203","<p>The skewness is generally defined as the third central moment (at least when it is being used by statisticians.) The Wikipedia skewness page explains why the definition you found is unreliable. (I had never seen that definition.) The code in <code>descdist</code> is easy to review:</p>

<pre><code>moment &lt;- function(data, k) {
        m1 &lt;- mean(data)        # so this is a ""central moment""
        return(sum((data - m1)^k)/length(data))
    }
skewness &lt;- function(data) {
            sd &lt;- sqrt(moment(data, 2))
            return(moment(data, 3)/sd^3)}
skewness(data)
#[1] 0.3030131
</code></pre>

<p>The version you use is apparently called 'median skewness' or 'non-parametric skewness'. See: <a href=""https://stats.stackexchange.com/questions/159098/taming-of-the-skew-why-are-there-so-many-skew-functions"">https://stats.stackexchange.com/questions/159098/taming-of-the-skew-why-are-there-so-many-skew-functions</a></p>
",""
"38782739","2","38782191","<p>If you want to show a frame read in OpenCV, you can do it with the help of <code>cv2.imshow()</code> function without any need of changing the colors order. On the other hand, if you still want to show the picture in matplotlib, then you can't avoid using the methods like this:</p>

<pre><code>b,g,r = cv2.split(img)
img = cv2.merge((b,g,r))
</code></pre>

<p>That's the only thing I can help you with for now=)</p>
",""
"38782787","1","","<p>So i'm using the JIRA-Python module to connect to my company's instance on JIRA and it requires me to pass the certificate and key for this.
However using the OpenSSL module,i'm unable to read my local certificate and key to pass it along the request.</p>

<p>the code for reading is below</p>

<pre><code>import OpenSSL.crypto 
c = open('/Users/mpadakan/.certs/mpadakan-blr-mpsot-20160704.crt').read()
cert = OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_PEM, c)
</code></pre>

<p>the error i get is </p>

<pre><code>Traceback (most recent call last):
File ""flaskApp.py"", line 19, in &lt;module&gt;
cert = OpenSSL.crypto.dump_certificate(OpenSSL.crypto.FILETYPE_PEM, c)
TypeError: must be X509, not str
</code></pre>

<p>could someone tell me how to read my local .crt and .key file into x509 objects?</p>
","<python><pyopenssl><python-jira>"
"38782820","1","","<p>So I'm trying to make a graph of letters (to represent a boggle board) from a matrix of letters. So say I have something like:</p>

<pre><code>[ [ A, B, C, D], 
  [E, F, G, H], 
  [I, J, K, L], 
  [M, N, O, P] ].
</code></pre>

<p>I want each node to be a letter, but I'm having trouble figuring out how to get the neighbors for each node. For example, node A would have neighbors B, E, and F. While node K would have neighbors F, G, H, J, L, M, O, and P.  Any help would be appreciated!</p>
","<python><matrix><graph><adjacency-list><adjacency-matrix>"
"38782822","1","","<p>Here is my dataframe:</p>

<pre><code>my_df.show()

+----------+
|  features|
+----------+
| [0,'a']  |
| [1,'b']  |
| [0,'c']  |
| [1,'d']  |
| [2,'e']  |
| [0,'f']  |
+----------+
</code></pre>

<p>how to convert it into a dataframe of tuples (with single column 'features')?</p>
","<python><apache-spark><pyspark><pyspark-sql>"
"38782831","2","38782203","<p>I don't have access to the packages you mention right now so I can't check which formula they apply, however, you seem to be using Pearson's second skewness coefficient (see <a href=""https://en.wikipedia.org/wiki/Skewness"" rel=""nofollow"">wikipedia</a>). The estimator for the sample skewness is given on the same page and is given by the third moment which can be calculated simply by:</p>

<pre><code>&gt; S &lt;- mean((data-mean(data))^3)/sd(data)^3
&gt; S
[1] 0.2984792
&gt; n &lt;- length(data)
&gt; S_alt &lt;- S*n^2/((n-1)*(n-2))
&gt; S_alt
[1] 0.3076471
</code></pre>

<p>See the alternative definition on the wiki page which yields the same results as in your example.</p>
",""
"38782838","2","38782663","<p>Well there's not a package specifically made for cards I dont think but there's a package called random.
<a href=""https://docs.python.org/2/library/random.html"" rel=""nofollow"">random package docs</a></p>

<p>So for example if you had 8 cards and you threw them on the ground you could do this.</p>

<pre><code>import random

cards = [""jack"", ""Queen"",""Ace"", ""King"",""Joker"",""12 of hearts"", ""6 of hearts"",""1 of hearts""]

pick = random.choice(cards)
print pick
#Output Example: Jack
</code></pre>

<p>This is a example of 8 card pick up
sorry for the names I dont know much about cards.</p>
",""
"38782869","1","","<p>I'm capturing sensitive information on the main page of my Django project.
Is there a way to prevent the previous login info from showing when a user clicks or starts typing in the box?</p>
","<python><django><django-forms>"
"38782884","2","38781820","<p>I don't know the Python. But know the concept.</p>

<p>So please rectify the Python code error.</p>

<p><strong>Prints the solutions of ax² + bx + c = 0</strong></p>

<pre><code>def roots4(outfile,a,b,c):
d = (b * b) - (4 * a * c)    


if a == 0 and b == 0 and c==0:
   print ""This is not quadratic equations""
if a == 0 and b == 0:
   print ""Invalid equations""
if a == 0:
   e = [str(-b / (2 * a))]
   print ""There's only one solution: X="" + e        
if d == 0 :
   solutions = -b / (2 * a)
   print ""Two roots are same X = "" + solutions
if d &gt; 0:
   solutions2 = [str((-b + math.sqrt(d)) / (2.0 * a)), str((-b - math.sqrt(d)) / (2.0 * a))]
   print ""There's two solutions: "" + solutions2
if d &lt; 0:
   xre = str((-b) / (2 * a))
   xim = str((math.sqrt(-d)) / (2 * a))
   solutions3 = [xre + "" + "" + xim +""i"", xre + "" - "" + xim +""i""]
   print ""Solutions are: "" + solutions3
</code></pre>
",""
"38782905","1","","<p>Tried to execute the below program along with values its printing <code>None</code>. Can anyone help me why its printing <code>None</code>?</p>

<pre><code>class Myself(object):
    def __init__(self):
        self.record={}
    def __iter__(self):
        self._roles = list(self.record.keys())
        #print (""in iter self._roles"",type(self._roles))
        return self
    def __next__(self):
        if self._roles:
            return self._roles.pop()
        else:
            StopIteration

    def __setitem__(self,key,value):
        self.record[key]=value
    def __getitem__(self,key):
        return self.record.get(key,""No record found"")

    def list_all(self):
        for detail in self.record:
            print (self.record[detail])

def main():
    mydetails = Myself()

    mydetails['name']='Python'
    mydetails['age']='26'
    mydetails['job']='software'
    mydetails.list_all()

    for x in mydetails:
        print (x,"":"",mydetails[x])

main()
</code></pre>
","<python>"
"38782913","1","","<p>I want to replace the word ?Month in a text with the word August.</p>

<pre><code>text=text.replace('?Month','August')
</code></pre>

<p>The issue is that I don't want upper or lower case to matter in ?Month. Regardless if ?Month is upper or lower case (or a mixture) it shall be overwritten with August. See the examples below:</p>

<pre><code>E.g: ?Month -&gt;August 
?month -&gt; August
?MONTH -&gt; August
?moNth -&gt; August
</code></pre>

<p>How do I do that?</p>
","<python><python-2.7>"
"38782931","2","38782820","<p>You have to use dictionary to store the nodes connected to a node
:</p>

<pre><code>g = { ""A"" : [""D"", ""F""],
      ""B"" : [""C""],
      ""C"" : [""B"", ""C"", ""D"", ""E""],
      ""D"" : [""A"", ""C""],
      ""E"" : [""C""],
      ""F"" : [""D""]
    }
</code></pre>

<p>depending on the structure of your graph.</p>

<p>To get the neighbors of a node in the graph you can simply access the node's value</p>

<pre><code>&gt;&gt;&gt; g[""A""]
&gt;&gt;&gt; [""D"",""F""]
</code></pre>
",""
"38782964","2","38782666","<p>Mock the <code>urlopen()</code> to raise an exception; you can do this by setting the <a href=""https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect"" rel=""nofollow""><code>side_effect</code> attribute</a> of the mock:</p>

<pre><code>with mock.patch('urlopen') as urlopen_mock:
    urlopen_mock.side_effect = HTTPError('url', 404, 'msg', None, None)
    with self.assertRaises(LookupError):
        scrape('foo')
</code></pre>
",""
"38782969","1","","<p>I need to build a python module from source. It is just my second build and I'm a bit confused regarding the interaction between built packages and binaries installed through package manager.</p>

<p>Do I need to uninstall the binary first?</p>

<p>If I don't need to Will it overwrite the installed version or will both be available?</p>

<p>If it will not overwrite how can I import the built version into python?</p>

<p>Thank you all!</p>

<p>p.s: If it is case sensitive I'm on fedora 24 and the package is matplotlib which is installed through a setup.py.</p>
","<python><linux><matplotlib><build><fedora>"
"38783023","2","38782913","<p>Use a regular expression (via the <a href=""https://docs.python.org/2/library/re.html"" rel=""nofollow""><code>re</code> module</a>):</p>

<pre><code>import re

text = re.sub(r'\?month', 'August', text, flags=re.IGNORECASE)
</code></pre>

<p>The <a href=""https://docs.python.org/2/library/re.html#re.I"" rel=""nofollow""><code>re.IGNORECASE</code> flag</a> tells the regular expression engine to match text case-insensitively:</p>

<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; text = 'Demo: ?Month ?month ?MONTH ?moNth'
&gt;&gt;&gt; re.sub(r'\?month', 'August', text, flags=re.IGNORECASE)
'Demo: August August August August'
</code></pre>
",""
"38783031","2","38782869","<p>You can disable autocomplete on such fields by setting the HTML5 <code>autocomplete</code> attribute to <code>off</code>. To achieve this in Django's forms you need to pass additional information to the widget for each input, e.g.:</p>

<pre><code>class MyForm(forms.Form):

    secret = forms.CharField(widget=forms.TextInput(attrs={'autocomplete': 'off'}))
</code></pre>
",""
"38783041","2","38782905","<p>You should raise <code>StopIteration</code>:</p>

<pre><code>def __next__(self):
    if self._roles:
        return self._roles.pop()
    else:
        raise StopIteration
</code></pre>
",""
"38783043","1","","<p>If I have, for example, the below recursive function </p>

<pre><code>def fib(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fib(n-1) + fib(n-2)
</code></pre>

<p>How can I improve the performance using python memorization?</p>
","<python><performance><recursion><memorization>"
"38783110","1","","<p>I have the following dataframe(df1) in python :</p>

<pre><code>          ID       Date      Time     XYZ
0        GP3   2016-01-08  16:00:00    64   
1        GP2   2016-01-08  16:00:00   557   
2        GP4   2016-01-08  16:00:00   747   
3        GP1   2016-01-08  16:00:00   406   
4        EP3   2016-01-08  16:00:00    64   
</code></pre>

<p>I want to add another column 'ABC' in it, having d/f values(which are being pulled from another dictionary(dict1), based on the 'ID' in dataframe)</p>

<pre><code>          ID       Date      Time      XYZ     ABC
0        GP3   2016-01-08  16:00:00     64      23
1        GP2   2016-01-08  16:00:00    557      45
2        GP4   2016-01-08  16:00:00    747      56
3        GP1   2016-01-08  16:00:00    406      89
4        EP3   2016-01-08  16:00:00     64      14
</code></pre>

<p>I tried following:</p>

<pre><code>df1[""ABC""]=[0]*df1.shape[0]
for i in df1.iterrows():
   i[1][4]  = dict1[i[1][0]]   # dict1[i[1][0]] gives the desired int values
</code></pre>

<p>But, I am not able to update the values of 'ABC' in the dataframe. They are all coming as 0. How to update all the values?
dict1 :</p>

<pre><code>dict1={'GP1':89,'GP2':45,'GP3':23,'GP4':56,'EP3':14}
</code></pre>
","<python><pandas><dataframe>"
"38783128","2","38783043","<p><strong>Memorization will not improve performance of recursive functions unless you are going to use the function multiple times</strong> - then the previously calculated results will be returned immediately. That would make the performance better than linear too</p>

<p>Try this out yourself</p>

<pre><code>import timeit

setup ='''
def fib3(n): #FASTEST YET
    fibs= [0,1] #list from bottom up
    for i in range(2, n+1):
        fibs.append(fibs[-1]+fibs[-2])
    return fibs[n]

def fib4(n, computed= {0:0, 1:1}): #memoization
    if n not in computed:
        computed[n]= fib4(n-1, computed)+ fib4(n-2, computed)
    return computed[n]

'''

print (min(timeit.Timer('fib3(600)', setup=setup).repeat(3, 1)))

print (min(timeit.Timer('fib4(600)', setup=setup).repeat(3, 1)))
This will show fib4 taking longer.
</code></pre>

<p>Result of single run, recursion is costly.</p>

<pre><code>0.00010111480978441638
0.00039419570581368307
[Finished in 0.1s]
</code></pre>

<p>If you change the last two lines, that is repeat each for 100 times, the result changes Now fib4 becomes faster, as if not only no recursion, almost like no additional time to compute at all</p>

<pre><code>print (min(timeit.Timer('fib3(600)', setup=setup).repeat(3, 100)))

print (min(timeit.Timer('fib4(600)', setup=setup).repeat(3, 100)))
</code></pre>

<p><strong>Results with 50 repeats, linear function is now growing linearly, but memorization takes almost no additional time!</strong></p>

<pre><code>0.00501430622506104
0.00045805769094068097
[Finished in 0.1s]
</code></pre>

<p><strong>Results with 100 repeats, linear function takes more than double time, but memorization takes almost little additional time</strong></p>

<pre><code>0.01583016969421893
0.0006815746388851851
[Finished in 0.2s]
</code></pre>
",""
"38783147","2","38782905","<p>You need to <em>raise</em> the <code>StopIteration</code> execption:</p>

<pre><code>def __next__(self):
    if self._roles:
        return self._roles.pop()
    else:
        raise StopIteration
</code></pre>

<p>Because you don't <code>raise</code> it, you are merely referencing the name, which does nothing. Then the <code>__next__</code> method just ends, resulting in a default implicit <code>return None</code>.</p>
",""
"38783171","2","38783110","<p>Use the <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.map.html"" rel=""nofollow""><code>.map</code></a> method:</p>

<pre><code>df1['ABC'] = df1['ID'].map(dict1)

df1
Out[7]: 
    ID       Date      Time  XYZ  ABC
0  GP3 2016-01-08  16:00:00   64   23
1  GP2 2016-01-08  16:00:00  557   45
2  GP4 2016-01-08  16:00:00  747   56
3  GP1 2016-01-08  16:00:00  406   89
4  EP3 2016-01-08  16:00:00   64   14
</code></pre>

<p>If you have extra elements in ID series, it will return NaN. If you want to change them with a default value, you can use, for example,  <code>.fillna(0)</code> at the end. If you want the original values from the ID series, use <code>.fillna(df1['ID'])</code> instead.</p>
",""
"38783286","1","","<p>i am trying to load an efi application from another efi application using loadimage and startimage protocols. but loadimage is getting succeeded,startimage failing with return value -1/0xffffffff. it would be very helpful if any one suggest some ideas, why it is failing. if there is any mistake in code please correct it.</p>

<pre><code>EFI_STATUS LoadPythonBinary()
{
    EFI_STATUS Status;
    UINTN NumberOfFSHandles;
    EFI_HANDLE *FSHandles;
    EFI_GUID SimpleFileSystemGuid = EFI_SIMPLE_FILE_SYSTEM_PROTOCOL_GUID;
    UINTN  Index = 0;
    EFI_BLOCK_IO  *BlkIo;
    EFI_SIMPLE_FILE_SYSTEM_PROTOCOL *FileSysProtocol =  NULL;
    EFI_DEVICE_PATH_PROTOCOL        *FilePath;
    EFI_HANDLE                      ImageHandle2 = NULL;
//    EFI_DEVICE_PATH_PROTOCOL        *DevicePath;
//    EFI_HANDLE                      DeviceHandle;
    EFI_HANDLE          Controller=NULL;
    EFI_LOADED_IMAGE_PROTOCOL  *ImageInfo;
    EFI_GUID EfiDevicePathProtocolGuid = EFI_DEVICE_PATH_PROTOCOL_GUID;
    EFI_GUID EfiBlockIoProtocolGuid = EFI_BLOCK_IO_PROTOCOL_GUID;
    const CHAR16   *FileName = L""Python.efi"";
    EFI_GUID EfiLoadedImageProtocol = EFI_LOADED_IMAGE_PROTOCOL_GUID;
//    EFI_LOADED_IMAGE_PROTOCOL *LoadedImage;
    char temp[MAX_PATH];
    CHAR16 CmdLineParams[MAX_PATH] = L""fs0:\\GK\\Temp\\UnzipBuildTools.py fs0:\\GK\\Temp\\EFI.zip fs0:\\Test"";
    strcpy(temp,(const char *)StrDup16to8(CmdLineParams));

    Status = gBS-&gt;LocateHandleBuffer(ByProtocol, &amp;SimpleFileSystemGuid,NULL, &amp;NumberOfFSHandles, &amp;FSHandles);
    if(!EFI_ERROR(Status))
    {
        for(Index = 0; Index &lt; NumberOfFSHandles; Index++)
        {
            Status = gBS-&gt;HandleProtocol(FSHandles[Index], &amp;SimpleFileSystemGuid, &amp;BlkIo);
            if(!EFI_ERROR(Status))
            {
                    FilePath = FileDevicePath(FSHandles[Index],FileName);
                    Status = gBS-&gt;LoadImage(TRUE, gImageHandle, FilePath, NULL, 0, &amp;ImageHandle2);
                    printf(""Load Image Status = %x"", Status);
                    if(!EFI_ERROR(Status))
                    {
                        printf(""Image Loaded Successfully\n"");
                        Status = gBS-&gt;HandleProtocol(ImageHandle2, &amp;EfiLoadedImageProtocol,(VOID**)&amp;ImageInfo);
                        if(!EFI_ERROR(Status))
                        {
                            if(ImageInfo-&gt;ImageCodeType == EfiLoaderCode) 
                            {
                                 gBS-&gt;FreePool(FilePath);
                            }
                            printf(""Options :%s\n"",temp);
                            printf(""LoadedImage-&gt;ImageSize = %x"", ImageInfo-&gt;ImageSize);
                            ImageInfo-&gt;LoadOptions = CmdLineParams;
                            ImageInfo-&gt;LoadOptionsSize = (UINT32)(wcslen(CmdLineParams));
                            ImageInfo-&gt;DeviceHandle = gImageHandle;
                        }
                    }

                    printf(""About to start image\n"");
                    Status = gBS-&gt;StartImage(ImageHandle2, NULL, NULL);
                    printf(""StartImage Status = %x"", Status);
                    if(!EFI_ERROR(Status))
                    {
                        printf(""StartImage success\n"");
                        break;
                    }
            }
        }
    }

return Status;
}
</code></pre>
","<python><uefi><loadimage>"
"38783475","2","38782969","<p>I strongly recommend to use <code>virtualenv</code> and build your package inside. Is it really necessary to install via <code>setup.py</code>? If not, you can consider using <code>pip</code> to install your package inside <code>virtualenv</code>.</p>
",""
"38783494","1","","<p>I tried to fetching facebook messages using python script which is mentioned in the code below :</p>

<pre><code>#!/usr/bin/python


import sys

from facepy import GraphAPI
from facepy import exceptions

#Acces token with expire time = 60days
LONG_LIVE_ACCESS_TOKEN = 'EAAZA7IlqBfvkBAKOjc7esSqY1VRJdsMkZC6QXM2mVlAwZAWjOiZA2ywalERBjLk4tzvZBu8JvoWvLRGcTtyZAGl482ueUI1o6MWjkK44y3TeoVKjYBayO5DSIP3Q1poVEa8hO8xZAXdScohEAgiFTtpvVQGk2nZB694ZD'

#Facebook app id and secret from http://developer.facebook.com/apps
APP_ID = '1824237337804537'
SECRET_KEY = 'ee788eb9bea6d36f5f40e52530248f55'

def user_id_to_username(userid):

    """""" Function to convert facebook USERID to username. """"""

    if userid is not None:

        userid = '/{0}'.format(userid)
        try:
            return  graph.get(userid)['name']

        except (exceptions.FacebookError, exceptions.OAuthError) as e:
            print e.message
            sys.exit(0)

def get_message_author(message_list):
    return user_id_to_username(message_list['snippet_author'])


def get_message_author_id(message_list):
    return message_list['snippet_author']


def get_message_body(message_list):
    return message_list['snippet']


def get_recipients_list(message_list):
    author = get_message_author_id(message_list)
    temp = message_list['recipients']
    temp.remove(author)
    return "", "".join(map(user_id_to_username, temp))


def pretty_print(message_list):
    for message in message_list:
        print ""from:     "", get_message_author(message)
        print ""to:       "", get_recipients_list(message)
        print ""Message:  "", get_message_body(message)
        print ""-"" * 140

graph = GraphAPI(LONG_LIVE_ACCESS_TOKEN)

#Output of the facebook query language(FQL)
#This FQL queries for message body, author, recipients for unread messages.

try:
    json_output = graph.fql('SELECT snippet, snippet_author, recipients FROM thread WHERE folder_id = 0  and unread != 0 Limit 4')
except exceptions.OAuthError as e:
    print e.message
    sys.exit(0)


message_list = json_output['data']

if message_list:
    pretty_print(message_list)
else:
    print ""No New Messages""
    sys.exit(0)
</code></pre>

<p>on executing this script it shows the error message : </p>

<blockquote>
  <p>(#12) fql is deprecated for versions v2.1 and higher</p>
</blockquote>
","<python><facebook>"
"38783582","2","38783494","<p>FQL is deprecated and will be completely unsupported by Facebook by August 8, 2016. <a href=""https://developers.facebook.com/docs/reference/fql/"" rel=""nofollow"">Facebook Query Language (FQL) Reference</a>:</p>

<blockquote>
  <p>As of August 8, 2016, <code>FQL</code> will no longer be available and cannot be
  queried. To migrate your app, use the API Upgrade Tool to see the
  Graph API calls you can make instead.</p>
</blockquote>
",""
"38783619","1","","<p>I'm trying to install pyspider and always got </p>

<p>""Failed building wheel for lxml..."", It looks like the lxml is not installed properly and I've tried to download lxml-3.6.1-cp35-cp35m-win_amd64.whl from <a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#psutil"" rel=""nofollow"">http://www.lfd.uci.edu/~gohlke/pythonlibs/#psutil</a>. However, it looks the download link is ineffective. Could you give me some advice on how to resolve this or share me with the whl file? Many thanks!</p>
","<python><lxml><wheel><pyspider>"
"38783642","2","38782820","<p>Assuming your matrix is an n x m matrix, and each element is a <strong>unique</strong> string like the following:
<pre><code>
    # The matrix</p>

<pre><code>matrix = [
    ['A', 'B', 'C', 'D'],
    ['E', 'F', 'G', 'H'],
    ['I', 'J', 'K', 'L'],
    ['M', 'N', 'O', 'P']
]
</code></pre>

<p></pre></code></p>

<p>You can first locate the index of the element:</p>

<pre><code>
    node = 'K' # Input

    # Get the matrix dimension
    n = len(matrix)
    m = len(matrix[0])

    # Assume there is exactly one matching node
    for i in xrange(n):
        for j in xrange(m):
            if matrix[i][j] == node:
                x, y = i, j

</code></pre>

<p>And then return the neighbors as a list:</p>

<pre>
    # Get the (at most) 8 neighbors

    neighbors = [row[max(0,y-1):y+2] for row in matrix[max(0,x-1):x+2]]
    answer = set([v for r in neighbors for v in r])
    answer.remove(node)
    answer = list(answer)

</pre>

<p>If the node can have multiple occurrences, see <a href=""https://stackoverflow.com/questions/27175400/how-to-find-the-index-of-a-value-in-2d-array-in-python"">How to find the index of a value in 2d array in Python?</a> Also these links might be useful for you if you are new to Python:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/15650538/sub-matrix-of-a-list-of-lists-without-numpy"">Sub matrix of a list of lists (without numpy)</a></li>
<li><a href=""https://stackoverflow.com/questions/2961983/convert-multi-dimensional-list-to-a-1d-list-in-python"">Convert multi-dimensional list to a 1D list in Python</a></li>
<li><a href=""https://stackoverflow.com/questions/27175400/how-to-find-the-index-of-a-value-in-2d-array-in-python"">How to find the index of a value in 2d array in Python?</a></li>
</ul>
",""
"38783813","1","","<p>am trying to get the following text</p>

<pre><code>5 ⭐'s all the way! There is no better place to be!
</code></pre>

<p>using the following</p>

<pre><code>reviews_title = browser.find_elements_by_xpath('//span[@class=""review-title""]/following-sibling::')
</code></pre>

<p>from the snippet below</p>

<pre><code>&lt;div class=""review-info""&gt;
&lt;span class=""review-title""&gt;Love!&lt;/span&gt; 
5 ⭐'s all the way! There is no better place to be!
&lt;/div&gt;
</code></pre>
","<python><selenium-webdriver>"
"38783981","1","","<p>I have a sequence of numbers of length 1000, which I chop up into 100 length sequences. So I end up with 901 sequences of length 100. Let the first 900 be <code>trainX</code>. <code>trainY</code> is the 2nd to the 901th of these sequences.</p>

<p>In keras I wish to build the following pictured model: <a href=""https://i.stack.imgur.com/voLVb.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/voLVb.jpg"" alt=""enter image description here""></a> The important features are that $X_1$ maps to $X_2$, $X_2$ maps to $X_3$ and so on. Ignore the fact that I haven't drawn 100 units of these.</p>

<p>In keras I know how to build the model where $X_1$ to $X_{100}$ maps to $X_{101}$ (many to one case). Which is done by the following:</p>

<pre><code>batch_size = 1
time_steps = 100
model = Sequential()
model.add(LSTM(32, batch_input_shape=(batch_size, time_steps, 1), stateful=True))
model.add(Dense(1))
</code></pre>

<p>However, in the many to many case, the following chucks an error:</p>

<pre><code>model = Sequential()
model.add(LSTM(32, batch_input_shape=(batch_size, time_steps, 1), stateful=True, return_sequences=True))
model.add(Dense(1))
</code></pre>

<p>I try to preserve the fact that 100 outputs are given by saying <code>return_sequences=True</code>. I get the error <code>Input 0 is incompatible with layer dense_6: expected ndim=2, found ndim=3</code>, which I guess is understandable given that <code>Dense</code> only expects a <code>batch_size x hidden_nodes</code> size matrix as input whereas, in my case it outputs, <code>batch_size x time_steps x hidden_nodes</code>. </p>

<p><strong>So my question</strong> is how do I get a LSTM that behaves as shown in the picture. It is important that in the dense layer I do not accidentally reference a hidden layer in front (or back for that matter) of the current time step.</p>
","<python><deep-learning><keras><lstm>"
"38784513","2","38783813","<p>Text is inside <code>body</code> tag, you can directly identify it using:-</p>

<pre><code>reviews_title = browser.find_elements_by_xpath('//body/text()')
</code></pre>
",""
"38784574","2","38782820","<p>You could loop through every node in your matrix and then add every neighboring node at right &amp; below to the result:</p>

<pre><code>matrix = [
    ['A', 'B', 'C', 'D'],
    ['E', 'F', 'G', 'H'],
    ['I', 'J', 'K', 'L'],
    ['M', 'N', 'O', 'P']
]

def add(adj_list, a, b):
    adj_list.setdefault(a, []).append(b)
    adj_list.setdefault(b, []).append(a)

adj_list = {}
for i in range(len(matrix)):
    for j in range(len(matrix[i])):
        if j &lt; len(matrix[i]) - 1:
            add(adj_list, matrix[i][j], matrix[i][j+1])
        if i &lt; len(matrix[i]) - 1:
            for x in range(max(0, j - 1), min(len(matrix[i+1]), j+2)):
                add(adj_list, matrix[i][j], matrix[i+1][x])

import pprint
pprint.pprint(adj_list)
</code></pre>

<p>Output:</p>

<pre><code>{'A': ['B', 'E', 'F'],
 'B': ['A', 'C', 'E', 'F', 'G'],
 'C': ['B', 'D', 'F', 'G', 'H'],
 'D': ['C', 'G', 'H'],
 'E': ['A', 'B', 'F', 'I', 'J'],
 'F': ['A', 'B', 'C', 'E', 'G', 'I', 'J', 'K'],
 'G': ['B', 'C', 'D', 'F', 'H', 'J', 'K', 'L'],
 'H': ['C', 'D', 'G', 'K', 'L'],
 'I': ['E', 'F', 'J', 'M', 'N'],
 'J': ['E', 'F', 'G', 'I', 'K', 'M', 'N', 'O'],
 'K': ['F', 'G', 'H', 'J', 'L', 'N', 'O', 'P'],
 'L': ['G', 'H', 'K', 'O', 'P'],
 'M': ['I', 'J', 'N'],
 'N': ['I', 'J', 'K', 'M', 'O'],
 'O': ['J', 'K', 'L', 'N', 'P'],
 'P': ['K', 'L', 'O']}
</code></pre>
",""
"38784600","2","38783813","<p>Assuming you have HTML like this:</p>

<pre><code>&lt;div class=""review""&gt;
    &lt;span class=""review-title""&gt;Love!&lt;/span&gt; 
    5 ⭐'s all the way! There is no better place to be!
&lt;/div&gt;
&lt;div class=""review""&gt;
    &lt;span class=""review-title""&gt;Foo!&lt;/span&gt; 
    Lorem ipsum dolor sit amet
&lt;/div&gt;
&lt;div class=""review""&gt;
    &lt;span class=""review-title""&gt;Bar!&lt;/span&gt; 
    Aenean in elit id lorem aliquam
&lt;/div&gt;
</code></pre>

<p>You can get text by removing .review-title element</p>

<pre><code>parent_elems = browser.find_elements_by_css_selector('.review') 
for elem in parent_elems:
    review_title =  elem.find_element_by_css_selector('.review-title')
    review_title_text = review_title.text # get review title text

    # remove review_title element
    browser.execute_script(""""""
    var element = arguments[0];
    element.parentNode.removeChild(element);
    """""", review_title)

    # this is the text
    text = elem.text

    print ""%s\t %s \n-------"" % (review_title_text, text)
</code></pre>
",""
"38785753","2","38782822","<p>Try</p>

<pre><code>my_df.map(lambda x: (x[0],x[1]))
</code></pre>
",""
"38786435","2","38782913","<p>For the sport of it, without importing anything:</p>



<pre><code>text = text.split(' ')
for i, s in enumerate(text): text[i] = 'August' if s.lower() == 'month' else text[i]

print((' ').join(text))
</code></pre>

<p>This will replace every occurence of <code>s</code> by <code>August</code> if <code>s.lower()</code> equals <code>month</code></p>
",""
"38787031","2","38769798","<p>I've solved this.</p>

<p>userUsageReport requires the usage scope to be added, specifically:</p>

<p><a href=""https://www.googleapis.com/auth/admin.reports.usage.readonly"" rel=""nofollow"">https://www.googleapis.com/auth/admin.reports.usage.readonly</a></p>

<p>Since the quickstart only reference the audit scope:</p>

<p><a href=""https://www.googleapis.com/auth/admin.reports.audit.readonly"" rel=""nofollow"">https://www.googleapis.com/auth/admin.reports.audit.readonly</a></p>

<p>that is why I was getting the error.</p>
",""
"38787353","2","38781579","<p>Python <code>pickle</code> cannot serialize anonymous functions. Lets illustrate that on a simplified example:</p>

<pre><code>import pickle

xs = [[1, 2, 3], [1, 2, 5], [1, 3, 5], [2, 4, 6]]
pickle.dumps([x for x in  groupby(xs, lambda x: x[0])])

## PicklingError
## ...
## PicklingError: Can't pickle ...
</code></pre>

<p>You should get rid of all references to the <code>lambdas</code> before serializing:</p>

<pre><code>pickle.dumps([(k, list(v)) for (k, v) in groupby(xs, itemgetter(0))])

## b'\x80\x ...
</code></pre>

<p>or don't use <code>lambda</code> expressions:</p>

<pre><code>from operator import itemgetter

pickle.dumps([kv for kv in groupby(xs, itemgetter(0))])

## b'\x80\x ...
</code></pre>
",""
"38788562","2","38782089","<p>Solved!
The issue was gunicorn version.
gunicorn wasn't listed using pip freeze - therefore I didn't if the versions are aligned.
Anyway - this line solves the issue:</p>

<pre><code>sudo pip install gunicorn==19.4.5
</code></pre>

<p>Note that you'll might have some problems with permissions for .theano folder.
In this case just use:</p>

<pre><code>sudo chown django:django &lt;your django folder&gt;
</code></pre>

<p>Thanks!</p>
",""
"38790362","2","38770169","<p>Based on this <a href=""https://stackoverflow.com/a/22446215/5781248"">answer</a> for question <a href=""https://stackoverflow.com/questions/15501133/python-pip-error-cannot-fetch-index-base-url-https-pypi-python-org-simple"">Python pip error: “Cannot fetch index base URL https://pypi.python.org/simple/”</a> I would try to reinstall (and upgrade) pip with easy_install</p>

<pre><code>easy_install pip==8.1.2
</code></pre>

<p>I tried to reproduce your problem, and installing scikit-learn succeeded after <code>pip install numpy</code> and <code>pip install scipy</code> in a virtual environment created by pyenv-3.4.</p>
",""
"38793704","2","38758723","<p>It's normally adviseable to completely leave the primary key alone when setting up your Django models, as these are used by Django in a number of ways to maintain relationships between objects. Django will set them up and use them automatically.</p>

<p>Instead, create a separate field in your model to keep track of unique data:</p>

<pre><code>class Reporter(models.Model):
    emp_id = models.CharField(unique=True)
</code></pre>

<p>This way you can obtain the <code>emp_id</code> with <code>reporter_object.emp_id</code> and if you need it, you can still get the pk with <code>reporter_object.id</code>.</p>

<p>You can read about how it works it in the <a href=""https://docs.djangoproject.com/en/1.9/ref/models/fields/#unique"" rel=""nofollow"">Django 1.9 Documentation</a></p>
",""
"38796411","1","","<p>I'm trying to sort an ordereddict, but without luck. I tried using the method found at <a href=""https://docs.python.org/2/library/collections.html#ordereddict-examples-and-recipes"" rel=""nofollow"">https://docs.python.org/2/library/collections.html#ordereddict-examples-and-recipes</a></p>

<pre><code>        for d in results:
            print(d)

        d = OrderedDict(results)

        for key in d:
            print(d[key])

        hi = OrderedDict(sorted(d.items(), key=lambda t: t[0]))

        for key in hi:
            print(hi[key])
</code></pre>

<p>this prints out:</p>

<pre><code>('GOOG/CPH_43740', -1.6749609142444124)
('GOOG/CPH_CARL_B', 0.66869383328307086)
('GOOG/CPH_CHR', 0.6270772411141563)
('GOOG/CPH_EGE_B', -0.89015989892984237)
('GOOG/CPH_GEN', 0.46485175444884497)

-1.67496091424
0.668693833283
0.627077241114
-0.89015989893
0.464851754449

-1.67496091424
0.668693833283
0.627077241114
-0.89015989893
0.464851754449
</code></pre>

<p>Which is not sorted, by descending order. Am i totally lost here?</p>
","<python><sorting><dictionary><ordereddictionary>"
"38796446","2","38796411","<p>Assuming you want to sort on the numbers, which have index 1 rather than 0 inside your tuples:</p>

<pre><code>    for d in results:
        print(d)

    d = OrderedDict(results)

    for key in d:
        print(d[key])

    hi = OrderedDict(sorted(d.items(), key=lambda t: t[1]))

    for key in hi:
        print(hi[key])
</code></pre>
",""
"38797266","2","38757994","<p>If the database is Postgres, you may be able to use PostgresQuery.
<a href=""http://luigi.readthedocs.io/en/stable/api/luigi.postgres.html#luigi.postgres.PostgresQuery"" rel=""nofollow"">http://luigi.readthedocs.io/en/stable/api/luigi.postgres.html#luigi.postgres.PostgresQuery</a></p>
",""
"38806645","2","38782072","<p>For sklearn estimators <code>X</code> must be a 2-dimensional array. Try the following:</p>

<pre><code>npX = np.array(X).reshape([-1, 1])
</code></pre>
",""
"38810575","1","","<p>I have a code that scrapes tables from a website, and reads it into pandas Dataframe. However, this is done through a <code>for</code> loop because of how the website has been designed. As such, the tables are all tagged with the same <code>name</code> ie: they are tagged under <code>df</code> name</p>

<p><strong>Code</strong></p>

<pre><code>soup = bs4.BeautifulSoup(driver.page_source, ""html.parser"")
    for thead in soup.select("".data-point-container table thead""):
        tbody = thead.find_next_sibling(""tbody"")

        table = ""&lt;table&gt;%s&lt;/table&gt;"" % (str(thead) + str(tbody))

        df = pandas.read_html(str(table))[0]

        print(df)
        print('-------------')
</code></pre>

<p><strong>Result</strong></p>

<pre><code>     Table1   FY2012   FY2013   FY2014   FY2015   Last 12 Months
0    item1    value1   value2   value3   value4   value5
1    item2    value1   value2   value3   value4   value5
2    item3    value1   value2   value3   value4   value5
3    item4    value1   value2   value3   value4   value5
4    item5    value1   value2   value3   value4   value5
5    item6    value1   value2   value3   value4   value5
-------------

     Table2   FY2012   FY2013   FY2014   FY2015   Last 12 Months
0    item1    value1   value2   value3   value4   value5
1    item2    value1   value2   value3   value4   value5
2    item3    value1   value2   value3   value4   value5
3    item4    value1   value2   value3   value4   value5
-------------

     Table3   FY2012   FY2013   FY2014   FY2015   Last 12 Months
0    item1    value1   value2   value3   value4   value5
1    item2    value1   value2   value3   value4   value5
2    item3    value1   value2   value3   value4   value5
3    item4    value1   value2   value3   value4   value5
4    item5    value1   value2   value3   value4   value5
5    item6    value1   value2   value3   value4   value5
-------------

     Table4   FY2012   FY2013   FY2014   FY2015   Last 12 Months
0    item1    value1   value2   value3   value4   value5
1    item2    value1   value2   value3   value4   value5
2    item3    value1   value2   value3   value4   value5
3    item4    value1   value2   value3   value4   value5
4    item5    value1   value2   value3   value4   value5
5    item6    value1   value2   value3   value4   value5
6    item7    value1   value2   value3   value4   value5
7    item8    value1   value2   value3   value4   value5
</code></pre>

<p>Is there a way for me to concat / merge all Dataframes together into just 1 Dataframe? </p>
","<python><selenium><pandas><dataframe>"
"38810610","1","","<p>I am trying to reproduce a python program, which includes the following line of code</p>

<pre><code>data = glob(os.path.join(""./data"", config.dataset, ""*.jpg""))
</code></pre>

<p>My guess is that it will capture all <code>.jpg</code> files stored in <code>/data</code> folder. But I am not sure the usage of <code>config.dataset</code> here? Should the folder structure look like <code>/data/config.dataset/*.jpg</code>  The reason I need to understand this is because I need to create a data input folder to run the program. The original program does not share the detail on the data organization.</p>
","<python>"
"38810650","2","38810610","<p><code>config.dataset</code> in your code fragment is a variable. It's either a <code>dataset</code> attribute of some <code>config</code> object, or the <code>dataset</code> global variable in an imported <code>config</code> module (from this code's perspective they work the same).</p>

<p>As a few people have commented, for that code to work, <code>config.dataset</code> must evaluate to a string, probably a single directory name. So the result of the <code>join</code> call will be something like <code>""./data/images/*.jpg""</code> (if <code>config.dataset</code> is <code>""images""</code>). The variable could also have a (pre-joined) path section including one or more slashes. For instance, if <code>config.dataset</code> was <code>""path/to/the/images""</code>, you'd end up with <code>""./data/path/to/the/images/*.jpg""</code>.</p>
",""
"38810652","1","","<p>I will be trying to add temp.converters and other mathematic use but when i test it the code couldn't recognize the numbers i input to choose the operation.
also is there a way to use lists to add multiple numbers at the same time</p>

<pre><code>#Returns the sum of num1 and num2
def add(num1, num2):
    return num1 + num2

#Returns the result of subtracting num1 - num2
def sub(num1, num2):
    return num1 - num2

#Returns the result of multiplying num1 * num2
def mul(num1, num2):
    return num1 * num2

#Returns the result of dividing num1 / num2
def div(num1, num2):
    return num1 / num2

#Returns the result of dividing num1 / num2
def exp(num1, num2):
    return num1 ** num2

from math import *


print(""1: ADDITION"")
print(""2: SUBTRACTION"")
print(""3: MULTIPLICATION"")
print(""4: DIVISION"")
print(""5: Exponent"")
print(""6: Square root"")
print(""7: "")
print(""8:"")
print(""9:"")
print(""10:"")

def main():
    operation = int(input(""operation:""))

    if(operation == '1'):
        a = var1(""input a:"")
        b = var2(""input b:"")
        print(add(var1, var2))

    elif(operation == '2'):
        a = var1(""input a:"")
        b = var2(""input b:"")
        print(sub(var1, var2))

    elif(operation == '3'):
        a = var1(""input a:"")
        b = var2(""input b:"")
        print(div(var1, var2))

    elif(operation == '4'):
        a = var1(""input a:"")
        b = var2(""input b:"")
        print(mul(var1, var2))

    elif(operation == '5'):
        a = var1(""input a:"")
        b = var2(""input b:"")
        print(exp(var1, var2))

    elif(operation == '6'):
        a = var1(""input:"")
        print(sqrt(var1,))

    elif(operation == '7'):
        a = var1(""input a:"")
        b = var2(""input b:"")
        print(add(var1, var2))

    else:
        main()

main()
</code></pre>
","<python>"
"38810695","1","","<p>Please help me. All the tutorials on the Internet on how to install Django are confusing and misleading. I understand I can download it with PIP but I have trouble with the environmental variables so I can run PIP through the Command Prompt.</p>
","<python><django>"
"38810696","1","","<p>In the minimum example code below, you can change the last range(), currently at 3, to 6 and notice that the frames with buttons all get smaller than if you run it with 3.  I have configured 6 columns of ""lower_frame"" to all be weight 1.  The expected result is that there are 6 empty columns of the same width no matter how many buttons I put in there.  If I put 3 buttons in there, as the example below has by default, the buttons are quite large and leave only room for about 1 more button.  If I put 6 buttons in, they fill the space and each gets smaller.</p>

<p>How do I achieve the expected result of having equal width columns no matter how many widgets I actually put in the cells?  The goal here is a standard size to these buttons that is based on proportion of the screen, not a pixel size, and have it always be the same no matter the number of buttons.  I realize I could do a bunch of math with bounding boxes and programatically set the sizes at runtime, but that seems like overkill and lacking elegance.</p>

<p>Minimum example:</p>

<pre><code>import Tkinter as tk
import ttk

mods = {}
modBtns = {}

root = tk.Tk()
upper_frame = ttk.Frame(master=root)
lower_frame = ttk.Frame(master=root)
right_frame = ttk.Frame(master=root)
root.columnconfigure(0, weight=3)
root.columnconfigure(1, weight=1)
root.rowconfigure(0, weight=1)
root.rowconfigure(1, weight=5)

for i in range(6):
    lower_frame.columnconfigure(i, weight=1)
for i in range(5):
    lower_frame.rowconfigure(i, weight=1)

upper_frame.grid(column=0, row=0, sticky=tk.N + tk.S + tk.E + tk.W)
lower_frame.grid(column=0, row=1, sticky=tk.N + tk.S + tk.E + tk.W)
right_frame.grid(column=1, row=0, sticky=tk.N + tk.S + tk.E + tk.W)

for i in range(3):
    mods[i] = ttk.Frame(master=lower_frame)
    mods[i].columnconfigure(0, weight=1)
    mods[i].rowconfigure(0, weight=1)
    modBtns[i] = ttk.Button(master=mods[i], text=""mod{0}"".format(i))
    modBtns[i].grid(column=0, row=0, sticky=tk.N + tk.S + tk.E + tk.W)
    mods[i].grid(column=i, row=0, sticky=tk.N + tk.S + tk.E + tk.W)

root.geometry(""700x700+0+0"")
root.mainloop()
</code></pre>
","<python><python-2.7><user-interface><tkinter><tk>"
"38810703","1","","<p>I know that there are a lot of questions dealing with tkinter but I have looked at a bunch of them and none of them seem to help me.</p>

<pre><code>import tkinter

class Calculator:

  def __init__(self):
    window = tkinter.Tk()
    window.geometry(""200x300"")
    window.title(""Calculator"")

    lbl = tkinter.Label(window, text=""placeholder"", bg=""blue"", textvariable=""labelText"")
    lbl.grid(row=0, column=0, columnspan=3)

    self.firstNumArray = []
    self.secondNumArray = []
    self.operation = """"
    self.currentNum = ""first""

    def appendNumber(self, number):
      print(""Appending Number"")
      if self.currentNum == ""first"":
        self.firstNumArray.append(number)
        print("""".join(str(x) for x in self.firstNumArray))
        lbl.config(text="""".join(str(x) for x in self.firstNumArray))
        window.update()
      else:
        self.secondNumArray.append(number)

    for i in range(1,4):
      string = ""Creating button at ({0},{1})"".format(0,i)
      print(string)
      button = tkinter.Button(text=i, command=lambda: appendNumber(self, i))
      button.grid(row=1, column=i-1)

    for i in range(1,4):
      string = ""Creating button at ({0},{1})"".format(1,i)
      print(string)
      button = tkinter.Button(text=i+3, command=lambda: appendNumber(self, i+3))
      button.grid(row=2, column=i-1)

    for i in range(1,4):
      string = ""Creating button at ({0},{1})"".format(2,i)
      print(string)
      button = tkinter.Button(text=i+6, command=lambda: appendNumber(self, i+6))
      button.grid(row=3, column=i-1)


    div = tkinter.Button(text=""/"")
    mult = tkinter.Button(text=""*"")
    add = tkinter.Button(text=""+"")
    sub = tkinter.Button(text=""-"")

    add.grid(row=1, column=3)
    sub.grid(row=2, column=3)
    mult.grid(row=3, column=3)
    div.grid(row=4, column=3)

    button = tkinter.Button(text=""0"")
    button.grid(row=4, column=1)

    window.mainloop()



calc = Calculator()
</code></pre>

<p>When I launch the program the window opens. When I click on a button the text in the label does not change. I have tried using a <code>StringVar</code> as the <code>textvariable</code> and then calling the <code>set()</code> function, but that did not work either. I think it has to do with the scope of the function. I had to place the <code>appendNumber()</code> function inside the <code>__init__()</code> because for some reason <code>self.lbl = tkinter.Label()</code> makes nothing pop up at all.</p>
","<python><tkinter>"
"38810706","1","","<p>I have a collection 'users'. When i call the resource endpoint like <code>/api/users</code>, it returns all the documents. If i enable authentication, how could i return only that user document on calling <code>api/users</code> based on his/her username?</p>

<p>Or else how could i disable this endpoint <code>/api/users</code>  and set authentication only to <code>api/users/&lt;email&gt;</code></p>
","<python><eve>"
"38810711","1","","<p>In my xml file, I have nodes like this:</p>

<pre><code>&lt;waitingJobs idList=""J03ac2db8 J03ac2fb0""/&gt;
</code></pre>

<p>I know how to use <code>.findall</code> to search for attributes but now, it looks like I would need to use regular expressions because <a href=""https://docs.python.org/3/library/xml.etree.elementtree.html#supported-xpath-syntax"" rel=""nofollow"">I can't just use</a> </p>

<pre><code>root.findall('./[@attrib='value']')
</code></pre>

<p>I'd have to use</p>

<pre><code>root.findall('./[@attrib='*value*']')
</code></pre>

<p><strong>QUESTION</strong></p>

<ol>
<li>Is this possible with <code>xml.etree</code>?</li>
<li>How do you do this with <code>lxml</code>?</li>
</ol>
","<python><xml><xpath>"
"38810731","2","38810711","<p>Unfortunately, things like <code>contains()</code> and <code>starts-with()</code> are not supported by <code>xml.etree.ElementTree</code> built-in library. You can manually check the attribute, finding all <code>waitingJobs</code> and using <a href=""https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.attrib"" rel=""nofollow""><code>.attrib</code></a> to get to the <code>idList</code> value:</p>

<pre><code>import xml.etree.ElementTree as ET

data = """"""&lt;jobs&gt;
    &lt;waitingJobs idList=""J03ac2db8 J03ac2fb0""/&gt;
&lt;/jobs&gt;
""""""

root = ET.fromstring(data)
value = 'J03ac2db8'
print([elm for elm in root.findall("".//waitingJobs[@idList]"") 
       if value in elm.attrib[""idList""]])
</code></pre>

<p>With <code>lxml.etree</code>, you can use <code>xpath()</code> method and <code>contains()</code> function:</p>

<pre><code>import lxml.etree as ET

data = """"""&lt;jobs&gt;
    &lt;waitingJobs idList=""J03ac2db8 J03ac2fb0""/&gt;
&lt;/jobs&gt;
""""""

root = ET.fromstring(data)

value = 'J03ac2db8'
print(root.xpath("".//waitingJobs[contains(@idList, '%s')]"" % value))
</code></pre>
",""
"38810748","2","38810695","<p>Just use pip to do it.</p>

<pre><code>pip install django
</code></pre>

<p>If you don't have python installed I'd recommend doing that first. </p>
",""
"38810765","2","38810652","<p>You can take advantage of the <code>operator</code> module in Python and use a dictionary dispatch method, eg:</p>

<pre><code>import operator
from math import sqrt

operations = {
    '1': operator.add,
    '2': operator.sub,
    '3': operator.mul,
    '4': operator.truediv,
    '6': sqrt,
    '99': lambda c: c * 1.8 + 32 # convert C -&gt; F
}

for operation in iter(lambda: input('Operation: '), 'quit'):
    if operation not in operations:
        print('Sorry - not sure what {} is'.format(operation))
        continue
    args = map(int, input('Enter values: ').split())
    print('Result is', operations[operation](*args))
</code></pre>
",""
"38810996","2","38782478","<p>First Let's see how Python search for packages and modules. <a href=""https://docs.python.org/3/library/sys.html#sys.path"" rel=""nofollow""><code>sys.path</code></a> </p>

<blockquote>
  <p>A list of strings that specifies the search path for modules. Initialized from the environment variable <code>PYTHONPATH</code>, plus an installation-dependent default.</p>
</blockquote>

<p>That's the search paths. Therefore, if your module/package is located in one of <code>sys.path</code>, python interpreter is able to find and import it. The doc says more:</p>

<blockquote>
  <p>As initialized upon program startup, the first item of this list, <code>path[0]</code>, is the directory containing the script that was used to invoke the Python interpreter. If the script directory is not available (e.g. if the interpreter is invoked interactively or if the script is read from standard input), <code>path[0]</code> is the empty string, which directs Python to search modules in the current directory first.</p>
</blockquote>

<p>I modified <code>test.py</code> as an example.</p>

<pre><code>import sys; import pprint
pprint.pprint(sys.path)

from package import package
print package 
</code></pre>

<p>There are two cases:</p>

<pre><code>$ python package/test.py
['/Users/laike9m/Dev/Python/TestPython/package',
 '/usr/local/lib/python2.7/site-packages/doc2dash-2.1.0.dev0-py2.7.egg',
 '/usr/local/lib/python2.7/site-packages/zope.interface-4.1.3-py2.7-macosx-10.10-x86_64.egg',
 '/usr/local/lib/python2.7/site-packages/six-1.10.0-py2.7.egg',
 '/usr/local/lib/python2.7/site-packages/colorama-0.3.3-py2.7.egg',
</code></pre>

<p>As you see, <code>path[0]</code> is <code>/Users/laike9m/Dev/Python/TestPython/package</code>, which is the directory containing the script <code>test.py</code> that was used to invoke the Python interpreter.</p>

<pre><code>$ python                                         
Python 2.7.12 (default, Jun 29 2016, 14:05:02)
[GCC 4.2.1 Compatible Apple LLVM 7.3.0 (clang-703.0.31)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.
&gt;&gt;&gt; import package
['',
 '/usr/local/lib/python2.7/site-packages/doc2dash-2.1.0.dev0-py2.7.egg',
 '/usr/local/lib/python2.7/site-packages/zope.interface-4.1.3-py2.7-macosx-10.10-x86_64.egg',
 '/usr/local/lib/python2.7/site-packages/six-1.10.0-py2.7.egg',
 '/usr/local/lib/python2.7/site-packages/colorama-0.3.3-py2.7.egg',
...
</code></pre>

<p>Now comes the second case, when invoked interactively, ""<code>path[0]</code> is the empty string, which directs Python to search modules in the current directory first."" What's the current directory? <code>/Users/laike9m/Dev/Python/TestPython/</code>.(look this is the path on my machine, it's equivalent to the path to <code>PythonTest</code> in your case)</p>

<p>Now you know the answers:</p>

<ol>
<li><p><strong>Why did <code>python package/test.py</code> give <code>ImportError: No module named package</code>?</strong>  </p>

<p>Because the interpreter does not ""see"" the package. For the interpreter to be aware of package <code>package</code>, <code>PythonTest</code> has to be in <code>sys.path</code>, but it's not.
<br><br></p></li>
<li><p><strong>Why did this work in interactive mode?</strong></p>

<p>Because now <code>PythonTest</code> is in <code>sys.path</code>, so the interpreter is able to locate package <code>package</code>.</p></li>
</ol>
",""
"38811082","2","38810575","<p>If all you need to do is merge a number of DataFrames, you can simply collect them in a list and then merge them using <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.concat.html"" rel=""nofollow"" title=""pd.concat docs"">pd.concat</a>.</p>

<p>Something like this should work:</p>

<pre><code>dataframes = []

for thread in soup.select(...):

    #your scraper logic here

    df = pandas.read_html(...)
    dataframes.append(df)

pd.concat(dataframes)
</code></pre>

<p>Does that help?</p>
",""
"38813844","2","38810696","<p>If you want all of the rows and all of the columns to have the same width/height, you can set the <code>uniform</code> attribute of each row and column. All columns with the same <code>uniform</code> value will be the same width, and all rows with the same <code>uniform</code> value will be the same height.</p>

<p>Note: the actual value to the <code>uniform</code> attribute is irrelevant, as long as it is consistent.</p>

<pre><code>for i in range(6):
    lower_frame.columnconfigure(i, weight=1, uniform='whatever')
for i in range(5):
    lower_frame.rowconfigure(i, weight=1, uniform='whatever')
</code></pre>
",""
"38814971","2","38810703","<p>There are a few problems with your code.</p>

<ol>
<li><p><code>labelText</code> should, of course, be a <code>StringVar</code> and not a string...</p>

<pre><code>labelText = tkinter.StringVar()
lbl = tkinter.Label(window, bg=""blue"", textvariable=labelText)
lbl.grid(row=0, column=0, columnspan=3)
</code></pre></li>
<li><p>Now you can use <code>labelText.set</code> to update the text. Also, no need for <code>self</code> parameter or <code>window.update</code></p>

<pre><code>def appendNumber(number):
    if self.currentNum == ""first"":
        self.firstNumArray.append(number)
        labelText.set("""".join(str(x) for x in self.firstNumArray))
    else:
        self.secondNumArray.append(number)
</code></pre></li>
<li><p>You can put all the buttons in one loop using <code>//</code> (<em>integer (!)</em> division) and <code>%</code> (modulo) operations. Also, be aware that the variable in the <code>lambda</code> is evaluated when the function is called, not when it is declared, i.e. all the <code>lambdas</code> will use the last value of <code>i</code> (<code>9</code> in this case) -- see e.g. <a href=""https://stackoverflow.com/q/19837486/1639625"">here</a>. As a remedy, use <code>lambda n=i+1: appendNumber(n)</code>.</p>

<pre><code>for i in range(9):
    btn = tkinter.Button(text=i+1, command=lambda n=i+1: appendNumber(n))
    btn.grid(row=i//3+1, column=i%3)
</code></pre></li>
<li><p>Not really a problem, but since you don't need a reference to those buttons, you can make your code a bit more compact (same for the others):</p>

<pre><code>tkinter.Button(text=""/"").grid(row=1, column=3)
</code></pre></li>
</ol>
",""
"38822675","2","38782191","<p>I tried multithreading, and it was just as slow, then I multithreaded with just the <code>.read()</code> in the thread, no processing, no thread locking, and it worked quite fast - maybe 1 second or so of delay, not 3 or 5. See <a href=""http://www.pyimagesearch.com/2015/12/21/increasing-webcam-fps-with-python-and-opencv/"" rel=""nofollow"">http://www.pyimagesearch.com/2015/12/21/increasing-webcam-fps-with-python-and-opencv/</a></p>

<pre><code>from __future__ import division
import sys
from time import time, sleep
import threading

import dlib
from skimage import io


detector = dlib.get_frontal_face_detector()
win = dlib.image_window()

class webCamGrabber( threading.Thread ):
    def __init__( self ):
        threading.Thread.__init__( self )
        #Lock for when you can read/write self.image:
        #self.imageLock = threading.Lock()
        self.image = False

        from cv2 import VideoCapture, cv
        from time import time

        self.cam = VideoCapture(0)  #set the port of the camera as before
        #self.cam.set(cv.CV_CAP_PROP_FPS, 1)


    def run( self ):
        while True:
            start = time()
            #self.imageLock.acquire()
            retval, self.image = self.cam.read() #return a True bolean and and the image if all go right

            print( type( self.image) )
            #import matplotlib.pyplot as plt
            #plt.imshow(image)
            #plt.show()

            #print( ""readimage: "" + str( time() - start ) )
            #sleep(0.1)

if len( sys.argv[1:] ) == 0:

    #Start webcam reader thread:
    camThread = webCamGrabber()
    camThread.start()

    #Setup window for results
    detector = dlib.get_frontal_face_detector()
    win = dlib.image_window()

    while True:
        #camThread.imageLock.acquire()
        if camThread.image is not False:
            print( ""enter"")
            start = time()

            myimage = camThread.image
            for row in myimage:
                for px in row:
                    #rgb expected... but the array is bgr?
                    r = px[2]
                    px[2] = px[0]
                    px[0] = r


            dets = detector( myimage, 0)
            #camThread.imageLock.release()
            print ""your faces: %f"" % len(dets)
            for i, d in enumerate( dets ):
                print(""Detection {}: Left: {} Top: {} Right: {} Bottom: {}"".format(
                    i, d.left(), d.top(), d.right(), d.bottom()))
                print(""from left: {}"".format( ( (d.left() + d.right()) / 2 ) / len(camThread.image[0]) ))
                print(""from top: {}"".format( ( (d.top() + d.bottom()) / 2 ) /len(camThread.image)) )
            print( ""process: "" + str( time() - start ) )

            start = time()
            win.clear_overlay()
            win.set_image(myimage)
            win.add_overlay(dets)

            print( ""show: "" + str( time() - start ) )
            #dlib.hit_enter_to_continue()



for f in sys.argv[1:]:
    print(""Processing file: {}"".format(f))
    img = io.imread(f)
    # The 1 in the second argument indicates that we should upsample the image
    # 1 time.  This will make everything bigger and allow us to detect more
    # faces.
    dets = detector(img, 1)
    print(""Number of faces detected: {}"".format(len(dets)))
    for i, d in enumerate(dets):
        print(""Detection {}: Left: {} Top: {} Right: {} Bottom: {}"".format(
            i, d.left(), d.top(), d.right(), d.bottom()))

    win.clear_overlay()
    win.set_image(img)
    win.add_overlay(dets)
    dlib.hit_enter_to_continue()


# Finally, if you really want to you can ask the detector to tell you the score
# for each detection.  The score is bigger for more confident detections.
# Also, the idx tells you which of the face sub-detectors matched.  This can be
# used to broadly identify faces in different orientations.
if (len(sys.argv[1:]) &gt; 0):
    img = io.imread(sys.argv[1])
    dets, scores, idx = detector.run(img, 1)
    for i, d in enumerate(dets):
        print(""Detection {}, score: {}, face_type:{}"".format(
            d, scores[i], idx[i]))
</code></pre>
",""
"38823031","2","38783619","<p>I changed another computer and download successfully. Maybe it's just a connecting issue.</p>

<p>Pyspider installation step:</p>

<p>1.python get-pip.py</p>

<p>2.download lxml-3.6.1-cp35-cp35m-win_amd64.whl from <a href=""http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml"" rel=""nofollow"">http://www.lfd.uci.edu/~gohlke/pythonlibs/#lxml</a> and saved to python installation path</p>

<p>3.pip install (Path???)lxml-3.6.1-cp35-cp35m-win_amd64.whl</p>

<p>4.pip install pyspider</p>

<p>5.download phantom js and copy the bin folder to environment viable</p>

<p>6.pyspider all</p>

<p>7.<a href=""http://localhost:5000"" rel=""nofollow"">http://localhost:5000</a></p>

<p>In memory of my first Stackoverflow post. And I don't want to delete this post. LOL</p>
",""
"38825631","2","31062555","<p>try <a href=""http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.join"" rel=""nofollow"">from_joinpoint</a>:</p>

<pre><code>q = session.query(Node).\
    join(""children"", aliased=True).\
    filter(Node.name='child 1').\
    join(""children"", aliased=True, from_joinpoint=True).\
    filter(Node.name == 'grandchild 1')
</code></pre>

<p>or reset_joinpoint: </p>

<p><a href=""http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.reset_joinpoint"" rel=""nofollow"">http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.reset_joinpoint</a></p>
",""
"38828047","2","38783981","<p>You don't need multiple outputs. Train your model to predict the next number in the sequence. Then, use the predicted number and feed it to the trained model and predict the next one and repeat this task. In other words:</p>

<p>Prepare data for training:</p>

<pre><code>X_train = np.zeros((901, 100))
y_train = np.zeros((901, 1))
for i in range(901)
  x_train[i,:] = x[i:i+100]
  y_train[i,0] = x[i+101]
</code></pre>

<p>Train your model:</p>

<pre><code>for iteration in range(10000):
  model.fit(x_train, y_train, batch_size = 40, nb_epoch = 2)  
</code></pre>

<p>Now, if you want to predict the next 10 numbers starting with: <em>x[t: t+101]</em></p>

<p>all you need to do is:</p>

<pre><code>    x_input = np.zeros((1, 100))
    x_input[0, :] =  x[t+i: t+i+101]
    for i in range(10)
      y_output = model.predict(x_input)
      print(y_output)
      x_input[0, 0:100] =  x[t+i+1: t+i+100]
      x_input[100] = y_output
</code></pre>

<p>I used batch_size = 40 in this example. But, you can use anything (but I don't recommend 1! ;))</p>
",""
"38828177","2","38758342","<p>There is no any functionality available yet in wit.ai</p>

<p>But you can get the required functionality by using the confidence value returned by the wit api. You can set a threshold value of the confidence and if the value falls below your threshold return a custom message. you can handle this functionality in your action function implementation.</p>

<p>For further reference look at this <a href=""https://stackoverflow.com/questions/38334663/make-chatbot-wit-ai-reply-that-it-doesnt-have-a-proper-answer"">post</a>.</p>
",""
"38829950","2","38810706","<p>If you are using User-Restricted Resource Access, you can have a <a href=""http://python-eve.org/features.html#dynamic-lookup-filters"" rel=""nofollow"">Dynamic Lookup filter</a> using event hooks to filter the <code>users</code> results by the <code>auth_field</code>. Something like this:</p>

<pre><code>from flask import current_app

def pre_GET_users(request, lookup):
    username = current_app.auth.get_request_auth_value()
    # only return user with current username
    lookup[""username""] = username

app = Eve()

app.on_pre_GET_accounts += pre_GET_users
app.run()
</code></pre>
",""
"38834478","2","38782346","<p>You are missing a few things in your <code>ListBoxComboPopup</code> class needed to make it work well with the <code>ComboCtrl</code>. At a minimum you are missing some event binding and handler to catch selection events from the <code>ListBox</code>, and an implementation of the <code>GetStringValue</code> method which the combo will call to get the value to be displayed.  Please see the <code>ComboCtrl</code> sample in the wxPython demo for more details and example code.</p>
",""
"38838030","2","38770604","<p>I have used your same development workflow and recognize the value of being able to step through code using the jupyter notebook. I've developed several packages by first hashing out the details and then eventually moving the polished product in to separate .py files. I do not think there is a simple solution to the inconvenience you encounter (I have run into the same issues), but I will describe my practice (I'm not so bold as to proclaim it the ""best"" practice) and maybe it will be helpful in your use case.</p>

<p>In my experience, once I have created a module/package from my jupyter notebook, it is easier to maintain/develop the code outside of the notebook and import that module into the notebook for testing. </p>

<p>Keeping each method small is good practice in general, and is very helpful for testing the logic at each step using the notebook. You can break larger ""public"" methods into smaller ""private"" methods named using a leading underscore (e.g. '_load_file'. You can call the ""private"" methods in your notebook for testing/debugging, but users of your module should know to ignore these methods.</p>

<p>You can use the <code>reload</code> function in the <code>importlib</code> module to quickly refresh your imported modules with changes made to the source. </p>

<pre><code>import mymodule
from importlib import reload
reload(mymodule)
</code></pre>

<p>Calling <code>import</code> again will not actually update your namespace. You need the <code>reload</code> function (or similar) to force python to recompile/execute the module code. </p>

<p>Inevitably, you will still need to step through individual functions line by line, but if you've decomposed your code into small methods, the amount of code you need to ""re-write"" in the notebook is very small. </p>
",""
"38841742","1","","<pre><code>from pandas import DataFrame,Series
import numpy

def avg_bronze_medal():
    countries=['Russian Fed','Norway','Canada']
    gold=[13,11,10]
    silver=[11,5,10]
    bronze=[9,10,5]
    medal_counts={'country_name':Series(countries),'gold':Series(gold),'silver':Series(silver),'bronze':Series(bronze)}
    df=DataFrame(medal_counts)
    print df
    print df['gold'].apply(numpy.mean, axis=1)
</code></pre>

<p>Last line is giving error as ""IndexError: tuple index out of range"". I need to use apply function in data frame and it should get average of columns gold,bronze and silver. In above example, I used only gold column. Please help me in fixing the error.</p>
","<python><pandas><numpy><data-science>"
"38841824","2","38841742","<p>To get the mean of all three columns at the same time:</p>

<pre><code>df[['gold', 'bronze', 'silver']].mean(axis=1)
</code></pre>

<p>But it confuses me as to why you would need the average medals awarded in the tournament... But I guess you need it for some reason!</p>

<hr>

<p>Some additional notes the OP should be aware of:</p>

<p><a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html"" rel=""nofollow""><code>.apply</code></a> is a method that works on rows or columns (default). If you call <code>df.apply(func)</code> the function, <code>func</code> will be applied to all columns, one column at a time. <code>df.apply(func, axis=1)</code> will apply <code>func</code> to all rows, one at a time. In case of <code>pd.Series</code> since there is only one column, <code>.apply</code> always works on rows. <code>.apply</code> is useful if you have a <a href=""http://pandas.pydata.org/pandas-docs/stable/groupby.html#flexible-apply"" rel=""nofollow"">complex custom function</a> that you need to apply to either rows or columns. Some statistical measures, such as sum, mean, standard deviation, are <a href=""http://pandas.pydata.org/pandas-docs/stable/groupby.html#cython-optimized-aggregation-functions"" rel=""nofollow"">common</a> and have vectorized functions of their own. Therefore one can directly call them, like in the answer above.</p>

<p>Please read the docs linked in the above paragraph for further information.</p>
",""
"38975509","2","31063213","<p>One option is to filter the csv files prior to loading using tools like awk. </p>

<p>Useful awk example for filtering based on numerical range is <a href=""https://stackoverflow.com/questions/8734351/using-awk-to-filter-out-column-with-numerical-ranges"">here</a>.</p>

<p>Useful awk range for string value filtering is <a href=""https://unix.stackexchange.com/questions/97070/filter-a-csv-file-based-on-the-5th-column-values-of-a-file-and-print-those-reco"">here</a>.</p>
",""
"38984374","2","38781744","<p>The error I believe is due to the dependencies not being installed. Here is the link to install it for windows <a href=""https://kivy.org/docs/installation/installation-windows.html"" rel=""nofollow"">https://kivy.org/docs/installation/installation-windows.html</a> and you only need to install the top one.</p>
",""
"39230784","2","38782787","<p>Which format in your <code>.crt</code> file.
Are there:</p>

<ol>
<li>text starting with <code>-----BEGIN CERTIFICATE-----</code></li>
<li>base64 text started with <code>MI</code> chars</li>
<li>binary data starting with <code>\x30</code> byte?</li>
</ol>

<p>In first two case there are PEM format, but in second one you are missing staring line, just add it to get correct PEM file or convert file to binary with <code>base64</code> and get third case.</p>

<p>In third case you have DER format, so to load it you should use <code>OpenSSL.crypto.FILETYPE_ASN1</code></p>
",""
"39268101","2","38758029","<p>While I have no experience working with python in conjunction with pandorabots, but I did work with php, and this is what I came up with conceptually. The objective was similar, but in my case I needed to add information for the pandorabot response from an external api, and the following is what I did :</p>

<p>I used symbols/delimiters to<br>
1. Flag the response that needs to be modified.<br>
2. Used delimiters to fragment the response into parts that need to be modified, and parts that dont.<br>
3. The modifiable parts were in my case php function calls, where functions were already predefined.<br>
4. I then combined the response from the api with the non modified bot response and rendered it to the client. </p>

<p>The end output was that I was basically able to translate an aiml response to a php call.  </p>

<hr>

<p>Example:<br>
In my case I used '#"" at the beginning of the response to mark the response as modifiable. I used '%' to mark the beginning and end of the segment I wanted to modify, and used ',' to separate the function call, and parameters.</p>

<p>So the stored aiml response looked like :</p>

<pre><code>&lt;template&gt;#Response to be modified %method call,param1% continued response.&lt;/template&gt;
</code></pre>

<p>Algo :  </p>

<pre><code> So for every response,check if it contains a # at the beginning,  
  If it does, remove the #   (for php I used substr ($response,1) )
   Extract the function call (for php I used explode($str, '%') ) 
    Process function call.
</code></pre>

<p>I believe you can use a similar logic to extract a query and send it to nltk.  Hope this helps. </p>
",""
"39281170","2","38781746","<p>You can use <a href=""https://www.tensorflow.org/versions/r0.7/api_docs/python/script_ops.html#py_func"" rel=""nofollow"">tf.py_func</a> wrapper for python functions.</p>
",""
"39336630","2","35538","<p>In my case the python W3C/HTML validation packages did not work <code>pip search w3c</code> (as of sept 2016).</p>

<p>I solved this with</p>

<pre><code>$ pip install requests

$ python
Python 2.7.12 (default, Jun 29 2016, 12:46:54)
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.

&gt;&gt;&gt; r = requests.post('https://validator.w3.org/nu/', 
...                    data=file('index.html', 'rb').read(), 
...                    params={'out': 'json'}, 
...                    headers={'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.101 Safari/537.36', 
...                    'Content-Type': 'text/html; charset=UTF-8'})

&gt;&gt;&gt; r.text
&gt;&gt;&gt; u'{""messages"":[{""type"":""info"", ...

&gt;&gt;&gt; r.json()
&gt;&gt;&gt; {u'messages': [{u'lastColumn': 59, ...
</code></pre>

<p>More documentation here <a href=""http://docs.python-requests.org/en/master/user/quickstart/#binary-response-content"" rel=""nofollow"">python requests</a>, <a href=""https://github.com/validator/validator/wiki/Service:-Input:-POST-body"" rel=""nofollow"">W3C Validator API</a></p>
",""
"39381275","2","38238","<p>A class defines a set of instances, of course.  And the methods of a class work on the individual instances.  The class methods (and variables) a place to hang other information that is related to the set of instances over all.</p>

<p>For example if your class defines a the set of students you might want class variables or methods which define things like the set of grade the students can be members of.</p>

<p>You can also use class methods to define tools for working on the entire set.  For example Student.all_of_em() might return all the known students.  Obviously if your set of instances have more structure than just a set you can provide class methods to know about that structure.  Students.all_of_em(grade='juniors')</p>

<p>Techniques like this tend to lead to storing members of the set of instances into data structures that are rooted in class variables.  You need to take care to avoid frustrating the garbage collection then.</p>
",""
"39432272","2","31074784","<p>Have you try to use sudo and place the arch command inside task.arguments</p>

<p>Like this : </p>

<p>task.launchPath = ""/usr/bin/sudo""
    task.arguments = [""arch"", ""-x86_64"", ""/usr/bin/python"", ""/Users/tomas/Developement/N_news_reader/NReader1/ahoj.py""]</p>

<p>It works for me as long as I change the visudo settings to avoid the ""enter your password"" step.</p>
",""
"39471640","1","","<p>Using the Python SoftLayer library, I've been attempting to submit an OS reload via the SoftLayer API to get consistent disk setup for provisioned servers. These servers have either RAID10 or RAID1 setup, using all available disks in the array. Upon initial provisioning, the servers are setup properly. </p>

<p>When I submit the OS reload using the Python library using a method like the following: </p>

<pre><code>def reload_server(server_id):
    conf = {
        ""upgradeHardDriveFirmware"": ""1"",
        ""upgradeBios"": ""1"",
        ""hardDrives"": [
            {
                ""complexType"": ""SoftLayer_Hardware_Component_HardDrive"",
                ""partitions"": [
                    { ""name"": ""/boot"", ""minimumSize"": ""1""},
                    { ""name"": ""/swap0"", ""minimumSize"": ""20""},
                    { ""name"": ""/"", ""minimumSize"": ""15""},
                    { ""name"": ""/disk"", ""minimumSize"": ""1"", ""grow"": ""1""}
                ]
            }
        ]
     }

     return client['Hardware_Server'].reloadOperatingSystem('FORCE', conf, id=server_id)
</code></pre>

<p>The reload is initiated, but the partitions setup only use the first disk rather than a RAID block device. Consequently, they do not have the RAID setup. In other words, for a 6 disk server intending to have RAID10, which should have a single block device visible in the OS (<code>/dev/sda</code>), <code>/dev/sda</code> is setup to with those partitions and the other disks - <code>/dev/sdb</code>, <code>/dev/sdc</code>, <code>/dev/sdc</code> et al - are block devices: </p>

<pre><code>root@server ~ $blkid
/dev/sda1: UUID=""6c80b9ef-0228-4f6d-8ff9-7ed851f383f9"" TYPE=""ext2""
/dev/sda5: UUID=""58e05f19-aa62-42cd-858b-568f415a0201"" TYPE=""swap""
/dev/sda6: UUID=""8d7c0396-a3d3-4e72-847e-f8b3bbbda120"" TYPE=""ext4""
/dev/sda7: UUID=""TmNPZO-V1Dq-xSRU-hHM2-02A8-9mJi-mRPLjo"" TYPE=""ext4""
/dev/sdb1: LABEL=""/disk1"" UUID=""a19883ec-1fd0-472d-a2ef-188f943a0ab3"" TYPE=""ext4""
/dev/sdc1: LABEL=""/disk2"" UUID=""c6bd0fc6-3d5c-4c29-9b33-a61b15793d5d"" TYPE=""ext4""
/dev/sdd1: LABEL=""/disk3"" UUID=""5bda0575-1bfa-473b-83bc-519f705f2213"" TYPE=""ext4""
/dev/sde1: LABEL=""/disk4"" UUID=""43fe460d-8ad4-41f9-b840-11f3d36d8788"" TYPE=""ext4""
/dev/sdf1: LABEL=""/disk5"" UUID=""9b34ca0f-bc54-41fe-934a-daabdaa8521b"" TYPE=""ext4""
</code></pre>

<p>How do I submit an OS reload to ensure that the RAID is setup appropriately and is not lost upon reload? And how do I do this consistently, because we've submitted OS reloads via cURL using a similar payload and the reload resulted in a correct RAID setup.</p>

<p><strong>Edit:</strong> To clarify, I'm not trying to change the RAID configuration. I want to keep the existing RAID configuration. I am only attempting to change the partitions. Namely, resize swap, decrease root partition, and specify the grow partition for our automated tools. When I submit the OS reload and change the partition structure, the RAID arrays are gone. </p>
","<python><softlayer>"
"39471676","1","","<p>I have two lists of equal length, one is a data series the other is simply a time series. They represent simulated values measured over time.</p>

<p>I want to create a function that removes a set percentage or fraction from both lists but at random. I.e. if my fraction is 0.2, I want to randomly remove 20% of the items from both lists, but they have to be the same items (same index in each list) removed.</p>

<p>For example, let n = 0.2 (20% to be deleted)</p>

<pre><code>a = [0,1,2,3,4,5,6,7,8,9]
b = [0,1,4,9,16,25,36,49,64,81]
</code></pre>

<p>After the randomly removed 20%, they become</p>

<pre><code>a_new = [0,1,3,4,5,6,8,9]
b_new = [0,1,9,16,25,36,64,81]
</code></pre>

<p>The relationship isn't as straightforward as the example, so I can't just perform this action on one list and then work out the second; they already exist as two lists. And they have to remain in the original order.</p>

<p>Thanks!</p>
","<python><list>"
"39471736","2","39471676","<pre><code>import random

a = [0,1,2,3,4,5,6,7,8,9]
b = [0,1,4,9,16,25,36,49,64,81]

frac = 0.2  # how much of a/b do you want to exclude

# generate a list of indices to exclude. Turn in into a set for O(1) lookup time
inds = set(random.sample(list(range(len(a))), int(frac*len(a))))

# use `enumerate` to get list indices as well as elements. 
# Filter by index, but take only the elements
new_a = [n for i,n in enumerate(a) if i not in inds]
new_b = [n for i,n in enumerate(b) if i not in inds]
</code></pre>
",""
"39471869","2","39471676","<p>If <code>a</code> and <code>b</code> are not very large, you could get away with using <code>zip</code>:</p>

<pre><code>import random

a = [0,1,2,3,4,5,6,7,8,9]
b = [0,1,4,9,16,25,36,49,64,81]

frac = 0.2  # how much of a/b do you want to exclude
ab = list(zip(a,b))  # a list of tuples where the first element is from `a` and the second is from `b`

new_ab = random.sample(ab, int(len(a)*(1-frac)))  # sample those tuples
new_a, new_b = zip(*new_ab)  # unzip the tuples to get `a` and `b` back
</code></pre>

<p>Note that this won't preserve the original order of <code>a</code> and <code>b</code></p>
",""
"39471907","2","39471676","<p>You can also operate the <em>zipped</em> a and b sequence, get the random sample of the indexes (to maintain the original order of items) and <em>unzip</em> into <code>a_new</code> and <code>b_new</code> again:</p>

<pre><code>import random


a = [0,1,2,3,4,5,6,7,8,9]
b = [0,1,4,9,16,25,36,49,64,81]

frac = 0.2

c = zip(a, b)  # c = list(zip(a, b)) on Python 3
indices = random.sample(range(len(c)), frac * len(c))
a_new, b_new = zip(*sorted(c[i] for i in sorted(indices)))

print(a_new)
print(b_new)
</code></pre>

<p>It can print:</p>

<pre><code>(0, 2, 3, 5, 6, 7, 8, 9)
(0, 4, 9, 25, 36, 49, 64, 81)
</code></pre>
",""
"39471911","2","39471676","<pre><code>import random

a = [0,1,2,3,4,5,6,7,8,9]
b = [0,1,4,9,16,25,36,49,64,81]

frac = 0.2  # how much of a/b do you want to exclude

new_a, new_b = [], []

for i in range(len(a)):
    if random.random()&gt;frac:  # with probability, add an element from `a` and `b` to the output
        new_a.append(a[i])
        new_b.append(b[i])
</code></pre>
",""
"39471950","2","39471676","<pre><code>l = len(a)
n_drop = int(l * n)
n_keep = l - n_drop
ind = [1] * n_keep + [0] * n_drop
random.shuffle(ind)
new_a = [ e for e, i in zip(a, ind) if i ]
new_b = [ e for e, i in zip(b, ind) if i ]
</code></pre>
",""
"39471997","2","39471676","<pre><code>from random import randint as r

a = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
b = [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]

percentage = 0.3

g = (r(0, len(a)-1) for _ in xrange(int(len(a) * (1-percentage))))

c, d = [], []
for i in g:
    c.append(a[i])
    d.append(b[i])

a, b = c, d

print a
print b
</code></pre>
",""
"39472073","2","39471640","<p>That is the expected behavior for reload, the partitions are applied only to the first disk and it is not possible to specify RAID configuration via API for reload.</p>

<p>You have two options to mantain your RAID configuration:</p>

<p>1.- Do not specify any partition configuration for the reload, so the OS of your server will be reload, but it will mantain the same RAID configuration.</p>

<p>2.- You can spececify a script which will be executed after the reload (customProvisioningScripUri that is name of the property you need to add see more <a href=""http://sldn.softlayer.com/reference/datatypes/SoftLayer_Container_Hardware_Server_Configuration"" rel=""nofollow"">here</a>), in that script you can automate the creation of RAID you want.</p>

<p>Regards</p>
",""
"39581708","2","23317927","<p>Here is an attempt,</p>

<pre><code>def factors(n):    
        return sorted(reduce(list.__add__, 
                    ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))[:-1]

def ami_check(m,n):
    return sum(factors(m)) == n and n != m
</code></pre>

<p><strong>Result</strong></p>

<pre><code>In [1]: ami_check(220,284)
Out[1]: True
In [2]: ami_check(5545,21654)
Out[2]: False
In [3]: ami_check(2620,2924)
Out[3]: True
</code></pre>
",""
"39740835","2","61151","<p>Every once in a while I find myself checking out the topic of test placement, and every time the majority recommends a separate folder structure beside the library code, but I find that every time the arguments are the same and are not that convincing. I end up putting my test modules somewhere beside the core modules. </p>

<p>The main reason for doing this is: <strong>refactoring</strong>.</p>

<p>When I move things around I do want test modules to move with the code; it's easy to lose tests if they are in a separate tree. Let's be honest, sooner or later you end up with a totally different folder structure, like <a href=""https://github.com/django/django"" rel=""nofollow noreferrer"">django</a>, <a href=""https://github.com/pallets/flask"" rel=""nofollow noreferrer"">flask</a> and many others. Which is fine if you don't care.</p>

<p>The main question you should ask yourself is this:  </p>

<p>Am I writing:  </p>

<ul>
<li>a) reusable library or  </li>
<li>b) building a project than bundles together some semi-separated modules?</li>
</ul>

<p>If a: </p>

<p>A separate folder and the extra effort to maintain its structure may be better suited. No one will complain about your tests getting <em>deployed to production</em>. </p>

<p>But it's also just as easy to exclude tests from being distributed when they are mixed with the core folders; <a href=""http://setuptools.readthedocs.io/en/latest/setuptools.html?highlight=find_packages#using-find-packages"" rel=""nofollow noreferrer"">put this in the setup.py</a>:</p>

<pre><code>find_packages(""src"", exclude=[""*.tests"", ""*.tests.*"", ""tests.*"", ""tests""]) 
</code></pre>

<p>If b: </p>

<p>You may wish — as every one of us do — that you are writing reusable libraries, but most of the time their life is tied to the life of the project. Ability to easily maintain your project should be a priority. </p>

<p>Then if you did a good job and your module is a good fit for another project, it will probably get copied — not forked or made into a separate library — into this new project, and moving tests that lay beside it in the same folder structure is easy in comparison to fishing up tests in a mess that a separate test folder had become. (You may argue that it shouldn't be a mess in the first place but let's be realistic here).</p>

<p>So the choice is still yours, but I would argue that with mixed up tests you achieve all the same things as with a separate folder, but with less effort on keeping things tidy.    </p>
",""
"40054478","2","59825","<h2>tl;dr</h2>

<p><code>for first_item in muh_set: break</code> remains the optimal approach in Python 3.x. <sup><em>Curse you, Guido.</em></sup></p>

<h2>y u do this</h2>

<p>Welcome to yet another set of Python 3.x timings, extrapolated from <a href=""https://stackoverflow.com/users/101430/wr"">wr.</a>'s excellent <a href=""https://stackoverflow.com/a/1612654/2809027"">Python 2.x-specific response</a>. Unlike <a href=""https://stackoverflow.com/users/2750492/achampion"">AChampion</a>'s equally helpful <a href=""https://stackoverflow.com/a/34973737/2809027"">Python 3.x-specific response</a>, the timings below <em>also</em> time outlier solutions suggested above – including:</p>

<ul>
<li><code>list(s)[0]</code>, <a href=""https://stackoverflow.com/users/2168/john"">John</a>'s novel <a href=""https://stackoverflow.com/a/60233/2809027"">sequence-based solution</a>.</li>
<li><code>random.sample(s, 1)</code>, <a href=""https://stackoverflow.com/users/3002/df"">dF.</a>'s eclectic <a href=""https://stackoverflow.com/a/60027/2809027"">RNG-based solution</a>.</li>
</ul>

<h2>Code Snippets for Great Joy</h2>

<p>Turn on, tune in, time it:</p>

<pre><code>from timeit import Timer

stats = [
    ""for i in range(1000): \n\tfor x in s: \n\t\tbreak"",
    ""for i in range(1000): next(iter(s))"",
    ""for i in range(1000): s.add(s.pop())"",
    ""for i in range(1000): list(s)[0]"",
    ""for i in range(1000): random.sample(s, 1)"",
]

for stat in stats:
    t = Timer(stat, setup=""import random\ns=set(range(100))"")
    try:
        print(""Time for %s:\t %f""%(stat, t.timeit(number=1000)))
    except:
        t.print_exc()
</code></pre>

<h2>Quickly Obsoleted Timeless Timings</h2>

<p><strong>Behold!</strong> Ordered by fastest to slowest snippets:</p>

<pre><code>$ ./test_get.py
Time for for i in range(1000): 
    for x in s: 
        break:   0.249871
Time for for i in range(1000): next(iter(s)):    0.526266
Time for for i in range(1000): s.add(s.pop()):   0.658832
Time for for i in range(1000): list(s)[0]:   4.117106
Time for for i in range(1000): random.sample(s, 1):  21.851104
</code></pre>

<h2>Faceplants for the Whole Family</h2>

<p>Unsurprisingly, <strong>manual iteration remains at least twice as fast</strong> as the next fastest solution. Although the gap has decreased from the Bad Old Python 2.x days (in which manual iteration was at least four times as fast), it disappoints the <a href=""https://www.python.org/dev/peps/pep-0020/"" rel=""noreferrer"">PEP 20</a> zealot in me that the most verbose solution is the best. At least converting a set into a list just to extract the first element of the set is as horrible as expected. <em>Thank Guido, may his light continue to guide us.</em></p>

<p>Surprisingly, the <strong>RNG-based solution is absolutely horrible.</strong> List conversion is bad, but <code>random</code> <em>really</em> takes the awful-sauce cake. So much for the <a href=""http://catb.org/esr/jargon/html/R/Random-Number-God.html"" rel=""noreferrer"">Random Number God</a>.</p>

<p>I just wish the amorphous They would PEP up a <code>set.get_first()</code> method for us already. If you're reading this, They: ""Please. Do something.""</p>
",""
"40229004","2","35538","<p>This is a very basic html validator based on lxml's HTMLParser. It does not require any internet connection.</p>

<pre><code>_html_parser = None
def validate_html(html):
    global _html_parser
    from lxml import etree
    from StringIO import StringIO
    if not _html_parser:
        _html_parser = etree.HTMLParser(recover = False)
    return etree.parse(StringIO(html), _html_parser)
</code></pre>

<p>Note that this will not check for closing tags, so for example, the following will pass:</p>

<pre><code>validate_html(""&lt;a href='example.com'&gt;foo&lt;/a&gt;"")
</code></pre>

<p>However, the following wont:</p>

<pre><code>validate_html(""&lt;a href='example.com'&gt;foo&lt;/a"")
</code></pre>
",""
"40251882","2","38782191","<p>I feel your pain.  I actually recently worked with that webcam script (multiple iterations; substantially edited).  I got it to work really well, I think.  So that you can see what I did, I created a GitHub Gist with the details (code; HTML readme file; sample output):</p>

<p><a href=""https://gist.github.com/victoriastuart/8092a3dd7e97ab57ede7614251bf5cbd"" rel=""nofollow"">https://gist.github.com/victoriastuart/8092a3dd7e97ab57ede7614251bf5cbd</a></p>
",""
"40262722","2","36901","<p>A good example of using both in a function is:</p>

<pre><code>&gt;&gt;&gt; def foo(*arg,**kwargs):
...     print arg
...     print kwargs
&gt;&gt;&gt;
&gt;&gt;&gt; a = (1, 2, 3)
&gt;&gt;&gt; b = {'aa': 11, 'bb': 22}
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; foo(*a,**b)
(1, 2, 3)
{'aa': 11, 'bb': 22}
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; foo(a,**b) 
((1, 2, 3),)
{'aa': 11, 'bb': 22}
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; foo(a,b) 
((1, 2, 3), {'aa': 11, 'bb': 22})
{}
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; foo(a,*b)
((1, 2, 3), 'aa', 'bb')
{}
</code></pre>
",""
"40488966","2","35988","<p>I don't see this answer here, so I figure I'll add it since I'm leaning Python right now and just discovered it. The <a href=""https://docs.python.org/2/tutorial/classes.html"" rel=""nofollow noreferrer"">Python tutorial</a> (Python 2 in this case) gives the following simple and effective example:</p>

<pre><code>class Employee:
    pass

john = Employee()  # Create an empty employee record

# Fill the fields of the record
john.name = 'John Doe'
john.dept = 'computer lab'
john.salary = 1000
</code></pre>

<p>That is, an empty class object is created, then instantiated, and the fields are added dynamically.</p>

<p>The up-side to this is its really simple. The downside is it isn't particularly self-documenting (the intended members aren't listed anywhere in the class ""definition""), and unset fields can cause problems when accessed. Those two problems can be solved by:</p>

<pre><code>class Employee:
    def __init__ (self):
        self.name = None # or whatever
        self.dept = None
        self.salary = None
</code></pre>

<p>Now at a glance you can at least see what fields the program will be expecting.</p>

<p>Both are prone to typos, <code>john.slarly = 1000</code> will succeed. Still, it works.</p>
",""
"40492308","2","36901","<p>I want to give an example which others haven't  mentioned</p>

<p>* can also unpack a <strong>generator</strong></p>

<p>An example from Python3 Document</p>

<pre><code>x = [1, 2, 3]
y = [4, 5, 6]

unzip_x, unzip_y = zip(*zip(x, y))
</code></pre>

<p>unzip_x will be [1, 2, 3], unzip_y will be [4, 5, 6]</p>

<p>The zip() receives multiple iretable args, and return a generator. </p>

<pre><code>zip(*zip(x,y)) -&gt; zip((1, 4), (2, 5), (3, 6))
</code></pre>
",""
"40758241","2","23329034","<p>I too was getting a <code>ImportError: No module named xxx</code>even though I did a <code>pip install xxx</code> and <code>pip2 install xxx</code>.
<code>pip2.7 install xxx</code> worked for me. This installed it in the python 2.7 directory.</p>
",""
"40823181","2","36901","<p>This example would help you remember <code>*args</code>, <code>**kwargs</code> and even <code>super</code> and inheritance in Python at once.</p>

<pre><code>class base(object):
    def __init__(self, base_param):
        self.base_param = base_param


class child1(base): # inherited from base class
    def __init__(self, child_param, *args) # *args for non-keyword args
        self.child_param = child_param
        super(child1, self).__init__(*args) # call __init__ of the base class and initialize it with a NON-KEYWORD arg

class child2(base):
    def __init__(self, child_param, **kwargs):
        self.child_param = child_param
        super(child2, self).__init__(**kwargs) # call __init__ of the base class and initialize it with a KEYWORD arg

c1 = child1(1,0)
c2 = child2(1,base_param=0)
print c1.base_param # 0
print c1.child_param # 1
print c2.base_param # 0
print c2.child_param # 1
</code></pre>
",""
"40876379","2","7781792","<p>Hopefully this helps</p>

<pre><code>from selenium import webdriver
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait

driver = webdriver.Firefox()
driver.get('www.url.com')

try:
    wait = driver.WebDriverWait(driver,10).until(EC.presence_of_element_located(By.CLASS_NAME,'x'))
except:
    pass
</code></pre>
",""
"41054382","2","7781260","<p>No one seems to have mentioned about the negative infinity explicitly, so I think I should add it.</p>

<p>For positive infinity (just for the sake of completeness):</p>

<pre><code>math.inf
</code></pre>

<p>For negative infinity:</p>

<pre><code>-math.inf
</code></pre>
",""
"41140003","2","23341675","<p>I had the same issue and ended up augmenting DispatchWithEvents. Please see below my solution (which I think is more elegant):</p>

<pre><code>from win32com.client import Dispatch
from win32com.client import gencache
from win32com.client import getevents
from win32com.client import EventsProxy
import pythoncom

def _event_setattr_(self, attr, val):
    try:
        # Does the COM object have an attribute of this name?
        self.__class__.__bases__[0].__setattr__(self, attr, val)
    except AttributeError:
        # Otherwise just stash it away in the instance.
        self.__dict__[attr] = val

def DispatchWithEvents(clsid, user_event_class, arguments):
    # Create/Get the object.
    disp = Dispatch(clsid)
    if not disp.__class__.__dict__.get(""CLSID""): # Eeek - no makepy support - try and build it.
        try:
            ti = disp._oleobj_.GetTypeInfo()
            disp_clsid = ti.GetTypeAttr()[0]
            tlb, index = ti.GetContainingTypeLib()
            tla = tlb.GetLibAttr()
            gencache.EnsureModule(tla[0], tla[1], tla[3], tla[4], bValidateFile=0)
            # Get the class from the module.
            disp_class = gencache.GetClassForProgID(str(disp_clsid))
        except pythoncom.com_error:
            raise TypeError(""This COM object can not automate the makepy process - please run makepy manually for this object"")
    else:
        disp_class = disp.__class__
    # If the clsid was an object, get the clsid
    clsid = disp_class.CLSID
    # Create a new class that derives from 3 classes - the dispatch class, the event sink class and the user class.
    # XXX - we are still ""classic style"" classes in py2x, so we need can't yet
    # use 'type()' everywhere - revisit soon, as py2x will move to new-style too...
    try:
        from types import ClassType as new_type
    except ImportError:
        new_type = type # py3k
    events_class = getevents(clsid)
    if events_class is None:
        raise ValueError(""This COM object does not support events."")
    result_class = new_type(""COMEventClass"", (disp_class, events_class, user_event_class), {""__setattr__"" : _event_setattr_})
    instance = result_class(disp._oleobj_) # This only calls the first base class __init__.
    events_class.__init__(instance, instance)
    args = [instance] + arguments
    if hasattr(user_event_class, ""__init__""):
        user_event_class.__init__(*args)
    return EventsProxy(instance)
</code></pre>

<p>Your handler class will have to have an <strong>init</strong> function and be ready to accept the arguments in order:</p>

<pre><code>class Handler_Class():
            def __init__(self, cls):
                self.cls = cls
            def OnItemAdd(self, mail):
                #Check if the item is of the MailItem type
                if mail.Class==43:
                    print(""##########"",inbox, ""##########"")
                    print(mail.Subject, "" - "", mail.Parent.FolderPath)
                    label = cls.label_email(datetime.now(),mail)
                    print(""=======&gt;"",label)
</code></pre>

<p>And you would initialize it as such:</p>

<pre><code>clsGED = classifier.PersonClassifier()
items = win32com.client.DispatchEx(""Outlook.Application"").GetNamespace(""MAPI"").Folders[&lt;emailaddress&gt;].Folders[""Inbox""].Items
utilities.DispatchWithEvents(items, Handler_Class, [cls])
</code></pre>

<p>As you might have guessed, the application here is for a data science project where incoming emails are automatically classified, but the new DispatchWithEvents method is very generic and accepts a dynamic number of arguments.</p>
",""
"41760901","2","15585493","<p>You can use a library of mine, <a href=""https://github.com/reubano/mezmorize/blob/master/examples/hello.py"" rel=""nofollow noreferrer"" title=""mezmorize"">mezmorize</a></p>

<pre><code>import random
from mezmorize import Cache

cache = Cache(CACHE_TYPE='filesystem', 'CACHE_DIR'='cache')


@cache.memoize()
def add(a, b):
    return a + b + random.randrange(0, 1000)

&gt;&gt;&gt; add(2, 5)
727
&gt;&gt;&gt; add(2, 5)
727
</code></pre>
",""
"41900076","2","7781545","<p>Another method:</p>

<pre><code>dirs = [entry.path for entry in os.scandir('Tools') if entry.is_dir()]
</code></pre>
",""
"42222195","2","7781792","<pre><code>WebDriverWait wait = new WebDriverWait(driver, timeout/1000);
wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(element)));
</code></pre>
",""
"42267544","2","7781792","<p>If I don't know something about selenium command, I use selenium web idea RC with firefox. You can choose and add command in the combobox and when finish your test case after you can export the test code different language. like java, ruby, phyton, C#, etc..</p>
",""
"42297616","2","38758342","<p>You could also use api.ai , which by default provides a default fallback intent.
In default fallback event, if api.ai does not understand the input or does not have an answer , it would reply with ""I did not understand what you just said""</p>
",""
"42780139","2","60805","<p>This is the solution I use:</p>

<pre><code>from random import randint

rows_query = session.query(Table)                # get all rows
if rows_query.count() &gt; 0:                       # make sure there's at least 1 row
    rand_index = randint(0,rows_query.count()-1) # get random index to rows 
    rand_row   = rows_query.all()[rand_index]    # use random index to get random row
</code></pre>
",""
"42917914","2","38757701","<p>To make the output conform to the d3 template that is linked in the node_link_data documentation, you can make a couple simple changes to the node_link_data function. Just run the below function and use it instead. All I changed was to trim some of the unnecessary outputs for the template, and to store the graph label instead of an index. The index the original function used for target and destination was created in the function, so it isn't something you can extract from the graph itself, so if you want to be certain that your node labels correspond to your links, it's safest to modify node_link_data. </p>

<p><a href=""https://bl.ocks.org/mbostock/4062045"" rel=""nofollow noreferrer"">The D3 Template this creates data for is here</a> </p>

<p>Note that if you use the below data without adding a node or link attribute, you will need to delete the following lines from the d3 template:</p>

<pre><code>.attr(""stroke-width"", function(d) { return Math.sqrt(d.value); })
</code></pre>

<p>and</p>

<pre><code>.attr(""fill"", function(d) { return color(d.group); })
</code></pre>

<p>Modified function:</p>

<pre><code>from itertools import chain, count
import json
import networkx as nx
from networkx.utils import make_str
__author__ = """"""Aric Hagberg &lt;hagberg@lanl.gov&gt;""""""
_attrs = dict(id='id', source='source', target='target', key='key')

def node_link_data(G, attrs=_attrs):
    """"""Return data in node-link format that is suitable for JSON serialization
    and use in Javascript documents.
    """"""
    multigraph = G.is_multigraph()
    id_ = attrs['id']
    source = attrs['source']
    target = attrs['target']
    # Allow 'key' to be omitted from attrs if the graph is not a multigraph.
    key = None if not multigraph else attrs['key']
    if len(set([source, target, key])) &lt; 3:
        raise nx.NetworkXError('Attribute names are not unique.')
    mapping = dict(zip(G, count()))
    data = {}
    data['nodes'] = [dict(chain(G.node[n].items(), [(id_, n)])) for n in G]
    if multigraph:
        data['links'] = [
            dict(chain(d.items(),
                       [(source, u), (target,v), (key, k)]))
            for u, v, k, d in G.edges_iter(keys=True, data=True)]
    else:
        data['links'] = [
            dict(chain(d.items(),
                       [(source, u), (target, v)]))
            for u, v, d in G.edges_iter(data=True)]
    return data
</code></pre>
",""
"43008840","2","38238","<p>What just hit me, coming from Ruby, is that a so-called <em>class</em> method and a so-called <em>instance</em> method is just a function with semantic meaning applied to its first parameter, which is silently passed when the <em>function</em> is called as a method of an <em>object</em> (i.e. <code>obj.meth()</code>).</p>

<p>Normally that <em>object</em> must be an instance but the <code>@classmethod</code> <a href=""https://www.python.org/dev/peps/pep-0318"" rel=""nofollow noreferrer"">method decorator</a> changes the rules to pass a class. You can call a class method on an instance (it's just a function) - the first argyment will be its class. </p>

<p>Because it's just a <em>function</em>, it can only be declared once in any given scope (i.e. <code>class</code> definition). If follows therefore, as a surprise to a Rubyist, that <strong>you can't have a class method and an instance method with the same name</strong>.</p>

<p>Consider this:</p>

<pre><code>class Foo():
  def foo(x):
    print(x)
</code></pre>

<p>You can call <code>foo</code> on an instance </p>

<pre><code>Foo().foo()
&lt;__main__.Foo instance at 0x7f4dd3e3bc20&gt;
</code></pre>

<p>But not on a class:</p>

<pre><code>Foo.foo()
Traceback (most recent call last):
  File ""&lt;stdin&gt;"", line 1, in &lt;module&gt;
TypeError: unbound method foo() must be called with Foo instance as first argument (got nothing instead)
</code></pre>

<p>Now add <code>@classmethod</code>:</p>

<pre><code>class Foo():
  @classmethod
  def foo(x):
    print(x)
</code></pre>

<p>Calling on an instance now passes its class:</p>

<pre><code>Foo().foo()
__main__.Foo
</code></pre>

<p>as does calling on a class:</p>

<pre><code>Foo.foo()
__main__.Foo
</code></pre>

<p><em>It's only convention that dictates that we use <code>self</code> for that first argument on an instance method and <code>cls</code> on a class method. I used neither here to illustrate that it's just an argument. In Ruby, <code>self</code> is a</em> keyword.</p>

<p>Contrast with Ruby:</p>

<pre><code>class Foo
  def foo()
    puts ""instance method #{self}""
  end
  def self.foo()
    puts ""class method #{self}""
  end
end

Foo.foo()
class method Foo

Foo.new.foo()
instance method #&lt;Foo:0x000000020fe018&gt;
</code></pre>

<p>The Python class method is just a <em>decorated function</em> and you can use the same techniques to <a href=""http://thecodeship.com/patterns/guide-to-python-function-decorators"" rel=""nofollow noreferrer"">create your own decorators</a>. A decorated method wraps the real method (in the case of <code>@classmethod</code> it passes the additional class argument). The underlying method is still there, hidden <a href=""https://github.com/mapleoin/undecorated"" rel=""nofollow noreferrer"">but still accessible</a>.</p>

<hr>

<p><em>footnote: I wrote this after a name clash between a class and instance method piqued my curiosity. I am far from a Python expert and would like comments if any of this is wrong.</em></p>
",""
"43536282","2","60208","<p>Expanding on <a href=""https://stackoverflow.com/a/60211/3106539"">Greg Hewgill's answer</a> - We can encapsulate the dictionary-solution using a decorator:</p>

<pre><code>def case(callable):
    """"""switch-case decorator""""""
    class case_class(object):
        def __init__(self, *args, **kwargs):
            self.args = args
            self.kwargs = kwargs

        def do_call(self):
            return callable(*self.args, **self.kwargs)

return case_class

def switch(key, cases, default=None):
    """"""switch-statement""""""
    ret = None
    try:
        ret = case[key].do_call()
    except KeyError:
        if default:
            ret = default.do_call()
    finally:
        return ret
</code></pre>

<p>This can then be used with the <code>@case</code>-decorator</p>

<pre><code>@case
def case_1(arg1):
    print 'case_1: ', arg1

@case
def case_2(arg1, arg2):
    print 'case_2'
    return arg1, arg2

@case
def default_case(arg1, arg2, arg3):
    print 'default_case: ', arg1, arg2, arg3

ret = switch(somearg, {
    1: case_1('somestring'),
    2: case_2(13, 42)
}, default_case(123, 'astring', 3.14))

print ret
</code></pre>

<p>The good news are that this has already been done in <a href=""https://pypi.python.org/pypi/NeoPySwitch/0.2.0"" rel=""nofollow noreferrer"">NeoPySwitch</a>-module. Simply install using pip:</p>

<pre><code>pip install NeoPySwitch
</code></pre>
",""
"43588506","2","38768996","<p>try this: </p>

<p>sudo apt-get install python3-pip</p>

<p>sudo -H pip3 install pandas</p>
",""
"43603277","2","15600014","<p>I would like to add a caveat/extension to @rainer's answer pertaining to bound methods. Keep in mind that binding a method to an instance (e.g., by writing <code>self.slotname</code>) actually creates a new closure every time (as in <a href=""https://stackoverflow.com/q/41900639/2988730"">this</a> question).</p>

<p>You would therefore have the same problem doing</p>

<pre><code>def test_slot(self):
    self.makeThread(self.googleSearch())

...

    self.query.textChanged.connect(self.test_slot)

...

    self.query.textChanged.disconnect(self.test_slot)
</code></pre>

<p>as you did with the original <code>lambda</code> in your question. The solution is to store the <em>closure</em> <code>self.test_slot</code> in an attribute, as @rainer suggests. This is necessary because a new object that is roughly equivalent to <code>lambda: type(self).test_slot(self)</code> is generated every time you write <code>self.test_slot</code> in your code. The following will work fine as long as you do the book-keeping accurately:</p>

<pre><code>    self.func = self.test_slot
    self.query.textChanged.connect(self.func)

...

    self.query.textChanged.disconnect(self.func)
</code></pre>
",""
"43675525","2","38770058","<p>It seems there is an issue in the html5library. Try to install the version 1.0b8, probably with (I encountered the same problem but on Linux) :</p>

<pre><code>pip install --upgrade html5lib==1.0b8
</code></pre>
",""
"43818506","2","111954","<p>This is from Python docs</p>

<pre><code>&gt;&gt;&gt; from ftplib import FTP_TLS
&gt;&gt;&gt; ftps = FTP_TLS('ftp.python.org')
&gt;&gt;&gt; ftps.login()           # login anonymously before securing control 
channel
&gt;&gt;&gt; ftps.prot_p()          # switch to secure data connection
&gt;&gt;&gt; ftps.retrlines('LIST') # list directory content securely
total 9
drwxr-xr-x   8 root     wheel        1024 Jan  3  1994 .
drwxr-xr-x   8 root     wheel        1024 Jan  3  1994 ..
drwxr-xr-x   2 root     wheel        1024 Jan  3  1994 bin
drwxr-xr-x   2 root     wheel        1024 Jan  3  1994 etc
d-wxrwxr-x   2 ftp      wheel        1024 Sep  5 13:43 incoming
drwxr-xr-x   2 root     wheel        1024 Nov 17  1993 lib
drwxr-xr-x   6 1094     wheel        1024 Sep 13 19:07 pub
drwxr-xr-x   3 root     wheel        1024 Jan  3  1994 usr
-rw-r--r--   1 root     root          312 Aug  1  1994 welcome.msg
</code></pre>
",""
"43830703","2","111954","<p>That helped me with my code.</p>

<p>When I tried feltering only a type of files and show them on screen by adding a condition that tests on each line.</p>

<p>Like this </p>

<pre><code>elif command == 'ls':
    print(""directory of "", ftp.pwd())
    data = []
    ftp.dir(data.append)

    for line in data:
        x = line.split(""."")
        formats=[""gz"", ""zip"", ""rar"", ""tar"", ""bz2"", ""xz""]
        if x[-1] in formats:
            print (""-"", line)
</code></pre>
",""
"43836514","2","38757611","<p>I know this is probably far too late, but I had this problem as well. I found the solution and that is to right click the ""Python Environments"" in the solution explorer of the project and add/remove python environments and then choose the one you're attempting to go to.</p>
",""
"43865968","2","111983","<p>Small bootstrapping for the benefit of whoever might find this useful (following the excellent answer by @dF.):</p>

<pre><code>import numpy as np
from array import array

# Fixed size numpy array
def np_fixed(n):
    q = np.empty(n)
    for i in range(n):
        q[i] = i
    return q

# Resize with np.resize
def np_class_resize(isize, n):
    q = np.empty(isize)
    for i in range(n):
        if i&gt;=q.shape[0]:
            q = np.resize(q, q.shape[0]*2)        
        q[i] = i
    return q    

# Resize with the numpy.array method
def np_method_resize(isize, n):
    q = np.empty(isize)
    for i in range(n):
        if i&gt;=q.shape[0]:
            q.resize(q.shape[0]*2)
        q[i] = i
    return q

# Array.array append
def arr(n):
    q = array('d')
    for i in range(n):
        q.append(i)
    return q

isize = 1000
n = 10000000
</code></pre>

<p>The output gives:</p>

<pre><code>%timeit -r 10 a = np_fixed(n)
%timeit -r 10 a = np_class_resize(isize, n)
%timeit -r 10 a = np_method_resize(isize, n)
%timeit -r 10 a = arr(n)

1 loop, best of 10: 868 ms per loop
1 loop, best of 10: 2.03 s per loop
1 loop, best of 10: 2.02 s per loop
1 loop, best of 10: 1.89 s per loop
</code></pre>

<p>It seems that array.array is slightly faster and the 'api' saves you some hassle, but if you need more than just storing doubles then numpy.resize is not a bad choice after all (if used correctly).</p>
",""
"43930555","2","36139","<p>Suppose s = ""ZWzaAd"", To sort this string the simple solution will be below one.
print ''.join(sorted(s)</p>
",""
"44545063","2","60208","<p>I was quite confused after reading the answer, but this cleared it all up:</p>

<pre><code>def numbers_to_strings(argument):
    switcher = {
        0: ""zero"",
        1: ""one"",
        2: ""two"",
    }
    return switcher.get(argument, ""nothing"")
</code></pre>

<p>This code is analogous to:</p>

<pre><code>function(argument){
    switch(argument) {
        case 0:
            return ""zero"";
        case 1:
            return ""one"";
        case 2:
            return ""two"";
        default:
            return ""nothing"";
    }
}
</code></pre>

<p>Check the <a href=""https://www.pydanny.com/why-doesnt-python-have-switch-case.html"" rel=""nofollow noreferrer"">Source</a> for more about dictionary mapping to functions.</p>
",""
"44781372","2","111945","<p>If you want to stay within the standard library, you can subclass <code>urllib2.Request</code>:</p>

<pre><code>import urllib2

class RequestWithMethod(urllib2.Request):
    def __init__(self, *args, **kwargs):
        self._method = kwargs.pop('method', None)
        urllib2.Request.__init__(self, *args, **kwargs)

    def get_method(self):
        return self._method if self._method else super(RequestWithMethod, self).get_method()


def put_request(url, data):
    opener = urllib2.build_opener(urllib2.HTTPHandler)
    request = RequestWithMethod(url, method='PUT', data=data)
    return opener.open(request)
</code></pre>
",""
"44989925","2","35988","<p>I think Python structure dictionary is suitable for this requirement.</p>

<pre class=""lang-py prettyprint-override""><code>d = dict{}
d[field1] = field1
d[field2] = field2
d[field2] = field3
</code></pre>
",""
"45003750","2","7781260","<pre><code>value = 0x7fffffff
</code></pre>

<p>Set the value using the code above</p>
",""
"45426493","2","35988","<p>Since <strong>Python 3.5</strong> it became quite simple and beautiful (IMHO):</p>

<p>Declare it like this: <em>(Notice, this allows for <a href=""https://docs.python.org/3/library/typing.html"" rel=""nofollow noreferrer"">type annotations</a> as well)</em></p>

<pre><code>from typing import NamedTuple


class MyStruct(NamedTuple):
    my_string: str
    my_int: int
    my_list: list
    my_dict: dict
</code></pre>

<p>Use it like this:</p>

<pre><code>my_item = MyStruct(
    my_string='foo',
    my_int=0,
    my_list=['bar'],
    my_dict={'baz': 'qux'},
)
</code></pre>

<p>Or like this:</p>

<pre><code>my_item = MyStruct('foo', 0, ['bar'], {'baz': 'qux'})
</code></pre>
",""
"45495863","2","38770169","<p>First update your pip:</p>

<pre><code>pip3 install --upgrade pip
</code></pre>

<p>Then install scikit-learn with arg ""--user"". Don't use sudo with pip as it will give problems:</p>

<pre><code>pip install --user scikit-learn
</code></pre>
",""
"45517161","2","35988","<p>Some the answers here are massively elaborate. The simplest option I've found is (from: <a href=""http://norvig.com/python-iaq.html"" rel=""nofollow noreferrer"">http://norvig.com/python-iaq.html</a>):</p>

<pre><code>class Struct:
    ""A structure that can have any fields defined.""
    def __init__(self, **entries): self.__dict__.update(entries)
</code></pre>

<p>Initialising:</p>

<pre><code>&gt;&gt;&gt; options = Struct(answer=42, linelen=80, font='courier')
&gt;&gt;&gt; options.answer
42
</code></pre>

<p>adding more:</p>

<pre><code>&gt;&gt;&gt; options.cat = ""dog""
&gt;&gt;&gt; options.cat
dog
</code></pre>

<p><strong>edit:</strong> Sorry didn't see this example already further down.</p>
",""
"45530307","2","60208","<p>Switch statement is just syntactic sugar for if/elif/else.
What any control statement is doing is delegating the job based on certain condition is being fulfilled - decision path.For wrapping that into module and being able to call a job based on it's unique id, one can utilizes on inheritance and the fact that any method in python is virtual, to provide the derived class specific job implementation, as specific ""case"" handler</p>

<pre><code>#!/usr/bin/python

import sys

class Case(object):
    """"""
        Base class wich specifies the interface for ""case"" handler.
        The all required arbitrary arguments inside ""execute"" method will be
        provided through the derived class
        specific constructor

        @note in python, all class methods are virtual
    """"""
    def __init__(self, id):
        self.id = id

    def pair(self):
        """"""
            Pairs the given id of the ""case"" with
            the instance on which ""execute"" will be called
        """"""
        return (self.id, self)

    def execute(self):#base class virtual method that needs to be overrided
        pass

class Case1(Case):
    def __init__(self, id, msg):
        self.id = id
        self.msg = msg
    def execute(self):#override the base class method
        print(""&lt;Case1&gt; id={}, message: \""{}\"""".format(str(self.id), self.msg))

class Case2(Case):
    def __init__(self, id, n):
        self.id = id
        self.n = n
    def execute(self):#override the base class method
        print(""&lt;Case2&gt; id={}, n={}."".format(str(self.id), str(self.n)))
        print(""\n"".join(map(str, range(self.n))))



class Switch(object):
    """"""
        The class wich delegates the jobs
        based on the given job id
    """"""
    def __init__(self, cases):
        self.cases = cases#dictionary: time complexitiy for access operation is 1
    def resolve(self, id):

        try:
            cases[id].execute()
        except KeyError as e:
            print(""Given id: {} is wrong!"".format(str(id)))



if __name__ == '__main__':

    # Cases
    cases=dict([Case1(0, ""switch"").pair(), Case2(1, 5).pair()])

    switch = Switch(cases)

    # id will be dynamically specified
    switch.resolve(0)
    switch.resolve(1)
    switch.resolve(2)
</code></pre>
",""
"45543123","2","31217647","<p>Add tesseract Path in the Environment Variables. </p>

<p>At least that's how I fixed it.</p>
",""
"45618928","2","38783286","<p>-1 is not a valid EFI_STATUS if you are on a 64-bit system EFI_STATUS is 64-bit. Also if you use Print() %r will print out a string for EFI_STATUS.</p>

<p>The EFI_STATUS values returned from EFI services are define in the <a href=""http://www.uefi.org/sites/default/files/resources/UEFI_Spec_2_6_Errata_B.pdf"" rel=""nofollow noreferrer"">EFI Spec:</a>
EFI_INVALID_PARAMETER - ImageHandle is either an invalid image handle or the image has already been initialized with StartImage</p>

<p>EFI_SECURITY_VIOLATION - The current platform policy specifies that the image should not be started.</p>

<p>Exit code from image - Exit code from image.</p>

<p>So did the code you loaded return an error back to you?</p>
",""
"45683860","2","60208","<p>I'm just going to drop my two cents in here.  The reason there isn't a case/switch statement in Python is because Python follows the principle of 'Theres only one right way to do something'.   So obviously you could come up with various ways of recreating switch/case functionality, but the Pythonic way of accomplishing this is the if/elif construct. ie</p>

<pre><code>if something:
    return ""first thing""
elif somethingelse:
    return ""second thing""
elif yetanotherthing:
    return ""third thing""
else:
    return ""default thing""
</code></pre>

<p>I just felt PEP 8 deserved a nod here.  One of the beautiful things about Python is its simplicity and elegance.  That is largely derived from principles laid our in PEP 8, including ""There's only one right way to do something""</p>
",""
"45684176","2","111954","<p>I found my way here while trying to get filenames, last modified stamps, file sizes etc and wanted to add my code. It only took a few minutes to write a loop to parse the <code>ftp.dir(dir_list.append)</code> making use of python std lib stuff like <code>strip()</code> (to clean up the line of text) and <code>split()</code> to create an array.</p>

<pre><code>ftp = FTP('sick.domain.bro')
ftp.login()
ftp.cwd('path/to/data')

dir_list = []
ftp.dir(dir_list.append)

# main thing is identifing which char marks start of good stuff
# '-rw-r--r--   1 ppsrt    ppsrt      545498 Jul 23 12:07 FILENAME.FOO
#                               ^  (that is line[29])

for line in dir_list:
   print line[29:].strip().split(' ') # got yerself an array there bud!
   # EX ['545498', 'Jul', '23', '12:07', 'FILENAME.FOO']
</code></pre>
",""
"45803038","2","59825","<p>Seemingly the <strong>most compact</strong> (6 symbols) though <strong>very slow</strong> way to get a set element (made possible by <a href=""https://www.python.org/dev/peps/pep-3132/"" rel=""nofollow noreferrer"">PEP 3132</a>):</p>

<pre><code>e,*_=s
</code></pre>

<p>With Python 3.5+ you can also use this 7-symbol expression (thanks to <a href=""https://www.python.org/dev/peps/pep-0448/"" rel=""nofollow noreferrer"">PEP 448</a>):</p>

<pre><code>[*s][0]
</code></pre>

<p>Both options are roughly 1000 times slower on my machine than for-loop method.</p>
",""
"45981619","2","60208","<p>I've made a Switch Case implementation that doesn't quite use ifs externally(it still uses an if in the class).</p>

<pre><code>class SwitchCase(object):
    def __init__(self):
        self._cases = dict()

    def add_case(self,value, fn):
        self._cases[value] = fn

    def add_default_case(self,fn):
        self._cases['default']  = fn

    def switch_case(self,value):
        if value in self._cases.keys():
            return self._cases[value](value)
        else:
            return self._cases['default'](0)
</code></pre>

<p>Use it like this:-</p>

<pre><code>from switch_case import SwitchCase
switcher = SwitchCase()
switcher.add_case(1, lambda x:x+1)
switcher.add_case(2, lambda x:x+3)
switcher.add_default_case(lambda _:[1,2,3,4,5])

print switcher.switch_case(1) #2
print switcher.switch_case(2) #5
print switcher.switch_case(123) #[1, 2, 3, 4, 5]
</code></pre>
",""
"46072692","2","31087111","<p>For me it was a <strong>flask server</strong> returning some <code>videos</code> array (which I expected to be in json format..)</p>

<p>adding <code>json.dumps(videos)</code> fixed this issue</p>
",""
"46206602","2","38782787","<p>@can-ibanoglu was right on:</p>

<pre><code>import OpenSSL.crypto 
cert = OpenSSL.crypto.load_certificate(
    OpenSSL.crypto.FILETYPE_PEM, 
    open('/tmp/server.crt').read()
)

&gt;&gt;&gt; cert
&lt;OpenSSL.crypto.X509 object at 0x7f79906a6f50&gt;
</code></pre>
",""
"46231553","2","15586721","<p>@Suzana_K was working. But I there are some case result in KeyError as @ Clock Slave mention. </p>

<p>Convert treebank tags to Wordnet tag</p>

<pre><code>from nltk.corpus import wordnet

def get_wordnet_pos(treebank_tag):

    if treebank_tag.startswith('J'):
        return wordnet.ADJ
    elif treebank_tag.startswith('V'):
        return wordnet.VERB
    elif treebank_tag.startswith('N'):
        return wordnet.NOUN
    elif treebank_tag.startswith('R'):
        return wordnet.ADV
    else:
        return None # for easy if-statement 
</code></pre>

<p>Now, we only input pos into lemmatize function only if we have wordnet tag </p>

<pre><code>from nltk.stem.wordnet import WordNetLemmatizer
lemmatizer = WordNetLemmatizer()
tagged = nltk.pos_tag(tokens)
for word, tag in tagged:
    wntag = get_wordnet_pos(tag)
    if wntag is None:# not supply tag in case of None
        lemma = lemmatizer.lemmatize(word) 
    else:
        lemma = lemmatizer.lemmatize(word, pos=wntag) 
</code></pre>
",""
"46298473","2","7782524","<p>You can call a VBA UDF using this Excel 4 Macro with the ExecuteExcel4Macro method:</p>

<pre><code>retval = Application.ExecuteExcel4Macro(""EVALUATE(""""Book1!some_UDF()"""")"") 
</code></pre>

<p>The use of the Excel 4 Macro Function EVALUATE() won't allow you to step into the UDF named ""some_UDF"" in VBE debug mode as you could if you had called the UDF from an Excel 4 Macro (see Example).</p>

<p>I have also noticed that Application.Caller cannot be mentioned at all in the UDF, otherwise Excel crashes.</p>

<blockquote>
  <p>Example</p>
</blockquote>

<p>Excel 4 Macro Sheet with the following (cell $A$1 being a named ""Macro1"" via Name Manager):</p>

<pre><code>$A$1: Macro1
$A$2: =RETURN(Book1!some_UDF())
</code></pre>

<p>Excel Worksheet in cell</p>

<pre><code>$A$1: =Macro1()
</code></pre>

<p>As a conclusion, I suspect this Example to works correctly only because Excel uses its own Application.Evaluate to get the result of the VBA UDF (lets say integer 10), and then running the Excel 4 Macro as if it where:</p>

<pre><code>$A$1: Macro1
$A$2: =RETURN(10)
</code></pre>

<p>Indeed, prior to the VBA era, in 1992, when there was only Excel 4.0 Macro Functions, <code>=RETURN(Book1!some_UDF())</code> could not possibly work, its inconceivable (not verified but I can't see how it could works...)</p>

<p>So to have exactly the same behavior in VBA only, the call would be:</p>

<pre><code>retval = Application.ExecuteExcel4Macro(""EVALUATE("" &amp; Application.Run(""Book_XL4M!test_10"") &amp; "")"")
</code></pre>
",""
"46392920","2","7781792","<p>easier solution: </p>

<pre><code>    from selenium.webdriver.common.by import By    
    import time

    while len(driver.find_elements(By.ID, 'cs-paginate-next'))==0:
        time.sleep(100)
</code></pre>
",""