 I did use <code>re.findall</code> 

 <code>x = re.findall(r'(?&lt;=x)\d+|\d+(?=x)', s)
</code> 

 Then get the first element by specifying the first index like <code>x[0]</code> . You won't get <code>None</code> value. 

  or  

 You may also use <code>re.search</code> function without capturing groups. 

 <code>re.search(r'(?&lt;=x)\d+|\d+(?=x)', s).group()
</code> 

 I think you want tjis, 

 <code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "Boost LevDAX 3x Daily ETP"
&gt;&gt;&gt; re.sub(r'\d+(?=x)|(?&lt;=x)\d+', r'+\g&lt;0&gt;00', s)
'Boost LevDAX +300x Daily ETP'
</code> 

  OR  

 <code>&gt;&gt;&gt; s = "Boost LevDAX 3x Daily ETP"
&gt;&gt;&gt; re.sub(r'(\d+)x|x(\d+)', lambda m: '+'+m.group(1)+'00' if m.group(1) else '+' + m.group(2) + '00', s)
'Boost LevDAX +300 Daily ETP'
&gt;&gt;&gt; s = "ComStage LevDAX x2 UCITS ETF"
&gt;&gt;&gt; re.sub(r'(\d+)x|x(\d+)', lambda m: '+'+m.group(1)+'00' if m.group(1) else '+' + m.group(2) + '00', s)
'ComStage LevDAX +200 UCITS ETF'
</code> 

 According to your comment, there is only one <code>nox</code> or <code>xno</code> present in your input strings. If yes, then you may try this, 

 <code>&gt;&gt;&gt; s = "ComStage LevDAX x2 UCITS ETF"
&gt;&gt;&gt; fundleverage = re.sub(r'.*(?:(\d+)x|x(\d+)).*', lambda m: '+'+m.group(1)+'00' if m.group(1) else '+' + m.group(2) + '00', s)
&gt;&gt;&gt; print fundleverage
</code> 
